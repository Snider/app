var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddAddressBook.html",[0,0.235,1,3.774]],["body/interfaces/AddAddressBook.html",[0,0.319,1,6.312,2,1.31,3,0.062,4,0.072,5,0.072,6,6.282,7,0.468,8,0.782,9,4.562,10,1.677,11,4.298,12,4.066,13,1.282,14,0.607,15,0.007,16,0.072,17,4.625,18,6.282,19,0.006,20,0.006]],["title/components/AddComponent.html",[21,0.93,22,1.73]],["body/components/AddComponent.html",[3,0.035,4,0.041,5,0.041,7,0.268,8,0.536,10,0.659,13,0.711,14,0.456,15,0.007,16,0.041,19,0.004,20,0.004,21,1.266,22,2.598,23,2.073,24,1.439,25,1.406,26,1.439,27,3.598,28,1.58,29,2.776,30,6.3,31,1.161,32,3.525,33,2.742,34,2.501,35,2.762,36,2.027,37,5.304,38,6.3,39,1.283,40,5.304,41,3.063,42,6.953,43,3.801,44,6.3,45,1.552,46,1.502,47,5.304,48,1.858,49,1.58,50,4.515,51,3.598,52,5.304,53,6.953,54,3.598,55,0.87,56,1.273,57,3.598,58,1.496,59,2.44,60,3.598,61,3.598,62,1.644,63,2.117,64,0.283,65,3.442,66,0.453,67,0.322,68,5.304,69,5.304,70,6.3,71,2.335,72,2.736,73,1.585,74,5.304,75,4.033,76,5.304,77,1.375,78,2.121,79,2.073,80,1.345,81,2.78,82,1.439,83,1.439,84,1.316,85,1.439,86,1.406,87,3.072,88,1.439,89,1.345,90,1.439,91,1.345,92,1.439,93,1.316,94,1.439,95,1.345,96,1.439,97,1.345,98,1.439,99,1.345,100,1.439,101,1.316,102,1.316,103,1.439,104,1.345,105,1.439,106,1.345,107,1.439,108,1.345,109,1.439,110,1.406,111,1.234,112,1.439,113,1.345,114,1.439,115,1.316,116,1.439,117,1.939,118,2.121,119,1.345,120,1.439,121,1.345,122,1.439,123,1.316,124,1.439,125,1.316,126,1.439,127,1.316,128,1.406,129,1.316,130,1.406,131,1.439]],["title/interfaces/Address.html",[0,0.235,9,2.411]],["body/interfaces/Address.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,9,4.89,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,132,6.979]],["title/components/AppComponent.html",[21,0.93,84,1.692]],["body/components/AppComponent.html",[3,0.02,4,0.023,5,0.023,7,0.148,8,0.336,10,0.785,11,0.978,13,0.807,14,0.519,15,0.007,16,0.023,19,0.002,20,0.002,21,0.862,22,0.745,23,1.301,24,0.797,25,0.779,26,0.797,28,0.992,29,1.889,31,0.643,32,3.26,33,2.521,34,1.828,36,1.272,39,0.805,41,2.206,45,0.82,46,1.514,48,0.699,49,0.594,55,1.037,56,1.273,58,1.428,59,1.981,63,1.119,64,0.547,66,0.251,67,0.179,73,1.467,77,0.762,78,1.332,79,1.301,80,0.745,81,2.002,82,0.797,83,0.797,84,1.831,85,0.797,86,0.779,87,2.694,88,0.797,89,0.745,90,0.797,91,0.745,92,0.797,93,0.729,94,0.797,95,0.745,96,0.797,97,0.745,98,0.797,99,0.745,100,0.797,101,0.729,102,0.729,103,0.797,104,0.745,105,0.797,106,0.745,107,0.797,108,0.745,109,0.797,110,0.779,111,0.684,112,0.797,113,0.745,114,0.797,115,0.729,116,0.797,117,1.217,118,1.332,119,0.745,120,0.797,121,0.745,122,0.797,123,0.729,124,0.797,125,0.729,126,0.797,127,0.729,128,0.779,129,0.729,130,0.779,131,0.797,133,1.072,134,1.994,135,3.26,136,1.734,137,4.287,138,3.33,139,3.46,140,4.287,141,6.017,142,3.613,143,6.692,144,2.488,145,5.007,146,3.81,147,3.33,148,3.807,149,5.007,150,5.007,151,1.516,152,3.905,153,7.538,154,4.287,155,2.991,156,4.287,157,3.807,158,5.185,159,4.082,160,3.226,161,3.33,162,3.33,163,1.994,164,4.287,165,3.33,166,1.994,167,1.994,168,1.994,169,1.994,170,1.994,171,1.994,172,1.994,173,4.234,174,1.994,175,1.994,176,1.217,177,1.994,178,4.287,179,1.356,180,3.33,181,1.994,182,1.516,183,1.772,184,3.33,185,0.816,186,1.294,187,1.24,188,1.626,189,1.516,190,1.24,191,1.24,192,1.356,193,1.108,194,1.994,195,1.994,196,1.994,197,1.994,198,1.24,199,2.468,200,1.772,201,1.994,202,1.994,203,1.994,204,1.994,205,1.356,206,1.994,207,1.994,208,1.994,209,3.33,210,1.994,211,1.994,212,1.994,213,3.33,214,1.994,215,1.772,216,1.994,217,1.994,218,1.994,219,1.994,220,1.994,221,1.626,222,1.994,223,1.994,224,0.52,225,1.994,226,1.994,227,1.994,228,1.994,229,1.994,230,1.994,231,1.994,232,4.287,233,2.991,234,1.994,235,1.994,236,1.994,237,2.161,238,1.994,239,1.994,240,1.994,241,0.919,242,1.994,243,3.33,244,3.33,245,3.33,246,3.33,247,3.33,248,6.017,249,3.33,250,3.33,251,3.33,252,3.33,253,3.33,254,3.33,255,1.626,256,1.994,257,1.772,258,2.53,259,1.994,260,3.81,261,2.532,262,1.626,263,1.994,264,1.994,265,1.994,266,1.994,267,3.33,268,1.994,269,1.994,270,1.994,271,1.994,272,1.994,273,1.994,274,1.994,275,1.994,276,4.948,277,2.959,278,1.994,279,1.994,280,3.33,281,3.33,282,1.994,283,1.994,284,1.994,285,1.994,286,1.772,287,1.772,288,1.994,289,1.994,290,1.994,291,1.994,292,1.994,293,1.516,294,2.959,295,1.994,296,1.994]],["title/modules/AppModule.html",[297,1.692,298,3.317]],["body/modules/AppModule.html",[3,0.035,4,0.04,5,0.04,15,0.007,16,0.06,19,0.004,20,0.004,33,1.035,34,1.896,64,0.742,66,0.446,67,0.317,71,2.298,84,3.196,87,1.295,144,1.876,183,3.147,186,3.402,187,2.202,190,3.259,191,2.202,241,0.977,298,6.644,299,1.215,300,2.146,301,3.147,302,3.147,303,3.147,304,3.147,305,5.526,306,5.526,307,5.245,308,5.526,309,5.526,310,5.526,311,4.578,312,2.252,313,1.522,314,1.323,315,3.147,316,2.049,317,1.917,318,3.566,319,1.917,320,2.049,321,1.267,322,3.147,323,5.242,324,5.242,325,3.541,326,3.88,327,5.242,328,2.298,329,3.541,330,3.541,331,5.242,332,3.757,333,2.538,334,4.273,335,2.887,336,3.986,337,2.693,338,3.986,339,2.693,340,5.242,341,3.541,342,3.017,343,2.038,344,4.273,345,2.887,346,3.259,347,2.116,348,2.038,349,3.147,350,3.147,351,3.541,352,4.746,353,3.147,354,5.242,355,3.541,356,3.147,357,4.658,358,3.132,359,2.409,360,2.913,361,2.202,362,2.116,363,3.147,364,3.541,365,3.541,366,2.887,367,2.887,368,2.409,369,3.147,370,1.166,371,3.541,372,3.541,373,1.267,374,2.887,375,3.541,376,3.541,377,3.541,378,3.147,379,3.541,380,3.147,381,3.541,382,3.541,383,2.887,384,1.56,385,2.538,386,2.116,387,1.522,388,2.538,389,3.541,390,3.566,391,1.644,392,2.538,393,2.202,394,3.593,395,4.273,396,3.402,397,2.298,398,1.45,399,3.541,400,3.541,401,3.541,402,3.541,403,4.273,404,3.541,405,3.541]],["title/modules/AppRoutingModule.html",[297,1.692,305,3.317]],["body/modules/AppRoutingModule.html",[3,0.046,4,0.053,5,0.073,11,2.284,15,0.007,16,0.053,19,0.005,20,0.005,21,0.935,33,1.861,64,0.702,66,0.586,67,0.417,93,2.329,142,3.021,155,2.781,185,1.906,224,1.213,237,3.021,299,2.185,300,2.608,305,6.737,312,2.737,313,2,314,1.739,317,2.329,318,3.166,319,2.329,350,7.504,373,1.666,387,2,388,3.336,406,4.136,407,4.136,408,6.052,409,6.052,410,6.052,411,6.052,412,6.052,413,6.052,414,4.655,415,2.894,416,3.218,417,3.945,418,4.655,419,4.655,420,4.655,421,4.655,422,4.655,423,4.655,424,4.655,425,2.161,426,5.596,427,4.136,428,3.795,429,3.806,430,1.819,431,4.655,432,4.655,433,4.655,434,4.655,435,4.655,436,3.795,437,4.655,438,2.352,439,4.655,440,3.021,441,3.166,442,4.136,443,4.655,444,4.655,445,4.136]],["title/modules/AppServerModule.html",[297,1.692,446,3.52]],["body/modules/AppServerModule.html",[3,0.06,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,64,0.68,66,0.763,67,0.542,84,3.367,186,3.93,298,6.507,299,2.077,300,3.098,312,3.252,313,2.602,314,2.263,317,2.767,318,5.147,319,2.767,349,5.381,446,7.004,447,5.381,448,6.055,449,6.055,450,6.055,451,7.568,452,4.604,453,6.055]],["title/injectables/AppService.html",[454,1.302,455,3.774]],["body/injectables/AppService.html",[3,0.058,4,0.067,5,0.067,7,0.438,8,0.75,14,0.589,15,0.007,16,0.067,19,0.006,20,0.006,45,2.007,46,1.657,64,0.673,66,0.741,67,0.526,139,3.334,360,3.267,361,3.655,362,3.512,438,2.97,454,2.089,455,6.055,456,2.526,457,5.878,458,7.236,459,8.144,460,5.539,461,7.428,462,6.639,463,5.878,464,5.878,465,3.998,466,3.998,467,4.213,468,4.47,469,4.47,470,3.061,471,5.878,472,5.878,473,5.878,474,5.878,475,5.878,476,5.224]],["title/interfaces/AppState.html",[0,0.235,477,4.114]],["body/interfaces/AppState.html",[0,0.232,2,0.955,3,0.045,4,0.052,5,0.052,7,0.341,8,0.637,13,0.845,14,0.588,15,0.007,16,0.093,19,0.005,20,0.005,34,1.392,64,0.7,111,2.953,160,2.314,193,2.546,224,1.877,241,1.264,368,3.116,370,1.508,430,2.462,465,3.116,466,3.116,477,5.599,478,4.071,479,7.226,480,5.856,481,5.352,482,3.901,483,7.202,484,7.202,485,7.202,486,7.202,487,7.202,488,6.399,489,6.3,490,6.3,491,4.581,492,4.581,493,6.3,494,4.071,495,4.071,496,3.283,497,4.581,498,4.581,499,5.136,500,4.581,501,4.581,502,4.071,503,4.581,504,4.581,505,4.581,506,4.581,507,4.581,508,5.599,509,5.599,510,3.483,511,3.734,512,4.515,513,4.581,514,6.3,515,3.483,516,4.581,517,4.581,518,4.581,519,4.071,520,4.071,521,3.734,522,3.116,523,4.581,524,4.581,525,4.581]],["title/classes/Atomic.html",[67,0.415,526,2.766]],["body/classes/Atomic.html",[0,0.387,3,0.043,4,0.05,5,0.05,7,0.328,8,0.619,10,1.122,12,2.043,13,1.164,15,0.007,16,0.097,17,2.629,19,0.005,20,0.005,33,1.791,35,2.292,46,1.187,48,2.146,49,1.826,62,2.572,63,2.059,64,0.554,67,0.549,176,2.787,199,3.527,224,1.147,241,1.214,370,2.321,391,2.043,393,2.736,430,1.72,482,2.043,526,4.212,527,2.993,528,2.993,529,4.575,530,5.186,531,4.795,532,4.795,533,4.401,534,4.401,535,2.856,536,3.406,537,2.736,538,3.661,539,2.993,540,2.993,541,3.977,542,2.856,543,2.856,544,2.993,545,2.993,546,2.993,547,2.993,548,2.993,549,2.736,550,2.856,551,2.533,552,3.79,553,3.79,554,3.81,555,2.856,556,2.629,557,2.736,558,2.736,559,2.736,560,2.736,561,2.629,562,2.736,563,2.629,564,2.629,565,2.629,566,2.629,567,2.533,568,2.629,569,2.736,570,2.629,571,2.736,572,2.736,573,3.79,574,2.736,575,1.72,576,2.736,577,2.993,578,2.533,579,2.993,580,2.856,581,1.644,582,2.736,583,2.629,584,2.366,585,3.007,586,2.7,587,2.629,588,2.856]],["title/guards/AuthGuard.html",[589,4.114,590,3.004]],["body/guards/AuthGuard.html",[3,0.037,4,0.043,5,0.043,7,0.28,10,1.004,14,0.397,15,0.007,16,0.043,19,0.004,20,0.004,28,1.122,39,1.327,45,1.351,46,1.062,55,1.327,56,1.004,58,1.687,63,1.265,64,0.594,66,0.475,67,0.337,71,2.444,73,1.659,111,2.437,144,2.315,151,2.864,152,5.116,176,2.365,185,1.542,241,1.039,314,2.05,360,3.949,361,2.342,362,2.25,368,3.731,394,3.157,426,5.649,430,2.143,441,2.562,442,4.874,454,1.542,465,2.562,466,2.562,512,5.092,521,4.471,581,2.417,590,3.56,591,3.767,592,3.767,593,5.412,594,5.534,595,3.865,596,3.767,597,3.767,598,7.552,599,7.552,600,3.767,601,5.485,602,7.106,603,4.874,604,5.092,605,4.874,606,5.994,607,4.874,608,4.245,609,5.485,610,4.471,611,4.874,612,5.485,613,4.471,614,5.485,615,5.485,616,4.874,617,5.485,618,5.485,619,5.485,620,4.874,621,4.874,622,5.485,623,4.874,624,3.41,625,5.485,626,4.471,627,4.171,628,4.874,629,5.485,630,4.874,631,4.471,632,5.485,633,5.485,634,5.485,635,4.874,636,6.469,637,3.723,638,3.347,639,7.106,640,3.347,641,2.444,642,3.347,643,3.347,644,3.767,645,3.767,646,2.562]],["title/modules/AuthModule.html",[297,1.692,306,3.317]],["body/modules/AuthModule.html",[3,0.061,4,0.07,5,0.07,15,0.007,16,0.07,19,0.006,20,0.006,64,0.727,66,0.775,67,0.551,93,3.332,299,2.109,300,3.127,306,6.531,312,3.282,313,2.642,314,2.297,316,2.985,317,2.248,319,2.793,320,2.985,321,2.2,342,4.397,343,3.539,647,5.463,648,5.463,649,6.148,650,6.148,651,4.397,652,3.539,653,6.228,654,3.417,655,6.228,656,5.012]],["title/injectables/AuthService.html",[454,1.302,594,3.149]],["body/injectables/AuthService.html",[3,0.032,4,0.037,5,0.067,7,0.239,8,0.492,10,0.892,13,0.881,14,0.426,15,0.007,16,0.037,19,0.004,20,0.005,35,2.538,39,1.179,45,1.201,46,1.44,48,1.707,49,1.452,55,1.179,56,1.203,58,1.677,59,1.058,63,1.978,64,0.517,66,0.405,67,0.288,111,2.796,139,1.995,144,2.973,160,2.462,176,1.782,205,3.315,224,1.535,241,0.886,262,3.973,360,3.653,361,1.998,362,1.92,373,3.063,385,4.71,394,2.805,426,3.493,438,1.623,454,1.37,456,1.381,460,3.315,465,2.186,466,2.186,470,1.673,515,5.654,575,2.906,586,3.721,594,3.315,595,3.518,603,4.331,606,3.706,607,5.84,608,3.926,611,5.84,613,3.973,620,4.331,624,3.03,628,5.84,637,1.85,657,3.213,658,3.997,659,3.273,660,2.855,661,5.329,662,4.874,663,3.213,664,5.888,665,4.874,666,3.973,667,4.874,668,4.874,669,4.874,670,3.706,671,3.493,672,3.973,673,4.331,674,4.874,675,4.874,676,4.331,677,4.874,678,4.874,679,4.874,680,4.874,681,4.874,682,3.213,683,4.874,684,4.874,685,4.331,686,4.874,687,3.973,688,4.331,689,6.608,690,4.874,691,4.331,692,4.331,693,4.874,694,4.874,695,4.874,696,4.874,697,4.874,698,3.213,699,4.874,700,4.874,701,4.874,702,4.874,703,4.874,704,3.213,705,2.62,706,2.62,707,2.709,708,3.213,709,2.855,710,3.213,711,3.213,712,4.874,713,3.213,714,3.213,715,3.213]],["title/components/BackupComponent.html",[21,0.93,86,1.809]],["body/components/BackupComponent.html",[3,0.041,4,0.048,5,0.048,7,0.312,15,0.007,16,0.048,19,0.004,20,0.004,21,1.381,22,1.569,23,2.317,24,1.679,25,1.641,26,1.679,28,1.767,29,3.028,31,1.354,32,3.576,33,2.785,34,2.608,36,2.265,39,1.434,41,3.29,45,1.694,46,1.148,56,1.258,58,0.997,59,1.952,64,0.33,66,0.529,67,0.376,75,4.509,77,1.604,78,2.371,79,2.317,80,1.569,81,2.986,82,1.679,83,1.679,84,1.535,85,1.679,86,2.919,87,3.271,88,1.679,89,1.569,90,1.679,91,1.569,92,1.679,93,1.535,94,1.679,95,1.569,96,1.679,97,1.569,98,1.679,99,1.569,100,1.679,101,1.535,102,1.535,103,1.679,104,1.569,105,1.679,106,1.569,107,1.679,108,1.569,109,1.679,110,1.641,111,1.44,112,1.679,113,1.569,114,1.679,115,1.535,116,1.679,117,2.168,118,2.371,119,1.569,120,1.679,121,1.569,122,1.679,123,1.535,124,1.679,125,1.535,126,1.679,127,1.535,128,1.641,129,1.535,130,1.641,131,1.679,384,2.612,481,3.686,482,2.752,691,5.269,716,4.199,717,5.929,718,4.199,719,4.199,720,4.834,721,4.834,722,4.834,723,5.269,724,3.731,725,3.731]],["title/interfaces/Balance.html",[0,0.235,726,3.149]],["body/interfaces/Balance.html",[0,0.317,2,1.302,3,0.062,4,0.071,5,0.071,7,0.465,8,0.779,14,0.558,15,0.007,16,0.071,19,0.006,20,0.006,34,1.897,62,2.835,205,4.246,391,2.898,552,4.146,553,4.146,564,4.608,726,6.306,727,6.243,728,8.741,729,5.089,730,4.052,731,6.243,732,6.243,733,6.853,734,6.243,735,6.243,736,6.243,737,6.243,738,6.243,739,6.243,740,5.548]],["title/injectables/BaseChartConfigService.html",[454,1.302,741,3.774]],["body/injectables/BaseChartConfigService.html",[3,0.035,4,0.04,5,0.04,7,0.262,8,0.528,10,0.645,13,0.7,14,0.592,15,0.007,16,0.04,19,0.004,20,0.004,39,1.263,45,1.533,46,1.584,48,2.41,49,2.05,55,0.852,56,0.645,58,1.477,59,2.048,63,2.749,64,0.277,66,0.444,67,0.315,77,1.995,139,3.574,373,2.226,384,2.741,430,2.689,454,1.468,456,1.514,470,1.835,496,5.989,575,2.432,581,2.571,741,4.257,742,8.357,743,3.523,744,4.64,745,6.115,746,5.61,747,3.523,748,4.64,749,3.824,750,3.523,751,4.64,752,3.523,753,3.523,754,4.64,755,3.523,756,3.523,757,4.64,758,4.64,759,3.971,760,4.64,761,4.64,762,4.64,763,4.64,764,4.64,765,4.257,766,4.64,767,4.64,768,4.64,769,3.971,770,3.971,771,4.64,772,4.257,773,4.64,774,4.64,775,4.64,776,4.64,777,4.257,778,6.115,779,6.115,780,4.681,781,4.64,782,3.552,783,4.64,784,4.64,785,4.64,786,3.523,787,3.523,788,3.523,789,3.523,790,5.222]],["title/components/BlockchainComponent.html",[21,0.93,89,1.73]],["body/components/BlockchainComponent.html",[3,0.028,4,0.032,5,0.032,7,0.208,8,0.442,10,0.512,13,0.587,14,0.39,15,0.007,16,0.032,19,0.003,20,0.003,21,1.084,22,1.044,23,1.71,24,1.117,25,1.092,26,1.117,28,1.304,29,2.376,31,0.901,32,3.425,33,2.658,34,2.136,36,1.672,39,1.058,41,2.689,45,0.688,46,1.423,55,0.676,56,1.117,58,1.039,59,2.009,64,0.48,66,0.352,67,0.25,77,1.068,78,1.75,79,1.71,80,1.044,81,2.441,82,1.117,83,1.117,84,1.022,85,1.117,86,1.092,87,2.924,88,1.117,89,2.281,90,1.117,91,1.044,92,1.117,93,1.022,94,1.117,95,1.044,96,1.117,97,1.044,98,1.117,99,1.044,100,1.117,101,1.022,102,1.022,103,1.117,104,1.044,105,1.117,106,1.044,107,1.117,108,1.044,109,1.117,110,1.092,111,0.958,112,1.117,113,1.044,114,1.117,115,1.022,116,1.117,117,1.6,118,1.75,119,1.044,120,1.117,121,1.044,122,1.117,123,1.022,124,1.117,125,1.022,126,1.117,127,1.022,128,1.092,129,1.022,130,1.092,131,1.117,133,1.502,136,2.279,139,3.113,158,5.181,241,1.207,255,2.278,257,2.483,258,1.412,261,2.125,276,3.889,277,3.889,286,2.483,326,3.795,328,1.813,386,2.614,396,2.84,398,1.144,465,1.901,466,1.901,556,1.669,791,2.794,792,4.102,793,3.501,794,5.394,795,4.376,796,5.394,797,5.394,798,4.641,799,3.567,800,5.394,801,5.394,802,2.125,803,4.376,804,2.84,805,2.794,806,2.794,807,2.794,808,2.794,809,2.794,810,2.794,811,2.794,812,2.794,813,5.394,814,2.483,815,2.794,816,2.794,817,2.002,818,2.794,819,2.794,820,2.794,821,2.794,822,2.794,823,2.278,824,6.104,825,4.376,826,4.376,827,4.376,828,4.376,829,3.136,830,7.999,831,4.376,832,4.376,833,4.376,834,4.376,835,4.376,836,4.376,837,4.376,838,4.376,839,4.376,840,3.136,841,3.889,842,4.376,843,4.376,844,4.376,845,3.889,846,4.376,847,2.794,848,2.794,849,2.794,850,2.794]],["title/modules/BlockchainModule.html",[297,1.692,851,3.52]],["body/modules/BlockchainModule.html",[3,0.051,4,0.059,5,0.059,11,2.536,15,0.007,16,0.059,19,0.005,20,0.005,21,1.039,64,0.724,66,0.651,67,0.463,89,3.409,142,3.355,155,3.088,185,2.116,190,3.213,191,3.213,224,1.347,237,3.355,299,1.773,300,2.798,311,5.413,312,2.937,313,2.221,314,1.932,316,2.671,317,2.499,319,2.499,320,2.671,321,1.85,336,5.197,337,3.93,342,3.934,343,2.975,346,4.249,347,3.088,348,2.975,373,1.85,387,2.221,416,3.453,417,3.869,425,2.399,581,1.932,651,3.934,652,2.975,793,4.97,851,7.004,852,4.593,853,4.593,854,4.593,855,6.239,856,5.169,857,5.169,858,5.169,859,5.169,860,5.169,861,5.169,862,2.692]],["title/modules/BlockchainRoutingModule.html",[297,1.692,408,3.317]],["body/modules/BlockchainRoutingModule.html",[3,0.062,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,64,0.69,66,0.794,67,0.564,185,2.58,224,1.642,299,2.162,316,2.463,317,2.304,319,2.836,320,3.031,321,2.255,386,3.765,387,2.708,396,4.09,408,5.559,415,3.918,416,3.919,417,4.246,425,2.925,590,5.454,593,4.516,862,3.282,863,6.302,864,4.792,865,4.286,866,6.302,867,6.302]],["title/injectables/BlockchainService.html",[352,3.52,454,1.302]],["body/injectables/BlockchainService.html",[3,0.039,4,0.045,5,0.076,7,0.292,10,0.719,14,0.556,15,0.007,16,0.076,19,0.004,20,0.004,39,1.368,45,0.968,46,1.487,55,0.95,56,0.719,58,1.823,64,0.57,66,0.495,67,0.352,224,1.889,233,4.329,241,1.999,326,4.505,328,2.549,352,4.3,370,2.385,373,2.023,384,3.716,396,4.703,398,1.608,429,3.378,438,1.985,454,1.59,456,1.688,470,2.046,624,3.515,637,2.261,671,5.193,802,2.987,804,3.67,817,5.193,868,3.928,869,6.439,870,7.247,871,7.247,872,7.247,873,3.928,874,3.928,875,5.025,876,5.655,877,5.655,878,5.025,879,5.655,880,3.928,881,7.247,882,5.025,883,3.928,884,3.928,885,6.26,886,5.908,887,5.908,888,5.908,889,5.908,890,5.908,891,5.908,892,5.51,893,5.037,894,3.928,895,5.908,896,5.908,897,5.887,898,3.928,899,3.928,900,3.928,901,3.491]],["title/interfaces/ChartConfigInterface.html",[0,0.235,902,3.774]],["body/interfaces/ChartConfigInterface.html",[0,0.294,2,1.208,3,0.057,4,0.066,5,0.066,7,0.431,8,0.744,10,1.061,13,1.204,14,0.674,15,0.007,16,0.066,19,0.005,20,0.005,39,1.78,46,1.425,55,1.401,56,1.061,58,1.747,59,2.423,62,2.507,373,3.143,384,3.749,575,3.326,746,6.938,749,4.99,902,6,903,8.089,904,5.794,905,6.54,906,6,907,5.794,908,5.794]],["title/interfaces/ChartDifficulty.html",[0,0.235,909,3.774]],["body/interfaces/ChartDifficulty.html",[0,0.385,2,1.27,3,0.06,4,0.07,5,0.07,7,0.453,8,0.767,13,1.219,14,0.55,15,0.007,16,0.095,19,0.006,20,0.006,28,1.815,62,2.354,67,0.546,373,2.718,384,3.347,909,7.065,910,6.092,911,8.666,912,8.666,913,7.355,914,6.748,915,6.092]],["title/directives/ChartDirective.html",[80,1.73,129,1.692]],["body/directives/ChartDirective.html",[3,0.043,4,0.05,5,0.05,7,0.327,8,0.618,10,1.12,13,1.074,14,0.551,15,0.007,16,0.05,19,0.005,20,0.005,28,1.823,31,1.416,32,2.286,33,1.283,39,1.48,43,4.385,45,1.508,46,1.606,55,1.48,56,1.394,58,1.672,59,2.507,64,0.554,65,3.971,66,0.553,67,0.393,80,2.286,128,1.716,129,2.237,130,3.13,135,5.355,144,3.045,148,5.792,258,2.218,321,1.571,386,3.655,496,3.147,658,2.36,749,3.914,792,5.355,793,5.722,798,5.792,916,4.391,917,7.042,918,6.119,919,4.391,920,7.617,921,7.042,922,7.617,923,5.741,924,6.119,925,6.119,926,4.391,927,6.119,928,4.391,929,4.391,930,4.391,931,3.147,932,3.58,933,3.902,934,3.902,935,3.58,936,5.437,937,4.391,938,4.391,939,7.617,940,4.391,941,4.391,942,4.391,943,4.391,944,4.391,945,6.119,946,4.988,947,6.119,948,4.391,949,4.391,950,4.391,951,4.391,952,4.391]],["title/modules/ChartModule.html",[297,1.692,855,3.317]],["body/modules/ChartModule.html",[3,0.059,4,0.068,5,0.068,15,0.007,16,0.068,19,0.006,20,0.006,64,0.676,66,0.749,67,0.533,129,3.513,299,2.04,300,3.063,312,3.215,313,2.556,314,2.223,316,2.924,317,2.175,319,2.736,320,2.924,321,2.128,386,4.471,387,3.215,793,5.954,855,6.71,934,5.285,953,5.285,954,5.285,955,5.948,956,5.285,957,5.948,958,5.948]],["title/injectables/ChartService.html",[454,1.302,793,3.004]],["body/injectables/ChartService.html",[3,0.027,4,0.031,5,0.031,7,0.204,8,0.435,10,1.105,13,1.042,14,0.587,15,0.007,16,0.031,19,0.003,20,0.003,39,1.041,45,1.061,46,1.504,48,2.114,49,1.798,55,1.46,56,1.484,58,1.264,59,2.16,63,0.92,64,0.594,66,0.345,67,0.245,73,1.206,144,3.141,160,3.52,173,4.589,192,1.862,193,1.521,224,0.713,321,0.979,368,4.105,370,1.987,373,2.845,384,1.206,392,3.086,394,2.478,438,1.383,454,1.211,456,1.176,467,3.086,470,1.425,479,3.826,496,5.698,575,1.683,578,1.575,616,2.432,641,1.776,687,2.231,749,4.419,759,2.081,770,2.081,780,1.862,793,2.794,906,3.51,923,4.339,931,1.962,932,2.231,933,2.432,935,2.231,936,3.826,946,2.231,959,2.737,960,5.323,961,5.323,962,5.323,963,5.323,964,4.306,965,4.306,966,4.306,967,2.737,968,5.943,969,4.306,970,4.306,971,2.737,972,4.306,973,3.274,974,4.306,975,4.306,976,4.306,977,4.306,978,5.363,979,4.306,980,2.737,981,4.306,982,2.737,983,3.826,984,3.086,985,4.306,986,3.51,987,4.306,988,6.968,989,4.306,990,2.737,991,4.73,992,4.306,993,3.274,994,4.306,995,2.737,996,4.306,997,3.826,998,2.737,999,2.737,1000,2.432,1001,2.432,1002,2.432,1003,5.323,1004,2.432,1005,2.432,1006,2.737,1007,2.737,1008,2.737,1009,2.432,1010,2.737,1011,2.737,1012,2.737,1013,2.737,1014,2.432,1015,2.737,1016,2.737,1017,2.432,1018,2.737,1019,3.826,1020,2.737,1021,2.432,1022,2.737,1023,2.737,1024,2.737,1025,4.306,1026,2.737,1027,4.306,1028,4.306,1029,2.737,1030,2.231,1031,2.432,1032,2.737,1033,2.737,1034,2.737,1035,2.737,1036,2.737,1037,2.737,1038,2.737,1039,2.737,1040,2.737,1041,2.737,1042,2.737,1043,2.737,1044,2.737,1045,2.737,1046,2.737,1047,2.737,1048,2.737,1049,2.737,1050,3.274,1051,2.737,1052,2.737,1053,2.737,1054,2.737,1055,2.432,1056,2.737,1057,1.635,1058,2.737,1059,2.737,1060,2.737,1061,2.737,1062,2.737]],["title/injectables/ChartsEffects.html",[454,1.302,1063,4.114]],["body/injectables/ChartsEffects.html",[3,0.029,4,0.033,5,0.033,7,0.218,8,0.458,10,0.535,14,0.328,15,0.007,16,0.033,19,0.003,20,0.003,45,1.117,46,1.311,48,2.191,49,1.864,55,0.707,56,0.535,64,0.637,66,0.368,67,0.262,144,2.563,160,3.775,189,2.223,192,1.989,193,1.625,198,5.129,241,1.867,326,3.889,328,1.898,370,1.492,384,1.997,390,3.084,454,1.275,456,1.256,512,2.095,749,1.625,804,4.394,817,3.249,909,2.384,986,6.295,993,4.757,1050,3.447,1057,2.709,1063,4.029,1064,2.924,1065,6.77,1066,6.77,1067,6.256,1068,4.934,1069,5.553,1070,2.095,1071,5.082,1072,2.924,1073,6.295,1074,6.091,1075,4.534,1076,6.919,1077,8.102,1078,5.133,1079,6.256,1080,4.534,1081,2.924,1082,4.534,1083,4.534,1084,2.924,1085,5.553,1086,6.256,1087,4.934,1088,4.534,1089,4.534,1090,4.534,1091,4.534,1092,4.534,1093,4.029,1094,4.029,1095,4.029,1096,4.534,1097,5.553,1098,4.534,1099,4.934,1100,5.1,1101,4.534,1102,2.51,1103,4.534,1104,4.534,1105,4.483,1106,4.934,1107,4.934,1108,4.934,1109,4.534,1110,2.924,1111,4.534,1112,4.934,1113,2.924,1114,2.384,1115,1.898,1116,2.598,1117,2.384,1118,2.384,1119,2.598,1120,2.598,1121,2.924,1122,2.598,1123,2.924,1124,2.924]],["title/interfaces/ChartsState.html",[0,0.235,1125,4.114]],["body/interfaces/ChartsState.html",[0,0.289,2,1.188,3,0.056,4,0.065,5,0.065,7,0.424,8,0.736,10,1.333,14,0.412,15,0.007,16,0.097,19,0.005,20,0.005,64,0.631,193,3.165,224,2.091,241,1.571,368,3.874,370,1.875,373,2.038,430,2.226,512,6.06,913,7.766,993,6.996,1057,3.403,1071,3.874,1078,5.217,1106,5.061,1117,4.643,1120,5.061,1125,7.131,1126,5.061,1127,7.28,1128,8.025,1129,5.696,1130,5.696,1131,5.696,1132,5.696,1133,5.061,1134,5.696]],["title/components/ConsoleComponent.html",[21,0.93,91,1.73]],["body/components/ConsoleComponent.html",[3,0.026,4,0.031,5,0.031,7,0.199,8,0.427,10,0.774,13,0.925,14,0.47,15,0.007,16,0.031,19,0.003,20,0.003,21,1.054,22,1,23,1.653,24,1.07,25,1.045,26,1.07,28,1.26,29,2.31,31,0.863,32,3.406,33,2.642,34,2.277,36,1.616,39,1.023,41,2.626,43,3.031,45,0.659,46,1.493,48,1.481,49,1.26,55,1.023,56,1.188,58,1.415,59,2.136,63,1.421,64,0.412,65,2.745,66,0.337,67,0.24,77,1.022,78,1.691,79,1.653,80,1,81,2.383,82,1.07,83,1.07,84,0.978,85,1.07,86,1.045,87,2.946,88,1.07,89,1,90,1.07,91,2.227,92,1.07,93,0.978,94,1.07,95,1,96,1.07,97,1,98,1.07,99,1,100,1.07,101,0.978,102,0.978,103,1.07,104,1,105,1.07,106,1,107,1.07,108,1,109,1.07,110,1.045,111,0.918,112,1.07,113,1,114,1.07,115,0.978,116,1.07,117,1.546,118,1.691,119,1,120,1.07,121,1,122,1.07,123,0.978,124,1.07,125,0.978,126,1.07,127,0.978,128,1.045,129,0.978,130,1.045,131,1.07,133,1.438,135,3.988,136,2.202,144,2.586,148,4.532,179,1.82,182,2.034,221,2.181,224,1.367,260,4.66,261,2.034,398,1.095,429,2.526,430,1.653,692,2.377,730,2.745,772,2.181,840,1.917,1068,3.758,1135,2.675,1136,4.229,1137,4.229,1138,4.229,1139,4.229,1140,4.229,1141,5.244,1142,4.229,1143,5.244,1144,5.244,1145,4.275,1146,4.229,1147,5.959,1148,4.66,1149,2.675,1150,4.858,1151,5.244,1152,5.959,1153,4.229,1154,4.229,1155,2.675,1156,2.675,1157,2.675,1158,2.675,1159,2.675,1160,2.675,1161,2.675,1162,5.244,1163,4.229,1164,2.675,1165,2.675,1166,2.675,1167,2.675,1168,2.034,1169,2.181,1170,2.675,1171,2.675,1172,2.675,1173,6.491,1174,2.675,1175,2.675,1176,2.675,1177,2.675,1178,2.675,1179,2.675,1180,2.675,1181,2.675,1182,2.675,1183,2.675,1184,2.675,1185,2.675,1186,2.675,1187,2.675,1188,2.675,1189,2.675,1190,2.675,1191,2.675,1192,2.675,1193,2.675,1194,2.675,1195,2.675,1196,2.675,1197,2.675,1198,2.675,1199,2.675,1200,2.675,1201,2.675,1202,2.675,1203,4.229,1204,2.675,1205,2.675,1206,2.675,1207,4.229,1208,2.675,1209,2.675,1210,2.675,1211,2.675,1212,2.675,1213,2.181,1214,2.675,1215,2.675,1216,2.675,1217,2.377,1218,2.675,1219,2.675,1220,2.675,1221,3.758,1222,2.675,1223,3.758,1224,5.244,1225,2.675,1226,2.675]],["title/modules/ConsoleModule.html",[297,1.692,307,3.149]],["body/modules/ConsoleModule.html",[3,0.057,4,0.066,5,0.066,15,0.007,16,0.066,19,0.005,20,0.005,64,0.716,66,0.726,67,0.516,91,3.547,299,1.976,300,3.002,307,6.196,312,3.151,313,2.475,314,2.153,316,2.866,317,2.106,319,2.681,320,2.866,321,2.061,342,4.221,343,3.316,346,4.559,347,3.442,348,3.316,387,3.151,651,4.221,652,3.316,1168,4.38,1169,4.696,1227,5.119,1228,5.119,1229,5.119,1230,5.761,1231,5.761,1232,7.333]],["title/interfaces/CreateWallet.html",[0,0.235,587,2.766]],["body/interfaces/CreateWallet.html",[0,0.387,2,0.92,3,0.044,4,0.05,5,0.05,7,0.328,8,0.62,10,1.124,12,2.047,13,1.238,14,0.511,15,0.007,16,0.097,17,2.635,19,0.005,20,0.005,33,1.793,35,2.297,62,2.574,63,2.062,64,0.555,67,0.55,176,2.79,199,4.617,224,1.149,241,1.217,370,2.323,391,2.047,393,2.742,430,1.723,482,2.047,526,3.666,528,3,529,3.983,530,4.801,531,3,532,3,535,2.862,536,3.411,537,2.742,538,3.666,539,3,540,3,541,3.983,542,2.862,543,2.862,544,3,545,3,546,3,547,3,548,3,549,2.742,550,2.862,551,2.539,552,3.794,553,3.794,554,3.815,555,2.862,556,2.635,557,2.742,558,2.742,559,2.742,560,2.742,561,2.635,562,2.742,563,2.635,564,2.635,565,2.635,566,2.635,567,2.539,568,2.635,569,2.742,570,2.635,571,2.742,572,2.742,573,3.794,574,2.742,575,1.723,576,2.742,577,3,578,2.539,579,3,580,2.862,581,1.648,582,2.742,583,2.635,584,2.371,585,3.936,586,3.534,587,3.666,588,2.862]],["title/injectables/CryptService.html",[454,1.302,661,3.317]],["body/injectables/CryptService.html",[3,0.021,4,0.025,5,0.025,7,0.161,10,1.211,11,1.743,13,1.224,14,0.478,15,0.007,16,0.025,17,2.123,19,0.003,20,0.003,39,0.859,45,0.876,46,1.28,55,1.599,56,1.265,58,1.833,63,1.194,64,0.356,65,4.906,66,0.272,67,0.193,73,0.95,111,1.554,139,1.455,144,2.08,224,1.37,241,1.824,360,2.921,362,1.288,370,0.71,373,2.473,378,3.158,383,2.897,384,0.95,385,2.546,390,2.417,394,4.245,429,2.123,436,2.897,438,1.089,454,0.999,455,5.098,456,0.927,460,3.083,470,1.123,511,2.897,515,1.64,567,2.045,568,1.288,575,3.017,586,3.155,595,2.707,608,3.472,610,2.897,624,2.209,626,2.897,637,2.608,658,3.362,659,3.98,661,2.546,666,4.284,670,5.028,672,2.897,688,3.158,689,4.67,707,4.099,709,3.158,749,1.975,882,3.158,892,1.64,978,3.158,1014,3.158,1021,1.916,1145,2.897,1213,1.758,1233,2.157,1234,3.553,1235,3.553,1236,3.553,1237,3.553,1238,3.553,1239,3.553,1240,2.157,1241,2.157,1242,3.553,1243,2.157,1244,4.532,1245,3.553,1246,5.255,1247,3.694,1248,3.553,1249,2.157,1250,3.553,1251,3.553,1252,3.553,1253,3.553,1254,3.553,1255,2.897,1256,6.254,1257,3.553,1258,3.553,1259,3.553,1260,3.553,1261,3.553,1262,3.553,1263,3.553,1264,3.553,1265,3.553,1266,3.553,1267,3.553,1268,3.553,1269,3.553,1270,3.158,1271,3.553,1272,3.553,1273,3.553,1274,3.553,1275,6.254,1276,2.157,1277,3.158,1278,2.897,1279,3.553,1280,3.553,1281,3.158,1282,4.532,1283,3.553,1284,3.553,1285,3.553,1286,3.553,1287,3.553,1288,3.553,1289,5.255,1290,3.553,1291,2.157,1292,3.553,1293,3.553,1294,3.553,1295,3.553,1296,3.553,1297,3.158,1298,3.553,1299,3.158,1300,3.553,1301,3.553,1302,3.158,1303,4.532,1304,3.553,1305,2.157,1306,2.546,1307,3.553,1308,3.553,1309,3.694,1310,3.553,1311,3.553,1312,3.158,1313,3.553,1314,2.157,1315,3.553,1316,2.897,1317,3.553,1318,3.553,1319,3.553,1320,3.553,1321,2.157,1322,2.157,1323,2.157,1324,2.157,1325,2.157,1326,1.64,1327,2.157,1328,1.916,1329,2.157,1330,1.916,1331,2.157,1332,2.157,1333,2.157,1334,2.157,1335,2.157,1336,1.758,1337,2.157,1338,2.157,1339,2.157,1340,2.157,1341,2.157,1342,2.157,1343,2.157,1344,2.157,1345,2.157,1346,2.157,1347,2.157,1348,2.157,1349,2.157,1350,3.553,1351,2.157,1352,2.157,1353,5.812,1354,3.553,1355,2.157,1356,2.157,1357,2.157,1358,2.157,1359,4.738,1360,2.157,1361,2.157,1362,2.157,1363,3.553,1364,2.157,1365,4.284,1366,2.157,1367,2.157,1368,2.157,1369,2.157,1370,2.157,1371,2.157,1372,2.157,1373,2.157,1374,2.157,1375,2.157,1376,2.417]],["title/modules/DataModule.html",[297,1.692,308,3.317]],["body/modules/DataModule.html",[3,0.06,4,0.07,5,0.07,15,0.007,16,0.07,19,0.006,20,0.006,31,1.965,64,0.739,66,0.767,67,0.546,160,3.078,193,4.222,299,2.09,308,5.444,316,2.381,317,2.227,319,2.777,465,4.144,466,4.144,502,6.75,520,6.75,521,4.966,522,4.144,1115,3.954,1377,6.092,1378,6.092,1379,6.092,1380,6.092,1381,6.092,1382,6.092,1383,6.75,1384,6.092,1385,5.413,1386,6.092,1387,6.092,1388,6.092,1389,6.092,1390,6.092,1391,6.092,1392,6.092,1393,6.092,1394,6.092,1395,6.092,1396,6.092]],["title/interfaces/Destination.html",[0,0.235,536,2.573]],["body/interfaces/Destination.html",[0,0.325,2,1.335,3,0.063,4,0.073,5,0.073,7,0.476,8,0.791,9,4.967,13,0.858,14,0.567,15,0.007,16,0.073,19,0.006,20,0.006,62,2.623,64,0.503,139,2.621,526,3.825,536,4.901,552,3.441,553,3.441,997,5.689,1397,6.402,1398,6.153,1399,5.689,1400,5.219]],["title/interfaces/DialogData.html",[0,0.235,1401,3.774]],["body/interfaces/DialogData.html",[0,0.299,2,1.23,3,0.058,4,0.067,5,0.067,7,0.439,8,0.752,13,1.209,14,0.538,15,0.007,16,0.085,19,0.006,20,0.006,21,1.496,32,2.203,33,1.723,36,2.253,45,1.453,56,1.568,59,1.941,64,0.585,66,0.743,67,0.528,87,2.155,101,2.155,102,2.155,139,3.046,373,2.11,931,4.225,1401,6.648,1402,5.239,1403,6.201,1404,5.239,1405,7.611,1406,5.239,1407,6.613,1408,4.483,1409,5.239,1410,5.239,1411,5.239,1412,5.239,1413,5.239]],["title/injectables/Effects.html",[454,1.302,522,3.149]],["body/injectables/Effects.html",[3,0.065,4,0.076,5,0.076,10,1.215,14,0.48,15,0.007,16,0.076,19,0.006,20,0.006,45,1.635,46,1.285,55,1.604,56,1.215,64,0.629,66,0.836,67,0.594,398,2.716,454,2.25,456,2.85,522,5.444,1070,4.754,1071,6.313,1115,4.305,1414,6.634,1415,6.634]],["title/injectables/Effects-1.html",[73,1.697,454,1.083,522,2.62]],["body/injectables/Effects-1.html",[3,0.065,4,0.076,5,0.076,10,1.215,14,0.48,15,0.007,16,0.076,19,0.006,20,0.006,45,1.635,46,1.285,55,1.604,56,1.215,64,0.629,66,0.836,67,0.594,398,2.716,454,2.25,456,2.85,522,5.444,1070,4.754,1071,6.313,1115,4.305,1416,6.634,1417,6.634]],["title/pipes/EffortPipe.html",[1102,2.093,1418,3.52]],["body/pipes/EffortPipe.html",[3,0.058,4,0.068,5,0.068,10,1.086,13,0.795,14,0.429,15,0.007,16,0.068,19,0.006,20,0.006,28,1.767,31,1.913,39,1.434,45,1.461,46,1.148,49,2.226,55,1.434,56,1.497,58,1.408,63,2.747,64,0.466,66,0.747,67,0.531,176,2.989,224,1.947,241,1.636,261,4.509,581,2.791,1102,3.377,1217,5.27,1418,5.68,1419,3.543,1420,5.93,1421,7.469,1422,3.687,1423,5.68,1424,7.627,1425,5.93,1426,4.034,1427,4.644,1428,3.849,1429,5.93,1430,5.93,1431,5.93,1432,5.27]],["title/pipes/EscapeHtmlPipe.html",[1102,2.093,1433,3.52]],["body/pipes/EscapeHtmlPipe.html",[3,0.062,4,0.072,5,0.072,10,1.15,15,0.007,16,0.072,19,0.006,20,0.006,28,1.872,31,2.026,39,1.519,46,1.216,55,1.519,56,1.536,58,1.491,64,0.609,66,0.791,67,0.563,186,4.077,187,3.905,233,3.753,241,1.733,398,2.572,581,2.347,1102,3.5,1419,3.753,1422,3.905,1427,4.813,1428,4.077,1433,5.887,1434,6.282,1435,7.742,1436,5.887,1437,6.282,1438,6.88,1439,5.582,1440,6.282]],["title/interfaces/FileSystemInterface.html",[0,0.235,1441,3.774]],["body/interfaces/FileSystemInterface.html",[0,0.18,2,0.741,3,0.035,4,0.041,5,0.041,7,0.265,10,1.414,11,3.788,13,1.1,14,0.633,15,0.007,16,0.041,19,0.004,20,0.004,39,1.271,46,1.495,49,2.059,55,1.867,56,1.414,58,1.947,59,2.275,176,2.527,241,2.13,373,2.935,394,5.087,425,4.2,428,7.131,436,4.285,440,4.485,585,4.532,595,3.14,606,3.997,671,3.766,878,6.141,1441,4.285,1442,7.989,1443,3.554,1444,3.766,1445,4.285,1446,4.67,1447,5.634,1448,5.256,1449,5.634,1450,3.554,1451,5.256,1452,6.651,1453,5.256,1454,6.686,1455,3.554,1456,5.256,1457,5.256,1458,5.256,1459,3.554,1460,4.285,1461,5.256,1462,3.554,1463,6.911,1464,5.256,1465,3.554,1466,5.256,1467,3.554,1468,5.256,1469,3.575,1470,4.285]],["title/injectables/FileSystemService.html",[360,2.573,454,1.302]],["body/injectables/FileSystemService.html",[3,0.035,4,0.04,5,0.094,7,0.263,8,0.529,10,1.411,11,1.734,13,1.212,14,0.605,15,0.007,16,0.04,19,0.004,20,0.004,35,1.841,39,1.266,45,0.871,46,1.586,49,1.56,55,1.864,56,1.411,58,2.074,64,0.412,66,0.445,67,0.317,139,2.552,241,2.2,360,2.91,373,2.633,394,4.436,395,4.268,398,1.447,425,2.43,438,1.786,440,3.398,441,2.405,454,1.472,456,1.519,470,1.841,585,3.382,595,4.765,606,3.981,641,2.294,646,2.405,659,4.283,685,4.652,707,2.91,799,4.268,1009,3.141,1247,4.268,1306,3.752,1444,4.94,1445,4.268,1447,4.268,1449,4.268,1452,4.741,1454,5.619,1471,7.433,1472,3.535,1473,5.235,1474,5.235,1475,5.235,1476,3.535,1477,5.619,1478,5.235,1479,5.235,1480,4.652,1481,3.535,1482,7.706,1483,5.235,1484,3.535,1485,4.652,1486,3.535,1487,5.235,1488,3.535,1489,5.235,1490,5.235,1491,3.535,1492,3.535,1493,3.535,1494,5.235,1495,6.235,1496,3.535,1497,3.535,1498,2.882,1499,3.535,1500,3.535,1501,3.535,1502,3.535,1503,3.535,1504,3.535]],["title/injectables/FileSystemWebService.html",[454,1.302,1477,3.774]],["body/injectables/FileSystemWebService.html",[3,0.035,4,0.04,5,0.04,7,0.262,8,0.527,10,1.458,13,0.471,14,0.531,15,0.007,16,0.04,19,0.004,20,0.004,28,1.048,39,1.261,45,0.866,46,1.583,48,1.232,49,1.048,55,1.926,56,1.458,58,1.826,59,2.046,64,0.541,66,0.443,67,0.315,139,3.741,144,2.224,176,1.907,224,1.62,233,3.713,241,1.897,326,4.274,328,2.282,370,2.046,373,2.46,384,3.389,398,1.44,425,3.408,438,1.777,440,3.384,454,1.466,456,1.511,470,1.831,581,1.314,585,3.603,659,4.642,671,3.737,707,3.454,802,2.674,804,3.384,817,4.454,885,5.605,886,5.067,887,5.067,888,5.067,889,5.067,890,5.067,891,4.251,892,3.965,893,2.674,895,5.067,896,5.067,1247,5.067,1441,4.251,1444,3.737,1445,4.251,1446,4.634,1447,4.251,1449,2.867,1452,6.351,1454,5.067,1471,7.422,1477,4.251,1480,4.634,1485,4.634,1505,3.517,1506,5.523,1507,5.215,1508,3.517,1509,5.215,1510,3.517,1511,3.517,1512,5.215,1513,3.517,1514,5.215,1515,3.517,1516,5.215,1517,3.517,1518,5.215,1519,3.517,1520,3.517,1521,3.125,1522,3.125,1523,3.125,1524,3.517,1525,3.517,1526,3.517,1527,3.517,1528,3.517,1529,3.517,1530,3.517]],["title/interfaces/GetAddressBookOut.html",[0,0.235,1531,3.774]],["body/interfaces/GetAddressBookOut.html",[0,0.341,2,1.402,3,0.066,4,0.077,5,0.077,7,0.6,8,0.815,9,3.501,11,3.298,12,3.121,13,1.159,14,0.625,15,0.007,16,0.077,19,0.006,20,0.006,62,2.083,1531,6.577,1532,6.723,1533,7.966,1534,6.135]],["title/interfaces/GetBulkPaymentsIn.html",[0,0.235,1535,3.774]],["body/interfaces/GetBulkPaymentsIn.html",[0,0.331,2,1.361,3,0.064,4,0.075,5,0.075,7,0.486,8,0.801,13,1.19,14,0.573,15,0.007,16,0.075,19,0.006,20,0.006,62,2.645,258,3.297,390,4.439,552,3.508,553,3.508,1312,5.799,1535,6.461,1536,6.527,1537,8.876,1538,8.876,1539,5.799,1540,6.527,1541,5.32]],["title/interfaces/GetBulkPaymentsOut.html",[0,0.235,1542,3.774]],["body/interfaces/GetBulkPaymentsOut.html",[0,0.35,2,1.44,3,0.068,4,0.079,5,0.079,7,0.514,8,0.828,14,0.5,15,0.007,16,0.079,19,0.006,20,0.006,64,0.543,1541,7.374,1542,6.684,1543,6.907,1544,6.153,1545,6.138]],["title/interfaces/GetPaymentsIn.html",[0,0.235,1546,3.774]],["body/interfaces/GetPaymentsIn.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,12,4.213,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,1546,6.725,1547,6.979]],["title/interfaces/GetPaymentsOut.html",[0,0.235,1548,3.774]],["body/interfaces/GetPaymentsOut.html",[0,0.35,2,1.44,3,0.068,4,0.079,5,0.079,7,0.514,8,0.828,14,0.5,15,0.007,16,0.079,19,0.006,20,0.006,64,0.543,1541,7.374,1544,6.153,1545,6.138,1548,6.684,1549,6.907]],["title/interfaces/GetTransfersIn.html",[0,0.235,1550,3.149]],["body/interfaces/GetTransfersIn.html",[0,0.246,2,1.013,3,0.048,4,0.055,5,0.055,7,0.362,8,0.662,10,1.73,11,2.383,14,0.643,15,0.007,16,0.055,19,0.005,20,0.005,34,1.476,62,2.65,176,3.48,188,5.345,258,4.015,262,5.345,314,3.196,829,6.129,1105,3.481,1469,3.304,1550,4.46,1551,4.857,1552,6.584,1553,5.817,1554,7.062,1555,7.062,1556,7.062,1557,6.129,1558,6.557,1559,6.557]],["title/interfaces/GetTransfersOut.html",[0,0.235,1560,3.004]],["body/interfaces/GetTransfersOut.html",[0,0.296,2,1.219,3,0.058,4,0.067,5,0.067,7,0.435,8,0.748,10,1.722,14,0.618,15,0.007,16,0.067,19,0.005,20,0.005,64,0.582,176,3.22,314,3.19,536,4.113,537,3.633,829,6.118,1553,5.807,1557,6.118,1560,4.803,1561,5.844,1562,6.523,1563,5.844]],["title/pipes/HashRatePipe.html",[1102,2.093,1564,3.52]],["body/pipes/HashRatePipe.html",[3,0.051,4,0.059,5,0.059,10,0.954,13,1.096,14,0.377,15,0.007,16,0.059,19,0.005,20,0.005,28,1.552,31,1.68,39,1.26,46,1.009,48,1.825,49,1.552,55,1.26,56,1.407,58,1.237,62,2.382,63,2.746,64,0.54,66,0.656,67,0.466,176,2.811,186,3.381,187,3.238,224,1.358,233,5.213,241,1.895,398,2.132,581,2.567,646,3.543,840,4.923,1102,3.106,1330,4.629,1376,3.543,1400,4.247,1419,3.112,1422,3.238,1426,3.543,1427,4.271,1428,3.381,1432,4.629,1436,5.224,1438,6.105,1439,4.629,1564,5.224,1565,5.209,1566,6.105,1567,7.263,1568,5.209,1569,5.209,1570,5.209,1571,4.629,1572,5.209,1573,3.961,1574,6.87,1575,5.209]],["title/interfaces/Height.html",[0,0.235,258,2.339]],["body/interfaces/Height.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,62,2.722,258,4.744,1576,6.979]],["title/interfaces/IncomingTransfersIn.html",[0,0.235,1577,3.774]],["body/interfaces/IncomingTransfersIn.html",[0,0.343,2,1.411,3,0.067,4,0.077,5,0.077,7,0.504,8,0.818,14,0.49,15,0.007,16,0.077,19,0.006,20,0.006,1577,6.604,1578,6.768,1579,8.985,1580,7.068,1581,8.67]],["title/interfaces/IncomingTransfersOut.html",[0,0.235,1582,3.774]],["body/interfaces/IncomingTransfersOut.html",[0,0.291,2,1.198,3,0.057,4,0.066,5,0.066,7,0.428,8,0.74,13,1.137,14,0.634,15,0.007,16,0.066,19,0.005,20,0.005,62,2.884,176,3.102,552,4.331,553,4.331,554,3.571,565,5.068,573,3.088,578,3.306,624,3.571,1255,5.967,1316,4.683,1398,5.77,1552,4.116,1582,5.967,1583,5.744,1584,8.484,1585,6.916,1586,8.484,1587,5.744,1588,5.744,1589,5.744,1590,5.104,1591,5.744]],["title/interfaces/IntegratedAddress.html",[0,0.235,1592,3.774]],["body/interfaces/IntegratedAddress.html",[0,0.34,2,1.397,3,0.066,4,0.077,5,0.077,7,0.499,8,0.814,9,4.771,12,4.157,13,1.157,14,0.583,15,0.007,16,0.077,19,0.006,20,0.006,64,0.527,1592,6.564,1593,6.7,1594,8.955]],["title/classes/LTHN.html",[33,1.353,67,0.415]],["body/classes/LTHN.html",[0,0.39,3,0.044,4,0.051,5,0.051,7,0.335,8,0.629,10,1.139,12,2.088,13,1.171,15,0.007,16,0.098,17,2.688,19,0.005,20,0.005,33,2.084,35,2.343,46,0.871,48,1.576,49,1.34,62,2.59,63,2.091,64,0.561,67,0.557,176,2.814,199,3.582,224,1.173,241,1.241,370,2.348,391,2.088,393,2.797,430,1.758,482,2.088,526,3.717,527,3.06,528,3.06,529,4.629,530,5.235,531,3.06,532,3.06,535,2.92,536,3.458,537,2.797,538,3.717,539,3.06,540,3.06,541,4.038,542,2.92,543,2.92,544,3.06,545,4.852,546,3.06,547,3.06,548,3.06,549,2.797,550,2.92,551,2.59,552,3.835,553,3.835,554,3.868,555,2.92,556,2.688,557,2.797,558,2.797,559,2.797,560,2.797,561,2.688,562,2.797,563,2.688,564,2.688,565,2.688,566,2.688,567,2.59,568,2.688,569,2.797,570,2.688,571,2.797,572,2.797,573,3.835,574,2.797,575,1.758,576,2.797,577,3.06,578,2.59,579,3.06,580,2.92,581,1.681,582,2.797,583,2.688,584,2.418,585,3.053,586,2.742,587,2.688,588,2.92,1595,4.499]],["title/interfaces/LogEntry.html",[0,0.235,1596,3.774]],["body/interfaces/LogEntry.html",[0,0.405,2,1.379,3,0.065,4,0.076,5,0.076,7,0.492,8,0.807,13,1.258,14,0.578,15,0.007,16,0.091,19,0.006,20,0.006,480,4.498,1596,6.512,1597,5.876,1598,7.268,1599,7.922,1600,5.39]],["title/components/LoginComponent.html",[21,0.93,93,1.692]],["body/components/LoginComponent.html",[3,0.035,4,0.041,5,0.041,7,0.268,8,0.536,10,0.659,13,0.482,14,0.384,15,0.007,16,0.041,19,0.004,20,0.004,21,1.266,22,1.345,23,2.073,24,1.439,25,1.406,26,1.439,31,1.161,32,3.525,33,2.742,34,2.357,36,2.027,39,1.283,45,0.887,46,1.502,48,2.435,49,2.072,55,0.87,56,1.273,58,0.854,64,0.547,66,0.453,67,0.322,77,1.375,78,2.121,79,2.073,80,1.345,81,2.78,82,1.439,83,1.439,84,1.316,85,1.439,86,1.406,87,3.072,88,1.439,89,1.345,90,1.439,91,1.345,92,1.439,93,2.542,94,1.439,95,1.345,96,1.439,97,1.345,98,1.439,99,1.345,100,1.439,101,1.316,102,1.316,103,1.439,104,1.345,105,1.439,106,1.345,107,1.439,108,1.345,109,1.439,110,1.406,111,1.234,112,1.439,113,1.345,114,1.439,115,1.316,116,1.439,117,1.939,118,2.121,119,1.345,120,1.439,121,1.345,122,1.439,123,1.316,124,1.439,125,1.316,126,1.439,127,1.316,128,1.406,129,1.316,130,1.406,131,1.439,144,1.287,152,5.205,185,1.473,370,2.553,398,1.473,426,5.748,586,3.266,594,5.275,608,4.429,638,3.197,640,3.197,641,2.335,654,2,659,3.501,707,2,1057,3.764,1553,2.448,1601,3.598,1602,5.304,1603,5.136,1604,6.953,1605,3.598,1606,5.304,1607,3.598,1608,5.205,1609,3.598,1610,3.598,1611,3.598,1612,3.598,1613,2.736,1614,2.933,1615,3.598,1616,3.598,1617,5.304]],["title/components/LogsComponent.html",[21,0.93,95,1.73]],["body/components/LogsComponent.html",[3,0.043,4,0.05,5,0.05,7,0.323,15,0.007,16,0.05,19,0.005,20,0.005,21,1.405,22,1.62,23,2.369,24,1.733,25,1.694,26,1.733,28,1.807,29,3.081,31,1.398,32,3.586,33,2.793,34,2.51,36,2.317,39,1.466,41,3.337,45,1.723,46,1.174,56,1.28,58,1.029,59,1.996,64,0.341,66,0.546,67,0.388,77,1.656,78,2.425,79,2.369,80,1.62,81,3.029,82,1.733,83,1.733,84,1.585,85,1.733,86,1.694,87,3.291,88,1.733,89,1.62,90,1.733,91,1.62,92,1.733,93,1.585,94,1.733,95,2.83,96,1.733,97,1.62,98,1.733,99,1.62,100,1.733,101,1.585,102,1.585,103,1.733,104,1.62,105,1.733,106,1.62,107,1.733,108,1.62,109,1.733,110,1.694,111,1.487,112,1.733,113,1.62,114,1.733,115,1.585,116,1.733,117,2.217,118,2.425,119,1.62,120,1.733,121,1.62,122,1.733,123,1.585,124,1.733,125,1.585,126,1.733,127,1.585,128,1.694,129,1.585,130,1.694,131,1.733,133,2.33,136,3.158,480,4.124,1618,4.334,1619,6.993,1620,6.063,1621,4.334,1622,4.334]],["title/modules/LogsModule.html",[297,1.692,1623,3.317]],["body/modules/LogsModule.html",[3,0.059,4,0.068,5,0.068,15,0.007,16,0.068,19,0.006,20,0.006,21,1.195,64,0.676,66,0.749,67,0.533,95,3.578,185,2.435,224,1.55,299,2.04,300,3.063,312,3.215,313,2.556,314,2.223,316,2.924,317,2.175,319,2.736,320,2.924,321,2.128,387,3.215,416,3.78,417,4.136,425,2.761,480,4.046,862,3.098,1623,6.575,1624,5.285,1625,5.285,1626,5.285,1627,5.948,1628,5.948]],["title/interfaces/LogsState.html",[0,0.235,1600,3.774]],["body/interfaces/LogsState.html",[0,0.411,2,1.411,3,0.067,4,0.077,5,0.077,7,0.504,8,0.818,13,1.231,14,0.49,15,0.007,16,0.093,19,0.006,20,0.006,480,6.112,1596,5.517,1597,6.014,1598,5.517,1599,6.014,1600,6.604]],["title/interfaces/MakeIntegratedAddressIn.html",[0,0.235,1629,3.774]],["body/interfaces/MakeIntegratedAddressIn.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,12,4.213,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,1629,6.725,1630,6.979]],["title/interfaces/MakeUriIn.html",[0,0.235,538,2.766]],["body/interfaces/MakeUriIn.html",[0,0.282,2,1.162,3,0.055,4,0.064,5,0.064,7,0.415,8,0.725,9,4.769,10,1.708,12,3.893,13,1.267,14,0.628,15,0.007,16,0.064,19,0.005,20,0.005,56,1.02,62,2.461,64,0.438,526,3.327,538,4.287,542,3.614,543,3.614,570,3.327,658,2.994,1278,4.54,1398,5.903,1400,4.54,1544,4.881,1631,5.569,1632,8.386,1633,8.386,1634,4.949,1635,4.949,1636,5.569,1637,5.569,1638,5.569,1639,5.569,1640,5.569]],["title/pipes/MarkdownPipe.html",[1102,2.093,1641,3.52]],["body/pipes/MarkdownPipe.html",[3,0.061,4,0.071,5,0.071,10,1.132,14,0.448,15,0.007,16,0.071,19,0.006,20,0.006,28,1.843,31,1.995,39,1.496,46,1.198,49,2.483,55,1.496,56,1.526,58,1.468,63,2.078,64,0.603,66,0.779,67,0.554,241,2.115,1102,3.467,1419,3.695,1422,3.845,1423,5.831,1426,4.207,1427,4.767,1641,5.831,1642,6.186,1643,7.669,1644,8.335,1645,6.186,1646,6.814,1647,5.496,1648,6.186]],["title/components/ModalComponent.html",[21,0.93,97,1.73]],["body/components/ModalComponent.html",[3,0.032,4,0.037,5,0.037,7,0.241,8,0.495,10,0.593,14,0.428,15,0.007,16,0.037,19,0.004,20,0.004,21,1.189,22,1.21,23,1.916,24,1.295,25,1.266,26,1.295,28,1.461,29,2.607,31,1.045,32,3.486,33,2.689,34,2.266,36,1.874,39,1.186,41,2.907,45,0.798,46,1.5,50,4.729,55,0.783,56,1.208,58,1.567,59,1.614,64,0.465,65,3.182,66,0.408,67,0.29,77,1.238,78,1.961,79,1.916,80,1.21,81,2.639,82,1.295,83,1.295,84,1.184,85,1.295,86,1.266,87,2.986,88,1.295,89,1.21,90,1.295,91,1.21,92,1.295,93,1.184,94,1.295,95,1.21,96,1.295,97,2.466,98,1.295,99,1.21,100,1.295,101,1.184,102,1.184,103,1.295,104,1.21,105,1.295,106,1.21,107,1.295,108,1.21,109,1.295,110,1.266,111,1.111,112,1.295,113,1.21,114,1.295,115,1.184,116,1.295,117,1.793,118,1.961,119,1.21,120,1.295,121,1.21,122,1.295,123,1.184,124,1.295,125,1.184,126,1.295,127,1.184,128,1.266,129,1.184,130,1.266,131,1.295,139,1.326,144,2.669,179,2.203,182,2.463,224,1.278,241,0.894,318,2.203,370,1.066,398,1.326,438,1.636,454,0.911,637,4.293,659,4.145,707,3.668,780,4.489,1168,2.463,1460,3.998,1649,3.239,1650,4.904,1651,4.904,1652,5.917,1653,5.917,1654,5.864,1655,6.599,1656,3.239,1657,6.599,1658,4.904,1659,4.904,1660,3.239,1661,3.239,1662,3.239,1663,3.239,1664,5.917,1665,4.357,1666,3.239,1667,5.917,1668,2.878,1669,4.824,1670,3.239,1671,3.239,1672,3.239,1673,3.239,1674,3.239,1675,3.239,1676,3.239,1677,4.904,1678,4.904,1679,3.239,1680,4.904,1681,4.904,1682,3.239,1683,4.904,1684,4.904,1685,4.904]],["title/interfaces/ModalConfig.html",[0,0.235,1669,3.774]],["body/interfaces/ModalConfig.html",[0,0.241,2,0.989,3,0.047,4,0.054,5,0.054,7,0.353,8,0.652,10,1.748,13,1.202,14,0.531,15,0.007,16,0.054,19,0.005,20,0.005,39,1.56,46,1.712,58,2.099,176,3.445,637,5.089,1669,5.26,1686,4.743,1687,7.87,1688,7.87,1689,7.87,1690,7.87,1691,7.87,1692,7.87,1693,7.87,1694,7.87,1695,7.87,1696,7.87,1697,7.87,1698,4.743,1699,4.743,1700,4.743,1701,4.743,1702,4.743,1703,4.743,1704,4.743,1705,4.743]],["title/modules/ModalModule.html",[297,1.692,1706,3.317]],["body/modules/ModalModule.html",[3,0.06,4,0.07,5,0.07,15,0.007,16,0.07,19,0.006,20,0.006,64,0.653,66,0.772,67,0.549,97,3.577,299,2.102,300,3.121,312,3.276,313,2.633,314,2.29,316,2.98,317,2.241,319,2.788,320,2.98,321,2.193,387,3.276,1706,6.618,1707,5.446,1708,5.446,1709,5.446,1710,6.129,1711,5.446]],["title/injectables/NetworkHashrateChart.html",[454,1.302,968,3.774]],["body/injectables/NetworkHashrateChart.html",[3,0.025,4,0.066,5,0.029,7,0.379,8,0.413,10,0.748,13,0.78,14,0.55,15,0.007,16,0.029,19,0.003,20,0.003,28,0.764,39,0.989,46,1.51,48,2.372,49,2.117,55,0.989,56,0.748,58,1.381,59,1.678,63,2.802,64,0.457,66,0.323,67,0.23,71,1.663,73,1.801,77,1.562,139,3.521,155,2.442,224,1.065,241,1.127,287,4.53,294,5.647,348,1.475,368,1.743,373,2.79,384,1.801,430,2.884,454,1.149,456,1.101,470,1.335,496,1.837,529,2.653,575,1.992,580,1.663,581,2.914,687,2.089,741,6.357,744,3.632,745,5.169,746,4.742,748,2.277,749,3.233,751,2.277,754,3.632,757,2.277,758,2.277,759,3.108,760,3.632,761,2.277,762,2.277,763,2.277,764,2.277,765,2.089,766,2.277,767,2.277,768,2.277,769,1.949,770,3.877,771,2.277,772,4.156,773,2.277,774,3.632,775,2.277,776,3.632,777,4.156,778,5.169,779,4.53,780,2.78,781,4.53,782,2.78,783,5.169,784,3.632,785,3.632,845,3.632,902,3.332,905,3.632,906,3.332,946,3.332,968,3.332,993,3.108,1019,3.632,1031,4.53,1117,2.089,1328,3.632,1376,4.834,1566,3.632,1712,5.817,1713,2.563,1714,5.098,1715,5.098,1716,7.107,1717,2.563,1718,2.563,1719,2.563,1720,2.563,1721,4.087,1722,5.098,1723,5.098,1724,2.563,1725,2.563,1726,4.087,1727,2.563,1728,4.087,1729,2.563,1730,2.563,1731,2.563,1732,2.563,1733,2.563,1734,2.563,1735,2.563,1736,2.563,1737,2.563,1738,2.563,1739,2.563,1740,4.087,1741,2.563,1742,2.563,1743,3.632,1744,2.563,1745,2.563,1746,4.087,1747,2.277,1748,2.563,1749,2.563,1750,3.632,1751,3.108,1752,3.332,1753,4.087,1754,4.087,1755,4.087,1756,4.087,1757,2.563,1758,2.563,1759,4.087,1760,4.087,1761,4.087,1762,4.087,1763,2.563,1764,4.087,1765,2.563,1766,2.563,1767,4.087,1768,2.563,1769,2.563,1770,2.277,1771,2.563,1772,2.563,1773,2.563,1774,2.563,1775,2.563,1776,2.563,1777,2.563,1778,2.563,1779,2.563,1780,2.563,1781,2.563,1782,2.563,1783,2.563,1784,2.563,1785,2.563,1786,2.563,1787,2.563,1788,2.563,1789,2.563,1790,2.563]],["title/components/NewComponent.html",[21,0.93,99,1.73]],["body/components/NewComponent.html",[3,0.031,4,0.036,5,0.036,7,0.237,8,0.489,10,0.584,14,0.474,15,0.007,16,0.036,19,0.004,20,0.004,21,1.178,22,1.191,23,1.893,24,1.275,25,1.246,26,1.275,28,1.444,29,2.582,31,1.028,32,3.48,33,2.704,34,2.719,36,1.851,39,1.172,41,2.884,45,0.785,46,1.435,55,0.771,56,1.198,58,1.15,59,1.929,64,0.554,66,0.402,67,0.285,77,1.218,78,1.937,79,1.893,80,1.191,81,2.617,82,1.275,83,1.275,84,1.166,85,1.275,86,1.246,87,2.973,88,1.275,89,1.191,90,1.275,91,1.191,92,1.275,93,1.166,94,1.275,95,1.191,96,1.275,97,1.191,98,1.275,99,2.446,100,1.275,101,1.166,102,1.166,103,1.275,104,1.191,105,1.275,106,1.191,107,1.275,108,1.191,109,1.275,110,1.246,111,1.094,112,1.275,113,1.191,114,1.275,115,1.166,116,1.275,117,1.771,118,1.937,119,1.191,120,1.275,121,1.191,122,1.275,123,1.166,124,1.275,125,1.166,126,1.275,127,1.166,128,1.246,129,1.166,130,1.246,131,1.275,144,1.141,158,4.954,199,1.835,358,3.91,370,2.317,397,4.248,398,1.305,585,1.564,586,3.498,587,3.91,654,1.772,1444,3.472,1608,5.382,1613,3.684,1791,3.188,1792,4.845,1793,5.207,1794,5.86,1795,3.188,1796,4.845,1797,4.845,1798,3.188,1799,3.188,1800,3.188,1801,3.188,1802,2.424,1803,2.599,1804,2.833,1805,3.188,1806,3.188,1807,2.833,1808,3.188,1809,3.188,1810,3.188,1811,3.188,1812,3.188,1813,3.188,1814,3.188,1815,4.845,1816,4.305,1817,4.305,1818,5.336,1819,3.949,1820,4.845]],["title/components/NoDaemonRunningDialog.html",[21,0.93,101,1.692]],["body/components/NoDaemonRunningDialog.html",[0,0.184,3,0.036,4,0.041,5,0.041,7,0.27,8,0.539,10,0.663,13,0.715,14,0.458,15,0.007,16,0.061,19,0.004,20,0.004,21,1.271,22,1.354,23,2.084,24,1.449,25,1.416,26,1.449,31,1.169,32,3.527,33,2.744,34,2.363,36,2.037,39,1.29,45,1.314,46,1.351,55,0.877,56,1.361,58,0.86,59,1.755,64,0.419,66,0.457,67,0.325,77,1.385,78,2.132,79,2.084,80,1.354,81,2.79,82,1.449,83,1.449,84,1.325,85,1.449,86,1.416,87,3.296,88,1.449,89,1.354,90,1.449,91,1.354,92,1.449,93,1.325,94,1.449,95,1.354,96,1.449,97,1.354,98,1.449,99,1.354,100,1.449,101,2.551,102,2.313,103,1.449,104,1.354,105,1.449,106,1.354,107,1.449,108,1.354,109,1.449,110,1.416,111,1.243,112,1.449,113,1.354,114,1.449,115,1.325,116,1.449,117,1.95,118,2.132,119,1.354,120,1.449,121,1.354,122,1.449,123,1.325,124,1.449,125,1.325,126,1.449,127,1.325,128,1.416,129,1.325,130,1.416,131,1.449,139,3.183,179,2.465,373,2.66,391,2.475,666,5.687,673,4.738,875,4.738,931,2.597,1277,4.738,1401,6.061,1402,6.607,1403,6.402,1404,3.22,1405,3.22,1406,3.22,1407,6.607,1408,2.756,1409,4.738,1410,6.199,1411,4.738,1412,6.199,1413,3.22,1821,3.624,1822,3.624,1823,3.624,1824,3.624,1825,3.624,1826,5.332,1827,4.738,1828,4.738,1829,5.332,1830,5.332]],["title/components/OpenComponent.html",[21,0.93,104,1.73]],["body/components/OpenComponent.html",[3,0.029,4,0.034,5,0.034,7,0.221,8,0.464,10,0.841,13,1.041,14,0.494,15,0.007,16,0.034,19,0.003,20,0.003,21,1.128,22,1.112,23,1.796,24,1.19,25,1.163,26,1.19,28,1.369,29,2.474,31,0.96,32,3.452,33,2.681,34,2.687,36,1.756,39,1.112,41,2.782,43,3.294,45,0.733,46,1.456,48,1.967,49,1.673,50,3.294,55,1.112,56,1.54,58,1.333,59,1.848,64,0.567,65,2.983,66,0.375,67,0.266,77,1.137,78,1.838,79,1.796,80,1.112,81,2.525,82,1.19,83,1.19,84,1.088,85,1.19,86,1.163,87,2.914,88,1.19,89,1.112,90,1.19,91,1.112,92,1.19,93,1.088,94,1.19,95,1.112,96,1.19,97,1.112,98,1.19,99,1.112,100,1.19,101,1.088,102,1.088,103,1.19,104,2.36,105,1.19,106,1.112,107,1.19,108,1.112,109,1.19,110,1.163,111,1.021,112,1.19,113,1.112,114,1.19,115,1.088,116,1.19,117,1.68,118,1.838,119,1.112,120,1.19,121,1.112,122,1.19,123,1.088,124,1.19,125,1.088,126,1.19,127,1.088,128,1.163,129,1.088,130,1.163,131,1.19,139,2.298,144,1.644,158,4.31,160,3.799,193,1.654,241,0.821,358,3.772,359,2.024,366,2.426,367,2.426,370,2.079,398,1.218,440,2.983,445,2.644,482,3.491,584,1.6,585,3.098,586,3.313,595,2.746,637,1.713,654,1.654,1608,4.429,1818,3.747,1831,2.976,1832,4.596,1833,4.596,1834,2.263,1835,7.52,1836,4.596,1837,2.976,1838,2.976,1839,4.596,1840,2.976,1841,4.084,1842,2.976,1843,2.976,1844,4.596,1845,4.084,1846,2.976,1847,2.426,1848,2.426,1849,2.976,1850,2.976,1851,2.976,1852,2.976,1853,2.644,1854,2.976,1855,4.596,1856,4.596,1857,4.596]],["title/interfaces/OpenWallet.html",[0,0.235,584,2.489]],["body/interfaces/OpenWallet.html",[0,0.39,2,0.934,3,0.044,4,0.051,5,0.051,7,0.333,8,0.627,10,1.136,12,2.079,13,1.225,14,0.449,15,0.007,16,0.098,17,2.676,19,0.005,20,0.005,33,1.813,35,2.333,62,2.586,63,2.084,64,0.56,67,0.556,176,2.809,199,3.571,224,1.167,241,1.235,370,2.343,391,2.079,393,2.784,430,1.75,482,2.079,526,3.706,528,3.047,529,4.026,530,4.841,531,3.047,532,3.047,535,2.907,536,3.448,537,2.784,538,3.706,539,3.047,540,3.047,541,4.026,542,2.907,543,2.907,544,3.047,545,3.047,546,3.047,547,3.047,548,3.047,549,2.784,550,2.907,551,2.578,552,3.826,553,3.826,554,3.857,555,2.907,556,2.676,557,2.784,558,2.784,559,2.784,560,2.784,561,2.676,562,2.784,563,2.676,564,2.676,565,2.676,566,2.676,567,2.578,568,2.676,569,2.784,570,2.676,571,2.784,572,2.784,573,3.826,574,2.784,575,1.75,576,2.784,577,3.047,578,2.578,579,3.047,580,2.907,581,1.674,582,2.784,583,2.676,584,3.335,585,3.958,586,3.554,587,2.676,588,2.907]],["title/classes/PaginatorOptions.html",[67,0.415,1858,3.317]],["body/classes/PaginatorOptions.html",[3,0.054,4,0.063,5,0.063,7,0.408,8,0.717,14,0.603,15,0.007,16,0.081,19,0.005,20,0.005,28,2.116,46,1.614,48,2.919,49,2.483,62,2.921,67,0.636,73,3.672,205,3.726,527,3.726,627,5.399,729,5.788,769,5.399,1751,6.337,1858,5.088,1859,4.868,1860,6.422,1861,7.406,1862,7.406,1863,7.406,1864,5.479,1865,6.309,1866,5.479,1867,6.309,1868,5.479,1869,5.479,1870,4.868]],["title/classes/PaginatorOptionsInterface.html",[67,0.415,1860,3.774]],["body/classes/PaginatorOptionsInterface.html",[3,0.057,4,0.066,5,0.066,7,0.429,8,0.741,14,0.614,15,0.007,16,0.084,19,0.005,20,0.005,28,1.716,46,1.644,62,2.942,67,0.657,73,3.231,205,3.918,527,3.918,627,5.576,729,5.978,769,5.576,1751,6.458,1858,4.128,1859,5.119,1860,6.577,1861,7.546,1862,7.546,1863,7.546,1865,5.119,1867,5.119,1870,5.119,1871,5.761,1872,5.761,1873,5.761,1874,5.761]],["title/interfaces/ParseUri.html",[0,0.235,582,2.878]],["body/interfaces/ParseUri.html",[0,0.392,2,0.949,3,0.045,4,0.052,5,0.052,7,0.339,8,0.634,10,1.148,12,2.112,13,1.174,14,0.329,15,0.007,16,0.098,17,2.718,19,0.005,20,0.005,33,1.832,35,2.369,62,2.599,63,2.107,64,0.564,67,0.562,176,2.827,199,3.61,224,1.186,241,1.255,370,2.362,391,2.112,393,2.829,430,1.778,482,2.112,526,3.746,528,3.095,529,4.07,530,4.881,531,3.095,532,3.095,535,2.953,536,3.485,537,2.829,538,4.62,539,3.095,540,3.095,541,4.07,542,2.953,543,2.953,544,3.095,545,3.095,546,3.095,547,3.095,548,3.095,549,2.829,550,2.953,551,2.619,552,3.858,553,3.858,554,3.899,555,2.953,556,2.718,557,2.829,558,2.829,559,2.829,560,2.829,561,2.718,562,2.829,563,2.718,564,2.718,565,2.718,566,2.718,567,2.619,568,2.718,569,2.829,570,2.718,571,2.829,572,2.829,573,3.858,574,2.829,575,1.778,576,2.829,577,3.095,578,2.619,579,3.095,580,2.953,581,1.7,582,3.899,583,4.62,584,2.446,585,3.077,586,2.763,587,2.718,588,2.953]],["title/interfaces/Payment.html",[0,0.235,1544,3.149]],["body/interfaces/Payment.html",[0,0.315,2,1.294,3,0.061,4,0.071,5,0.071,7,0.462,8,0.776,12,4.049,13,1.225,14,0.649,15,0.007,16,0.071,19,0.006,20,0.006,62,2.923,561,5.211,1398,5.933,1544,5.226,1585,7.111,1875,6.205,1876,8.722]],["title/modules/PipesModule.html",[297,1.692,1877,3.149]],["body/modules/PipesModule.html",[3,0.043,4,0.05,5,0.05,15,0.007,16,0.05,19,0.005,20,0.005,64,0.702,66,0.554,67,0.394,299,1.509,300,2.509,312,2.633,313,1.891,314,1.644,316,2.395,317,1.609,319,2.24,320,2.395,321,1.575,387,2.633,1418,6.924,1433,6.924,1564,6.924,1641,6.924,1877,6.558,1878,3.91,1879,3.91,1880,3.91,1881,6.924,1882,6.924,1883,6.924,1884,6.924,1885,4.401,1886,4.401,1887,4.401,1888,4.401,1889,4.401,1890,4.401,1891,4.401,1892,4.401,1893,4.401]],["title/interfaces/PluginDefinition.html",[0,0.235,1894,3.52]],["body/interfaces/PluginDefinition.html",[0,0.371,2,1.198,3,0.057,4,0.066,5,0.066,7,0.428,8,0.74,13,1.272,14,0.634,15,0.007,16,0.092,19,0.005,20,0.005,56,1.553,62,1.78,63,1.93,71,3.728,73,2.531,102,3.102,293,4.368,782,3.907,1326,4.368,1894,6.126,1895,4.683,1896,6.916,1897,6.916,1898,6.916,1899,6.451,1900,5.104,1901,5.104,1902,4.683,1903,4.683,1904,4.683,1905,4.683]],["title/interfaces/Plugins.html",[0,0.235,782,3.149]],["body/interfaces/Plugins.html",[0,0.386,2,1.274,3,0.06,4,0.07,5,0.07,7,0.455,8,0.769,13,1.163,14,0.551,15,0.007,16,0.095,19,0.006,20,0.006,56,1.119,62,2.569,63,2.053,71,3.966,73,2.692,102,2.234,293,4.646,782,5.177,1326,4.646,1894,6.597,1895,4.981,1896,4.981,1897,4.981,1898,4.981,1899,5.787,1900,7.709,1901,7.709,1902,4.981,1903,4.981,1904,4.981,1905,4.981]],["title/components/PluginsComponent.html",[21,0.93,106,1.73]],["body/components/PluginsComponent.html",[3,0.038,4,0.044,5,0.044,7,0.285,8,0.56,10,0.7,14,0.401,15,0.007,16,0.044,19,0.004,20,0.004,21,1.438,22,1.429,23,2.167,24,1.529,25,1.494,26,1.529,28,1.652,29,2.875,31,1.233,32,3.546,33,2.759,34,2.697,36,2.119,39,1.341,41,3.153,45,0.942,46,1.263,55,0.925,56,1.31,58,0.908,59,1.825,64,0.563,66,0.482,67,0.342,77,1.461,78,2.218,79,3.097,80,1.429,81,2.862,82,1.529,83,1.529,84,1.398,85,1.529,86,1.494,87,3.245,88,1.529,89,1.429,90,1.529,91,1.429,92,1.529,93,1.398,94,1.529,95,1.429,96,1.529,97,1.429,98,1.529,99,1.429,100,1.529,101,1.398,102,1.398,103,1.529,104,1.429,105,1.529,106,2.674,107,1.529,108,1.429,109,1.529,110,1.494,111,1.312,112,1.529,113,1.429,114,1.529,115,1.398,116,1.529,117,2.027,118,2.218,119,1.429,120,1.529,121,1.429,122,1.529,123,1.398,124,1.529,125,1.398,126,1.529,127,2.027,128,1.494,129,1.398,130,1.494,131,1.529,133,2.056,136,2.888,139,2.671,187,2.377,224,0.997,383,4.521,782,3.772,1906,3.824,1907,6.525,1908,5.545,1909,4.928,1910,7.041,1911,5.445,1912,3.824,1913,3.824,1914,3.824,1915,3.398,1916,3.824,1917,3.117,1918,3.398,1919,3.824,1920,3.824,1921,5.545,1922,3.824,1923,3.824,1924,3.824,1925,6.525,1926,3.824]],["title/modules/PluginsModule.html",[297,1.692,309,3.317]],["body/modules/PluginsModule.html",[3,0.057,4,0.066,5,0.066,15,0.007,16,0.066,19,0.005,20,0.005,64,0.669,66,0.728,67,0.517,106,3.549,299,1.982,300,3.007,309,6.675,312,3.157,313,2.482,314,2.159,316,2.871,317,2.112,319,2.686,320,2.871,321,2.067,386,4.389,387,3.157,1911,6.429,1915,5.134,1927,5.134,1928,5.134,1929,5.134,1930,5.134,1931,5.777,1932,5.777]],["title/injectables/PluginsService.html",[454,1.302,1911,3.317]],["body/injectables/PluginsService.html",[3,0.045,4,0.052,5,0.052,7,0.341,10,1.318,13,1.127,14,0.521,15,0.007,16,0.052,19,0.005,20,0.005,21,0.921,25,2.462,34,1.914,35,3.281,39,1.524,45,1.552,46,1.394,55,1.742,56,1.318,58,1.496,59,2.074,64,0.566,66,0.577,67,0.41,79,2.814,87,2.303,127,1.675,144,2.577,221,3.734,224,2.021,454,1.771,456,1.968,604,3.283,610,3.734,973,3.483,1030,3.734,1148,4.071,1299,4.071,1306,5.161,1359,6.323,1654,5.599,1909,4.071,1910,7.467,1911,4.515,1917,3.734,1918,4.071,1933,4.581,1934,6.3,1935,6.3,1936,8.609,1937,8.609,1938,4.581,1939,6.3,1940,4.581,1941,6.3,1942,4.581,1943,6.3,1944,6.3,1945,4.581,1946,6.3,1947,6.3,1948,4.581,1949,4.581,1950,4.581,1951,4.581,1952,6.3,1953,4.581,1954,4.581,1955,4.581,1956,4.581,1957,4.581,1958,3.734,1959,4.581,1960,4.581,1961,4.581,1962,4.581]],["title/components/PostComponent.html",[21,0.93,108,1.73]],["body/components/PostComponent.html",[3,0.032,4,0.037,5,0.037,7,0.244,8,0.5,10,0.6,13,0.799,14,0.542,15,0.007,16,0.037,19,0.004,20,0.004,21,1.197,22,1.224,23,1.933,24,1.31,25,1.28,26,1.31,28,1.474,29,2.625,31,1.057,32,3.49,33,2.713,34,2.276,36,1.89,39,1.196,41,2.924,45,0.807,46,1.506,48,2.496,49,2.123,55,0.792,56,1.215,58,0.778,59,1.628,63,1.662,64,0.469,66,0.413,67,0.293,77,1.252,78,1.978,79,1.933,80,1.224,81,2.654,82,1.31,83,1.31,84,1.198,85,1.31,86,1.28,87,3.102,88,1.31,89,1.224,90,1.31,91,1.224,92,1.31,93,1.198,94,1.31,95,1.224,96,1.31,97,1.224,98,1.31,99,1.224,100,1.31,101,1.198,102,1.198,103,1.31,104,1.224,105,1.31,106,1.224,107,1.31,108,2.48,109,1.31,110,1.28,111,1.124,112,1.31,113,1.224,114,1.31,115,1.198,116,1.31,117,1.808,118,1.978,119,1.224,120,1.31,121,1.224,122,1.31,123,1.198,124,1.31,125,1.198,126,1.31,127,1.198,128,1.28,129,1.198,130,1.28,131,1.31,133,1.761,136,2.576,139,3.52,144,2.132,151,2.491,152,4.862,155,4.256,185,1.341,224,1.553,233,3.56,370,1.078,398,1.341,749,1.821,893,5.914,1963,3.276,1964,5.958,1965,4.946,1966,7.125,1967,4.857,1968,4.946,1969,3.276,1970,3.276,1971,3.276,1972,3.276,1973,3.276,1974,5.294,1975,2.671,1976,2.911,1977,2.911,1978,2.911,1979,2.911,1980,3.276,1981,3.276,1982,3.276,1983,3.276,1984,3.276,1985,3.276,1986,3.276,1987,3.276,1988,3.276,1989,3.276,1990,3.276,1991,3.276,1992,3.276]],["title/modules/PostModule.html",[297,1.692,1993,3.52]],["body/modules/PostModule.html",[3,0.058,4,0.067,5,0.067,15,0.007,16,0.067,19,0.006,20,0.006,21,1.493,64,0.709,66,0.741,67,0.526,108,3.46,185,2.406,224,1.532,299,2.016,300,3.041,312,3.192,313,2.526,314,2.197,316,2.903,317,2.149,319,2.716,320,2.903,321,2.103,416,2.97,417,4.114,425,3.448,651,4.276,652,3.384,862,3.061,1877,5.052,1993,6.852,1994,5.224,1995,5.224,1996,5.878,1997,5.878,1998,5.878]],["title/modules/PostRoutingModule.html",[297,1.692,409,3.317]],["body/modules/PostRoutingModule.html",[3,0.063,4,0.073,5,0.073,15,0.007,16,0.073,19,0.006,20,0.006,64,0.665,66,0.804,67,0.571,185,2.612,224,1.663,299,2.189,317,2.333,319,2.858,320,3.055,321,2.283,387,2.742,409,5.602,415,3.967,416,3.949,417,4.27,425,2.962,862,3.323,865,4.341,1573,4.853,1999,6.382,2000,6.382,2001,6.382]],["title/components/ProfileComponent.html",[21,0.93,110,1.809]],["body/components/ProfileComponent.html",[3,0.035,4,0.04,5,0.04,7,0.26,8,0.525,13,0.696,14,0.253,15,0.007,16,0.04,19,0.004,20,0.004,21,1.245,22,1.307,23,2.03,24,1.399,25,1.367,26,1.399,28,1.548,29,2.73,31,1.128,32,3.515,33,2.733,34,2.333,36,1.985,39,1.256,41,3.021,45,1.527,46,1.2,48,1.225,49,1.042,56,1.341,58,0.83,59,1.71,64,0.409,66,0.441,67,0.313,73,2.289,77,1.337,78,2.077,79,2.03,80,1.307,81,2.742,82,1.399,83,1.399,84,1.279,85,1.399,86,1.367,87,3.05,88,1.399,89,1.307,90,1.399,91,1.307,92,1.399,93,1.279,94,1.399,95,1.307,96,1.399,97,1.307,98,1.399,99,1.307,100,1.399,101,1.279,102,1.279,103,1.399,104,1.307,105,1.399,106,1.307,107,1.399,108,1.307,109,1.399,110,2.68,111,2.126,112,1.399,113,1.307,114,1.399,115,1.279,116,1.399,117,1.899,118,2.077,119,1.307,120,1.399,121,1.307,122,1.399,123,1.279,124,1.399,125,1.279,126,1.399,127,1.279,128,1.367,129,1.279,130,1.367,131,1.399,133,1.881,136,2.705,139,2.537,391,2.411,396,4.451,429,4.097,481,3.23,482,2.411,578,3.947,604,4.914,672,4.235,759,4.712,1403,5.215,2002,3.498,2003,5.838,2004,6.197,2005,5.195,2006,6.197,2007,3.498,2008,3.498,2009,6.197,2010,5.195,2011,6.094,2012,6.197,2013,5.195,2014,5.195,2015,5.195,2016,3.498,2017,3.108,2018,3.108,2019,5.195,2020,5.195,2021,8.165,2022,6.858,2023,6.094]],["title/interfaces/ProfileState.html",[0,0.235,2024,3.774]],["body/interfaces/ProfileState.html",[0,0.282,2,1.158,3,0.055,4,0.063,5,0.063,7,0.413,8,0.724,13,1.266,14,0.642,15,0.007,16,0.063,19,0.005,20,0.005,56,1.311,160,2.806,200,4.935,373,2.563,384,3.691,388,3.98,482,4.025,575,2.8,631,4.528,670,4.223,1223,4.935,1309,4.528,1470,4.528,2003,5.447,2024,5.84,2025,5.554,2026,8.378,2027,8.378,2028,8.378,2029,8.378,2030,7.164,2031,5.554,2032,5.554,2033,5.554,2034,5.554,2035,5.554,2036,5.554,2037,4.935,2038,5.554,2039,4.223,2040,5.554]],["title/interfaces/QueryKeyIn.html",[0,0.235,2041,3.774]],["body/interfaces/QueryKeyIn.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,2041,6.725,2042,6.979,2043,9.076]],["title/interfaces/QueryKeyOut.html",[0,0.235,2044,3.774]],["body/interfaces/QueryKeyOut.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,575,3.547,2044,6.725,2045,6.979]],["title/pipes/RemoveTrailingZerosPipe.html",[1102,2.093,1881,3.52]],["body/pipes/RemoveTrailingZerosPipe.html",[3,0.056,4,0.065,5,0.065,10,1.04,14,0.411,15,0.007,16,0.065,19,0.005,20,0.005,28,1.692,31,1.832,39,1.374,45,1.399,46,1.1,49,2.517,55,1.374,56,1.467,58,1.348,63,1.908,64,0.447,66,0.716,67,0.509,73,3.847,176,2.93,241,2.005,430,2.84,1102,3.285,1419,3.393,1422,3.531,1423,5.526,1424,7.121,1426,3.863,1427,4.518,1428,4.716,1647,5.047,1881,5.526,2046,5.679,2047,7.267,2048,5.679,2049,5.679,2050,7.267,2051,5.679,2052,7.267,2053,5.679]],["title/interfaces/Response.html",[0,0.235,1050,3.52]],["body/interfaces/Response.html",[0,0.289,2,1.188,3,0.056,4,0.065,5,0.065,7,0.424,8,0.736,13,1.198,14,0.581,15,0.007,16,0.083,19,0.005,20,0.005,63,1.914,224,2.091,241,2.214,373,2.038,658,4.698,1050,5.536,1460,6.894,1469,3.874,2054,5.696,2055,5.696,2056,8.739,2057,5.061,2058,6.894,2059,8.457,2060,5.696,2061,4.331,2062,4.643,2063,5.061,2064,5.696,2065,5.696,2066,5.696,2067,5.696,2068,5.696,2069,5.696,2070,5.696]],["title/components/RestoreComponent.html",[21,0.93,113,1.73]],["body/components/RestoreComponent.html",[3,0.029,4,0.033,5,0.033,7,0.217,8,0.457,9,2.353,10,1.014,14,0.327,15,0.007,16,0.033,19,0.003,20,0.003,21,1.113,22,1.088,23,1.766,24,1.164,25,1.138,26,1.164,28,1.346,29,2.44,31,0.939,32,3.443,33,2.673,34,2.656,36,1.726,39,1.093,41,2.75,45,0.717,46,1.208,55,1.339,56,1.143,58,1.073,59,1.823,64,0.531,66,0.367,67,0.261,72,3.436,77,1.112,78,1.807,79,1.766,80,1.088,81,2.496,82,1.164,83,1.164,84,1.064,85,1.164,86,1.138,87,2.895,88,1.164,89,1.088,90,1.164,91,1.088,92,1.164,93,1.064,94,1.164,95,1.088,96,1.164,97,1.088,98,1.164,99,1.088,100,1.164,101,1.064,102,1.064,103,1.164,104,1.088,105,1.164,106,1.088,107,1.164,108,1.088,109,1.164,110,1.138,111,0.999,112,1.164,113,2.332,114,1.164,115,1.064,116,1.164,117,1.652,118,1.807,119,1.088,120,1.164,121,1.088,122,1.164,123,1.064,124,1.164,125,1.064,126,1.164,127,1.064,128,1.138,129,1.064,130,1.138,131,1.164,158,5.365,258,2.283,358,3.729,359,1.98,370,2.664,397,1.889,398,1.192,575,2.439,585,2.217,586,3.15,588,2.932,654,1.618,1444,3.238,1608,4.841,1793,2.587,1802,2.214,1803,2.373,1804,2.587,1807,2.587,1816,4.015,1817,4.015,1818,5.088,1819,3.684,1834,2.214,1958,3.684,2071,2.911,2072,4.519,2073,5.538,2074,4.473,2075,4.519,2076,2.911,2077,2.911,2078,5.088,2079,2.911,2080,4.015,2081,2.911,2082,4.015,2083,2.911,2084,4.015,2085,4.015,2086,2.911,2087,2.911,2088,2.911,2089,2.911,2090,2.911,2091,2.911,2092,2.911,2093,2.911,2094,2.911,2095,2.911,2096,2.911,2097,4.519,2098,4.519,2099,4.519,2100,4.519,2101,4.519,2102,4.519,2103,4.519]],["title/interfaces/RestoreWallet.html",[0,0.235,2074,3.317]],["body/interfaces/RestoreWallet.html",[0,0.225,2,0.924,3,0.044,4,0.051,5,0.081,7,0.33,8,0.622,9,4.331,10,1.638,11,2.173,13,1.246,14,0.617,15,0.007,16,0.051,17,4.568,19,0.005,20,0.005,34,2.684,56,1.127,62,2.193,63,2.068,72,5.38,144,2.736,176,2.587,205,4.187,258,3.11,370,2.026,430,2.988,452,4.681,563,3.678,575,2.988,585,3.751,586,3.664,730,3.995,740,5.47,1105,3.174,1306,4.411,1469,3.013,1470,5.018,1539,5.47,1958,6.233,2074,4.411,2080,6.794,2082,6.794,2084,6.794,2085,6.794,2104,4.43,2105,8.945,2106,6.156,2107,6.156,2108,6.156]],["title/components/RootComponent.html",[21,0.93,115,1.692]],["body/components/RootComponent.html",[3,0.026,4,0.031,5,0.031,7,0.199,8,0.427,10,0.49,14,0.47,15,0.007,16,0.031,19,0.003,20,0.003,21,1.054,22,1,23,1.653,24,1.07,25,1.045,26,1.07,28,1.26,29,2.31,31,0.863,32,3.406,33,2.642,34,2.343,36,1.616,39,1.023,41,2.626,45,1.042,46,1.61,48,1.481,49,1.26,55,0.647,56,1.091,58,1.716,59,1.726,63,1.421,64,0.568,66,0.337,67,0.24,77,1.022,78,1.691,79,1.653,80,1,81,2.383,82,1.07,83,1.07,84,0.978,85,1.07,86,1.045,87,2.82,88,1.07,89,1,90,1.07,91,1,92,1.07,93,0.978,94,1.07,95,1,96,1.07,97,1,98,1.07,99,1,100,1.07,101,0.978,102,0.978,103,1.07,104,1,105,1.07,106,1,107,1.07,108,1,109,1.07,110,1.045,111,0.918,112,1.07,113,1,114,1.07,115,2.179,116,1.07,117,1.546,118,1.691,119,1,120,1.07,121,1,122,1.07,123,0.978,124,1.07,125,0.978,126,1.07,127,0.978,128,1.045,129,0.978,130,1.045,131,1.07,139,3.355,144,2.132,151,2.034,152,4.478,158,4.123,176,2.179,179,1.82,185,1.095,224,1.102,241,1.167,321,0.957,352,4.532,353,2.377,358,3.56,359,1.82,360,3.312,361,1.663,362,1.598,370,1.392,391,1.963,396,3.403,430,2.049,438,2.136,581,1,595,3.133,642,2.377,643,3.758,659,3.835,707,1.487,749,2.35,840,1.917,869,5.296,923,4.275,931,1.917,932,2.181,935,3.447,1005,2.377,1055,2.377,1974,4.66,1975,2.181,1976,2.377,1977,2.377,1978,2.377,1979,2.377,2109,2.675,2110,4.229,2111,5.244,2112,5.244,2113,5.244,2114,5.244,2115,5.959,2116,5.959,2117,5.959,2118,5.959,2119,4.858,2120,4.229,2121,2.675,2122,2.675,2123,2.675,2124,2.675,2125,2.675,2126,2.675,2127,2.675,2128,2.675,2129,2.675,2130,2.675,2131,2.675,2132,2.675,2133,2.675,2134,2.675,2135,2.675,2136,2.675,2137,2.675,2138,4.229,2139,2.675,2140,2.675,2141,2.675,2142,2.675,2143,2.675,2144,2.675,2145,2.675,2146,2.675,2147,2.675,2148,2.675,2149,2.675,2150,2.377,2151,2.675,2152,4.229,2153,2.675,2154,4.229,2155,4.229,2156,4.229]],["title/modules/RootModule.html",[297,1.692,2157,3.317]],["body/modules/RootModule.html",[3,0.053,4,0.062,5,0.062,15,0.007,16,0.062,19,0.005,20,0.005,64,0.736,66,0.683,67,0.485,115,3.225,190,3.369,191,3.369,299,1.859,300,2.886,307,6,311,5.484,312,3.029,313,2.329,314,2.025,316,2.755,317,2.578,319,2.578,320,2.755,321,1.939,334,5.748,335,4.418,342,4.058,343,3.119,346,4.383,347,3.238,348,3.119,363,4.816,387,2.329,651,4.058,652,3.119,2157,6.744,2158,4.816,2159,4.816,2160,4.816,2161,6.321,2162,5.42,2163,5.42,2164,5.748,2165,4.418,2166,5.42]],["title/modules/RootRoutingModule.html",[297,1.692,410,3.317]],["body/modules/RootRoutingModule.html",[3,0.056,4,0.065,5,0.065,11,2.81,15,0.007,16,0.065,19,0.005,20,0.005,21,1.151,64,0.704,66,0.722,67,0.513,115,2.671,142,3.717,155,3.422,185,2.345,224,1.493,237,3.717,299,1.965,300,2.991,312,3.139,313,2.461,314,2.14,316,2.238,317,2.671,319,2.671,320,2.855,321,2.049,373,2.049,387,2.461,410,6.415,415,3.561,416,3.691,417,4.065,425,2.659,427,5.09,428,4.669,430,2.238,590,4.742,593,4.105,862,2.983,864,4.355,2157,6.415,2167,5.728,2168,5.728,2169,5.728,2170,5.728,2171,5.728,2172,5.728,2173,5.728,2174,5.728]],["title/components/SettingsComponent.html",[21,0.93,117,1.692]],["body/components/SettingsComponent.html",[3,0.04,4,0.046,5,0.046,7,0.298,8,0.579,13,0.537,14,0.29,15,0.007,16,0.046,19,0.004,20,0.004,21,1.346,22,1.497,23,2.241,24,1.602,25,1.566,26,1.602,28,1.709,29,2.951,31,1.292,32,3.561,33,2.772,34,2.446,36,2.191,39,1.387,41,3.222,45,1.65,46,1.416,48,1.403,49,1.194,56,1.226,58,1.361,59,2.407,64,0.315,66,0.505,67,0.359,77,1.531,78,2.293,79,2.241,80,1.497,81,2.924,82,1.602,83,1.602,84,1.465,85,1.602,86,1.566,87,3.156,88,1.602,89,1.497,90,1.602,91,1.497,92,1.602,93,1.465,94,1.602,95,1.497,96,1.602,97,1.497,98,1.602,99,1.497,100,1.602,101,1.465,102,1.465,103,1.602,104,1.497,105,1.602,106,1.497,107,1.602,108,1.497,109,1.602,110,1.566,111,1.374,112,1.602,113,1.497,114,1.602,115,1.465,116,1.602,117,2.829,118,2.293,119,1.497,120,1.602,121,1.497,122,1.602,123,1.465,124,1.602,125,1.465,126,1.602,127,1.465,128,1.566,129,1.465,130,1.566,131,1.602,133,2.154,136,2.987,255,3.266,481,3.565,792,5.093,798,5.56,823,3.266,2175,4.006,2176,6.698,2177,5.096,2178,6.698,2179,5.735,2180,4.006,2181,4.006,2182,5.735,2183,5.735,2184,4.006]],["title/components/SettingsComponent-1.html",[21,0.774,73,1.697,117,1.408]],["body/components/SettingsComponent-1.html",[3,0.041,4,0.048,5,0.048,7,0.312,15,0.007,16,0.048,19,0.004,20,0.004,21,1.38,22,1.566,23,2.314,24,1.675,25,1.637,26,1.675,28,1.764,29,3.025,31,1.351,32,3.576,33,2.784,34,2.606,36,2.262,39,1.432,41,3.287,45,1.692,46,1.146,56,1.257,58,0.995,59,1.949,64,0.33,66,0.528,67,0.375,73,1.846,75,4.502,77,1.601,78,2.368,79,2.314,80,1.566,81,2.984,82,1.675,83,1.675,84,1.532,85,1.675,86,1.637,87,3.269,88,1.675,89,1.566,90,1.675,91,1.566,92,1.675,93,1.532,94,1.675,95,1.566,96,1.675,97,1.566,98,1.675,99,1.566,100,1.675,101,1.532,102,1.532,103,1.675,104,1.566,105,1.675,106,1.566,107,1.675,108,1.566,109,1.675,110,1.637,111,1.437,112,1.675,113,1.566,114,1.675,115,1.532,116,1.675,117,2.878,118,2.368,119,1.566,120,1.675,121,1.566,122,1.675,123,1.532,124,1.675,125,1.532,126,1.675,127,1.532,128,1.637,129,1.532,130,1.637,131,1.675,384,2.608,481,4.639,482,2.748,720,4.826,721,4.826,722,4.826,723,5.261,724,3.723,725,3.723,2177,5.261,2185,4.19,2186,4.19,2187,4.19]],["title/injectables/SettingsEffects.html",[454,1.302,2188,4.114]],["body/injectables/SettingsEffects.html",[3,0.052,4,0.06,5,0.06,7,0.391,8,0.698,10,0.961,13,1.099,14,0.558,15,0.007,16,0.06,19,0.005,20,0.005,45,1.294,46,1.337,48,1.839,49,1.564,55,1.27,56,0.961,64,0.645,66,0.661,67,0.47,144,1.878,146,6.857,158,4.61,159,6.683,189,3.992,190,3.264,191,3.264,199,4.719,241,1.905,398,2.149,454,1.942,456,2.256,581,2.58,1030,5.63,1070,3.762,1071,5.948,1073,6.291,1074,5.63,1100,4.28,1114,4.28,1115,3.407,2188,6.136,2189,5.25,2190,5.25,2191,6.906,2192,6.136,2193,6.906,2194,6.136,2195,5.25]],["title/modules/SettingsModule.html",[297,1.692,2196,3.52]],["body/modules/SettingsModule.html",[3,0.049,4,0.056,5,0.056,11,2.424,15,0.007,16,0.056,19,0.005,20,0.005,21,0.993,33,1.444,64,0.738,66,0.622,67,0.442,117,3.21,142,3.206,155,2.952,185,2.023,224,1.288,237,3.206,299,1.695,300,2.715,312,2.85,313,2.123,314,1.846,316,2.592,317,2.425,319,2.425,320,2.592,321,1.768,332,4.753,333,3.541,336,5.043,337,3.757,338,5.043,339,3.757,342,3.818,343,2.844,346,4.123,347,2.952,348,2.844,373,1.768,387,2.123,391,2.293,416,3.351,417,3.783,425,3.079,429,2.952,480,3.361,481,4.123,581,1.846,651,3.818,652,2.844,862,2.573,865,3.361,1623,6.159,2164,5.407,2165,4.028,2196,6.786,2197,4.39,2198,4.941,2199,4.39,2200,4.941,2201,5.894,2202,4.39,2203,4.39,2204,5.407,2205,4.028,2206,4.941,2207,4.941,2208,4.941,2209,4.39,2210,4.941,2211,4.941,2212,4.941]],["title/modules/SettingsRoutingModule.html",[297,1.692,411,3.317]],["body/modules/SettingsRoutingModule.html",[3,0.062,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,64,0.688,66,0.789,67,0.561,185,2.564,224,1.632,299,2.148,316,2.447,317,2.29,319,2.825,320,3.02,321,2.241,386,3.741,387,2.691,411,5.538,415,3.893,416,3.904,417,4.234,425,2.907,481,3.893,590,5.439,593,4.488,862,3.261,864,4.762,865,4.26,1571,5.565,2213,6.263,2214,6.263,2215,6.263]],["title/interfaces/SettingsState.html",[0,0.235,2216,4.114]],["body/interfaces/SettingsState.html",[0,0.281,2,1.155,3,0.055,4,0.063,5,0.063,7,0.412,8,0.722,13,1.189,14,0.662,15,0.007,16,0.063,19,0.005,20,0.005,176,3.527,199,4.987,1297,6.354,1750,4.922,1751,4.212,1770,4.922,2216,6.354,2217,5.539,2218,8.369,2219,8.369,2220,8.369,2221,8.369,2222,8.369,2223,8.369,2224,8.369,2225,5.539,2226,5.539]],["title/pipes/ShruggiePipe.html",[1102,2.093,1882,3.52]],["body/pipes/ShruggiePipe.html",[3,0.06,4,0.07,5,0.07,10,1.119,14,0.442,15,0.007,16,0.07,19,0.006,20,0.006,28,1.821,31,1.971,39,1.478,46,1.183,55,1.478,56,1.517,58,1.451,64,0.481,66,0.77,67,0.547,176,3.03,233,5.183,241,2.099,581,2.283,1102,3.44,1376,4.156,1419,3.651,1422,3.799,1426,4.156,1427,4.731,1428,3.966,1436,5.787,1567,7.365,1882,5.787,2227,6.11,2228,7.611,2229,6.11,2230,6.11]],["title/interfaces/SplitIntegratedAddressOut.html",[0,0.235,2231,3.774]],["body/interfaces/SplitIntegratedAddressOut.html",[0,0.34,2,1.397,3,0.066,4,0.077,5,0.077,7,0.499,8,0.814,9,4.664,12,4.157,13,1.157,14,0.583,15,0.007,16,0.077,19,0.006,20,0.006,64,0.527,1634,5.954,2231,6.564,2232,6.7,2233,8.955]],["title/components/StatusComponent.html",[21,0.93,119,1.73]],["body/components/StatusComponent.html",[3,0.038,4,0.044,5,0.044,7,0.29,8,0.567,10,0.712,14,0.577,15,0.007,16,0.044,19,0.004,20,0.004,21,1.324,22,1.454,23,2.194,24,1.556,25,1.52,26,1.556,31,1.255,32,3.552,33,2.764,34,2.422,36,2.145,45,0.959,46,1.543,55,0.941,56,1.321,64,0.442,66,0.49,67,0.348,77,1.486,78,2.245,79,2.194,80,1.454,81,2.885,82,1.556,83,1.556,84,1.422,85,1.556,86,1.52,87,3.221,88,1.556,89,1.454,90,1.556,91,1.454,92,1.556,93,1.422,94,1.556,95,1.454,96,1.556,97,1.454,98,1.556,99,1.454,100,1.556,101,1.422,102,2.409,103,1.556,104,1.454,105,1.556,106,1.454,107,1.556,108,1.454,109,1.556,110,1.52,111,1.334,112,1.556,113,1.454,114,1.556,115,1.422,116,1.556,117,2.053,118,2.245,119,2.696,120,1.556,121,1.454,122,1.556,123,1.422,124,1.556,125,1.422,126,1.556,127,1.422,128,1.52,129,1.422,130,1.52,131,1.556,133,2.091,136,2.924,139,2.299,566,3.355,1408,2.958,2234,3.89,2235,6.589,2236,5.615,2237,7.214,2238,6.589,2239,6.589,2240,6.589,2241,6.589,2242,3.89,2243,7.65,2244,5.615,2245,3.89,2246,3.89,2247,3.89,2248,3.89,2249,3.89,2250,5.615,2251,5.615,2252,5.615,2253,7.214,2254,7.214]],["title/modules/StatusModule.html",[297,1.692,310,3.317]],["body/modules/StatusModule.html",[3,0.056,4,0.065,5,0.065,15,0.007,16,0.065,19,0.005,20,0.005,64,0.73,66,0.714,67,0.507,101,3.263,119,3.539,299,1.943,300,2.97,310,6.651,312,3.117,313,2.433,314,2.116,316,2.835,317,2.071,319,2.652,320,2.835,321,2.026,332,5.198,333,4.059,342,4.175,343,3.26,344,5.914,345,4.617,387,3.117,651,4.175,652,3.26,1403,4.306,1408,4.306,2255,5.033,2256,5.033,2257,5.033,2258,5.663,2259,5.663,2260,7.254,2261,5.663,2262,5.663]],["title/interfaces/StoreOut.html",[0,0.235,2263,3.774]],["body/interfaces/StoreOut.html",[0,0.369,2,1.519,3,0.072,4,0.083,5,0.083,15,0.007,16,0.083,19,0.006,20,0.006,2263,6.895,2264,7.282]],["title/interfaces/SweepAllIn.html",[0,0.235,2265,3.774]],["body/interfaces/SweepAllIn.html",[0,0.213,2,0.874,3,0.041,4,0.048,5,0.048,7,0.312,8,0.598,9,4.255,10,1.744,11,2.056,12,3.463,13,1.185,14,0.631,15,0.007,16,0.048,19,0.004,20,0.004,35,3.083,62,2.873,63,2.507,139,2.424,176,3.189,241,2.058,391,2.748,510,4.502,536,3.29,552,3.183,553,3.183,556,4.458,557,3.681,558,3.681,559,3.681,560,3.681,561,4.458,562,3.681,563,3.537,564,3.537,565,3.537,566,3.537,567,3.408,568,3.537,569,3.681,570,3.537,571,4.639,572,3.681,573,4.011,576,3.681,1105,3.003,1469,2.85,2265,4.826,2266,4.19,2267,3.723,2268,7.462,2269,7.462,2270,7.462,2271,7.462,2272,7.462,2273,4.826,2274,5.921]],["title/interfaces/SweepAllOut.html",[0,0.235,2275,3.774]],["body/interfaces/SweepAllOut.html",[0,0.333,2,1.37,3,0.065,4,0.075,5,0.075,7,0.489,8,0.804,13,1.276,14,0.619,15,0.007,16,0.075,19,0.006,20,0.006,2275,6.486,2276,6.569,2277,8.896,2278,7.252,2279,8.896]],["title/interfaces/SweepDustOut.html",[0,0.235,2280,4.114]],["body/interfaces/SweepDustOut.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,2278,7.399,2280,7.331,2281,6.979]],["title/interfaces/Task.html",[0,0.235,2282,3.774]],["body/interfaces/Task.html",[0,0.194,2,0.799,3,0.038,4,0.044,5,0.063,7,0.285,8,0.561,13,1.063,14,0.473,15,0.007,16,0.063,19,0.004,20,0.004,21,1.116,32,1.432,33,1.119,36,1.464,45,0.944,56,1.392,64,0.643,66,0.483,67,0.343,102,2.78,111,1.905,123,1.401,136,1.995,144,2.563,152,4.239,176,2.388,185,1.568,224,2.066,360,3.086,361,2.382,362,2.289,370,2.757,373,1.371,374,3.123,391,1.778,430,1.497,441,2.606,460,2.606,462,3.123,467,2.745,468,2.913,469,2.913,510,4.223,575,1.497,581,2.075,586,3.493,594,4.443,595,3.318,608,4.737,641,2.486,646,3.777,654,2.129,658,2.059,659,2.129,661,4.681,705,3.123,706,3.123,707,4.745,973,2.913,1336,3.123,1365,4.527,1573,2.913,1603,5.839,1608,5.308,1613,2.913,1614,3.123,2003,2.913,2039,2.913,2078,4.527,2282,5.839,2283,3.404,2284,6.757,2285,3.404,2286,3.404,2287,3.404,2288,3.404,2289,3.404,2290,3.404,2291,3.404,2292,3.404,2293,3.404,2294,3.404,2295,3.404,2296,3.404,2297,3.404,2298,6.757,2299,3.404,2300,3.404,2301,3.404,2302,3.404,2303,3.404,2304,5.804,2305,4.934,2306,4.934,2307,4.934,2308,3.404,2309,3.404,2310,3.123,2311,3.404,2312,3.404,2313,3.404,2314,3.404,2315,3.404,2316,3.404,2317,3.404,2318,3.404,2319,3.404,2320,3.404,2321,3.404,2322,3.404,2323,3.404,2324,3.404,2325,3.404]],["title/pipes/TimeAgoPipe.html",[1102,2.093,1883,3.52]],["body/pipes/TimeAgoPipe.html",[3,0.052,4,0.06,5,0.06,10,0.969,13,0.709,14,0.383,15,0.007,16,0.06,19,0.005,20,0.005,28,1.577,31,1.707,39,1.28,45,1.304,46,1.025,49,1.577,55,1.28,56,1.418,58,1.256,62,2.401,64,0.416,66,0.667,67,0.474,224,2.361,241,1.915,370,2.285,581,1.977,635,4.702,840,4.974,841,4.702,1102,3.138,1419,3.161,1422,3.289,1423,5.278,1427,4.315,1428,3.434,1747,4.702,1883,5.278,2326,5.291,2327,6.168,2328,5.291,2329,5.291,2330,6.941,2331,5.291,2332,5.291,2333,5.291,2334,5.291,2335,5.291,2336,6.941,2337,5.291,2338,5.291,2339,5.291,2340,5.291,2341,5.291,2342,5.291,2343,6.941,2344,5.291,2345,7.747,2346,5.291,2347,5.291,2348,5.291,2349,5.291]],["title/pipes/ToCoinPipe.html",[1102,2.093,1884,3.52]],["body/pipes/ToCoinPipe.html",[3,0.061,4,0.071,5,0.071,10,1.132,14,0.448,15,0.007,16,0.071,19,0.006,20,0.006,28,1.843,31,1.995,39,1.496,46,1.198,48,2.167,49,1.843,55,1.496,56,1.526,58,1.468,62,2.583,64,0.486,66,0.779,67,0.554,233,4.979,241,1.706,581,3.114,1102,3.467,1419,3.695,1422,4.767,1427,4.767,1428,4.014,1436,4.703,1884,5.831,2350,6.186,2351,6.814,2352,8.335,2353,6.186,2354,6.186]],["title/components/TransactionsComponent.html",[21,0.93,121,1.73]],["body/components/TransactionsComponent.html",[3,0.027,4,0.031,5,0.031,7,0.202,8,0.433,10,0.498,13,0.574,14,0.545,15,0.007,16,0.031,19,0.003,20,0.003,21,1.065,22,1.016,23,1.674,24,1.087,25,1.062,26,1.087,28,1.276,29,2.335,31,0.877,32,3.413,33,2.648,34,2.411,36,1.636,39,1.036,41,2.649,43,3.069,45,0.67,46,1.567,48,2.547,49,2.411,55,0.658,56,1.666,58,1.017,59,1.41,64,0.593,65,3.439,66,0.343,67,0.243,77,1.039,78,1.713,79,1.674,80,1.016,81,2.404,82,1.087,83,1.087,84,0.994,85,1.087,86,1.062,87,2.834,88,1.087,89,1.016,90,1.087,91,1.016,92,1.087,93,0.994,94,1.087,95,1.016,96,1.087,97,1.016,98,1.087,99,1.016,100,1.087,101,0.994,102,0.994,103,1.087,104,1.016,105,1.087,106,1.016,107,1.087,108,1.016,109,1.087,110,1.062,111,0.933,112,1.087,113,1.016,114,1.087,115,0.994,116,1.087,117,1.566,118,1.713,119,1.016,120,1.087,121,2.247,122,1.087,123,0.994,124,1.087,125,0.994,126,1.087,127,0.994,128,1.062,129,0.994,130,1.062,131,1.087,144,2.151,158,2.559,160,3.674,173,4.03,192,1.849,193,1.511,198,1.69,258,2.164,314,1.6,370,1.979,397,3.902,398,1.113,430,3.101,551,2.465,585,2.6,586,2.335,654,1.511,658,2.302,659,2.945,707,1.511,829,3.069,984,1.948,1398,2.913,1544,2.913,1550,3.605,1553,2.913,1557,3.069,1560,3.439,1608,4.245,1743,3.806,1802,2.067,1834,2.067,1841,3.806,1847,2.216,1967,4.32,2273,4.902,2327,3.806,2351,3.806,2355,2.719,2356,4.283,2357,6.948,2358,4.709,2359,5.299,2360,6.013,2361,4.709,2362,4.283,2363,2.719,2364,2.719,2365,2.719,2366,2.719,2367,2.719,2368,3.806,2369,3.806,2370,3.491,2371,2.719,2372,2.719,2373,2.719,2374,2.719,2375,1.764,2376,2.216,2377,2.216,2378,2.719,2379,2.719,2380,2.719,2381,2.416,2382,4.283,2383,2.719,2384,2.719,2385,2.719,2386,2.719,2387,2.416,2388,2.719,2389,4.283]],["title/interfaces/Transfer.html",[0,0.235,1562,3.149]],["body/interfaces/Transfer.html",[0,0.291,2,1.195,3,0.056,4,0.065,5,0.065,7,0.426,8,0.738,12,3.934,13,1.272,14,0.686,15,0.007,16,0.065,19,0.005,20,0.005,62,2.94,258,4.281,551,4.878,1398,5.764,1562,4.97,2368,7.53,2369,7.53,2370,6.909,2390,5.728]],["title/interfaces/TransferIn.html",[0,0.235,2391,3.774]],["body/interfaces/TransferIn.html",[0,0.263,2,1.081,3,0.051,4,0.059,5,0.059,7,0.386,8,0.692,10,1.651,12,3.786,13,1.137,14,0.63,15,0.007,16,0.059,19,0.005,20,0.005,35,2.699,62,2.878,63,2.3,64,0.408,176,2.982,241,1.43,391,2.406,393,3.222,536,4.533,537,3.222,550,5.294,551,4.695,552,4.122,553,4.122,554,3.222,555,3.363,556,4.873,557,3.222,558,3.222,559,3.222,560,3.222,561,4.873,562,3.222,563,3.096,564,3.096,565,3.096,566,3.096,567,2.983,568,3.096,569,3.222,570,3.096,571,3.222,572,3.222,573,3.681,574,5.071,575,2.025,576,3.222,2391,5.582,2392,5.182,2393,5.182]],["title/interfaces/TransferOut.html",[0,0.235,2394,3.774]],["body/interfaces/TransferOut.html",[0,0.312,2,1.282,3,0.061,4,0.07,5,0.07,7,0.458,8,0.772,13,1.262,14,0.601,15,0.007,16,0.07,19,0.006,20,0.006,49,1.832,62,2.576,430,2.402,551,5.146,573,4.107,574,3.822,575,2.402,1316,5.012,1585,7.088,1635,5.463,2394,6.228,2395,6.148,2396,8.694,2397,6.148,2398,6.148,2399,6.148,2400,6.148,2401,6.148,2402,6.148]],["title/interfaces/TransferSplitIn.html",[0,0.235,549,2.878]],["body/interfaces/TransferSplitIn.html",[0,0.374,2,0.853,3,0.04,4,0.047,5,0.047,7,0.304,8,0.588,10,1.61,12,3.425,13,1.179,14,0.603,15,0.007,16,0.095,17,2.442,19,0.004,20,0.004,33,1.7,35,2.129,62,2.785,63,1.955,64,0.533,67,0.521,176,3.116,199,3.349,224,1.065,241,1.128,370,2.23,391,1.897,393,2.541,430,1.597,482,1.897,526,3.476,528,2.781,529,3.776,530,4.607,531,2.781,532,2.781,535,2.653,536,4.101,537,2.541,538,3.476,539,2.781,540,2.781,541,3.776,542,2.653,543,2.653,544,2.781,545,2.781,546,2.781,547,2.781,548,2.781,549,3.617,550,4.789,551,4.248,552,3.641,553,3.641,554,3.617,555,2.653,556,4.409,557,2.541,558,2.541,559,2.541,560,2.541,561,4.409,562,2.541,563,2.442,564,2.442,565,2.442,566,2.442,567,2.353,568,2.442,569,2.541,570,2.442,571,2.541,572,2.541,573,3.641,574,4.588,575,1.597,576,2.541,577,5.019,578,2.353,579,2.781,580,2.653,581,1.528,582,2.541,583,2.442,584,2.197,585,2.855,586,2.563,587,2.442,588,2.653]],["title/interfaces/TransferSplitOut.html",[0,0.235,2403,3.774]],["body/interfaces/TransferSplitOut.html",[0,0.343,2,1.411,3,0.067,4,0.077,5,0.077,7,0.504,8,0.818,13,1.162,14,0.586,15,0.007,16,0.077,19,0.006,20,0.006,62,2.687,2278,7.325,2403,6.604,2404,6.768,2405,8.985]],["title/modules/TranslateModule.html",[297,1.692,311,2.878]],["body/modules/TranslateModule.html",[3,0.066,4,0.077,5,0.077,15,0.007,16,0.077,19,0.006,20,0.006,64,0.68,66,0.847,67,0.602,186,4.363,187,4.179,299,2.306,311,5.016,316,2.627,317,2.458,319,2.95,320,3.153,321,2.405,322,7.169,2406,6.723]],["title/interfaces/Uri.html",[0,0.235,583,2.766]],["body/interfaces/Uri.html",[0,0.354,2,1.455,3,0.069,4,0.08,5,0.08,7,0.519,8,0.834,13,1.178,14,0.505,15,0.007,16,0.08,19,0.006,20,0.006,583,5.61,2407,6.979]],["title/components/UserComponent.html",[21,0.93,123,1.692]],["body/components/UserComponent.html",[0,0.104,3,0.02,4,0.023,5,0.039,7,0.153,8,0.345,10,0.376,13,0.458,14,0.247,15,0.007,16,0.039,19,0.003,20,0.003,21,0.88,22,0.768,23,1.334,24,0.822,25,0.803,26,0.822,31,0.663,32,3.277,33,2.535,34,1.856,36,1.305,39,0.826,45,0.841,46,1.312,48,2.14,49,1.82,55,0.497,56,1.185,58,0.488,64,0.509,66,0.259,67,0.184,77,0.785,78,1.365,79,1.334,80,0.768,81,2.04,82,0.822,83,0.822,84,0.751,85,0.822,86,0.803,87,2.571,88,0.822,89,0.768,90,0.822,91,0.768,92,0.822,93,0.751,94,0.822,95,0.768,96,0.822,97,0.768,98,0.822,99,0.768,100,0.822,101,0.751,102,1.865,103,0.822,104,0.768,105,0.822,106,0.768,107,0.822,108,0.768,109,0.822,110,0.803,111,2.705,112,0.822,113,0.768,114,0.822,115,0.751,116,0.822,117,1.248,118,1.365,119,0.768,120,0.822,121,0.768,122,0.822,123,1.865,124,0.822,125,0.751,126,0.822,127,0.751,128,0.803,129,0.751,130,0.803,131,0.822,133,1.105,136,1.778,144,1.826,152,4.201,176,0.751,185,0.841,224,1.592,360,2.836,361,1.278,362,1.228,370,2.7,373,2.935,374,2.784,388,3.656,391,1.585,426,2.447,429,2.04,430,0.803,441,1.398,460,1.398,462,1.675,467,1.473,468,1.563,469,1.563,510,3.88,511,2.784,515,2.597,573,1.836,575,2.213,578,2.937,581,1.907,586,3.417,594,4.403,595,3.048,608,4.446,621,3.034,623,3.034,626,2.784,627,2.597,630,3.034,631,2.784,641,1.334,646,2.323,654,1.142,658,1.105,659,2.435,660,1.826,661,4.377,670,3.88,676,4.534,705,1.675,706,1.675,707,3.909,973,1.563,1078,2.447,1281,4.534,1302,3.034,1306,2.447,1309,4.159,1336,1.675,1365,2.784,1573,1.563,1603,5.277,1608,5.033,1613,1.563,1614,1.675,1819,2.784,1827,4.534,2003,3.331,2039,1.563,2058,2.784,2078,3.571,2273,2.784,2282,4.98,2283,1.826,2284,3.893,2285,1.826,2286,3.034,2287,3.893,2288,3.893,2289,3.893,2290,4.534,2291,1.826,2292,1.826,2293,1.826,2294,1.826,2295,1.826,2296,1.826,2297,1.826,2298,5.031,2299,1.826,2300,1.826,2301,1.826,2302,1.826,2303,1.826,2304,3.893,2305,3.034,2306,3.034,2307,3.034,2308,1.826,2309,1.826,2310,1.675,2311,1.826,2312,1.826,2313,1.826,2314,1.826,2315,1.826,2316,1.826,2317,1.826,2318,1.826,2319,1.826,2320,1.826,2321,1.826,2322,1.826,2323,1.826,2324,1.826,2325,1.826,2408,3.415,2409,2.055,2410,2.055,2411,2.055,2412,2.055,2413,2.055,2414,2.055,2415,3.415,2416,5.102,2417,2.055,2418,3.415,2419,3.415,2420,3.415,2421,3.415,2422,2.055,2423,3.415,2424,5.102,2425,3.415,2426,3.415,2427,3.415,2428,6.108,2429,3.415,2430,3.415,2431,3.415,2432,3.415,2433,3.415,2434,3.415,2435,3.415,2436,5.102,2437,2.055,2438,3.415,2439,3.415,2440,3.415,2441,3.415,2442,3.034,2443,3.415,2444,3.415,2445,3.415,2446,2.784,2447,3.415,2448,3.415,2449,3.415,2450,3.415,2451,3.415,2452,3.415,2453,2.055,2454,3.415,2455,3.034,2456,3.415,2457,3.415,2458,3.415,2459,3.415,2460,3.415,2461,3.415,2462,3.415,2463,3.415,2464,3.415,2465,3.415,2466,3.415,2467,2.055,2468,2.055,2469,2.055]],["title/interfaces/UserMeta.html",[0,0.235,2470,3.52]],["body/interfaces/UserMeta.html",[0,0.429,2,1.331,3,0.063,4,0.073,5,0.073,7,0.475,8,0.79,13,1.233,14,0.462,15,0.007,16,0.097,19,0.006,20,0.006,64,0.502,157,4.853,384,2.812,608,3.813,624,3.967,658,4.202,2470,6.426,2471,5.202,2472,7.181,2473,5.602,2474,5.202,2475,4.853,2476,5.944]],["title/modules/UserModule.html",[297,1.692,2477,3.52]],["body/modules/UserModule.html",[3,0.049,4,0.057,5,0.057,11,2.448,15,0.007,16,0.057,19,0.005,20,0.005,21,1.003,33,1.951,64,0.748,66,0.629,67,0.447,111,2.581,123,3.218,142,3.238,155,2.981,185,2.043,224,1.3,237,3.238,299,1.712,300,2.733,312,2.869,313,2.144,314,1.865,316,2.609,317,1.824,319,2.441,320,2.609,321,1.785,332,4.785,333,3.576,334,5.443,335,4.068,338,5.077,339,3.794,342,3.843,343,2.872,346,4.151,347,2.981,348,2.872,370,2.477,373,1.785,416,2.521,417,3.801,425,2.316,429,3.989,581,1.865,651,3.843,652,2.872,653,5.443,654,2.773,655,5.443,656,4.068,862,2.598,2201,5.933,2202,4.434,2203,4.434,2204,5.443,2205,4.068,2209,4.434,2477,6.554,2478,4.434,2479,4.434,2480,4.99,2481,6.677,2482,4.99,2483,4.99,2484,5.933,2485,4.434,2486,6.677,2487,4.99,2488,4.99,2489,4.99]],["title/interfaces/UserOptions.html",[0,0.235,2473,3.317]],["body/interfaces/UserOptions.html",[0,0.343,2,1.411,3,0.067,4,0.077,5,0.077,7,0.504,8,0.818,14,0.49,15,0.007,16,0.093,19,0.006,20,0.006,73,2.982,586,2.982,1902,5.517,2473,5.805,2490,6.014,2491,8.985,2492,7.984,2493,6.014]],["title/modules/UserRoutingModule.html",[297,1.692,412,3.317]],["body/modules/UserRoutingModule.html",[3,0.063,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,64,0.691,66,0.799,67,0.568,111,2.175,185,2.596,224,1.653,299,2.175,316,2.478,317,2.318,319,2.847,320,3.043,321,2.269,386,3.789,387,2.725,412,5.58,415,3.942,416,3.934,417,4.258,425,2.944,590,5.054,862,3.302,865,4.313,2494,6.341,2495,6.341,2496,6.341,2497,6.341]],["title/interfaces/UserState.html",[0,0.235,2476,3.52]],["body/interfaces/UserState.html",[0,0.416,2,1.248,3,0.059,4,0.068,5,0.068,7,0.445,8,0.759,13,1.246,14,0.623,15,0.007,16,0.094,19,0.006,20,0.006,64,0.471,157,6.547,384,3.794,608,5.144,624,3.72,658,4.768,2470,6.547,2471,4.878,2472,4.878,2473,6.171,2474,4.878,2475,4.55,2476,6.243]],["title/interfaces/UsersState.html",[0,0.235,2475,3.52]],["body/interfaces/UsersState.html",[0,0.427,2,1.323,3,0.063,4,0.072,5,0.072,7,0.472,8,0.787,13,1.178,14,0.61,15,0.007,16,0.096,19,0.006,20,0.006,64,0.499,157,4.822,384,2.794,608,3.789,624,5.464,658,4.186,1534,5.921,2470,5.921,2471,5.17,2472,5.17,2473,5.58,2474,5.17,2475,5.921,2476,5.921]],["title/components/VpnComponent.html",[21,0.93,125,1.692]],["body/components/VpnComponent.html",[3,0.037,4,0.043,5,0.043,7,0.281,15,0.007,16,0.043,19,0.004,20,0.004,21,1.301,22,1.41,23,2.146,24,1.509,25,1.475,26,1.509,28,1.636,29,2.853,31,1.217,32,3.541,33,2.755,34,2.397,36,2.098,39,1.328,41,3.133,45,1.596,46,1.064,56,1.186,58,0.896,59,1.808,64,0.297,66,0.475,67,0.338,77,1.442,78,2.196,79,2.146,80,1.41,81,2.844,82,1.509,83,1.509,84,1.38,85,1.509,86,1.475,87,3.11,88,1.509,89,1.41,90,1.509,91,1.41,92,1.509,93,1.38,94,1.509,95,1.41,96,1.509,97,1.41,98,1.509,99,1.41,100,1.509,101,1.38,102,1.38,103,1.509,104,1.41,105,1.509,106,1.41,107,1.509,108,1.41,109,1.509,110,1.475,111,1.294,112,1.509,113,1.41,114,1.509,115,1.38,116,1.509,117,2.008,118,2.196,119,1.41,120,1.509,121,1.41,122,1.509,123,1.38,124,1.509,125,2.6,126,1.509,127,1.38,128,1.475,129,1.38,130,1.475,131,1.509,133,2.029,136,2.86,370,1.808,385,3.936,391,3.301,392,5.097,440,3.565,604,3.936,1017,4.881,1255,4.477,2023,4.881,2039,4.176,2442,4.881,2446,5.798,2498,3.774,2499,6.476,2500,5.493,2501,3.774,2502,3.774,2503,5.493,2504,7.112,2505,4.881,2506,5.493,2507,5.493,2508,5.493,2509,7.888,2510,5.493,2511,5.493,2512,5.493,2513,5.493,2514,5.493,2515,5.493,2516,5.493,2517,7.112,2518,7.112]],["title/modules/VpnModule.html",[297,1.692,2519,3.52]],["body/modules/VpnModule.html",[3,0.06,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,64,0.713,66,0.761,67,0.541,125,3.317,299,2.071,300,3.092,312,3.245,313,2.594,314,2.256,316,2.952,317,2.207,319,2.762,320,2.952,321,2.16,342,4.348,343,3.475,346,4.696,347,3.607,348,3.475,651,4.348,652,3.475,2519,6.899,2520,5.365,2521,5.365,2522,6.037,2523,5.365]],["title/modules/VpnRoutingModule.html",[297,1.692,2524,3.774]],["body/modules/VpnRoutingModule.html",[3,0.062,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,21,1.27,64,0.69,66,0.796,67,0.566,125,2.841,185,2.588,224,1.648,299,2.168,316,2.47,317,2.311,319,2.841,320,3.037,321,2.262,387,2.716,415,3.93,416,3.926,417,4.252,425,2.934,862,3.292,2446,5.153,2523,5.617,2524,6.336,2525,6.322]],["title/components/WalletComponent.html",[21,0.93,127,1.692]],["body/components/WalletComponent.html",[3,0.022,4,0.026,5,0.026,7,0.168,8,0.372,10,0.989,13,0.904,14,0.542,15,0.007,16,0.026,19,0.003,20,0.003,21,0.94,22,0.843,23,1.441,24,0.902,25,0.881,26,0.902,28,1.098,29,2.06,31,0.728,32,3.325,33,2.575,34,2.489,36,1.409,39,0.892,41,2.379,45,0.556,46,1.605,48,2.238,49,1.904,55,1.306,56,1.333,58,1.601,59,1.96,63,0.758,64,0.572,66,0.284,67,0.202,73,1.624,75,2.803,77,0.862,78,1.474,79,1.441,80,0.843,81,2.159,82,0.902,83,0.902,84,0.825,85,0.902,86,0.881,87,2.803,88,0.902,89,0.843,90,0.902,91,0.843,92,0.902,93,0.825,94,0.902,95,0.843,96,0.902,97,2.52,98,0.902,99,0.843,100,0.902,101,0.825,102,1.709,103,0.902,104,0.843,105,0.902,106,0.843,107,0.902,108,0.843,109,0.902,110,0.881,111,0.774,112,0.902,113,0.843,114,0.902,115,0.825,116,0.902,117,1.348,118,1.474,119,0.843,120,0.902,121,0.843,122,0.902,123,0.825,124,0.902,125,0.825,126,0.902,127,1.974,128,0.881,129,0.825,130,0.881,131,0.902,133,1.213,135,3.555,136,1.92,139,3.659,144,2.413,148,4.106,160,3.406,173,3.555,176,1.348,179,1.534,182,1.715,192,1.534,193,1.254,198,1.402,241,0.622,314,1.378,358,3.226,359,1.534,373,1.319,398,0.923,430,2.926,481,2.292,482,2.763,575,1.441,581,2.018,584,1.982,637,2.122,659,3.551,707,2.049,720,3.006,721,3.006,722,3.006,726,4.346,792,3.555,798,4.106,823,1.839,829,3.87,1145,1.839,1376,3.673,1553,3.673,1554,3.276,1555,3.276,1556,3.276,1557,3.87,1580,3.006,1590,3.276,1665,3.276,1711,2.004,1834,1.715,1847,3.006,1848,1.839,1894,3.555,1896,3.006,1897,3.006,1898,3.006,1899,1.715,1967,3.812,2358,3.276,2375,1.464,2381,2.004,2526,2.256,2527,4.676,2528,3.687,2529,4.676,2530,4.676,2531,4.676,2532,4.676,2533,4.402,2534,3.687,2535,3.687,2536,3.687,2537,2.256,2538,3.687,2539,2.256,2540,3.687,2541,2.256,2542,2.256,2543,2.256,2544,3.687,2545,2.256,2546,3.687,2547,2.256,2548,2.256,2549,2.256,2550,2.256,2551,5.4,2552,5.4,2553,3.687,2554,3.687,2555,3.687,2556,2.256,2557,2.256,2558,2.256,2559,2.256,2560,2.256,2561,2.004,2562,2.256,2563,2.256,2564,2.256,2565,2.004,2566,2.256,2567,2.256,2568,2.256,2569,2.256,2570,2.256,2571,2.256,2572,2.256,2573,2.256,2574,2.256,2575,2.256,2576,2.256,2577,2.256,2578,2.256,2579,4.676,2580,3.687]],["title/injectables/WalletEffects.html",[454,1.302,2581,4.114]],["body/injectables/WalletEffects.html",[3,0.027,4,0.032,5,0.032,7,0.206,8,0.439,9,3.646,10,0.507,13,0.814,14,0.388,15,0.007,16,0.032,19,0.003,20,0.003,34,2.224,45,0.682,46,1.356,48,2.311,49,1.966,50,3.112,55,0.669,56,0.507,64,0.674,66,0.349,67,0.248,144,2.619,158,3.202,159,4.95,160,3.698,188,3.54,189,2.104,190,1.72,191,1.72,192,1.882,193,1.538,198,1.72,241,2.2,314,1.623,326,3.775,328,1.796,358,3.627,359,1.882,398,1.133,430,3.117,454,1.221,456,1.189,581,2.616,584,2.882,585,2.131,586,2.675,726,4.487,730,1.796,804,3.479,986,5.378,1070,1.983,1071,5.156,1073,6.355,1074,6.18,1076,2.256,1078,3.112,1087,2.459,1093,3.859,1094,3.859,1095,3.859,1099,2.459,1100,4.37,1102,3.165,1107,3.859,1108,3.859,1114,2.256,1115,1.796,1116,2.459,1119,2.459,1122,3.859,1550,3.646,1552,3.112,1553,2.954,1557,3.112,1560,3.479,1853,3.859,2057,2.459,2192,3.859,2194,3.859,2375,1.796,2561,2.459,2581,3.859,2582,2.767,2583,5.361,2584,5.361,2585,5.361,2586,5.361,2587,4.343,2588,4.343,2589,4.343,2590,4.343,2591,2.767,2592,4.343,2593,7.001,2594,4.343,2595,2.767,2596,4.343,2597,4.343,2598,2.767,2599,4.343,2600,4.343,2601,4.343,2602,6.597,2603,4.343,2604,5.361,2605,6.072,2606,4.343,2607,6.072,2608,6.072,2609,4.343,2610,6.072,2611,6.072,2612,4.343,2613,4.343,2614,4.343,2615,4.343,2616,4.343,2617,2.767,2618,2.767,2619,2.767,2620,2.767,2621,2.459,2622,2.767]],["title/modules/WalletModule.html",[297,1.692,2161,3.317]],["body/modules/WalletModule.html",[3,0.035,4,0.041,5,0.041,11,1.765,15,0.007,16,0.041,19,0.004,20,0.004,21,0.723,22,3.238,64,0.742,66,0.453,67,0.322,99,3.238,104,3.238,113,3.238,121,3.238,127,2.932,142,2.335,155,2.15,185,1.473,190,2.237,191,2.237,224,0.938,237,2.335,299,1.234,300,2.171,311,4.822,312,2.279,313,1.546,314,1.345,316,2.073,317,1.939,319,1.939,320,2.073,321,1.287,332,3.801,333,2.579,336,4.033,337,2.736,338,4.033,339,2.736,342,3.053,343,2.071,344,4.324,345,2.933,346,3.298,347,2.15,348,2.071,373,1.287,387,2.279,416,1.818,417,3.183,425,1.67,430,1.406,482,1.67,651,3.053,652,2.071,653,4.324,654,2,655,4.324,656,2.933,862,1.874,1706,5.558,1877,3.608,2161,6.742,2164,4.324,2165,2.933,2204,4.324,2205,2.933,2376,2.933,2377,2.933,2484,4.713,2485,3.197,2623,3.197,2624,3.598,2625,3.197,2626,3.197,2627,3.598,2628,3.598,2629,5.304,2630,3.598,2631,3.598,2632,3.598,2633,3.598,2634,3.598,2635,3.598,2636,5.304,2637,3.598,2638,3.598,2639,3.598,2640,3.598,2641,3.598,2642,3.598]],["title/modules/WalletRoutingModule.html",[297,1.692,413,3.317]],["body/modules/WalletRoutingModule.html",[3,0.062,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,34,1.915,64,0.69,66,0.794,67,0.564,185,2.58,224,1.642,299,2.162,316,2.463,317,2.304,319,2.836,320,3.031,321,2.255,386,3.765,387,2.708,413,5.559,415,3.918,416,3.919,417,4.246,425,2.925,590,5.454,593,4.516,862,3.282,864,4.792,865,4.286,2643,6.302,2644,6.302,2645,6.302]],["title/injectables/WalletRpcService.html",[397,3.004,454,1.302]],["body/injectables/WalletRpcService.html",[1,4.614,3,0.015,4,0.018,5,0.018,7,0.266,8,0.273,9,1.859,10,1.465,13,0.759,14,0.614,15,0.007,16,0.018,19,0.002,20,0.002,34,1.602,39,0.653,45,0.384,46,1.643,48,0.546,49,0.464,55,1.935,56,1.465,58,2.174,62,1.32,64,0.445,66,0.196,67,0.139,144,1.277,160,2.151,198,1.678,215,2.398,224,0.93,233,0.93,241,2.313,258,1.804,326,2.647,328,1.011,370,0.513,384,1.189,390,1.835,392,1.934,394,4.605,396,1.751,397,1.751,398,0.638,438,0.787,454,0.759,456,0.669,470,0.811,538,2.876,549,2.993,573,1.451,581,0.582,582,1.678,583,2.876,584,3.042,587,3.381,637,5.367,658,1.451,671,1.116,726,2.428,730,1.011,733,2.398,777,7.524,802,1.184,804,1.751,817,1.116,885,2.2,886,1.27,887,1.27,888,1.27,889,1.27,890,1.27,891,1.27,892,1.184,893,2.715,895,1.27,896,1.27,897,1.384,984,1.116,1399,4.686,1426,1.059,1469,2.428,1531,1.27,1533,2.398,1534,4.01,1535,3.925,1542,1.27,1546,3.925,1548,1.27,1550,3.275,1560,1.011,1562,3.275,1577,3.925,1582,1.27,1592,3.925,1629,3.925,2041,3.925,2044,1.27,2058,2.2,2061,1.184,2062,1.27,2063,3.172,2074,4.056,2119,3.471,2231,1.27,2263,1.27,2265,3.925,2267,2.398,2275,1.27,2370,2.2,2375,1.011,2391,3.925,2394,1.27,2403,1.27,2533,3.471,2621,1.384,2646,1.558,2647,2.698,2648,4.258,2649,2.698,2650,2.698,2651,4.258,2652,2.698,2653,2.698,2654,2.698,2655,3.57,2656,3.57,2657,2.698,2658,2.698,2659,3.57,2660,4.258,2661,4.258,2662,2.698,2663,2.698,2664,2.698,2665,1.558,2666,2.698,2667,1.558,2668,2.698,2669,1.558,2670,1.558,2671,2.698,2672,1.558,2673,1.558,2674,2.698,2675,2.698,2676,1.558,2677,1.558,2678,2.698,2679,1.558,2680,2.698,2681,1.558,2682,2.698,2683,2.698,2684,1.558,2685,1.558,2686,1.558,2687,1.558,2688,1.558,2689,2.698,2690,1.558,2691,2.698,2692,1.558,2693,2.698,2694,4.814,2695,1.558,2696,2.698,2697,1.558,2698,2.698,2699,1.558,2700,2.698,2701,1.558,2702,1.558,2703,1.558,2704,1.558,2705,2.398,2706,1.558,2707,1.558,2708,2.698,2709,1.558,2710,1.558,2711,2.698,2712,1.558,2713,2.698,2714,1.558,2715,2.698,2716,1.558,2717,1.558,2718,1.558,2719,1.558,2720,1.558,2721,1.558,2722,1.558,2723,1.558,2724,1.558,2725,1.558,2726,1.558,2727,1.558,2728,1.558,2729,1.558,2730,1.558,2731,1.558,2732,1.558,2733,1.558,2734,1.558,2735,1.558,2736,1.558,2737,1.558,2738,1.558,2739,1.558,2740,1.558,2741,1.558,2742,1.558,2743,1.558,2744,1.558,2745,1.558,2746,1.558]],["title/injectables/WalletService.html",[358,2.766,454,1.302]],["body/injectables/WalletService.html",[3,0.034,4,0.039,5,0.07,7,0.254,8,0.516,10,1.241,13,0.819,14,0.551,15,0.007,16,0.039,19,0.004,20,0.004,34,2.518,35,1.779,39,1.234,45,0.841,46,1.605,48,1.196,49,1.018,50,3.657,55,1.639,56,1.241,58,2.101,63,1.714,64,0.57,66,0.43,67,0.457,72,3.88,144,2.425,198,2.123,241,2.175,358,3.048,360,3.766,361,2.123,362,2.04,370,1.124,373,1.222,390,3.471,392,3.657,394,3.516,395,4.16,397,4.398,398,1.398,438,1.725,440,3.312,454,1.435,456,1.467,470,1.779,482,3.763,584,4.239,637,4.38,726,4.61,730,3.965,901,3.035,983,4.534,984,2.447,1452,3.88,1550,4.61,1802,2.597,1845,6.022,1848,4.16,2074,5.651,2119,5.525,2361,3.035,2375,2.216,2387,3.035,2533,5.525,2565,3.035,2705,6.445,2747,3.415,2748,6.777,2749,5.103,2750,6.777,2751,3.415,2752,5.103,2753,3.415,2754,3.415,2755,5.103,2756,3.415,2757,5.103,2758,3.415,2759,5.103,2760,3.415,2761,3.415,2762,3.415,2763,5.103,2764,3.415,2765,3.415,2766,3.415,2767,3.415,2768,3.415,2769,3.415,2770,3.415,2771,3.415,2772,3.415,2773,3.415,2774,3.415,2775,3.415,2776,3.415,2777,3.415,2778,3.415]],["title/classes/WalletState.html",[67,0.415,2779,3.774]],["body/classes/WalletState.html",[0,0.34,3,0.05,4,0.057,5,0.057,7,0.374,8,0.678,13,1.182,14,0.546,15,0.007,16,0.092,19,0.005,20,0.005,28,2.25,34,2.551,46,1.462,48,2.646,49,2.25,56,1.228,62,2.341,64,0.528,67,0.601,258,3.39,370,1.655,384,2.956,482,3.741,527,3.419,575,1.965,749,2.794,780,3.419,914,5.47,1057,3.003,1552,3.602,1560,4.355,1562,3.419,1752,4.098,1858,5.413,2375,3.262,2779,5.47,2780,4.467,2781,6.157,2782,7.161,2783,7.161,2784,5.027,2785,5.027,2786,5.027,2787,4.467,2788,5.962,2789,5.962,2790,4.467,2791,4.467,2792,4.467]],["title/interfaces/WalletsState.html",[0,0.235,2781,3.774]],["body/interfaces/WalletsState.html",[0,0.347,2,1.081,3,0.051,4,0.059,5,0.059,7,0.386,8,0.692,13,1.235,14,0.614,15,0.007,16,0.093,19,0.005,20,0.005,28,2.04,34,2.577,56,1.254,62,2.376,64,0.538,67,0.613,258,3.459,370,1.706,384,3.017,482,3.937,575,2.025,780,3.525,914,5.582,1057,3.096,1534,5.206,1552,3.714,1560,4.443,1562,3.525,1752,4.225,1858,5.495,2375,3.363,2779,4.225,2780,4.605,2781,6.251,2782,7.537,2783,7.537,2787,4.605,2788,6.084,2789,6.084,2790,4.605,2791,4.605,2792,4.605]],["title/injectables/WebStorageService.html",[454,1.302,499,3.774]],["body/injectables/WebStorageService.html",[3,0.033,4,0.038,5,0.038,7,0.25,8,0.51,10,1.319,13,1.21,14,0.547,15,0.007,16,0.038,19,0.004,20,0.004,28,1.002,33,0.983,39,1.22,46,1.628,48,2.121,49,2.338,55,1.743,56,1.319,58,1.863,59,1.661,62,1.876,63,2.034,64,0.397,66,0.424,67,0.301,87,1.23,144,3.128,160,2.549,224,1.578,241,2.226,373,1.204,394,2.904,438,1.699,441,4.118,454,1.419,456,1.445,470,1.752,499,4.113,519,2.989,541,3.929,575,3.226,613,5.483,641,3.929,646,3.432,749,4.205,799,4.113,1057,3.617,1105,4.82,1376,5.614,1506,5.379,1521,2.989,1522,2.989,1523,2.989,1598,2.742,2061,2.558,2062,2.742,2793,8.536,2794,3.364,2795,6.054,2796,6.054,2797,6.726,2798,5.045,2799,5.045,2800,5.045,2801,3.364,2802,3.364,2803,5.045,2804,5.045,2805,5.045,2806,3.364,2807,5.045,2808,3.364,2809,3.364,2810,3.364,2811,5.045,2812,3.364,2813,5.045,2814,3.364,2815,5.045,2816,3.364,2817,3.364,2818,3.364,2819,3.364,2820,3.364,2821,6.726,2822,3.364,2823,5.045,2824,5.045,2825,3.364,2826,3.364,2827,3.364,2828,3.364,2829,3.364,2830,3.364,2831,3.364,2832,3.364,2833,3.364,2834,3.364,2835,3.364,2836,3.364,2837,3.364,2838,3.364,2839,3.364,2840,3.364,2841,3.364,2842,3.364]],["title/injectables/WebsocketService.html",[454,1.302,1150,3.774]],["body/injectables/WebsocketService.html",[3,0.046,4,0.053,5,0.053,7,0.344,8,0.641,10,0.846,13,0.97,14,0.459,15,0.007,16,0.072,19,0.005,20,0.005,39,1.533,45,1.783,46,1.632,55,1.118,56,0.846,58,1.848,59,2.087,64,0.569,66,0.582,67,0.414,139,3.45,144,2.589,224,1.652,241,1.749,438,2.335,452,3.515,454,1.783,456,1.986,470,2.408,770,3.515,1057,2.762,1112,4.108,1150,5.169,1278,3.769,1359,3.769,1498,3.769,2843,4.623,2844,6.43,2845,7.786,2846,7.786,2847,7.786,2848,6.34,2849,6.34,2850,4.623,2851,4.623,2852,8.158,2853,4.623,2854,6.34,2855,4.623,2856,7.236,2857,4.623,2858,4.623,2859,7.236,2860,6.34,2861,7.236,2862,4.623,2863,4.623,2864,4.623,2865,4.623,2866,4.623,2867,4.623,2868,4.623,2869,4.623,2870,4.623,2871,7.236,2872,4.623,2873,4.623,2874,4.623,2875,4.623,2876,4.623,2877,4.623,2878,4.623,2879,4.623,2880,4.623]],["title/contributing.html",[403,3.14,2881,3.423,2882,3.852]],["body/contributing.html",[15,0.006,19,0.006,20,0.006,1270,6.59,2310,6.046,2455,6.59,2883,7.416,2884,7.416,2885,7.416]],["title/dependencies.html",[300,2.282,2886,3.852]],["body/dependencies.html",[15,0.007,19,0.004,20,0.004,34,1.27,66,0.527,160,3.465,185,1.712,186,4.451,187,3.675,190,4.264,191,2.599,193,2.324,198,2.599,300,1.712,318,4.021,321,1.496,347,2.498,348,2.407,356,3.715,357,3.715,366,3.409,367,3.409,452,3.179,458,3.715,460,2.844,467,2.996,468,3.179,469,3.179,476,6.094,494,3.715,495,5.253,535,2.714,567,2.407,654,2.324,730,2.714,765,3.409,814,5.253,991,3.715,1000,3.715,1001,3.715,1002,5.253,1004,3.715,1115,2.714,1168,5.215,1169,3.409,1221,3.715,1383,3.715,1385,3.715,1646,3.715,1668,3.715,1917,3.409,1975,3.409,2011,3.715,2017,3.715,2018,3.715,2061,3.179,2376,3.409,2377,3.409,2844,5.253,2887,4.181,2888,8.839,2889,4.181,2890,8.839,2891,4.181,2892,4.181,2893,4.181,2894,4.181,2895,4.181,2896,4.181,2897,4.181,2898,4.181,2899,4.181,2900,4.181,2901,4.181,2902,4.181,2903,5.912,2904,4.181,2905,4.181,2906,4.181,2907,4.181,2908,4.181,2909,4.181,2910,4.181,2911,4.181,2912,4.181,2913,4.181,2914,4.181,2915,4.181,2916,4.181,2917,4.181,2918,4.181,2919,4.181,2920,4.181,2921,4.181,2922,4.181,2923,4.181,2924,4.181,2925,4.181,2926,4.181,2927,4.181,2928,5.912,2929,4.181,2930,4.181,2931,4.181,2932,4.181,2933,4.181,2934,4.181,2935,4.181,2936,4.181,2937,4.181,2938,4.181,2939,4.181,2940,4.181,2941,4.181,2942,4.181,2943,4.181,2944,4.181,2945,4.181,2946,4.181,2947,4.181,2948,4.181,2949,4.181,2950,4.181,2951,4.181,2952,4.181]],["title/miscellaneous/enumerations.html",[2953,2.929,2954,4.954]],["body/miscellaneous/enumerations.html",[3,0.064,7,0.484,15,0.007,19,0.006,20,0.006,49,2.707,63,2.186,71,4.222,73,3.485,293,4.947,586,2.866,984,4.662,1057,3.886,1076,5.303,1118,6.448,1326,4.947,1895,5.303,1899,6.014,1903,5.303,1904,5.303,1905,5.303,2490,5.781,2492,7.028,2493,5.781,2953,4.947,2954,5.781,2955,6.505,2956,6.505,2957,5.781,2958,5.781,2959,5.781,2960,6.505,2961,6.505,2962,6.505]],["title/miscellaneous/functions.html",[2953,2.929,2963,4.954]],["body/miscellaneous/functions.html",[7,0.351,10,1.674,14,0.568,15,0.007,19,0.005,20,0.005,55,2.211,56,1.674,58,1.527,315,4.195,318,4.976,326,3.998,369,4.195,380,5.715,478,4.195,488,6.5,508,5.715,509,8.332,512,6.219,605,4.195,804,3.064,1078,6.749,1118,5.243,1126,4.195,1133,7.711,1803,5.243,2024,5.243,2953,3.589,2957,4.195,2958,4.195,2959,4.195,2963,4.195,2964,4.721,2965,4.721,2966,4.721,2967,4.721,2968,8.48,2969,4.721,2970,6.431,2971,4.721,2972,4.721,2973,4.721,2974,4.721,2975,4.721,2976,4.721,2977,4.721,2978,4.721,2979,4.721,2980,4.721,2981,4.721,2982,4.721,2983,4.721,2984,4.721,2985,6.431,2986,4.721,2987,4.721,2988,4.721,2989,4.721]],["title/index.html",[7,0.287,403,3.14,2881,3.423]],["body/index.html",[0,0.338,15,0.006,19,0.006,20,0.006,385,4.77,388,4.77,429,4.791,604,6.657,1498,5.426,1828,7.649,2037,5.914,2990,8.02,2991,6.656,2992,6.656,2993,6.656,2994,6.656,2995,8.02,2996,9.476,2997,6.656,2998,6.656,2999,6.656,3000,6.656,3001,6.656]],["title/modules.html",[299,2.177]],["body/modules.html",[15,0.005,19,0.005,20,0.005,187,5.966,298,3.667,299,1.755,305,3.667,306,3.667,307,3.48,308,3.667,309,3.667,310,3.667,311,3.181,408,3.667,409,3.667,410,3.667,411,3.667,412,3.667,413,3.667,446,3.891,851,3.891,855,3.667,1580,7.332,1623,3.667,1706,3.667,1877,3.48,1993,3.891,2157,3.667,2161,3.667,2196,3.891,2477,3.891,2505,8.652,2519,3.891,2524,4.171,3002,9.596,3003,9.596,3004,8.995]],["title/overview.html",[3005,5.639]],["body/overview.html",[2,0.525,15,0.007,19,0.003,20,0.003,22,2.637,23,0.984,73,1.776,80,0.941,84,2.764,89,2.354,91,2.637,93,1.842,95,2.637,97,2.637,99,2.637,101,1.842,104,2.637,106,2.637,108,1.883,113,2.637,115,1.842,117,1.842,119,2.637,121,2.637,123,1.842,125,1.842,127,1.842,129,2.764,298,6.284,299,0.864,300,1.65,301,2.237,302,2.237,303,2.237,304,2.237,305,6.022,306,4.515,307,4.8,308,3.611,309,5.254,310,5.254,311,4.178,312,1.732,313,1.082,314,0.941,406,2.237,407,2.237,408,3.611,409,3.611,410,4.515,411,3.611,412,3.611,413,3.611,446,4.79,447,2.237,456,1.082,527,1.713,589,2.237,647,2.237,648,2.237,793,4.088,851,5.575,852,2.237,853,2.237,854,2.237,855,5.254,953,2.237,954,2.237,956,2.237,1213,2.053,1227,2.237,1228,2.237,1229,2.237,1418,5.366,1419,1.504,1433,5.366,1564,5.366,1623,4.816,1624,2.237,1625,2.237,1626,2.237,1641,5.366,1706,4.816,1707,2.237,1708,2.237,1709,2.237,1877,6.15,1878,2.237,1879,2.237,1880,2.237,1881,5.366,1882,5.366,1883,5.366,1884,5.366,1911,3.611,1927,2.237,1928,2.237,1929,2.237,1930,2.237,1993,4.379,1994,2.237,1995,2.237,2150,2.237,2157,5.677,2158,2.237,2159,2.237,2160,2.237,2161,6.424,2196,5.11,2197,2.237,2199,2.237,2255,2.237,2256,2.237,2257,2.237,2477,4.379,2478,2.237,2479,2.237,2519,4.379,2520,2.237,2521,2.237,2623,2.237,2625,2.237,2626,2.237,3005,2.237,3006,2.518,3007,2.518,3008,2.518,3009,2.518,3010,2.518]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":63,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["0\">{{error",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.1",{"_index":1768,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["0.1.2",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["0.2.4",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":775,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["0000000000000000000000000000000000000000000000000000000000000000",{"_index":18,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["1",{"_index":73,"title":{"injectables/Effects-1.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserOptions.html":{},"components/WalletComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1752,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["10.0.0",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["1000",{"_index":840,"title":{},"body":{"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/HashRatePipe.html":{},"components/RootComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["10000",{"_index":2790,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100000000).tofixed((8",{"_index":2354,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["100vh",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["12.0.0",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["12.0.1",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":1790,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["13",{"_index":1208,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["13.0.0",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["130",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["14.0.0",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1865,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["151",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":542,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["179211/@${slug}`).then(function",{"_index":1984,"title":{},"body":{"components/PostComponent.html":{}}}],["181",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["1c9ea3",{"_index":1780,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["2",{"_index":71,"title":{},"body":{"components/AddComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":2060,"title":{},"body":{"interfaces/Response.html":{}}}],["2.0.0",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3009,"title":{},"body":{"overview.html":{}}}],["20.0.0",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":2419,"title":{},"body":{"components/UserComponent.html":{}}}],["210px",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":3008,"title":{},"body":{"overview.html":{}}}],["24",{"_index":2341,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["242",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["242628",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":1391,"title":{},"body":{"modules/DataModule.html":{}}}],["255",{"_index":1767,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["256",{"_index":1340,"title":{},"body":{"injectables/CryptService.html":{}}}],["25vh",{"_index":943,"title":{},"body":{"directives/ChartDirective.html":{}}}],["27",{"_index":3007,"title":{},"body":{"overview.html":{}}}],["298px",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1326,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1867,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["30.416",{"_index":2344,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["30000",{"_index":915,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["30vh",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["32",{"_index":568,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["365",{"_index":2346,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["36963",{"_index":2718,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["4",{"_index":1328,"title":{},"body":{"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["4.1.0",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["4.15.2",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["4.4.4",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["4096",{"_index":1345,"title":{},"body":{"injectables/CryptService.html":{}}}],["5",{"_index":2150,"title":{},"body":{"components/RootComponent.html":{},"overview.html":{}}}],["5.0.0",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1779,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["545",{"_index":2348,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["54px",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["55",{"_index":3010,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2336,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["64",{"_index":543,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["64px",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1332,"title":{},"body":{"injectables/CryptService.html":{}}}],["7.0.0",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1213,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"overview.html":{}}}],["838488",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["9.1.0",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["9px",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["_(ツ)_",{"_index":2230,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["access",{"_index":603,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["accessibility",{"_index":2225,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["accessors",{"_index":799,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/FileSystemService.html":{},"injectables/WebStorageService.html":{}}}],["account_balance_wallet",{"_index":721,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["accounts",{"_index":1281,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["action",{"_index":1078,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/UserComponent.html":{},"injectables/WalletEffects.html":{},"miscellaneous/functions.html":{}}}],["actionreducer",{"_index":488,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":489,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":1071,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["actionsblocklist",{"_index":1393,"title":{},"body":{"modules/DataModule.html":{}}}],["activatedroute",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroute.firstchild",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":598,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["acts",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["adapter",{"_index":1001,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["add",{"_index":35,"title":{},"body":{"components/AddComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/FileSystemService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/PluginsService.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{}}}],["add'},{'name",{"_index":83,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["add.component.html",{"_index":37,"title":{},"body":{"components/AddComponent.html":{}}}],["add_box",{"_index":74,"title":{},"body":{"components/AddComponent.html":{}}}],["addaddressbook",{"_index":1,"title":{"interfaces/AddAddressBook.html":{}},"body":{"interfaces/AddAddressBook.html":{},"injectables/WalletRpcService.html":{}}}],["addaddressbook(x",{"_index":2664,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["addcomponent",{"_index":22,"title":{"components/AddComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["adding",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["addon",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["addoptions",{"_index":744,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["addoptions(overrides",{"_index":748,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["address",{"_index":9,"title":{"interfaces/Address.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["adds",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adduser",{"_index":2290,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["addwallet",{"_index":1846,"title":{},"body":{"components/OpenComponent.html":{}}}],["adjust",{"_index":2984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adjustments",{"_index":977,"title":{},"body":{"injectables/ChartService.html":{}}}],["afterviewinit",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["again",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{}}}],["ago",{"_index":2349,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["algorithm",{"_index":580,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["alias",{"_index":2026,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["allow",{"_index":1269,"title":{},"body":{"injectables/CryptService.html":{}}}],["alpha(0.2",{"_index":1026,"title":{},"body":{"injectables/ChartService.html":{}}}],["already",{"_index":1817,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["always",{"_index":1254,"title":{},"body":{"injectables/CryptService.html":{}}}],["amount",{"_index":1398,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["amp",{"_index":2417,"title":{},"body":{"components/UserComponent.html":{}}}],["angular",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["angular/compiler",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":66,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":1917,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":654,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/card",{"_index":652,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/checkbox",{"_index":2485,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/core",{"_index":2482,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/dialog",{"_index":1408,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{}}}],["angular/material/divider",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/expansion",{"_index":2630,"title":{},"body":{"modules/WalletModule.html":{}}}],["angular/material/form",{"_index":2202,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/input",{"_index":656,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/list",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/menu",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":2487,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/select",{"_index":2205,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/sidenav",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":2165,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/toolbar",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/tooltip",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["angular/platform",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":1405,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["animation",{"_index":761,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animationduration",{"_index":763,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animations",{"_index":765,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"dependencies.html":{}}}],["ansi",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["any):string|null",{"_index":2836,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["anyone",{"_index":2449,"title":{},"body":{"components/UserComponent.html":{}}}],["anything",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1498,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebsocketService.html":{},"index.html":{}}}],["apiurl",{"_index":1506,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["app",{"_index":87,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["app'},{'name",{"_index":85,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["app.component",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":453,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app.service",{"_index":1321,"title":{},"body":{"injectables/CryptService.html":{}}}],["app/pipes/crypto/tocoin.pipe",{"_index":1893,"title":{},"body":{"modules/PipesModule.html":{}}}],["app/pipes/pipes.module",{"_index":2638,"title":{},"body":{"modules/WalletModule.html":{}}}],["app/plugins/plugins.component",{"_index":1932,"title":{},"body":{"modules/PluginsModule.html":{}}}],["app_config",{"_index":465,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["app_config.environment",{"_index":813,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["app_config.production",{"_index":521,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/DataModule.html":{}}}],["appcomponent",{"_index":84,"title":{"components/AppComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["appfilesystem",{"_index":1479,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["application",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"index.html":{}}}],["application/x",{"_index":887,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["applicationref",{"_index":1936,"title":{},"body":{"injectables/PluginsService.html":{}}}],["applies",{"_index":975,"title":{},"body":{"injectables/ChartService.html":{}}}],["appmodule",{"_index":298,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":305,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":446,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":455,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CryptService.html":{}}}],["appstate",{"_index":477,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{}}}],["arg",{"_index":2694,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["args",{"_index":1644,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["armored",{"_index":1350,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredkey",{"_index":1363,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredmessage",{"_index":1369,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoured",{"_index":1244,"title":{},"body":{"injectables/CryptService.html":{}}}],["array",{"_index":1312,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{}}}],["assert",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["async",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["atob",{"_index":1521,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["atob(dat",{"_index":1527,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["atob(data[1",{"_index":1177,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["atob(state",{"_index":516,"title":{},"body":{"interfaces/AppState.html":{}}}],["atomic",{"_index":526,"title":{"classes/Atomic.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["atomic(this.times(1e8",{"_index":546,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["attach",{"_index":1148,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/PluginsService.html":{}}}],["attached",{"_index":2034,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["auth",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":2285,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auth/route.guard",{"_index":2495,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["authenticated",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2441,"title":{},"body":{"components/UserComponent.html":{}}}],["authguard",{"_index":590,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["authmodule",{"_index":306,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1966,"title":{},"body":{"components/PostComponent.html":{}}}],["authservice",{"_index":594,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auto",{"_index":1223,"title":{},"body":{"components/ConsoleComponent.html":{},"interfaces/ProfileState.html":{}}}],["automatically",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["autosave_current",{"_index":2082,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["available",{"_index":1580,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{},"components/WalletComponent.html":{},"modules.html":{}}}],["avatar",{"_index":2027,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["await",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["aware",{"_index":1258,"title":{},"body":{"injectables/CryptService.html":{}}}],["away",{"_index":2324,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["axios",{"_index":2061,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["axios.post(`${this.apiurl}/${cmd",{"_index":2837,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["axios.post(url",{"_index":2064,"title":{},"body":{"interfaces/Response.html":{}}}],["b",{"_index":1217,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["backend",{"_index":2797,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd",{"_index":2801,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd:string",{"_index":2835,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["background",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["backgroundcolor",{"_index":1722,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["backup",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{},"components/BackupComponent.html":{}}}],["backup'},{'name",{"_index":88,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["backup.component.html",{"_index":717,"title":{},"body":{"components/BackupComponent.html":{}}}],["backupcomponent",{"_index":86,"title":{"components/BackupComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["balance",{"_index":726,"title":{"interfaces/Balance.html":{}},"body":{"interfaces/Balance.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["bar",{"_index":2488,"title":{},"body":{"modules/UserModule.html":{}}}],["basechartconfigservice",{"_index":741,"title":{"injectables/BaseChartConfigService.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:12",{"_index":1731,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:121",{"_index":1719,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:16",{"_index":1725,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:17",{"_index":1730,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:18",{"_index":1724,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:31",{"_index":1717,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:61",{"_index":1720,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["before",{"_index":563,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["below",{"_index":2433,"title":{},"body":{"components/UserComponent.html":{}}}],["below_amount",{"_index":2268,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["benefit",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta.35",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1011,"title":{},"body":{"injectables/ChartService.html":{}}}],["big",{"_index":530,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["big.js",{"_index":535,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["bigger",{"_index":1292,"title":{},"body":{"injectables/CryptService.html":{}}}],["biggercontentfont",{"_index":2218,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["binaries",{"_index":876,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["binary",{"_index":1352,"title":{},"body":{"injectables/CryptService.html":{}}}],["black",{"_index":1429,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["blank",{"_index":2402,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["block",{"_index":1539,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/RestoreWallet.html":{}}}],["block.age",{"_index":836,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.hash",{"_index":837,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.height",{"_index":838,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.timestamp",{"_index":839,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block_height",{"_index":1876,"title":{},"body":{"interfaces/Payment.html":{}}}],["blockchain",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["blockchain.component",{"_index":857,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain.component.html",{"_index":795,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchain.component.scss",{"_index":794,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchaincomponent",{"_index":89,"title":{"components/BlockchainComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["blockchainmodule",{"_index":851,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainroutingmodule",{"_index":408,"title":{"modules/BlockchainRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":352,"title":{"injectables/BlockchainService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["blocks",{"_index":562,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["blocks.headings.age",{"_index":832,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.hash",{"_index":833,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.height",{"_index":834,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.time",{"_index":835,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.title",{"_index":831,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["bootstrap",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["bootstrap#readme",{"_index":2554,"title":{},"body":{"components/WalletComponent.html":{}}}],["bootstrap.git",{"_index":2553,"title":{},"body":{"components/WalletComponent.html":{}}}],["bootstrap/ng",{"_index":1668,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["border",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["bordercolor",{"_index":1723,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["borderwidth",{"_index":774,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["bottom",{"_index":1742,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["bounds",{"_index":1757,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["box",{"_index":846,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["brain",{"_index":1286,"title":{},"body":{"injectables/CryptService.html":{}}}],["browse",{"_index":2505,"title":{},"body":{"components/VpnComponent.html":{},"modules.html":{}}}],["browser",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"components/PluginsComponent.html":{},"modules/TranslateModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["browserify",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/TranslateModule.html":{}}}],["browsermodule.withservertransition({appid",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa",{"_index":1522,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["btoa(data",{"_index":1529,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["btoa(state",{"_index":513,"title":{},"body":{"interfaces/AppState.html":{}}}],["build",{"_index":2995,"title":{},"body":{"index.html":{}}}],["builddocumentation",{"_index":2999,"title":{},"body":{"index.html":{}}}],["building",{"_index":2463,"title":{},"body":{"components/UserComponent.html":{}}}],["buildtype",{"_index":796,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["button.install",{"_index":2156,"title":{},"body":{"components/RootComponent.html":{}}}],["bypassed",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["byte/64",{"_index":569,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["bytebuffer",{"_index":1523,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["calc(99vh",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["calculated",{"_index":555,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["call",{"_index":2804,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["callback",{"_index":779,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["callbacks",{"_index":785,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["called",{"_index":2871,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["canactivate",{"_index":593,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["canactivate(route",{"_index":597,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cant",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canvas",{"_index":1226,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["capital",{"_index":2014,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["caretsize",{"_index":1772,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["catch",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/FileSystemService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["catcherror",{"_index":1116,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["catcherror((error",{"_index":1107,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["chain",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{}}}],["chain'},{'name",{"_index":90,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["chance",{"_index":1375,"title":{},"body":{"injectables/CryptService.html":{}}}],["change",{"_index":1030,"title":{},"body":{"injectables/ChartService.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{}}}],["changedetection",{"_index":1136,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy",{"_index":1166,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1137,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectorref",{"_index":1152,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changelanguage",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["changelanguage(lang",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":57,"title":{},"body":{"components/AddComponent.html":{}}}],["changestream",{"_index":1146,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel",{"_index":1156,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel:string",{"_index":1192,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["channel",{"_index":1158,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["character",{"_index":570,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["charged",{"_index":2397,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["chart",{"_index":496,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BaseChartConfigService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chart(`lthn",{"_index":1039,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.chartseffects",{"_index":523,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.chartsstate",{"_index":483,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.directive",{"_index":958,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.js",{"_index":991,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chart.reducer",{"_index":504,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.register(...registerables",{"_index":1018,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.service",{"_index":934,"title":{},"body":{"directives/ChartDirective.html":{},"modules/ChartModule.html":{}}}],["chartconfiginterface",{"_index":902,"title":{"interfaces/ChartConfigInterface.html":{}},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartdata",{"_index":960,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartdifficulty",{"_index":909,"title":{"interfaces/ChartDifficulty.html":{}},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartsEffects.html":{}}}],["chartdifficultyreducer",{"_index":1130,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultyreducer(state",{"_index":1134,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultystate",{"_index":913,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{}}}],["chartdirective",{"_index":129,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["chartelement",{"_index":917,"title":{},"body":{"directives/ChartDirective.html":{}}}],["chartinstances",{"_index":961,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartjs",{"_index":1000,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chartmeta",{"_index":962,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartmodule",{"_index":855,"title":{"modules/ChartModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartnetworkdifficulty",{"_index":1111,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultyloadrequested",{"_index":1086,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystartpolling",{"_index":1065,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystoppolling",{"_index":1066,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["charts",{"_index":479,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ChartService.html":{}}}],["charts.network",{"_index":824,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["chartsactions",{"_index":1117,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultyloadfailure",{"_index":1109,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadrequested",{"_index":1080,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadsuccess",{"_index":1106,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["chartsactions.chartnetworkdifficultystartpolling",{"_index":1726,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultystoppedpolling",{"_index":1083,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultystoppolling",{"_index":1728,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartseffects",{"_index":1063,"title":{"injectables/ChartsEffects.html":{}},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty",{"_index":1098,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty$.next(true",{"_index":1079,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartservice",{"_index":793,"title":{"injectables/ChartService.html":{}},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"overview.html":{}}}],["chartsstate",{"_index":1125,"title":{"interfaces/ChartsState.html":{}},"body":{"interfaces/ChartsState.html":{}}}],["chartsubscriptions",{"_index":963,"title":{},"body":{"injectables/ChartService.html":{}}}],["check",{"_index":606,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{}}}],["checks",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1143,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["circumstances",{"_index":2451,"title":{},"body":{"components/UserComponent.html":{}}}],["class",{"_index":67,"title":{"classes/Atomic.html":{},"classes/LTHN.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["classes",{"_index":527,"title":{},"body":{"classes/Atomic.html":{},"classes/LTHN.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"overview.html":{}}}],["clear",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/WebStorageService.html":{}}}],["cleartext",{"_index":2439,"title":{},"body":{"components/UserComponent.html":{}}}],["cli",{"_index":1179,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["client",{"_index":1974,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["client.database",{"_index":2145,"title":{},"body":{"components/RootComponent.html":{}}}],["client.database.getstate(`/hive",{"_index":1983,"title":{},"body":{"components/PostComponent.html":{}}}],["close",{"_index":1654,"title":{},"body":{"components/ModalComponent.html":{},"injectables/PluginsService.html":{}}}],["closebuttonlabel",{"_index":1687,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["closeconnection",{"_index":2845,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closed",{"_index":2879,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cloud",{"_index":2250,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_download",{"_index":75,"title":{},"body":{"components/AddComponent.html":{},"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cloud_off",{"_index":2251,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_upload",{"_index":722,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cluster_appmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":447,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":449,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":448,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":647,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":648,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":852,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_blockchaincomponent_providers",{"_index":853,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_declarations",{"_index":3006,"title":{},"body":{"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":854,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":953,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_chartdirective_providers",{"_index":955,"title":{},"body":{"modules/ChartModule.html":{}}}],["cluster_chartmodule_declarations",{"_index":954,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_exports",{"_index":956,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_consolemodule",{"_index":1227,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_declarations",{"_index":1228,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_exports",{"_index":1229,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":1624,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_declarations",{"_index":1626,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":1625,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":1707,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1709,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1708,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1878,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1880,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1879,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule",{"_index":1927,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_declarations",{"_index":1930,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_exports",{"_index":1928,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_providers",{"_index":1929,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":1994,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_declarations",{"_index":1995,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_rootmodule",{"_index":2158,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_declarations",{"_index":2160,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_imports",{"_index":2159,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootroutingmodule",{"_index":2167,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_rootroutingmodule_imports",{"_index":2168,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_settingsmodule",{"_index":2197,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2199,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2198,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_statusmodule",{"_index":2255,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_declarations",{"_index":2256,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":2257,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2478,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2479,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_vpnmodule",{"_index":2520,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_vpnmodule_declarations",{"_index":2521,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":2623,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_declarations",{"_index":2625,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_exports",{"_index":2626,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":2624,"title":{},"body":{"modules/WalletModule.html":{}}}],["cmd",{"_index":2805,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["code",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["col",{"_index":2540,"title":{},"body":{"components/WalletComponent.html":{}}}],["color",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["colorlib",{"_index":1003,"title":{},"body":{"injectables/ChartService.html":{}}}],["colors",{"_index":759,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{}}}],["colour",{"_index":976,"title":{},"body":{"injectables/ChartService.html":{}}}],["columnmode",{"_index":2357,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["columns",{"_index":2358,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["command",{"_index":1144,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["commonmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["community",{"_index":2504,"title":{},"body":{"components/VpnComponent.html":{}}}],["completed",{"_index":2284,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["component",{"_index":21,"title":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{}}}],["component_template",{"_index":82,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["componentfactoryresolver",{"_index":1937,"title":{},"body":{"injectables/PluginsService.html":{}}}],["components",{"_index":23,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["components/add.component",{"_index":2637,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/new.component",{"_index":2631,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/restore.component",{"_index":2632,"title":{},"body":{"modules/WalletModule.html":{}}}],["componentshow",{"_index":1926,"title":{},"body":{"components/PluginsComponent.html":{}}}],["conf/app.ini",{"_index":2299,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["confidentiality",{"_index":2436,"title":{},"body":{"components/UserComponent.html":{}}}],["confidentially",{"_index":2418,"title":{},"body":{"components/UserComponent.html":{}}}],["config",{"_index":467,"title":{},"body":{"injectables/AppService.html":{},"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["config.interface",{"_index":1736,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.interface.ts",{"_index":904,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:7",{"_index":908,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:9",{"_index":907,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.service",{"_index":1734,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.service.ts",{"_index":743,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:12",{"_index":786,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:50",{"_index":747,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:57",{"_index":753,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:59",{"_index":752,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:61",{"_index":750,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:7",{"_index":756,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:8",{"_index":787,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:9",{"_index":755,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["configiniparser",{"_index":462,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser('\\r\\n",{"_index":2294,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser.errors.errorduplicatesectionerror",{"_index":2301,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configs",{"_index":1015,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurations",{"_index":996,"title":{},"body":{"injectables/ChartService.html":{}}}],["configureoptions",{"_index":745,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["confirm",{"_index":1819,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/UserComponent.html":{}}}],["connect",{"_index":2846,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connection",{"_index":2878,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["considered",{"_index":738,"title":{},"body":{"interfaces/Balance.html":{}}}],["console",{"_index":1140,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console'},{'name",{"_index":92,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["console.component",{"_index":1231,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["console.component.html",{"_index":1142,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":1141,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.error('duplicated",{"_index":2302,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.error(error",{"_index":1108,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["console.log",{"_index":1811,"title":{},"body":{"components/NewComponent.html":{}}}],["console.log(\"blockchain",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('blockchaincomponent",{"_index":822,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["console.log('cleaning",{"_index":2322,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('complete",{"_index":2877,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('creating",{"_index":2305,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('done",{"_index":2323,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('e",{"_index":1530,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log('getitem",{"_index":2828,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('http",{"_index":2842,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('keyboard",{"_index":1198,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log('keys",{"_index":2309,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('message",{"_index":2869,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('saving",{"_index":2311,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('setitem",{"_index":2830,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('settingscomponent",{"_index":2183,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log('wallet",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('walletcomponent",{"_index":2574,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.log(`cmd:letheand:${this.command.join",{"_index":1209,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(dat",{"_index":897,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{}}}],["console.log(data",{"_index":2066,"title":{},"body":{"interfaces/Response.html":{}}}],["console.log(err",{"_index":2874,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":1058,"title":{},"body":{"injectables/ChartService.html":{}}}],["console.log(post",{"_index":1992,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.command.join",{"_index":1220,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(this.router.routerstate.snapshot.url",{"_index":1982,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.rows",{"_index":2388,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["consolecomponent",{"_index":91,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["consolemodule",{"_index":307,"title":{"modules/ConsoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["construction",{"_index":579,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["constructor",{"_index":45,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(actions",{"_index":1070,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["constructor(appfilesystem",{"_index":1476,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["constructor(appservice",{"_index":1240,"title":{},"body":{"injectables/CryptService.html":{}}}],["constructor(authservice",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cryptservice",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor(dialog",{"_index":2242,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(dialogref",{"_index":1821,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["constructor(fs",{"_index":2751,"title":{},"body":{"injectables/WalletService.html":{}}}],["constructor(http",{"_index":802,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["constructor(injector",{"_index":1909,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["constructor(modalservice",{"_index":1656,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(name",{"_index":2791,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["constructor(private",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["constructor(public",{"_index":2249,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(renderer",{"_index":919,"title":{},"body":{"directives/ChartDirective.html":{}}}],["constructor(router",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["constructor(store",{"_index":967,"title":{},"body":{"injectables/ChartService.html":{}}}],["constructor(wallet",{"_index":1834,"title":{},"body":{"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(walletrpc",{"_index":1795,"title":{},"body":{"components/NewComponent.html":{}}}],["constructor(ws",{"_index":1149,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["container",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["content",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockchainService.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/PostComponent.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletRpcService.html":{}}}],["content.tofixed(2",{"_index":1574,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["content/html.pipe",{"_index":1888,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/markdown.pipe",{"_index":1891,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/shruggie.pipe",{"_index":1889,"title":{},"body":{"modules/PipesModule.html":{}}}],["contents",{"_index":1457,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["context",{"_index":1785,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["contributing",{"_index":2882,"title":{"contributing.html":{}},"body":{}}],["conversion",{"_index":1253,"title":{},"body":{"injectables/CryptService.html":{}}}],["convert",{"_index":1919,"title":{},"body":{"components/PluginsComponent.html":{}}}],["converted",{"_index":1319,"title":{},"body":{"injectables/CryptService.html":{}}}],["cost",{"_index":2518,"title":{},"body":{"components/VpnComponent.html":{}}}],["count",{"_index":2795,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["create",{"_index":1306,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/PluginsService.html":{},"interfaces/RestoreWallet.html":{},"components/UserComponent.html":{}}}],["createchart",{"_index":964,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchart(name",{"_index":970,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchartelement",{"_index":918,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createchartelement(name",{"_index":927,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createcustomelement",{"_index":1916,"title":{},"body":{"components/PluginsComponent.html":{}}}],["createcustomelement(walletcomponent",{"_index":1922,"title":{},"body":{"components/PluginsComponent.html":{}}}],["created",{"_index":2310,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"contributing.html":{}}}],["createeffect",{"_index":1073,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["createopenpgp",{"_index":1234,"title":{},"body":{"injectables/CryptService.html":{}}}],["createopenpgp(username",{"_index":1242,"title":{},"body":{"injectables/CryptService.html":{}}}],["createreducer",{"_index":1127,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["creates",{"_index":978,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["createsalt",{"_index":1235,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(input",{"_index":1248,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(username",{"_index":2320,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createwallet",{"_index":587,"title":{"interfaces/CreateWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["createwallet(x",{"_index":2666,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["creation",{"_index":2465,"title":{},"body":{"components/UserComponent.html":{}}}],["crypto",{"_index":458,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["crypto/effort.pipe",{"_index":1892,"title":{},"body":{"modules/PipesModule.html":{}}}],["crypto/hashrate.pipe",{"_index":1886,"title":{},"body":{"modules/PipesModule.html":{}}}],["cryptservice",{"_index":661,"title":{"injectables/CryptService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["cryptservice.sha256salty(username",{"_index":1289,"title":{},"body":{"injectables/CryptService.html":{}}}],["current",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/RestoreWallet.html":{}}}],["currentflag",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["currentlanguage",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{},"components/PluginsComponent.html":{}}}],["customelements.define('lthn",{"_index":1924,"title":{},"body":{"components/PluginsComponent.html":{}}}],["d",{"_index":1747,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"pipes/TimeAgoPipe.html":{}}}],["d.gettime",{"_index":2333,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["daemon",{"_index":1403,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/ProfileComponent.html":{},"modules/StatusModule.html":{}}}],["daemon'},{'name",{"_index":103,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["daltonism",{"_index":2219,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["darkmode",{"_index":2220,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["dat",{"_index":901,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletService.html":{}}}],["dat.endswith('.keys",{"_index":2773,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.endswith('.txt",{"_index":2774,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.length",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["data",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/ProfileState.html":{},"interfaces/Response.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["data.data",{"_index":2839,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["data.data.blocks",{"_index":821,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["data.description",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["data.heading",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["data.length",{"_index":2565,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["data.map((n",{"_index":1787,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["data.robots",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["data/data.module",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["data/debug.rxjs",{"_index":1119,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["data/interface/pagination",{"_index":2787,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["data/plugins",{"_index":2560,"title":{},"body":{"components/WalletComponent.html":{}}}],["data['data",{"_index":2068,"title":{},"body":{"interfaces/Response.html":{}}}],["data['data'].result",{"_index":2070,"title":{},"body":{"interfaces/Response.html":{}}}],["data['in",{"_index":2383,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data['out",{"_index":2384,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data[0",{"_index":1176,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["database",{"_index":2040,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["datamap",{"_index":905,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamap(data",{"_index":906,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamodule",{"_index":308,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["dataset",{"_index":1721,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dataset.backgroundcolor",{"_index":1024,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.bordercolor",{"_index":1028,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.yaxisid",{"_index":1036,"title":{},"body":{"injectables/ChartService.html":{}}}],["datasets",{"_index":754,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datastore",{"_index":985,"title":{},"body":{"injectables/ChartService.html":{}}}],["datatable",{"_index":2377,"title":{},"body":{"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["dataupdates",{"_index":2847,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["date",{"_index":841,"title":{},"body":{"components/BlockchainComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["date(value",{"_index":2329,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date/timeago.pipe",{"_index":1887,"title":{},"body":{"modules/PipesModule.html":{}}}],["day",{"_index":1746,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["days",{"_index":2339,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["dd/mm/yyyy",{"_index":842,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["dealing",{"_index":2765,"title":{},"body":{"injectables/WalletService.html":{}}}],["debug",{"_index":1076,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{},"miscellaneous/enumerations.html":{}}}],["debug(rxjslogginglevel.debug",{"_index":1104,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["decimation",{"_index":1775,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["declaration",{"_index":2421,"title":{},"body":{"components/UserComponent.html":{}}}],["declarations",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["decorator",{"_index":1567,"title":{},"body":{"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{}}}],["decorators",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["decrypt",{"_index":515,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["decrypted",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["decrypted.id",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["decrypted.username",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["decryption",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["decryptionkey",{"_index":2472,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["decryptionkeys",{"_index":1372,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle",{"_index":1236,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle(id",{"_index":1274,"title":{},"body":{"injectables/CryptService.html":{}}}],["deep",{"_index":736,"title":{},"body":{"interfaces/Balance.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["defaultlanguage",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":17,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/TransferSplitIn.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["delete",{"_index":2831,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["deleteaddressbook",{"_index":2647,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["deleteaddressbook(x",{"_index":2668,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dependencies",{"_index":300,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2510,"title":{},"body":{"components/VpnComponent.html":{}}}],["deprecated",{"_index":471,"title":{},"body":{"injectables/AppService.html":{}}}],["deps",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["describes",{"_index":1287,"title":{},"body":{"injectables/CryptService.html":{}}}],["describing",{"_index":1639,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["description_short",{"_index":1896,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["designed",{"_index":2423,"title":{},"body":{"components/UserComponent.html":{}}}],["desktop",{"_index":2990,"title":{},"body":{"index.html":{}}}],["destination",{"_index":536,"title":{"interfaces/Destination.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destinations",{"_index":550,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destroy",{"_index":823,"title":{},"body":{"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["destroysubscriptions",{"_index":965,"title":{},"body":{"injectables/ChartService.html":{}}}],["destroysubscriptions(name",{"_index":979,"title":{},"body":{"injectables/ChartService.html":{}}}],["details",{"_index":2457,"title":{},"body":{"components/UserComponent.html":{}}}],["detector",{"_index":1959,"title":{},"body":{"injectables/PluginsService.html":{}}}],["dev",{"_index":815,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["dev:setup",{"_index":2997,"title":{},"body":{"index.html":{}}}],["develop",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["development",{"_index":2994,"title":{},"body":{"index.html":{}}}],["devices",{"_index":1296,"title":{},"body":{"injectables/CryptService.html":{}}}],["devproduction",{"_index":2998,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1380,"title":{},"body":{"modules/DataModule.html":{}}}],["di",{"_index":1013,"title":{},"body":{"injectables/ChartService.html":{}}}],["dialog",{"_index":2237,"title":{},"body":{"components/StatusComponent.html":{}}}],["dialog/no",{"_index":2261,"title":{},"body":{"modules/StatusModule.html":{}}}],["dialogdata",{"_index":1401,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dialogref",{"_index":1410,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dictionaries",{"_index":2010,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diff",{"_index":911,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["digital",{"_index":2425,"title":{},"body":{"components/UserComponent.html":{}}}],["dir",{"_index":878,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{}}}],["directive",{"_index":80,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["directives",{"_index":128,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["directory",{"_index":1482,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["dirname",{"_index":1454,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["disableclosebutton",{"_index":1690,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disableconsole",{"_index":2111,"title":{},"body":{"components/RootComponent.html":{}}}],["disabled",{"_index":1903,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["disabledismissbutton",{"_index":1691,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disablerpclogin",{"_index":2719,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["discussions",{"_index":2152,"title":{},"body":{"components/RootComponent.html":{}}}],["dismiss",{"_index":1655,"title":{},"body":{"components/ModalComponent.html":{}}}],["dismissbuttonlabel",{"_index":1688,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["dispatch",{"_index":2194,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["display",{"_index":783,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["displaycolors",{"_index":1774,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["displayformats",{"_index":1745,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dkey",{"_index":2028,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["do_not_relay",{"_index":2269,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["doc",{"_index":3000,"title":{},"body":{"index.html":{}}}],["doc:serve",{"_index":3001,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(popup",{"_index":1962,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.body.appendchild(popupel",{"_index":1951,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.body.removechild(popupel",{"_index":1949,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.createelement('lthn",{"_index":1946,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.getelementbyid(name",{"_index":1851,"title":{},"body":{"components/OpenComponent.html":{}}}],["dom",{"_index":25,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["domsanitizer",{"_index":1438,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["don't",{"_index":2437,"title":{},"body":{"components/UserComponent.html":{}}}],["don\\'t",{"_index":2468,"title":{},"body":{"components/UserComponent.html":{}}}],["dont",{"_index":2455,"title":{},"body":{"components/UserComponent.html":{},"contributing.html":{}}}],["download",{"_index":875,"title":{},"body":{"injectables/BlockchainService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["downloadcli",{"_index":869,"title":{},"body":{"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["downloadingcli",{"_index":2112,"title":{},"body":{"components/RootComponent.html":{}}}],["drawborder",{"_index":1761,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dto/makeuriin",{"_index":539,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["duration",{"_index":764,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["during",{"_index":605,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["dvpn",{"_index":2148,"title":{},"body":{"components/RootComponent.html":{}}}],["dynamic",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FileSystemService.html":{},"pipes/HashRatePipe.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["e.domevent",{"_index":1202,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.domevent.keycode",{"_index":1199,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.key",{"_index":1200,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e2e2e2",{"_index":760,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["each",{"_index":997,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Destination.html":{}}}],["easier",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["ecc",{"_index":1343,"title":{},"body":{"injectables/CryptService.html":{}}}],["effects",{"_index":522,"title":{"injectables/Effects.html":{},"injectables/Effects-1.html":{}},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{}}}],["effectsmodule",{"_index":1381,"title":{},"body":{"modules/DataModule.html":{}}}],["effectsmodule.forroot([...effects",{"_index":1394,"title":{},"body":{"modules/DataModule.html":{}}}],["effort",{"_index":1421,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["effortpipe",{"_index":1418,"title":{"pipes/EffortPipe.html":{}},"body":{"pipes/EffortPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["ekey",{"_index":2029,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["elementref",{"_index":922,"title":{},"body":{"directives/ChartDirective.html":{}}}],["elements",{"_index":769,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["elmref",{"_index":921,"title":{},"body":{"directives/ChartDirective.html":{}}}],["empty",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["en",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":1829,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["enabled",{"_index":1776,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["enabledblocking",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encapsulation",{"_index":1138,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encoded",{"_index":2274,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["encrypt",{"_index":511,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["encrypted",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryption",{"_index":1309,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryptionkey",{"_index":1353,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkey.length",{"_index":1356,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkeys",{"_index":1361,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle",{"_index":1237,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle(id",{"_index":1290,"title":{},"body":{"injectables/CryptService.html":{}}}],["endpoints",{"_index":2993,"title":{},"body":{"index.html":{}}}],["engine",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["engineering",{"_index":2020,"title":{},"body":{"components/ProfileComponent.html":{}}}],["english",{"_index":1814,"title":{},"body":{"components/NewComponent.html":{}}}],["enough",{"_index":737,"title":{},"body":{"interfaces/Balance.html":{}}}],["entity",{"_index":1387,"title":{},"body":{"modules/DataModule.html":{}}}],["entityconfig",{"_index":1386,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule",{"_index":1384,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule.forroot(entityconfig",{"_index":1396,"title":{},"body":{"modules/DataModule.html":{}}}],["entries",{"_index":1533,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["enum",{"_index":1902,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/UserOptions.html":{}}}],["enumerations",{"_index":2954,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":466,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["err",{"_index":2873,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["error",{"_index":1057,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["error(`chart",{"_index":1022,"title":{},"body":{"injectables/ChartService.html":{}}}],["error(`failed",{"_index":1357,"title":{},"body":{"injectables/CryptService.html":{}}}],["escapehtmlpipe",{"_index":1433,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["etc",{"_index":2036,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["ev",{"_index":1201,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.altkey",{"_index":1204,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.ctrlkey",{"_index":1205,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.keycode",{"_index":1207,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.metakey",{"_index":1206,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["even",{"_index":1299,"title":{},"body":{"injectables/CryptService.html":{},"injectables/PluginsService.html":{}}}],["event",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"injectables/PluginsService.html":{}}}],["exactly",{"_index":2515,"title":{},"body":{"components/VpnComponent.html":{}}}],["exists",{"_index":1444,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["exists(pathname",{"_index":1480,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(type",{"_index":1448,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["exitnode",{"_index":2511,"title":{},"body":{"components/VpnComponent.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["exportchain",{"_index":870,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["exports",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["expose",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["express",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["exsist",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exsists",{"_index":1451,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["extends",{"_index":529,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["extra",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["factory",{"_index":1954,"title":{},"body":{"injectables/PluginsService.html":{}}}],["factory.create(this.injector",{"_index":1957,"title":{},"body":{"injectables/PluginsService.html":{}}}],["fail",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":1553,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["fallback",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":581,"title":{},"body":{"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["family",{"_index":1753,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["favourites",{"_index":2508,"title":{},"body":{"components/VpnComponent.html":{}}}],["feature",{"_index":1830,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["fee",{"_index":551,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["fee_list",{"_index":2405,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["feedback",{"_index":1298,"title":{},"body":{"injectables/CryptService.html":{}}}],["field",{"_index":2203,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["file_open",{"_index":76,"title":{},"body":{"components/AddComponent.html":{}}}],["filename",{"_index":585,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{}}}],["files",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileSystemService.html":{}}}],["filesystem",{"_index":595,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["filesystem/file",{"_index":1322,"title":{},"body":{"injectables/CryptService.html":{}}}],["filesysteminterface",{"_index":1441,"title":{"interfaces/FileSystemInterface.html":{}},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["filesystemservice",{"_index":360,"title":{"injectables/FileSystemService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["filesystemwebservice",{"_index":1477,"title":{"injectables/FileSystemWebService.html":{}},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["fill",{"_index":845,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["filled",{"_index":849,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["filter",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GetTransfersIn.html":{},"injectables/WalletEffects.html":{}}}],["filter_by_height",{"_index":1554,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["find",{"_index":1010,"title":{},"body":{"injectables/ChartService.html":{}}}],["first",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{}}}],["flexmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["folder",{"_index":1456,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["follow,index",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":1750,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["forget",{"_index":2456,"title":{},"body":{"components/UserComponent.html":{}}}],["form",{"_index":889,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["format",{"_index":882,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{}}}],["formcontrol",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["formcontrol('0",{"_index":2081,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(false",{"_index":2087,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(true",{"_index":2083,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formgroup",{"_index":2078,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["found",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["free",{"_index":2428,"title":{},"body":{"components/UserComponent.html":{}}}],["friendly",{"_index":2030,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["fs",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"injectables/FileSystemService.html":{},"injectables/WalletService.html":{}}}],["full",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"modules/RootRoutingModule.html":{}}}],["function",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["functionality",{"_index":1826,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["functions",{"_index":2963,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funds",{"_index":733,"title":{},"body":{"interfaces/Balance.html":{},"injectables/WalletRpcService.html":{}}}],["g",{"_index":1432,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{}}}],["general",{"_index":2182,"title":{},"body":{"components/SettingsComponent.html":{}}}],["generated",{"_index":2031,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["generatekey",{"_index":1238,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatekey(input",{"_index":1304,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatepaymentid",{"_index":540,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["generating",{"_index":2107,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["generator",{"_index":2018,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["get('https://lethean.hashvault.pro/explorer/api/transactions",{"_index":818,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["get_tx_hex",{"_index":2270,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["get_tx_key",{"_index":574,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["get_tx_keys",{"_index":2271,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["getaddress",{"_index":2648,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook",{"_index":2649,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook(x",{"_index":2671,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbookout",{"_index":1531,"title":{"interfaces/GetAddressBookOut.html":{}},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["getauthstatus",{"_index":607,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getbalance",{"_index":2533,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["getbulkpayments",{"_index":2650,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpayments(x",{"_index":2675,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsin",{"_index":1535,"title":{"interfaces/GetBulkPaymentsIn.html":{}},"body":{"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsout",{"_index":1542,"title":{"interfaces/GetBulkPaymentsOut.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["getchild",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(activatedroute",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["getdiscussions('trending",{"_index":2146,"title":{},"body":{"components/RootComponent.html":{}}}],["getfilesystem",{"_index":1492,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["getheight",{"_index":2651,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getisapp",{"_index":810,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["getisweb",{"_index":808,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["getitem",{"_index":2798,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getitem(key",{"_index":2807,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getlength",{"_index":2819,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getpayments",{"_index":2652,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpayments(x",{"_index":2678,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpaymentsin",{"_index":1546,"title":{"interfaces/GetPaymentsIn.html":{}},"body":{"interfaces/GetPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getpaymentsout",{"_index":1548,"title":{"interfaces/GetPaymentsOut.html":{}},"body":{"interfaces/GetPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["gets",{"_index":983,"title":{},"body":{"injectables/ChartService.html":{},"injectables/WalletService.html":{}}}],["getsub",{"_index":1147,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["getting",{"_index":2881,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["gettransferbytxid",{"_index":2653,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransferbytxid(x",{"_index":2680,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers",{"_index":2654,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers(x",{"_index":2683,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfersin",{"_index":1550,"title":{"interfaces/GetTransfersIn.html":{}},"body":{"interfaces/GetTransfersIn.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["gettransfersout",{"_index":1560,"title":{"interfaces/GetTransfersOut.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["getwalletdata",{"_index":2562,"title":{},"body":{"components/WalletComponent.html":{}}}],["getwalletlist",{"_index":2748,"title":{},"body":{"injectables/WalletService.html":{}}}],["git_repo",{"_index":1897,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["github",{"_index":1260,"title":{},"body":{"injectables/CryptService.html":{}}}],["give",{"_index":1014,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["global",{"_index":2226,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["global_index",{"_index":1584,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["globalfontsize",{"_index":2221,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["go",{"_index":2325,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["good",{"_index":1262,"title":{},"body":{"injectables/CryptService.html":{}}}],["grade",{"_index":2460,"title":{},"body":{"components/UserComponent.html":{}}}],["gradient(circle",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":3004,"title":{},"body":{"modules.html":{}}}],["gridlines",{"_index":1759,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["group",{"_index":1598,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"injectables/WebStorageService.html":{}}}],["guard",{"_index":589,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":591,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handles",{"_index":601,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handling",{"_index":2420,"title":{},"body":{"components/UserComponent.html":{}}}],["happen",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["hascli",{"_index":2113,"title":{},"body":{"components/RootComponent.html":{}}}],["hash",{"_index":1316,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/TransferOut.html":{}}}],["hashrate",{"_index":1566,"title":{},"body":{"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart",{"_index":1008,"title":{},"body":{"injectables/ChartService.html":{}}}],["hashrate.chart.ts",{"_index":1713,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:12",{"_index":1727,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:132",{"_index":1718,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:14",{"_index":1729,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.subtitle",{"_index":826,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hashrate.title",{"_index":825,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hashratepipe",{"_index":1564,"title":{"pipes/HashRatePipe.html":{}},"body":{"pipes/HashRatePipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashvault",{"_index":827,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["headers",{"_index":886,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["heading",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["height",{"_index":258,"title":{"interfaces/Height.html":{}},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Height.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["height:40vh",{"_index":948,"title":{},"body":{"directives/ChartDirective.html":{}}}],["helps",{"_index":2512,"title":{},"body":{"components/VpnComponent.html":{}}}],["here",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["hex",{"_index":571,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["hexadecimal",{"_index":1637,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["hh:mm:ss",{"_index":843,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hidden",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["hideclosebutton",{"_index":1692,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidedismissbutton",{"_index":1693,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidenavigation",{"_index":2222,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highcontrasttext",{"_index":2223,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highlight",{"_index":2434,"title":{},"body":{"components/UserComponent.html":{}}}],["history",{"_index":2448,"title":{},"body":{"components/UserComponent.html":{}}}],["hiveio/dhive",{"_index":1975,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{},"dependencies.html":{}}}],["hold",{"_index":2438,"title":{},"body":{"components/UserComponent.html":{}}}],["holds",{"_index":988,"title":{},"body":{"injectables/ChartService.html":{}}}],["home",{"_index":877,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["host",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{}}}],["hours",{"_index":2337,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["hover",{"_index":762,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hovering",{"_index":766,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hsm/encrypted",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["html.dark",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":804,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":885,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["httploaderfactory",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["https",{"_index":2992,"title":{},"body":{"index.html":{}}}],["https://anyx.io",{"_index":1978,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1101,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["https://api.hive.blog",{"_index":1976,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hivekings.com",{"_index":1977,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.openhive.network",{"_index":1979,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://github.com/snider/plugin",{"_index":2552,"title":{},"body":{"components/WalletComponent.html":{}}}],["https://lethean.hashvault.pro/explorer/api/transactions",{"_index":816,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["https://localhost:36911/daemon/chain/export",{"_index":898,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/import",{"_index":899,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/start",{"_index":894,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/wallet/json_rpc",{"_index":2715,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/daemon/wallet/rpc",{"_index":2720,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/filesystem",{"_index":1518,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["https://localhost:36911/object",{"_index":2815,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["id",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{},"directives/ChartDirective.html":{},"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Response.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{}}}],["id's",{"_index":2033,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["idea",{"_index":1263,"title":{},"body":{"injectables/CryptService.html":{}}}],["identifiable",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["identify",{"_index":572,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["ids",{"_index":1348,"title":{},"body":{"injectables/CryptService.html":{}}}],["if(dat.length",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["if(data",{"_index":2381,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["if(data['data",{"_index":2069,"title":{},"body":{"interfaces/Response.html":{}}}],["if(data['data'].error",{"_index":2067,"title":{},"body":{"interfaces/Response.html":{}}}],["if(data[0",{"_index":1178,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154",{"_index":1181,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(parts.length",{"_index":1184,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(ret",{"_index":2826,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["if(this.attach",{"_index":1175,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(this.child.keyeventinput",{"_index":1196,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(wallet",{"_index":2568,"title":{},"body":{"components/WalletComponent.html":{}}}],["ignored",{"_index":554,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["im",{"_index":1257,"title":{},"body":{"injectables/CryptService.html":{}}}],["image",{"_index":2032,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["img",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":2766,"title":{},"body":{"injectables/WalletService.html":{}}}],["implements",{"_index":28,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["import('./blockchain.module').then((m",{"_index":866,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["import('./logs/logs.module').then((m",{"_index":2211,"title":{},"body":{"modules/SettingsModule.html":{}}}],["import('./post.module').then((m",{"_index":2000,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["import('./settings.module').then",{"_index":2214,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["import('./user.module').then((m",{"_index":2496,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["import('./wallet.module').then((m",{"_index":2644,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["important",{"_index":1224,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["importchain",{"_index":871,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imports",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["impose",{"_index":2430,"title":{},"body":{"components/UserComponent.html":{}}}],["inactivitythreshold",{"_index":2788,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["include",{"_index":850,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["including",{"_index":1489,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["incoming",{"_index":1590,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"components/WalletComponent.html":{}}}],["incomingtransfers",{"_index":2655,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfers(x",{"_index":2685,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfersin",{"_index":1577,"title":{"interfaces/IncomingTransfersIn.html":{}},"body":{"interfaces/IncomingTransfersIn.html":{},"injectables/WalletRpcService.html":{}}}],["incomingtransfersout",{"_index":1582,"title":{"interfaces/IncomingTransfersOut.html":{}},"body":{"interfaces/IncomingTransfersOut.html":{},"injectables/WalletRpcService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["informed",{"_index":2461,"title":{},"body":{"components/UserComponent.html":{}}}],["inherited",{"_index":1716,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ini",{"_index":468,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["init",{"_index":2184,"title":{},"body":{"components/SettingsComponent.html":{}}}],["initialnavigation",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":1128,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["inject",{"_index":931,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/RootComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1411,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(platform_id",{"_index":935,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["injectable",{"_index":454,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["injectable({providedin",{"_index":1671,"title":{},"body":{"components/ModalComponent.html":{}}}],["injectables",{"_index":456,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["injector",{"_index":1910,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["input",{"_index":65,"title":{},"body":{"components/AddComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["inputs",{"_index":43,"title":{},"body":{"components/AddComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["install",{"_index":1828,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"index.html":{}}}],["instance",{"_index":974,"title":{},"body":{"injectables/ChartService.html":{}}}],["instanceof",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["instances",{"_index":992,"title":{},"body":{"injectables/ChartService.html":{}}}],["int",{"_index":553,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["integer",{"_index":1635,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/TransferOut.html":{}}}],["integrated_address",{"_index":1594,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["integratedaddress",{"_index":1592,"title":{"interfaces/IntegratedAddress.html":{}},"body":{"interfaces/IntegratedAddress.html":{},"injectables/WalletRpcService.html":{}}}],["interact",{"_index":1280,"title":{},"body":{"injectables/CryptService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["interface/file",{"_index":1519,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{},"overview.html":{}}}],["interfaces/difficulty.state",{"_index":1120,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["interfaces/user.options",{"_index":2474,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["internal",{"_index":1588,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["intersect",{"_index":1771,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["interval",{"_index":2600,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["io",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["isapp",{"_index":801,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["isauthenticated",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ischecked",{"_index":2534,"title":{},"body":{"components/WalletComponent.html":{}}}],["ischecked(col",{"_index":2538,"title":{},"body":{"components/WalletComponent.html":{}}}],["isn't",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":933,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":936,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformserver",{"_index":1005,"title":{},"body":{"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["isplatformserver(this.platformid",{"_index":1055,"title":{},"body":{"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["ispollingactivestats",{"_index":2583,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["issue",{"_index":1261,"title":{},"body":{"injectables/CryptService.html":{}}}],["issues",{"_index":1259,"title":{},"body":{"injectables/CryptService.html":{}}}],["isweb",{"_index":800,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["it'll",{"_index":1294,"title":{},"body":{"injectables/CryptService.html":{}}}],["it's",{"_index":2453,"title":{},"body":{"components/UserComponent.html":{}}}],["it\\'s",{"_index":2469,"title":{},"body":{"components/UserComponent.html":{}}}],["item",{"_index":767,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["items",{"_index":2796,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["itself",{"_index":1318,"title":{},"body":{"injectables/CryptService.html":{}}}],["js",{"_index":476,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["json",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["json.parse",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(dat",{"_index":1525,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["json.parse(ret",{"_index":2827,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["json.stringify",{"_index":2317,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["json.stringify(rpcbody('get_transfers')({in",{"_index":2612,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody('getbalance",{"_index":2606,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody(method)(params))).then((data",{"_index":2065,"title":{},"body":{"interfaces/Response.html":{}}}],["jsonrpc",{"_index":2056,"title":{},"body":{"interfaces/Response.html":{}}}],["jszmq",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1570,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["keep",{"_index":2506,"title":{},"body":{"components/VpnComponent.html":{}}}],["keephtml",{"_index":1435,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["kept",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":575,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["key(key",{"_index":2809,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key(key:number",{"_index":2822,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key_type",{"_index":2043,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["keys",{"_index":510,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["keysize",{"_index":1339,"title":{},"body":{"injectables/CryptService.html":{}}}],["kind",{"_index":2876,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["know",{"_index":2763,"title":{},"body":{"injectables/WalletService.html":{}}}],["knowledge",{"_index":1264,"title":{},"body":{"injectables/CryptService.html":{}}}],["known",{"_index":1845,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletService.html":{}}}],["known_wallets",{"_index":2782,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["knows",{"_index":1960,"title":{},"body":{"injectables/PluginsService.html":{}}}],["kurkle/color",{"_index":1004,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["l337",{"_index":1252,"title":{},"body":{"injectables/CryptService.html":{}}}],["label",{"_index":1031,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["lang",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.de",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.en",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.es",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.fr",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.ru",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.zh",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/TransferSplitIn.html":{}}}],["last",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["last_update_check",{"_index":1900,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["later",{"_index":1273,"title":{},"body":{"injectables/CryptService.html":{}}}],["layout",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"injectables/NetworkHashrateChart.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leave",{"_index":1373,"title":{},"body":{"injectables/CryptService.html":{}}}],["left",{"_index":1740,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["legacy",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["length",{"_index":541,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WebStorageService.html":{}}}],["less",{"_index":1265,"title":{},"body":{"injectables/CryptService.html":{}}}],["lethean",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{},"modules/SettingsModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"index.html":{}}}],["lethean's",{"_index":2422,"title":{},"body":{"components/UserComponent.html":{}}}],["lethean/cli",{"_index":879,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["lethean/users",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{}}}],["lethean\\'s",{"_index":2467,"title":{},"body":{"components/UserComponent.html":{}}}],["letheanconfig",{"_index":459,"title":{},"body":{"injectables/AppService.html":{}}}],["level",{"_index":2985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["levels",{"_index":2960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["limit",{"_index":2149,"title":{},"body":{"components/RootComponent.html":{}}}],["limitations",{"_index":2431,"title":{},"body":{"components/UserComponent.html":{}}}],["line",{"_index":772,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/ConsoleComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:305",{"_index":1186,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["line.split(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154",{"_index":1183,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["linewidth",{"_index":1760,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["links",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"components/VpnComponent.html":{},"injectables/WalletService.html":{}}}],["list(dirname",{"_index":1509,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["list(type",{"_index":1453,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["listen",{"_index":1947,"title":{},"body":{"injectables/PluginsService.html":{}}}],["listfiles",{"_index":1473,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["listfiles(dirname",{"_index":1483,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["lists",{"_index":1844,"title":{},"body":{"components/OpenComponent.html":{}}}],["lite",{"_index":1251,"title":{},"body":{"injectables/CryptService.html":{}}}],["literal",{"_index":1534,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"interfaces/WalletsState.html":{}}}],["live",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":1303,"title":{},"body":{"injectables/CryptService.html":{}}}],["loadchildren",{"_index":865,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["loaded",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OpenComponent.html":{}}}],["loaded_keys",{"_index":1901,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["loaded_wallet",{"_index":2783,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["loader",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadrequestedchartdifficulty",{"_index":1067,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["loads",{"_index":972,"title":{},"body":{"injectables/ChartService.html":{}}}],["loadtransactions",{"_index":2360,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["loadtransfers",{"_index":2749,"title":{},"body":{"injectables/WalletService.html":{}}}],["loadtransfers(opts",{"_index":2755,"title":{},"body":{"injectables/WalletService.html":{}}}],["local",{"_index":2039,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["localstorage",{"_index":495,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":493,"title":{},"body":{"interfaces/AppState.html":{}}}],["localstoragesyncreducer",{"_index":508,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reducer",{"_index":2972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lock",{"_index":566,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["lock_open",{"_index":2252,"title":{},"body":{"components/StatusComponent.html":{}}}],["locked",{"_index":2458,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":1599,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logentry",{"_index":1596,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logged",{"_index":602,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logging",{"_index":2959,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login'},{'name",{"_index":94,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["login(username",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":650,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":1602,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":93,"title":{"components/LoginComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["loginmethod",{"_index":2491,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["loginmethods",{"_index":2492,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["logo",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["logonly",{"_index":1392,"title":{},"body":{"modules/DataModule.html":{}}}],["logout",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["logs",{"_index":480,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/LogEntry.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"modules/SettingsModule.html":{}}}],["logs'},{'name",{"_index":96,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["logs.component",{"_index":1628,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.component.html",{"_index":1620,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1619,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.logsstate",{"_index":484,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs.reducer",{"_index":506,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs/logs.module",{"_index":2206,"title":{},"body":{"modules/SettingsModule.html":{}}}],["logscomponent",{"_index":95,"title":{"components/LogsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["logsmodule",{"_index":1623,"title":{"modules/LogsModule.html":{}},"body":{"modules/LogsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsstate",{"_index":1600,"title":{"interfaces/LogsState.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["longer",{"_index":1293,"title":{},"body":{"injectables/CryptService.html":{}}}],["looking",{"_index":1540,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["lthn",{"_index":33,"title":{"classes/LTHN.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/DialogData.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["lthn(this.div(1e8",{"_index":547,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["lthn/rxjs",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["lthnchart",{"_index":130,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["lttb",{"_index":1777,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["m",{"_index":1571,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/SettingsRoutingModule.html":{}}}],["m.blockchainmodule",{"_index":867,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["m.logsmodule",{"_index":2212,"title":{},"body":{"modules/SettingsModule.html":{}}}],["m.postmodule",{"_index":2001,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2215,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["m.usermodule",{"_index":2497,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["m.walletmodule",{"_index":2645,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["made",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["magic",{"_index":2450,"title":{},"body":{"components/UserComponent.html":{}}}],["main",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["maintainaspectratio",{"_index":757,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["make",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{}}}],["makeintegratedaddress",{"_index":2656,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddress(x",{"_index":2687,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddressin",{"_index":1629,"title":{"interfaces/MakeIntegratedAddressIn.html":{}},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"injectables/WalletRpcService.html":{}}}],["makes",{"_index":2513,"title":{},"body":{"components/VpnComponent.html":{}}}],["makeuri",{"_index":2657,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuri(x",{"_index":2689,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuriin",{"_index":538,"title":{"interfaces/MakeUriIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["making",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":720,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["map",{"_index":986,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["map((payload",{"_index":2614,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["map((res",{"_index":2607,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["markdown",{"_index":1643,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownpipe",{"_index":1641,"title":{"pipes/MarkdownPipe.html":{}},"body":{"pipes/MarkdownPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["marked",{"_index":1646,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["marked(value",{"_index":1648,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["marketplace",{"_index":2503,"title":{},"body":{"components/VpnComponent.html":{}}}],["mat",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["mat_dialog_data",{"_index":1406,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matbuttonmodule",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["matcardmodule",{"_index":651,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["match",{"_index":1032,"title":{},"body":{"injectables/ChartService.html":{}}}],["matcheckboxmodule",{"_index":2484,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matdialog",{"_index":2243,"title":{},"body":{"components/StatusComponent.html":{}}}],["matdialogmodule",{"_index":2260,"title":{},"body":{"modules/StatusModule.html":{}}}],["matdialogref",{"_index":1407,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matdividermodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["matexpansionmodule",{"_index":2629,"title":{},"body":{"modules/WalletModule.html":{}}}],["matformfieldmodule",{"_index":2201,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["math.abs((now.gettime",{"_index":2332,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.floor(n.diff",{"_index":1789,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["math.round",{"_index":2331,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(days",{"_index":2343,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(hours",{"_index":2340,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(minutes",{"_index":2338,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(seconds",{"_index":2335,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math/removetrailingzeros.pipe",{"_index":1890,"title":{},"body":{"modules/PipesModule.html":{}}}],["maticonmodule",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matinputmodule",{"_index":655,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matlistmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["matmenumodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["matoptionmodule",{"_index":2481,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":2486,"title":{},"body":{"modules/UserModule.html":{}}}],["matselectmodule",{"_index":2204,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matsidenav",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":2164,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["mattoolbarmodule",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["mattooltipmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["max",{"_index":1559,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["max_height",{"_index":1555,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["maxage",{"_index":1390,"title":{},"body":{"modules/DataModule.html":{}}}],["maxrotation",{"_index":1758,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["maybe",{"_index":1268,"title":{},"body":{"injectables/CryptService.html":{}}}],["meaningless",{"_index":2440,"title":{},"body":{"components/UserComponent.html":{}}}],["means",{"_index":559,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["member",{"_index":2514,"title":{},"body":{"components/VpnComponent.html":{}}}],["menu",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.blockchain",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.dashboard",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.settings",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.wallet",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["menu_open",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":2602,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["message",{"_index":1359,"title":{},"body":{"injectables/CryptService.html":{},"injectables/PluginsService.html":{},"injectables/WebsocketService.html":{}}}],["meta",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["metadata",{"_index":31,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"modules/DataModule.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["metareducer",{"_index":490,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":520,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["metaservice",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":2058,"title":{},"body":{"interfaces/Response.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["mid",{"_index":1430,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["military",{"_index":2459,"title":{},"body":{"components/UserComponent.html":{}}}],["min",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{}}}],["min_block_height",{"_index":1537,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["min_height",{"_index":1556,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["mine",{"_index":723,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["minutes",{"_index":2334,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["mirror",{"_index":1765,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["miscellaneous",{"_index":2953,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mix",{"_index":558,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixin",{"_index":556,"title":{},"body":{"classes/Atomic.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixing",{"_index":560,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mkdir",{"_index":1445,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(dirname",{"_index":1485,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(type",{"_index":1458,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["mmm",{"_index":1748,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modal",{"_index":1650,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":98,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["modal.component.html",{"_index":1651,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":97,"title":{"components/ModalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["modalconfig",{"_index":1669,"title":{"interfaces/ModalConfig.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{}}}],["modalconfig.closebuttonlabel",{"_index":1685,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.dismissbuttonlabel",{"_index":1684,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.modaltitle",{"_index":1683,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":1652,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalmodule",{"_index":1706,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["modalref",{"_index":1653,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalservice",{"_index":1659,"title":{},"body":{"components/ModalComponent.html":{}}}],["modaltitle",{"_index":1689,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["mode",{"_index":1770,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["modify",{"_index":2429,"title":{},"body":{"components/UserComponent.html":{}}}],["module",{"_index":297,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}},"body":{}}],["module/auth/auth.module",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/login.component",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/auth/route.guard",{"_index":864,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/chart/base",{"_index":1733,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart",{"_index":1735,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart.module",{"_index":858,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chart/chart.service",{"_index":812,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["module/chart/data/actions",{"_index":1732,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/root",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/root.component",{"_index":2170,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/root.module",{"_index":2171,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/settings/data",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["module/settings/settings",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/status/status.module",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":299,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/chart/data",{"_index":497,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/settings/data",{"_index":491,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/user/data/user",{"_index":492,"title":{},"body":{"interfaces/AppState.html":{}}}],["moment",{"_index":1002,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["monero",{"_index":564,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["months",{"_index":2342,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["more",{"_index":1029,"title":{},"body":{"injectables/ChartService.html":{}}}],["mostly",{"_index":1587,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["msg",{"_index":2856,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["much",{"_index":2427,"title":{},"body":{"components/UserComponent.html":{}}}],["multiple",{"_index":1282,"title":{},"body":{"injectables/CryptService.html":{}}}],["n.ts",{"_index":1788,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["namelist",{"_index":2975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator",{"_index":1803,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"miscellaneous/functions.html":{}}}],["namenottakenvalidator(namelist",{"_index":2974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator(this.wallet.walletlist",{"_index":1807,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["names",{"_index":2011,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["names.mining",{"_index":828,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["navigationend",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp;&nbsp",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["nearest",{"_index":1769,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["need",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["network",{"_index":2442,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["network/chart/difficulty",{"_index":1103,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["networkdifficulty",{"_index":993,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["networkerror",{"_index":2841,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["networkhashratechart",{"_index":968,"title":{"injectables/NetworkHashrateChart.html":{}},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["never",{"_index":2432,"title":{},"body":{"components/UserComponent.html":{}}}],["new",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["new'},{'name",{"_index":100,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["new.component.html",{"_index":1792,"title":{},"body":{"components/NewComponent.html":{}}}],["new_algorithm",{"_index":577,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["newcomponent",{"_index":99,"title":{"components/NewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["newcomponent,restorecomponent,transactionscomponent,opencomponent,routermodule,addcomponent",{"_index":2642,"title":{},"body":{"modules/WalletModule.html":{}}}],["ng",{"_index":1168,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["ngbmodal",{"_index":1657,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodalref",{"_index":1667,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngelement",{"_index":1943,"title":{},"body":{"injectables/PluginsService.html":{}}}],["ngmodule",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["ngonchanges",{"_index":40,"title":{},"body":{"components/AddComponent.html":{}}}],["ngonchanges(changes",{"_index":52,"title":{},"body":{"components/AddComponent.html":{}}}],["ngondestroy",{"_index":798,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["ngrx",{"_index":494,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/component",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["ngrx/data",{"_index":1385,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1115,"title":{},"body":{"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1383,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"modules/DataModule.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngterminal",{"_index":1162,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ngterminalmodule",{"_index":1232,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["nguniversal/express",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":2636,"title":{},"body":{"modules/WalletModule.html":{}}}],["nodaemonrunningdialog",{"_index":101,"title":{"components/NoDaemonRunningDialog.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["nodes",{"_index":2023,"title":{},"body":{"components/ProfileComponent.html":{},"components/VpnComponent.html":{}}}],["nofollow,noindex",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["none",{"_index":2962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["normalized",{"_index":758,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["note",{"_index":2368,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["nothing",{"_index":1374,"title":{},"body":{"injectables/CryptService.html":{}}}],["notifier",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"dependencies.html":{}}}],["notifiermodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["notifiermodule.withconfig",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["notifierservice",{"_index":1835,"title":{},"body":{"components/OpenComponent.html":{}}}],["now",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/TimeAgoPipe.html":{}}}],["npm",{"_index":2996,"title":{},"body":{"index.html":{}}}],["null",{"_index":1376,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"pipes/ShruggiePipe.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["number",{"_index":62,"title":{},"body":{"components/AddComponent.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["number(this",{"_index":548,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["number.isnan(seconds",{"_index":2347,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["object",{"_index":749,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["object.values(data).flat",{"_index":2387,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["observable",{"_index":984,"title":{},"body":{"injectables/ChartService.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{}}}],["observables",{"_index":989,"title":{},"body":{"injectables/ChartService.html":{}}}],["of(chartsactions.chartnetworkdifficultyloadfailure({error",{"_index":1124,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["of(walletactions.walletfailure({error",{"_index":2616,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["offsetgridlines",{"_index":1763,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["oftype",{"_index":1114,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["oftype('[settings",{"_index":2191,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype('[wallet",{"_index":2588,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultyloadrequested",{"_index":1085,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystartpolling",{"_index":1075,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystoppolling",{"_index":1082,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(walletactions.walletloaddata",{"_index":2599,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstartpolling",{"_index":2592,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstoppolling",{"_index":2596,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["omit",{"_index":2108,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["on(chartsactions.chartnetworkdifficultyloadfailure",{"_index":1132,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["onchanges",{"_index":30,"title":{},"body":{"components/AddComponent.html":{}}}],["onclose",{"_index":1694,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["ondestroy",{"_index":792,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ondismiss",{"_index":1695,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["one",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["onnoclick",{"_index":1412,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["open",{"_index":50,"title":{},"body":{"components/AddComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["open'},{'name",{"_index":105,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["open.component.html",{"_index":1832,"title":{},"body":{"components/OpenComponent.html":{}}}],["opencomponent",{"_index":104,"title":{"components/OpenComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["opened",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"injectables/WalletRpcService.html":{}}}],["openedwallet",{"_index":2529,"title":{},"body":{"components/WalletComponent.html":{}}}],["openned",{"_index":2674,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openpgp",{"_index":460,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["openwallet",{"_index":584,"title":{"interfaces/OpenWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["openwallet(key",{"_index":2544,"title":{},"body":{"components/WalletComponent.html":{}}}],["openwallet(req",{"_index":2757,"title":{},"body":{"injectables/WalletService.html":{}}}],["openwallet(x",{"_index":2691,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["option",{"_index":1091,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["options.pollinginterval).pipe",{"_index":1096,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["opts",{"_index":2361,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["orchestrates",{"_index":2764,"title":{},"body":{"injectables/WalletService.html":{}}}],["other(method",{"_index":2693,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["otherwise",{"_index":2401,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["out",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["outdated",{"_index":1905,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["outpouts",{"_index":557,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["output",{"_index":1351,"title":{},"body":{"injectables/CryptService.html":{}}}],["outputs",{"_index":2393,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["overflow",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":751,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["overview",{"_index":3005,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1573,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/PostRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.addsection('daemon",{"_index":2295,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.set('daemon",{"_index":2296,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.stringify('\\r\\n",{"_index":2300,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["package",{"_index":2886,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["page",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/UserComponent.html":{}}}],["pagenumber",{"_index":1861,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pages",{"_index":1870,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pagination",{"_index":2789,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptions",{"_index":1858,"title":{"classes/PaginatorOptions.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptionsinterface",{"_index":1860,"title":{"classes/PaginatorOptionsInterface.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["panel",{"_index":2209,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["param",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2059,"title":{},"body":{"interfaces/Response.html":{}}}],["parseint(value",{"_index":2051,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["parser",{"_index":469,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["parseuri",{"_index":582,"title":{"interfaces/ParseUri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["parseuri(x",{"_index":2696,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["parsing",{"_index":1738,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["parts",{"_index":1182,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["pass",{"_index":1347,"title":{},"body":{"injectables/CryptService.html":{}}}],["pass')).value",{"_index":1852,"title":{},"body":{"components/OpenComponent.html":{}}}],["passphrase",{"_index":1275,"title":{},"body":{"injectables/CryptService.html":{}}}],["password",{"_index":586,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"interfaces/UserOptions.html":{},"injectables/WalletEffects.html":{},"miscellaneous/enumerations.html":{}}}],["password_confirm",{"_index":1793,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["passwordless",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordrepeat",{"_index":1603,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["path",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["path(filename",{"_index":1512,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["path(type",{"_index":1461,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["pathmatch",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["pathname",{"_index":1449,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["payload",{"_index":1105,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WebStorageService.html":{}}}],["payload}).then((data",{"_index":2838,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payment",{"_index":1544,"title":{"interfaces/Payment.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{}}}],["payment_id",{"_index":12,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["payment_ids",{"_index":1538,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["payments",{"_index":1541,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["pbkdf2",{"_index":1308,"title":{},"body":{"injectables/CryptService.html":{}}}],["pending",{"_index":1557,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["people",{"_index":1270,"title":{},"body":{"injectables/CryptService.html":{},"contributing.html":{}}}],["per",{"_index":2444,"title":{},"body":{"components/UserComponent.html":{}}}],["perform",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["performs",{"_index":2803,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["persist",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["person_add",{"_index":2019,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personality",{"_index":1283,"title":{},"body":{"injectables/CryptService.html":{}}}],["pi4",{"_index":1301,"title":{},"body":{"injectables/CryptService.html":{}}}],["pipe",{"_index":1102,"title":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}},"body":{"injectables/ChartsEffects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletEffects.html":{}}}],["pipe(filter((event",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1419,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["pipes/pipes.module",{"_index":1998,"title":{},"body":{"modules/PostModule.html":{}}}],["pipesmodule",{"_index":1877,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1427,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["placeholder",{"_index":514,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":932,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["platformid",{"_index":923,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["please",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["plugin.lthn.chain.table.recent",{"_index":830,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.wallet.button.create",{"_index":1820,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.button.restore",{"_index":2103,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.button.unlock",{"_index":1857,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.label.address",{"_index":2098,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.autosave",{"_index":2102,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.filename",{"_index":1816,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.restore",{"_index":2101,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.spend",{"_index":2099,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.view",{"_index":2100,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.wallet",{"_index":1818,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.new",{"_index":1815,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.titles.restore",{"_index":2097,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.unlock",{"_index":1855,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.titles.wallet",{"_index":2389,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["plugin/console/console.module",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{}}}],["plugin/hashvault/charts/network",{"_index":1007,"title":{},"body":{"injectables/ChartService.html":{}}}],["plugin/hive/post/post",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain.service",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/wallet/components/open.component",{"_index":2633,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/components/transactions.component",{"_index":2635,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/data",{"_index":1847,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["plugin/lthn/wallet/interfaces",{"_index":2375,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["plugin/lthn/wallet/interfaces/requests/restorewallet",{"_index":2716,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["plugin/lthn/wallet/wallet",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/wallet/wallet.component",{"_index":1918,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["plugin/lthn/wallet/wallet.module",{"_index":2166,"title":{},"body":{"modules/RootModule.html":{}}}],["plugin/lthn/wallet/wallet.service",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["plugin/plugins.module",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin/plugins.service",{"_index":1915,"title":{},"body":{"components/PluginsComponent.html":{},"modules/PluginsModule.html":{}}}],["pluginconfig",{"_index":2530,"title":{},"body":{"components/WalletComponent.html":{}}}],["plugindefinition",{"_index":1894,"title":{"interfaces/PluginDefinition.html":{}},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["plugins",{"_index":782,"title":{"interfaces/Plugins.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{}}}],["plugins'},{'name",{"_index":107,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["plugins.component.html",{"_index":1908,"title":{},"body":{"components/PluginsComponent.html":{}}}],["plugins.component.scss",{"_index":1907,"title":{},"body":{"components/PluginsComponent.html":{}}}],["plugins/lthn/wallet/data",{"_index":498,"title":{},"body":{"interfaces/AppState.html":{}}}],["pluginscomponent",{"_index":106,"title":{"components/PluginsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["pluginsmodule",{"_index":309,"title":{"modules/PluginsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginsservice",{"_index":1911,"title":{"injectables/PluginsService.html":{}},"body":{"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"overview.html":{}}}],["pluginstatus",{"_index":1899,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pluginstatus.active",{"_index":2555,"title":{},"body":{"components/WalletComponent.html":{}}}],["point",{"_index":770,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WebsocketService.html":{}}}],["polling",{"_index":1094,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["pollinginterval",{"_index":914,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["pollingstartaction",{"_index":1714,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollingstopaction",{"_index":1715,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollinguntil",{"_index":1069,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["polyfill",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["pool",{"_index":829,"title":{},"body":{"components/BlockchainComponent.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["poolstatsstate",{"_index":1129,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["popup",{"_index":1952,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupcomponent",{"_index":1920,"title":{},"body":{"components/PluginsComponent.html":{}}}],["popupcomponentref",{"_index":1956,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel",{"_index":1945,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel.addeventlistener('closed",{"_index":1948,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel.message",{"_index":1950,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupelement",{"_index":1921,"title":{},"body":{"components/PluginsComponent.html":{}}}],["position",{"_index":946,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["possible",{"_index":2454,"title":{},"body":{"components/UserComponent.html":{}}}],["post",{"_index":893,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"injectables/WalletRpcService.html":{}}}],["post'},{'name",{"_index":109,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["post(`${this.apiurl}/list",{"_index":1524,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/read",{"_index":1526,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`https://localhost:36911/update/cli",{"_index":900,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["post.component",{"_index":1997,"title":{},"body":{"modules/PostModule.html":{}}}],["post.component.html",{"_index":1965,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.scss",{"_index":1964,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].author",{"_index":1991,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].body",{"_index":1987,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].title",{"_index":1989,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":108,"title":{"components/PostComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["postmodule",{"_index":1993,"title":{"modules/PostModule.html":{}},"body":{"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postroutingmodule",{"_index":409,"title":{"modules/PostRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":2114,"title":{},"body":{"components/RootComponent.html":{}}}],["prefrences",{"_index":2035,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["primary",{"_index":2106,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["printable",{"_index":1203,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["priority",{"_index":2272,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["privacy",{"_index":2416,"title":{},"body":{"components/UserComponent.html":{}}}],["private",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["privatekey",{"_index":1365,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pro",{"_index":1755,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["processingform",{"_index":2289,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile",{"_index":2003,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile'},{'name",{"_index":112,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profile.component.html",{"_index":2005,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":2004,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profiles",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{}}}],["profilestate",{"_index":2024,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["promise(f",{"_index":2139,"title":{},"body":{"components/RootComponent.html":{}}}],["promise(resolve",{"_index":1672,"title":{},"body":{"components/ModalComponent.html":{}}}],["prop",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["protect",{"_index":2424,"title":{},"body":{"components/UserComponent.html":{}}}],["protected",{"_index":1245,"title":{},"body":{"injectables/CryptService.html":{}}}],["protecting",{"_index":2415,"title":{},"body":{"components/UserComponent.html":{}}}],["protects",{"_index":1349,"title":{},"body":{"injectables/CryptService.html":{}}}],["provide",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{}}}],["provided",{"_index":987,"title":{},"body":{"injectables/ChartService.html":{}}}],["providedin",{"_index":470,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["provider",{"_index":2509,"title":{},"body":{"components/VpnComponent.html":{}}}],["providers",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"modules/PluginsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["public",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["publically",{"_index":2399,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["publickey",{"_index":2306,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["purchase",{"_index":2447,"title":{},"body":{"components/UserComponent.html":{}}}],["pure",{"_index":1428,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["purposes",{"_index":1310,"title":{},"body":{"injectables/CryptService.html":{}}}],["querykey",{"_index":2658,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykey(x",{"_index":2698,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykeyin",{"_index":2041,"title":{"interfaces/QueryKeyIn.html":{}},"body":{"interfaces/QueryKeyIn.html":{},"injectables/WalletRpcService.html":{}}}],["querykeyout",{"_index":2044,"title":{"interfaces/QueryKeyOut.html":{}},"body":{"interfaces/QueryKeyOut.html":{},"injectables/WalletRpcService.html":{}}}],["quick",{"_index":1300,"title":{},"body":{"injectables/CryptService.html":{}}}],["r",{"_index":1431,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["radial",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":771,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["random",{"_index":567,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["random.hex(false)(random.engines.nativemath",{"_index":544,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["randomalias",{"_index":2006,"title":{},"body":{"components/ProfileComponent.html":{}}}],["raw",{"_index":881,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["reactiveformsmodule",{"_index":653,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["read",{"_index":1446,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["read(filename",{"_index":1514,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["read(type",{"_index":1464,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["readfile",{"_index":1474,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readfile(filename",{"_index":1487,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readme_list",{"_index":1898,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["reason",{"_index":1278,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"injectables/WebsocketService.html":{}}}],["receive",{"_index":1636,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["received",{"_index":2870,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["recenttxs",{"_index":797,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["recipient",{"_index":1638,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recipient_name",{"_index":1632,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recover",{"_index":2452,"title":{},"body":{"components/UserComponent.html":{}}}],["redirected",{"_index":2464,"title":{},"body":{"components/UserComponent.html":{}}}],["reducer",{"_index":509,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1133,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":502,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["ref",{"_index":1151,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["refrence",{"_index":2991,"title":{},"body":{"index.html":{}}}],["region",{"_index":2517,"title":{},"body":{"components/VpnComponent.html":{}}}],["register",{"_index":1923,"title":{},"body":{"components/PluginsComponent.html":{}}}],["registerables",{"_index":999,"title":{},"body":{"injectables/ChartService.html":{}}}],["rehydrate",{"_index":517,"title":{},"body":{"interfaces/AppState.html":{}}}],["relative",{"_index":947,"title":{},"body":{"directives/ChartDirective.html":{}}}],["relativelinkresolution",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remote",{"_index":2022,"title":{},"body":{"components/ProfileComponent.html":{}}}],["removeitem",{"_index":2799,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeitem(key",{"_index":2811,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeonundefined",{"_index":518,"title":{},"body":{"interfaces/AppState.html":{}}}],["removetrailingzero",{"_index":2047,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["removetrailingzerospipe",{"_index":1881,"title":{"pipes/RemoveTrailingZerosPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"overview.html":{}}}],["renderappview",{"_index":2115,"title":{},"body":{"components/RootComponent.html":{}}}],["renderer",{"_index":925,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderer2",{"_index":920,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderfirstrunview",{"_index":2116,"title":{},"body":{"components/RootComponent.html":{}}}],["renderwebview",{"_index":2117,"title":{},"body":{"components/RootComponent.html":{}}}],["replace('o",{"_index":1323,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/a/gi",{"_index":1327,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/e/gi",{"_index":1325,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/l/gi",{"_index":1324,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/s/gi",{"_index":1329,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/t/gi",{"_index":1331,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducable",{"_index":1320,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducible",{"_index":1266,"title":{},"body":{"injectables/CryptService.html":{}}}],["req",{"_index":2705,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["req.address",{"_index":2589,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["req.password",{"_index":2590,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["request",{"_index":1469,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["request(this.url)('add_address_book",{"_index":2741,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('create_wallet",{"_index":2744,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('delete_address_book",{"_index":2742,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('generate_from_keys",{"_index":2745,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_address_book",{"_index":2740,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_bulk_payments",{"_index":2730,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_payments",{"_index":2729,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfer_by_txid",{"_index":2732,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfers",{"_index":2731,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getaddress",{"_index":2722,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getbalance",{"_index":2721,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getheight",{"_index":2723,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('incoming_transfers",{"_index":2733,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_integrated_address",{"_index":2735,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_uri",{"_index":2738,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('open_wallet",{"_index":2743,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('parse_uri",{"_index":2739,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('query_key",{"_index":2734,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('split_integrated_address",{"_index":2736,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('stop_wallet",{"_index":2737,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('store",{"_index":2728,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_all",{"_index":2727,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_dust",{"_index":2726,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer",{"_index":2724,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer_split",{"_index":2725,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)(method",{"_index":2746,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["requested",{"_index":1463,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["require('axios').default",{"_index":2062,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{}}}],["require('crypto",{"_index":475,"title":{},"body":{"injectables/AppService.html":{}}}],["require('openpgp",{"_index":473,"title":{},"body":{"injectables/AppService.html":{}}}],["required",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["requires",{"_index":1277,"title":{},"body":{"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["res['result",{"_index":2611,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["reset",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":1676,"title":{},"body":{"components/ModalComponent.html":{}}}],["response",{"_index":1050,"title":{"interfaces/Response.html":{}},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/Response.html":{}}}],["responsetype",{"_index":891,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["responsiveanimationduration",{"_index":768,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["restore",{"_index":72,"title":{},"body":{"components/AddComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletService.html":{}}}],["restore'},{'name",{"_index":114,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["restore.component.html",{"_index":2072,"title":{},"body":{"components/RestoreComponent.html":{}}}],["restore_height",{"_index":2080,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["restorecomponent",{"_index":113,"title":{"components/RestoreComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["restorewallet",{"_index":2074,"title":{"interfaces/RestoreWallet.html":{}},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["restorewallet(req",{"_index":2759,"title":{},"body":{"injectables/WalletService.html":{}}}],["restorewallet(x",{"_index":2700,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["restorewalletform",{"_index":2073,"title":{},"body":{"components/RestoreComponent.html":{}}}],["result",{"_index":1460,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"components/ModalComponent.html":{},"interfaces/Response.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":2824,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["ret.data",{"_index":2840,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["return",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["revocationcertificate",{"_index":2307,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["rgba(21",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":1766,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(255,255,255,0.5",{"_index":1773,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(8",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["rgbstring",{"_index":1027,"title":{},"body":{"injectables/ChartService.html":{}}}],["rick's",{"_index":724,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["rick\\'s",{"_index":725,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["right",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["robots",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["root",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["root.component",{"_index":2163,"title":{},"body":{"modules/RootModule.html":{}}}],["root.component.html",{"_index":2110,"title":{},"body":{"components/RootComponent.html":{}}}],["rootcomponent",{"_index":115,"title":{"components/RootComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["rootmodule",{"_index":2157,"title":{"modules/RootModule.html":{}},"body":{"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rootroutingmodule",{"_index":410,"title":{"modules/RootRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["route",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["routermodule",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":862,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":599,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routing",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["routing.module",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["row",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":2359,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rpc",{"_index":730,"title":{},"body":{"interfaces/Balance.html":{},"components/ConsoleComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rpc.ts",{"_index":2055,"title":{},"body":{"interfaces/Response.html":{}}}],["rpcbindport",{"_index":2717,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["rpcbody",{"_index":2057,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletEffects.html":{}}}],["rsa",{"_index":1342,"title":{},"body":{"injectables/CryptService.html":{}}}],["rsabits",{"_index":1344,"title":{},"body":{"injectables/CryptService.html":{}}}],["rt",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["rt.data.subscribe((data",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":2224,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["run",{"_index":604,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PluginsService.html":{},"components/ProfileComponent.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["running.component",{"_index":2262,"title":{},"body":{"modules/StatusModule.html":{}}}],["running.component.html",{"_index":1409,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts",{"_index":1404,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:13",{"_index":1822,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:15",{"_index":1825,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:16",{"_index":1824,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:19",{"_index":1823,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["runtime",{"_index":2986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxjs",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["rxjs/websocket",{"_index":2860,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rxjslogginglevel",{"_index":1118,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rxjslogginglevel.debug",{"_index":1090,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["rxjslogginglevel.info",{"_index":1077,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["safe",{"_index":739,"title":{},"body":{"interfaces/Balance.html":{}}}],["salt",{"_index":1256,"title":{},"body":{"injectables/CryptService.html":{}}}],["salted",{"_index":1307,"title":{},"body":{"injectables/CryptService.html":{}}}],["salter",{"_index":1271,"title":{},"body":{"injectables/CryptService.html":{}}}],["salts",{"_index":1267,"title":{},"body":{"injectables/CryptService.html":{}}}],["same",{"_index":1255,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"components/VpnComponent.html":{}}}],["samples",{"_index":1778,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sanitizer",{"_index":1439,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["sans",{"_index":1754,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["save",{"_index":1470,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/ProfileState.html":{},"interfaces/RestoreWallet.html":{}}}],["scales",{"_index":776,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["scared",{"_index":2883,"title":{},"body":{"contributing.html":{}}}],["screen",{"_index":1225,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["searchable",{"_index":2400,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["seconds",{"_index":2330,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["secret",{"_index":2443,"title":{},"body":{"components/UserComponent.html":{}}}],["section",{"_index":2303,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["security",{"_index":2426,"title":{},"body":{"components/UserComponent.html":{}}}],["seed",{"_index":588,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["select",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["select(selectchartdata(this.chartmeta[name].key",{"_index":1046,"title":{},"body":{"injectables/ChartService.html":{}}}],["select(selectchartoptions('networkdifficulty",{"_index":1089,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectchartdata",{"_index":1006,"title":{},"body":{"injectables/ChartService.html":{}}}],["selectchartoptions",{"_index":1121,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selecthashrateminersoptions",{"_index":1092,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectlanguage",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenuvisibility",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["selectopenedwalletdata",{"_index":2619,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["selector",{"_index":32,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["selectors",{"_index":1122,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["selectwalletdata",{"_index":2620,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["selectwallettransactions",{"_index":2378,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["send",{"_index":1399,"title":{},"body":{"interfaces/Destination.html":{},"injectables/WalletRpcService.html":{}}}],["sending",{"_index":576,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["sendmessage",{"_index":2848,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmessage(msg",{"_index":2854,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sent",{"_index":2580,"title":{},"body":{"components/WalletComponent.html":{}}}],["separator",{"_index":2015,"title":{},"body":{"components/ProfileComponent.html":{}}}],["server",{"_index":452,"title":{},"body":{"modules/AppServerModule.html":{},"interfaces/RestoreWallet.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["servermodule",{"_index":451,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartService.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["service/crypt.service",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["service/filesystem/file",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["service/json",{"_index":2621,"title":{},"body":{"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["service/ui/modal/modal.component",{"_index":1711,"title":{},"body":{"modules/ModalModule.html":{},"components/WalletComponent.html":{}}}],["service/ui/modal/modal.module",{"_index":2634,"title":{},"body":{"modules/WalletModule.html":{}}}],["service/ui/modal/modalconfig",{"_index":1670,"title":{},"body":{"components/ModalComponent.html":{}}}],["service/wallet.rpc.service",{"_index":1802,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["service/web",{"_index":500,"title":{},"body":{"interfaces/AppState.html":{}}}],["service/websocket.service",{"_index":1170,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["services",{"_index":1017,"title":{},"body":{"injectables/ChartService.html":{},"components/VpnComponent.html":{}}}],["session",{"_index":731,"title":{},"body":{"interfaces/Balance.html":{}}}],["set",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"injectables/PluginsService.html":{}}}],["setinterval",{"_index":1172,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["setitem",{"_index":2800,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setitem(key",{"_index":2813,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setrxjslogginglevel",{"_index":2970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(0",{"_index":2988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(4",{"_index":2987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(level",{"_index":2983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settargettabindex",{"_index":42,"title":{},"body":{"components/AddComponent.html":{}}}],["settimeout(f",{"_index":2140,"title":{},"body":{"components/RootComponent.html":{}}}],["setting",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["setting_tab",{"_index":2178,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":481,"title":{},"body":{"interfaces/AppState.html":{},"components/BackupComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/WalletComponent.html":{}}}],["settings'},{'name",{"_index":118,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["settings.component",{"_index":2207,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":2177,"title":{},"body":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}}}],["settings.component.scss",{"_index":2176,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.reducer",{"_index":503,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingseffects",{"_index":524,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingsstate",{"_index":485,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingscomponent",{"_index":117,"title":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["settingseffects",{"_index":2188,"title":{"injectables/SettingsEffects.html":{}},"body":{"injectables/SettingsEffects.html":{}}}],["settingsmodule",{"_index":2196,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":411,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsstate",{"_index":2216,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/SettingsState.html":{}}}],["setup",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["setupcallbacks",{"_index":746,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["setupdatasubscription",{"_index":966,"title":{},"body":{"injectables/ChartService.html":{}}}],["setupdatasubscription(name",{"_index":981,"title":{},"body":{"injectables/ChartService.html":{}}}],["several",{"_index":1589,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["sha256",{"_index":1315,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256(input",{"_index":1334,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty",{"_index":1239,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty(input",{"_index":1313,"title":{},"body":{"injectables/CryptService.html":{}}}],["share",{"_index":1591,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["shared",{"_index":2038,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["shell/bootstrap",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldclose",{"_index":1696,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shoulddismiss",{"_index":1697,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["show",{"_index":1925,"title":{},"body":{"components/PluginsComponent.html":{}}}],["showascomponent",{"_index":1934,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showascomponent(message",{"_index":1939,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showaselement",{"_index":1935,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showaselement(message",{"_index":1941,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showtx",{"_index":2531,"title":{},"body":{"components/WalletComponent.html":{}}}],["shrug",{"_index":2228,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["shruggiepipe",{"_index":1882,"title":{"pipes/ShruggiePipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ShruggiePipe.html":{},"overview.html":{}}}],["sidenav",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["signals",{"_index":2875,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signatures",{"_index":1370,"title":{},"body":{"injectables/CryptService.html":{}}}],["simplechanges",{"_index":53,"title":{},"body":{"components/AddComponent.html":{}}}],["simply",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":1751,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/SettingsState.html":{}}}],["sizing",{"_index":847,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["slow",{"_index":1295,"title":{},"body":{"injectables/CryptService.html":{}}}],["slug",{"_index":1980,"title":{},"body":{"components/PostComponent.html":{}}}],["smarter",{"_index":2885,"title":{},"body":{"contributing.html":{}}}],["socket",{"_index":2844,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["software",{"_index":1827,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"components/UserComponent.html":{}}}],["something",{"_index":1272,"title":{},"body":{"injectables/CryptService.html":{}}}],["soon",{"_index":2466,"title":{},"body":{"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["spangaps",{"_index":1739,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["spend",{"_index":740,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/RestoreWallet.html":{}}}],["spendkey",{"_index":2084,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spent",{"_index":565,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["split",{"_index":1285,"title":{},"body":{"injectables/CryptService.html":{}}}],["splitintegratedaddress",{"_index":2659,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddress(x",{"_index":2702,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddressout",{"_index":2231,"title":{"interfaces/SplitIntegratedAddressOut.html":{}},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"injectables/WalletRpcService.html":{}}}],["src/.../app.module.ts",{"_index":2965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug.rxjs.ts",{"_index":2957,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":2966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":2964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducer.ts",{"_index":2968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.reducer.ts",{"_index":2969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../state.ts",{"_index":2956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.options.ts",{"_index":2955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":2967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:98",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.server.module.ts",{"_index":450,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.service.ts",{"_index":457,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:16",{"_index":463,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:17",{"_index":464,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:18",{"_index":461,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/data/data.module.ts",{"_index":1377,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/debug.rxjs.ts",{"_index":2958,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/interface/pagination.ts",{"_index":1859,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:10",{"_index":1871,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:14",{"_index":1866,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:15",{"_index":1868,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:16",{"_index":1869,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:17",{"_index":1864,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:4",{"_index":1872,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:6",{"_index":1873,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:8",{"_index":1874,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/logs/reducer.ts",{"_index":2977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/logs/state.ts",{"_index":1597,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["src/app/data/plugins/reducer.ts",{"_index":2978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/plugins/state.ts",{"_index":1895,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/reducers/index.ts",{"_index":478,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["src/app/interfaces/file",{"_index":1442,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":649,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:11",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:30",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:46",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:60",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/login.component.ts",{"_index":1601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:11",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:12",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:13",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:14",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:19",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/route.guard.ts",{"_index":592,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:34",{"_index":600,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:8",{"_index":596,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/chart/base",{"_index":742,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["src/app/modules/chart/chart",{"_index":903,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["src/app/modules/chart/chart.directive.ts",{"_index":916,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:10",{"_index":926,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:11",{"_index":924,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:21",{"_index":929,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:28",{"_index":928,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:46",{"_index":930,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.module.ts",{"_index":957,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/app/modules/chart/chart.service.ts",{"_index":959,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:125",{"_index":980,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:19",{"_index":990,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:20",{"_index":998,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:26",{"_index":995,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:34",{"_index":969,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:54",{"_index":971,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:98",{"_index":982,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/data/effects.ts",{"_index":1064,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:112",{"_index":1084,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:124",{"_index":1072,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:14",{"_index":1113,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:39",{"_index":1110,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:99",{"_index":1081,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/interfaces/difficulty.state.ts",{"_index":910,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["src/app/modules/chart/data/reducer.ts",{"_index":1126,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["src/app/modules/root",{"_index":2169,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["src/app/modules/root.component.ts",{"_index":2109,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:14",{"_index":2131,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:16",{"_index":2129,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:17",{"_index":2128,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:18",{"_index":2130,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:19",{"_index":2120,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:29",{"_index":2122,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:42",{"_index":2123,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:45",{"_index":2124,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:49",{"_index":2121,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:58",{"_index":2126,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:62",{"_index":2127,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:66",{"_index":2125,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.module.ts",{"_index":2162,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/settings/data/settings.effects.ts",{"_index":2189,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:17",{"_index":2190,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:8",{"_index":2195,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.reducer.ts",{"_index":2979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/settings/data/settingsstate.ts",{"_index":2217,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/modules/settings/logs/logs.component.ts",{"_index":1618,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:11",{"_index":1622,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:8",{"_index":1621,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.module.ts",{"_index":1627,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/app/modules/settings/settings",{"_index":2213,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2175,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:13",{"_index":2181,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:17",{"_index":2180,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:9",{"_index":2179,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2200,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/status/dialog/no",{"_index":1402,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["src/app/modules/status/status.component.ts",{"_index":2234,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:10",{"_index":2246,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:11",{"_index":2248,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:12",{"_index":2247,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:13",{"_index":2244,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:15",{"_index":2245,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.module.ts",{"_index":2258,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/app/modules/user/data/profile/effects.ts",{"_index":1414,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/effects.ts:5",{"_index":1415,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/reducer.ts",{"_index":2980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/profile/state.ts",{"_index":2025,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["src/app/modules/user/data/user/effects.ts",{"_index":1416,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/effects.ts:5",{"_index":1417,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/interfaces/user.options.ts",{"_index":2490,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/data/user/reducer.ts",{"_index":2981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/user/state.ts",{"_index":2471,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["src/app/modules/user/profile.component.ts",{"_index":2002,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:15",{"_index":2016,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:19",{"_index":2007,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:23",{"_index":2008,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/user",{"_index":2494,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2283,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:21",{"_index":2412,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:27",{"_index":2413,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:33",{"_index":2414,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:34",{"_index":2410,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:35",{"_index":2411,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:36",{"_index":2408,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:46",{"_index":2409,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2480,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/pipes/content/html.pipe.ts",{"_index":1434,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/html.pipe.ts:8",{"_index":1437,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts",{"_index":1642,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts:8",{"_index":1645,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts",{"_index":2227,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts:5",{"_index":2229,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts",{"_index":1420,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts:7",{"_index":1425,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts",{"_index":1565,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts:8",{"_index":1568,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts",{"_index":2350,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts:7",{"_index":2353,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts",{"_index":2326,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:10",{"_index":2328,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts",{"_index":2046,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts:7",{"_index":2048,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1885,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/plugins/console/console.component.ts",{"_index":1135,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:16",{"_index":1164,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:18",{"_index":1155,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:19",{"_index":1165,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:20",{"_index":1153,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:29",{"_index":1161,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:57",{"_index":1159,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:61",{"_index":1157,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:66",{"_index":1160,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.module.ts",{"_index":1230,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/plugins/hashvault/charts/network",{"_index":1712,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["src/app/plugins/hive/post/post",{"_index":1999,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["src/app/plugins/hive/post/post.component.ts",{"_index":1963,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:11",{"_index":1972,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:12",{"_index":1973,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:13",{"_index":1971,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:14",{"_index":1970,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:15",{"_index":1968,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:19",{"_index":1969,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.module.ts",{"_index":1996,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain",{"_index":863,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts",{"_index":791,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:13",{"_index":807,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:14",{"_index":803,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:19",{"_index":809,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:25",{"_index":811,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:29",{"_index":806,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:38",{"_index":805,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.module.ts",{"_index":856,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts",{"_index":868,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:10",{"_index":884,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:31",{"_index":880,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:52",{"_index":883,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:7",{"_index":873,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:75",{"_index":874,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/vpn/vpn",{"_index":2525,"title":{},"body":{"modules/VpnRoutingModule.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts",{"_index":2498,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:11",{"_index":2502,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:8",{"_index":2501,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.module.ts",{"_index":2522,"title":{},"body":{"modules/VpnModule.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts",{"_index":27,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:13",{"_index":60,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:17",{"_index":61,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:27",{"_index":54,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:8",{"_index":51,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:9",{"_index":47,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts",{"_index":716,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:10",{"_index":719,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:7",{"_index":718,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts",{"_index":1791,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:14",{"_index":1801,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:15",{"_index":1800,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:16",{"_index":1796,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:19",{"_index":1799,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:25",{"_index":1798,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts",{"_index":1831,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:14",{"_index":1837,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:16",{"_index":1842,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:17",{"_index":1843,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:23",{"_index":1836,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:33",{"_index":1838,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:42",{"_index":1840,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts",{"_index":2071,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:13",{"_index":2075,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:18",{"_index":2076,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:32",{"_index":2077,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts",{"_index":2185,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:10",{"_index":2187,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:7",{"_index":2186,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts",{"_index":2355,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:16",{"_index":2363,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:17",{"_index":2364,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:25",{"_index":2372,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:26",{"_index":2373,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:28",{"_index":2374,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:32",{"_index":2371,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:36",{"_index":2367,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:37",{"_index":2362,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:42",{"_index":2366,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:51",{"_index":2365,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts",{"_index":2582,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:103",{"_index":2587,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:19",{"_index":2591,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:33",{"_index":2617,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:86",{"_index":2595,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:94",{"_index":2598,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/reducer.ts",{"_index":2982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts",{"_index":2780,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:12",{"_index":2785,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:13",{"_index":2784,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:14",{"_index":2786,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getaddressbookout.ts",{"_index":1532,"title":{},"body":{"interfaces/GetAddressBookOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsin.ts",{"_index":1536,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsout.ts",{"_index":1543,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsin.ts",{"_index":1547,"title":{},"body":{"interfaces/GetPaymentsIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsout.ts",{"_index":1549,"title":{},"body":{"interfaces/GetPaymentsOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersin.ts",{"_index":1551,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersout.ts",{"_index":1561,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersin.ts",{"_index":1578,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersout.ts",{"_index":1583,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeintegratedaddressin.ts",{"_index":1630,"title":{},"body":{"interfaces/MakeIntegratedAddressIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeuriin.ts",{"_index":1631,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyin.ts",{"_index":2042,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyout.ts",{"_index":2045,"title":{},"body":{"interfaces/QueryKeyOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/splitintegratedaddressout.ts",{"_index":2232,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/storeout.ts",{"_index":2264,"title":{},"body":{"interfaces/StoreOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallin.ts",{"_index":2266,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallout.ts",{"_index":2276,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepdustout.ts",{"_index":2281,"title":{},"body":{"interfaces/SweepDustOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferin.ts",{"_index":2392,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferout.ts",{"_index":2395,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transfersplitout.ts",{"_index":2404,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/requests/restorewallet.ts",{"_index":2104,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/addaddressbook.ts",{"_index":6,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/address.ts",{"_index":132,"title":{},"body":{"interfaces/Address.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/balance.ts",{"_index":727,"title":{},"body":{"interfaces/Balance.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/destination.ts",{"_index":1397,"title":{},"body":{"interfaces/Destination.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/height.ts",{"_index":1576,"title":{},"body":{"interfaces/Height.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/integratedaddress.ts",{"_index":1593,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/payment.ts",{"_index":1875,"title":{},"body":{"interfaces/Payment.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/transfer.ts",{"_index":2390,"title":{},"body":{"interfaces/Transfer.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/uri.ts",{"_index":2407,"title":{},"body":{"interfaces/Uri.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts",{"_index":528,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:13",{"_index":533,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:14",{"_index":534,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:9",{"_index":1595,"title":{},"body":{"classes/LTHN.html":{}}}],["src/app/plugins/lthn/wallet/validators.ts",{"_index":2973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/wallet/wallet",{"_index":2643,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts",{"_index":2526,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:17",{"_index":2556,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:24",{"_index":2548,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:26",{"_index":2559,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:28",{"_index":2549,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:29",{"_index":2550,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:30",{"_index":2557,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:31",{"_index":2558,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:41",{"_index":2536,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:44",{"_index":2543,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:61",{"_index":2541,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:65",{"_index":2542,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:73",{"_index":2545,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:77",{"_index":2537,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:81",{"_index":2547,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:86",{"_index":2539,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.module.ts",{"_index":2627,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts",{"_index":2747,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:14",{"_index":2752,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:24",{"_index":2761,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:34",{"_index":2760,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:44",{"_index":2758,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:54",{"_index":2753,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:60",{"_index":2754,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:78",{"_index":2762,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:85",{"_index":2756,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/plugins.component.ts",{"_index":1906,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:11",{"_index":1912,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:13",{"_index":1914,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:20",{"_index":1913,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.module.ts",{"_index":1931,"title":{},"body":{"modules/PluginsModule.html":{}}}],["src/app/plugins/plugins.service.ts",{"_index":1933,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:15",{"_index":1942,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:29",{"_index":1940,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:7",{"_index":1938,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/services/crypt.service.ts",{"_index":1233,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:121",{"_index":1276,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:25",{"_index":1249,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:44",{"_index":1314,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:56",{"_index":1305,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:71",{"_index":1243,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:8",{"_index":1241,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:92",{"_index":1291,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/filesystem/file",{"_index":1471,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["src/app/services/i18n/translate/translate.module.ts",{"_index":2406,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/app/services/json",{"_index":2054,"title":{},"body":{"interfaces/Response.html":{}}}],["src/app/services/ui/modal/modal.component.ts",{"_index":1649,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:14",{"_index":1666,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:15",{"_index":1658,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:19",{"_index":1662,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:21",{"_index":1663,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:28",{"_index":1660,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:35",{"_index":1661,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.module.ts",{"_index":1710,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/services/ui/modal/modalconfig.ts",{"_index":1686,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:10",{"_index":1702,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:12",{"_index":1703,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:14",{"_index":1698,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:16",{"_index":1699,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:18",{"_index":1700,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:20",{"_index":1701,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:6",{"_index":1704,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:8",{"_index":1705,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/wallet.rpc.service.ts",{"_index":2646,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:107",{"_index":2709,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:115",{"_index":2707,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:124",{"_index":2679,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:133",{"_index":2676,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:142",{"_index":2684,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:152",{"_index":2681,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:161",{"_index":2686,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:172",{"_index":2699,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:18",{"_index":2663,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:181",{"_index":2688,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:192",{"_index":2703,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:202",{"_index":2706,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:211",{"_index":2690,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:220",{"_index":2697,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:229",{"_index":2672,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:238",{"_index":2665,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:247",{"_index":2669,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:256",{"_index":2692,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:265",{"_index":2667,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:274",{"_index":2701,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:28",{"_index":2704,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:284",{"_index":2695,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:53",{"_index":2673,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:62",{"_index":2670,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:71",{"_index":2677,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:81",{"_index":2712,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:90",{"_index":2714,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:98",{"_index":2710,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/web",{"_index":2793,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["src/app/services/websocket.service.ts",{"_index":2843,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:10",{"_index":2849,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:14",{"_index":2851,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:21",{"_index":2853,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:25",{"_index":2850,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:29",{"_index":2855,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/main.ts",{"_index":2971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssh_pem",{"_index":2493,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["standard",{"_index":2445,"title":{},"body":{"components/UserComponent.html":{}}}],["standard_address",{"_index":2233,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["start",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["start_on_boot",{"_index":2297,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["startblockchain",{"_index":2118,"title":{},"body":{"components/RootComponent.html":{}}}],["startdaemon",{"_index":872,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["started",{"_index":403,"title":{"contributing.html":{},"index.html":{}},"body":{"modules/AppModule.html":{}}}],["startpollingwallet",{"_index":2584,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["startwallet",{"_index":2119,"title":{},"body":{"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["starwars",{"_index":2012,"title":{},"body":{"components/ProfileComponent.html":{}}}],["state",{"_index":512,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["state.networkdifficulty",{"_index":1131,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["static",{"_index":1068,"title":{},"body":{"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{}}}],["stats",{"_index":2210,"title":{},"body":{"modules/SettingsModule.html":{}}}],["status",{"_index":102,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status'},{'name",{"_index":120,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status.component",{"_index":2259,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.component.html",{"_index":2236,"title":{},"body":{"components/StatusComponent.html":{}}}],["status.component.scss",{"_index":2235,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_annon",{"_index":2238,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_daemon",{"_index":2239,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_private",{"_index":2240,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_secure",{"_index":2241,"title":{},"body":{"components/StatusComponent.html":{}}}],["statuscomponent",{"_index":119,"title":{"components/StatusComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["statusmodule",{"_index":310,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["steps",{"_index":2435,"title":{},"body":{"components/UserComponent.html":{}}}],["stoppollingwallet",{"_index":2585,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["stopwallet",{"_index":2660,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["storage",{"_index":519,"title":{},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["storage.service",{"_index":501,"title":{},"body":{"interfaces/AppState.html":{}}}],["storage.service.ts",{"_index":2794,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:10",{"_index":2817,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:11",{"_index":2816,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:13",{"_index":2820,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:17",{"_index":2810,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:21",{"_index":2808,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:33",{"_index":2814,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:44",{"_index":2812,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:50",{"_index":2806,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:64",{"_index":2802,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:9",{"_index":2818,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["store",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"components/OpenComponent.html":{},"interfaces/ProfileState.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["stored",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["storedevtoolsmodule",{"_index":1379,"title":{},"body":{"modules/DataModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":1389,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule",{"_index":1378,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule.forroot(reducers",{"_index":1388,"title":{},"body":{"modules/DataModule.html":{}}}],["storeout",{"_index":2263,"title":{"interfaces/StoreOut.html":{}},"body":{"interfaces/StoreOut.html":{},"injectables/WalletRpcService.html":{}}}],["storerouterconnectingmodule",{"_index":1382,"title":{},"body":{"modules/DataModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":1395,"title":{},"body":{"modules/DataModule.html":{}}}],["stream",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetPaymentsIn.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["strip",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["style",{"_index":2013,"title":{},"body":{"components/ProfileComponent.html":{}}}],["styles",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["styleurls",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["sub",{"_index":1145,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/WalletComponent.html":{}}}],["sub.unsubscribe",{"_index":2572,"title":{},"body":{"components/WalletComponent.html":{}}}],["subject",{"_index":1112,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WebsocketService.html":{}}}],["subject.subscribe",{"_index":2868,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["submit",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{}}}],["subs",{"_index":1967,"title":{},"body":{"components/PostComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["subscribe",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((data",{"_index":819,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["subscription",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["sufficiently",{"_index":735,"title":{},"body":{"interfaces/Balance.html":{}}}],["supplied",{"_index":1246,"title":{},"body":{"injectables/CryptService.html":{}}}],["support",{"_index":3002,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["svg",{"_index":3003,"title":{},"body":{"modules.html":{}}}],["sweepall",{"_index":2267,"title":{},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepall(x",{"_index":2708,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepallin",{"_index":2265,"title":{"interfaces/SweepAllIn.html":{}},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepallout",{"_index":2275,"title":{"interfaces/SweepAllOut.html":{}},"body":{"interfaces/SweepAllOut.html":{},"injectables/WalletRpcService.html":{}}}],["sweepdust",{"_index":2661,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepdustout",{"_index":2280,"title":{"interfaces/SweepDustOut.html":{}},"body":{"interfaces/SweepDustOut.html":{}}}],["swimlane/ngx",{"_index":2376,"title":{},"body":{"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["switchmap",{"_index":1100,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap(([action",{"_index":1093,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap((req",{"_index":2192,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["symbol",{"_index":2352,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["sync",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["syndrome",{"_index":1284,"title":{},"body":{"injectables/CryptService.html":{}}}],["system",{"_index":1452,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{}}}],["system.interface",{"_index":1520,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["system.interface.ts",{"_index":1443,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:16",{"_index":1465,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:25",{"_index":1467,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:33",{"_index":1455,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:41",{"_index":1459,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:49",{"_index":1450,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:8",{"_index":1462,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.service",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["system.service.ts",{"_index":1472,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:17",{"_index":1493,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:27",{"_index":1484,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:41",{"_index":1488,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:51",{"_index":1491,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:61",{"_index":1486,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:71",{"_index":1481,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:8",{"_index":1478,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["t",{"_index":1572,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["tag",{"_index":2147,"title":{},"body":{"components/RootComponent.html":{}}}],["take",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["takes",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["takeuntil",{"_index":1097,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["takewhile",{"_index":2604,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["targetaddform",{"_index":44,"title":{},"body":{"components/AddComponent.html":{}}}],["targettabindex",{"_index":38,"title":{},"body":{"components/AddComponent.html":{}}}],["task",{"_index":2282,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["templateref",{"_index":1664,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":36,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tension",{"_index":773,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["terminal",{"_index":1169,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"dependencies.html":{}}}],["test",{"_index":2551,"title":{},"body":{"components/WalletComponent.html":{}}}],["text",{"_index":892,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["that.author",{"_index":1990,"title":{},"body":{"components/PostComponent.html":{}}}],["that.content",{"_index":1986,"title":{},"body":{"components/PostComponent.html":{}}}],["that.post",{"_index":1985,"title":{},"body":{"components/PostComponent.html":{}}}],["that.posts",{"_index":2153,"title":{},"body":{"components/RootComponent.html":{}}}],["that.ref.markforcheck",{"_index":1188,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["that.title",{"_index":1988,"title":{},"body":{"components/PostComponent.html":{}}}],["that.ws.sendmessage(`cmd:letheand:${this.command.join('')}\\n",{"_index":1210,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["theme",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["themselves",{"_index":1016,"title":{},"body":{"injectables/ChartService.html":{}}}],["then((dat",{"_index":896,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["then(function",{"_index":2151,"title":{},"body":{"components/RootComponent.html":{}}}],["this.actions$.pipe",{"_index":1074,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["this.addoptions",{"_index":1737,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.apiurl}/write",{"_index":1528,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.appfilesystem",{"_index":1499,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.applicationref.attachview(popupcomponentref.hostview",{"_index":1961,"title":{},"body":{"injectables/PluginsService.html":{}}}],["this.appservice.crypto",{"_index":1333,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.lib.wordarray.random(128",{"_index":1337,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.pbkdf2(input",{"_index":1338,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.createmessage",{"_index":1360,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decrypt",{"_index":1371,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decryptkey",{"_index":1366,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.encrypt",{"_index":1358,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.generatekey",{"_index":1341,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readkey",{"_index":1362,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readmessage",{"_index":1368,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readprivatekey",{"_index":1367,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.authservice.getauthstatus",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(this.username.value",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(username",{"_index":2321,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.backend('clear",{"_index":2834,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('get",{"_index":2825,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('remove",{"_index":2832,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('set",{"_index":2829,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.balance",{"_index":2576,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.chain.downloadcli().then((data",{"_index":2141,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon",{"_index":2143,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon().then((data",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["this.changestream(this.attach",{"_index":1189,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.chartdata$[name",{"_index":1044,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartdata$[name].subscribe",{"_index":1049,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartelement",{"_index":939,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartinstances[name",{"_index":1062,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets.map((item",{"_index":1051,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets[i].data",{"_index":1052,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].destroy",{"_index":1061,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].update",{"_index":1054,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartmeta[name].datamap(response",{"_index":1053,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartservice.createchart(this.lthnchart",{"_index":938,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartservice.destroysubscriptions(this.lthnchart",{"_index":952,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartsubscriptions[name",{"_index":1048,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartsubscriptions[name].unsubscribe",{"_index":1060,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.child.keyeventinput.subscribe((e",{"_index":1197,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.buffer.active.cursorx",{"_index":1215,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.write('\\b",{"_index":1216,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln",{"_index":1212,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(data[1",{"_index":1180,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(line.trim",{"_index":1187,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(parts[1].trim",{"_index":1185,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write",{"_index":1195,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write(e.key",{"_index":1219,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command",{"_index":1211,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.pop",{"_index":1214,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.push(e.key",{"_index":1218,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(walletcomponent",{"_index":1955,"title":{},"body":{"injectables/PluginsService.html":{}}}],["this.configureoptions",{"_index":788,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.connect().asobservable",{"_index":2864,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connect().complete",{"_index":2865,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.count",{"_index":2821,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.createchartelement(this.lthnchart",{"_index":937,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.createsalt(input",{"_index":1335,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.crypto",{"_index":474,"title":{},"body":{"injectables/AppService.html":{}}}],["this.cryptservice",{"_index":2319,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.createopenpgp(usernamehash",{"_index":2308,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.decryptpgpsingle(id",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.encryptpgpsingle",{"_index":2316,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.generatekey",{"_index":2318,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sha256salty(username",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.currentlanguage",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["this.destroysubscriptions(name",{"_index":1056,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.dialogref.close",{"_index":1413,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["this.disableconsole",{"_index":2132,"title":{},"body":{"components/RootComponent.html":{}}}],["this.downloadingcli",{"_index":2138,"title":{},"body":{"components/RootComponent.html":{}}}],["this.elmref.nativeelement",{"_index":945,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.error",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filesystem.exists(pathname",{"_index":1504,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.list(dirname",{"_index":1500,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.listfiles('/cli').then((dat",{"_index":2135,"title":{},"body":{"components/RootComponent.html":{}}}],["this.filesystem.listfiles('/users').then((dat",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["this.filesystem.mkdir(dirname",{"_index":1503,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.read(filename",{"_index":1501,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.readfile",{"_index":1354,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.filesystem.readfile(`users/${id}.lthn",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filesystem.write(filename",{"_index":1502,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.writefile",{"_index":2298,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.fs.listfiles('/cli').then((dat",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["this.fs.listfiles('/wallets').then((data",{"_index":2771,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getchild(activatedroute.firstchild",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getchild(this.activatedroute",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getwalletlist",{"_index":2777,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.hascli",{"_index":2136,"title":{},"body":{"components/RootComponent.html":{}}}],["this.heading",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http",{"_index":817,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1123,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.http.post(`https://localhost:36911/daemon/wallet/json_rpc",{"_index":2605,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.id",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ispollingactivestats",{"_index":2593,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.items",{"_index":2833,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.items[key",{"_index":2823,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.loadtransactions",{"_index":2385,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.menu",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.removetag(\"name='description",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.updatetag",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalconfig.onclose",{"_index":1678,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.ondismiss",{"_index":1681,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shouldclose",{"_index":1677,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shoulddismiss",{"_index":1680,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref",{"_index":1673,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.close(result",{"_index":1679,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.dismiss(result",{"_index":1682,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.result.then(resolve",{"_index":1675,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.open(this.modalcontent",{"_index":1674,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.name",{"_index":2792,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["this.networkhashratechart",{"_index":994,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.notifierservice.notify('success",{"_index":1854,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.openedwallet",{"_index":2569,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.openpgp",{"_index":472,"title":{},"body":{"injectables/AppService.html":{}}}],["this.options",{"_index":790,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.options.plugins.tooltip.callbacks",{"_index":1784,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.options.scales.y.ticks.callback",{"_index":1781,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.password",{"_index":1808,"title":{},"body":{"components/NewComponent.html":{}}}],["this.password.value",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.password_confirm",{"_index":1809,"title":{},"body":{"components/NewComponent.html":{}}}],["this.password_confirm.value",{"_index":1810,"title":{},"body":{"components/NewComponent.html":{}}}],["this.passwordrepeat.value",{"_index":2293,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.processingform",{"_index":2291,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.recenttxs",{"_index":820,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.ref.detach",{"_index":1171,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.detectchanges",{"_index":1173,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.markforcheck",{"_index":1194,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.renderappview",{"_index":2133,"title":{},"body":{"components/RootComponent.html":{}}}],["this.renderer.appendchild(this.elmref.nativeelement",{"_index":950,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.createelement('canvas",{"_index":940,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.removechild",{"_index":951,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setattribute",{"_index":941,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle",{"_index":944,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle(this.elmref.nativeelement",{"_index":942,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderfirstrunview",{"_index":2134,"title":{},"body":{"components/RootComponent.html":{}}}],["this.restorewalletform",{"_index":2079,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.address",{"_index":2090,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.autosave_current",{"_index":2092,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.filename",{"_index":2089,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.password",{"_index":2093,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.restore_height",{"_index":2091,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.spendkey",{"_index":2095,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewkey",{"_index":2096,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewonly_wallet",{"_index":2094,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.router.events",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/login",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/user",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.router.navigatebyurl('/chain",{"_index":2142,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.navigatebyurl('/user",{"_index":2137,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.routerstate.snapshot.url.replace('/p",{"_index":1981,"title":{},"body":{"components/PostComponent.html":{}}}],["this.rows",{"_index":2382,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.rpc.getbalance",{"_index":2770,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.gettransfers(opts).then((data",{"_index":2778,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.openwallet(req",{"_index":2769,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.restorewallet(req",{"_index":2768,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.startwallet",{"_index":2767,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(content",{"_index":1440,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["this.settargettabindex",{"_index":68,"title":{},"body":{"components/AddComponent.html":{}}}],["this.setupcallbacks",{"_index":789,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.sidenav.toggle",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["this.socket",{"_index":2861,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.closed",{"_index":2862,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.next(msg",{"_index":2866,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.store$.pipe",{"_index":1088,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.store.dispatch",{"_index":2608,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.store.dispatch(changelanguage({language",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(openwallet({address",{"_index":1850,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstartaction",{"_index":1047,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstopaction",{"_index":1059,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(togglehidenavigation",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(walletactions.switchwallet({address",{"_index":2575,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.dispatch(walletactions.walletstartpolling",{"_index":2570,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.dispatch(walletactions.walletstoppolling",{"_index":2573,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.pipe",{"_index":1045,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe(select(selectlanguage)).subscribe((lang",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectmenuvisibility)).subscribe((opened",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectwallettransactions)).subscribe((data",{"_index":2380,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.store.pipe(select(walletactions.selectopenedwallet)).subscribe((wallet",{"_index":2567,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.pipe(select(walletactions.selectwallets)).subscribe((data",{"_index":2564,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.sub",{"_index":1190,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.subs",{"_index":2571,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.subs$['openedwallet",{"_index":2566,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.subs$['txn",{"_index":2379,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.subs$['wallets",{"_index":2563,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.targetaddform",{"_index":69,"title":{},"body":{"components/AddComponent.html":{}}}],["this.targettabindex",{"_index":70,"title":{},"body":{"components/AddComponent.html":{}}}],["this.titleservice.settitle(this.translate.instant(data.title",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.instant(data.description",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(req.language",{"_index":2193,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.txnselection[col",{"_index":2579,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.updatemeta",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.length",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username.value",{"_index":2292,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.wallet.getbalance().then((data",{"_index":2577,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.gettransfers(this.opts).then((data",{"_index":2386,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.wallet.getwalletlist",{"_index":1849,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.wallet.loadtransfers(this.txnselection",{"_index":2578,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.openwallet",{"_index":1853,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletEffects.html":{}}}],["this.wallet.restorewallet",{"_index":2088,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.wallet.startwallet",{"_index":2144,"title":{},"body":{"components/RootComponent.html":{}}}],["this.wallet.startwallet().then((data",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["this.wallet_name",{"_index":1806,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallet_name.value",{"_index":1813,"title":{},"body":{"components/NewComponent.html":{}}}],["this.walletrpc.createwallet",{"_index":1812,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallets",{"_index":1848,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["this.wallets.includes(dat",{"_index":2772,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.length",{"_index":2776,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.push(dat",{"_index":2775,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.ws.connect",{"_index":1191,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect().subscribe((data",{"_index":1174,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.sendmessage(channel",{"_index":1193,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["those",{"_index":734,"title":{},"body":{"interfaces/Balance.html":{}}}],["throw",{"_index":1021,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["tickmarklength",{"_index":1764,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ticks",{"_index":778,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["ticks.color",{"_index":1037,"title":{},"body":{"injectables/ChartService.html":{}}}],["time",{"_index":1743,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/TransactionsComponent.html":{}}}],["timeago",{"_index":2327,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{}}}],["timeagopipe",{"_index":1883,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TimeAgoPipe.html":{},"overview.html":{}}}],["timed",{"_index":1904,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["timer",{"_index":1099,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timer(0",{"_index":1095,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timeseries",{"_index":1744,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["timestamp",{"_index":2369,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["title",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["titleservice",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tmi",{"_index":2989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toatomic",{"_index":545,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tocoin",{"_index":2351,"title":{},"body":{"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{}}}],["tocoinpipe",{"_index":1884,"title":{"pipes/ToCoinPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["todo",{"_index":1009,"title":{},"body":{"injectables/ChartService.html":{},"injectables/FileSystemService.html":{}}}],["toggle",{"_index":2535,"title":{},"body":{"components/WalletComponent.html":{}}}],["toggle(col",{"_index":2546,"title":{},"body":{"components/WalletComponent.html":{}}}],["togglehidenavigation",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["togglemenu",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["tolthn",{"_index":531,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tonumber",{"_index":532,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["toolbar",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":784,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top",{"_index":1741,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["topromise",{"_index":895,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["torrents",{"_index":2516,"title":{},"body":{"components/VpnComponent.html":{}}}],["tostring",{"_index":1336,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["tot",{"_index":1468,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["total",{"_index":729,"title":{},"body":{"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalelements",{"_index":1862,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalpages",{"_index":1863,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["trace",{"_index":2961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":2507,"title":{},"body":{"components/VpnComponent.html":{}}}],["transactin",{"_index":2682,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transaction",{"_index":573,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["transactions",{"_index":2273,"title":{},"body":{"interfaces/SweepAllIn.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["transactions'},{'name",{"_index":122,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["transactions.component.html",{"_index":2356,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":121,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["transfer",{"_index":1562,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfer(x",{"_index":2711,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfer_type",{"_index":1579,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["transferin",{"_index":2391,"title":{"interfaces/TransferIn.html":{}},"body":{"interfaces/TransferIn.html":{},"injectables/WalletRpcService.html":{}}}],["transferout",{"_index":2394,"title":{"interfaces/TransferOut.html":{}},"body":{"interfaces/TransferOut.html":{},"injectables/WalletRpcService.html":{}}}],["transfers",{"_index":1552,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"injectables/WalletEffects.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfersplit",{"_index":2662,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplit(x",{"_index":2713,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplitin",{"_index":549,"title":{"interfaces/TransferSplitIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transfersplitout",{"_index":2403,"title":{"interfaces/TransferSplitOut.html":{}},"body":{"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{}}}],["transform",{"_index":1422,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(content",{"_index":1436,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(value",{"_index":1423,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transforms",{"_index":1250,"title":{},"body":{"injectables/CryptService.html":{}}}],["translate",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["translate.setdefaultlang('en",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":311,"title":{"modules/TranslateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/TranslateModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["translation",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":26,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tries",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{}}}],["try",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["ts",{"_index":912,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["tslib",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tx",{"_index":1640,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx's",{"_index":1558,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["tx_blob_list",{"_index":2277,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_description",{"_index":1633,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx_hash",{"_index":1585,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"interfaces/Payment.html":{},"interfaces/TransferOut.html":{}}}],["tx_hash_list",{"_index":2278,"title":{},"body":{"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/TransferSplitOut.html":{}}}],["tx_key",{"_index":2396,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["tx_key_list",{"_index":2279,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_size",{"_index":1586,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["txid",{"_index":2370,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{}}}],["txn",{"_index":2398,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["txnselection",{"_index":2532,"title":{},"body":{"components/WalletComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":1569,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["types/address",{"_index":1634,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/SplitIntegratedAddressOut.html":{}}}],["types/destination",{"_index":537,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["types/payment",{"_index":1545,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["types/transfer",{"_index":1563,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["typescript",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1297,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/SettingsState.html":{}}}],["unavailable",{"_index":1581,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["undefined",{"_index":780,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["under",{"_index":1302,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["unified",{"_index":2208,"title":{},"body":{"modules/SettingsModule.html":{}}}],["unique",{"_index":2017,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["uniquenamesgenerator",{"_index":2009,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":1749,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["units",{"_index":1400,"title":{},"body":{"interfaces/Destination.html":{},"pipes/HashRatePipe.html":{},"interfaces/MakeUriIn.html":{}}}],["units[i]}h/s",{"_index":1575,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["unknown",{"_index":1247,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["unlock",{"_index":1841,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["unlock_time",{"_index":561,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["unlocked",{"_index":732,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlocked_balance",{"_index":728,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlockwallet",{"_index":1833,"title":{},"body":{"components/OpenComponent.html":{}}}],["unlockwallet(name",{"_index":1839,"title":{},"body":{"components/OpenComponent.html":{}}}],["unsigned",{"_index":552,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["up",{"_index":973,"title":{},"body":{"injectables/ChartService.html":{},"injectables/PluginsService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["update",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"components/ConsoleComponent.html":{}}}],["updatemeta",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["uri",{"_index":583,"title":{"interfaces/Uri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/Uri.html":{},"injectables/WalletRpcService.html":{}}}],["url",{"_index":2063,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{}}}],["urlencoded",{"_index":890,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["use",{"_index":578,"title":{},"body":{"classes/Atomic.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{}}}],["used",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ProfileState.html":{}}}],["usefactory",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":111,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user'},{'name",{"_index":124,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user.component",{"_index":2483,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":2286,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.component.scss",{"_index":2287,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.reducer",{"_index":505,"title":{},"body":{"interfaces/AppState.html":{}}}],["user.usersstate",{"_index":486,"title":{},"body":{"interfaces/AppState.html":{}}}],["usercomponent",{"_index":123,"title":{"components/UserComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["userform",{"_index":2288,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["userids",{"_index":1346,"title":{},"body":{"injectables/CryptService.html":{}}}],["usermeta",{"_index":2470,"title":{"interfaces/UserMeta.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usermodule",{"_index":2477,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":608,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usernamehash",{"_index":2304,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["useroptions",{"_index":2473,"title":{"interfaces/UserOptions.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userroutingmodule",{"_index":412,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["users/${id}.lthn.private.asc",{"_index":1364,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${id}.lthn.public.asc",{"_index":1355,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${usernamehash}.lthn",{"_index":2315,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.private.asc",{"_index":2312,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.public.asc",{"_index":2313,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.revoke.asc",{"_index":2314,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["usersstate",{"_index":2475,"title":{"interfaces/UsersState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userstate",{"_index":2476,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["uses",{"_index":1317,"title":{},"body":{"injectables/CryptService.html":{}}}],["using",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["valid",{"_index":1424,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["validatorfn",{"_index":2976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1804,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["value.indexof",{"_index":2050,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.length",{"_index":1647,"title":{},"body":{"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.slice",{"_index":2052,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.substr(0",{"_index":2053,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.tostring",{"_index":2049,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["values",{"_index":1782,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["variable",{"_index":609,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verified_user",{"_index":2254,"title":{},"body":{"components/StatusComponent.html":{}}}],["vertical",{"_index":844,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["vertically",{"_index":848,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["view",{"_index":1958,"title":{},"body":{"injectables/PluginsService.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["view.chain.description",{"_index":861,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.heading",{"_index":860,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.title",{"_index":859,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.dashboard.description",{"_index":2174,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.heading",{"_index":2173,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.title",{"_index":2172,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.wallets.description",{"_index":2641,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.heading",{"_index":2640,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.title",{"_index":2639,"title":{},"body":{"modules/WalletModule.html":{}}}],["viewchild",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('modal",{"_index":1665,"title":{},"body":{"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('sidenav",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('term",{"_index":1163,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation",{"_index":1167,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.none",{"_index":1139,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewkey",{"_index":2085,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["viewonly_wallet",{"_index":2086,"title":{},"body":{"components/RestoreComponent.html":{}}}],["viewport",{"_index":1222,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["visibility_off",{"_index":2253,"title":{},"body":{"components/StatusComponent.html":{}}}],["vm",{"_index":1019,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["vm.chartinstances[name",{"_index":1038,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name",{"_index":1020,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data",{"_index":1041,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.length",{"_index":1033,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.map((dataset",{"_index":1023,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options",{"_index":1042,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.colors[i",{"_index":1025,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales",{"_index":1035,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales[dataset.yaxisid",{"_index":1034,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].type",{"_index":1040,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.hashratepipe.transform(context.parsed.y",{"_index":1786,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.hashratepipe.transform(value",{"_index":1783,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.setupdatasubscription(name",{"_index":1043,"title":{},"body":{"injectables/ChartService.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["vpn",{"_index":2446,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn'},{'name",{"_index":126,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["vpn.component",{"_index":2523,"title":{},"body":{"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn.component.html",{"_index":2500,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpn.component.scss",{"_index":2499,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpncomponent",{"_index":125,"title":{"components/VpnComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["vpnmodule",{"_index":2519,"title":{"modules/VpnModule.html":{}},"body":{"modules/VpnModule.html":{},"modules.html":{},"overview.html":{}}}],["vpnroutingmodule",{"_index":2524,"title":{"modules/VpnRoutingModule.html":{}},"body":{"modules/VpnRoutingModule.html":{},"modules.html":{}}}],["wall",{"_index":1856,"title":{},"body":{"components/OpenComponent.html":{}}}],["wallet",{"_index":34,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/GetTransfersIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"dependencies.html":{}}}],["wallet's",{"_index":2105,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["wallet.component",{"_index":2628,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.component.html",{"_index":2528,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.component.scss",{"_index":2527,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.name",{"_index":2610,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.options.pollinginterval).pipe",{"_index":2603,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.reducer",{"_index":507,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.service",{"_index":1805,"title":{},"body":{"components/NewComponent.html":{}}}],["wallet.walleteffects",{"_index":525,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walletsstate",{"_index":487,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet_name",{"_index":1794,"title":{},"body":{"components/NewComponent.html":{}}}],["walletactions",{"_index":2561,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["walletactions.walletbalance",{"_index":2609,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaddata",{"_index":2594,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaded",{"_index":2615,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletstoppedpolling",{"_index":2597,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.wallettransfers",{"_index":2613,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletcomponent",{"_index":127,"title":{"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["walleteffects",{"_index":2581,"title":{"injectables/WalletEffects.html":{}},"body":{"injectables/WalletEffects.html":{}}}],["walletlist",{"_index":2750,"title":{},"body":{"injectables/WalletService.html":{}}}],["walletloaddata",{"_index":2586,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletmodule",{"_index":2161,"title":{"modules/WalletModule.html":{}},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletroutingmodule",{"_index":413,"title":{"modules/WalletRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["walletrpc",{"_index":1797,"title":{},"body":{"components/NewComponent.html":{}}}],["walletrpcservice",{"_index":397,"title":{"injectables/WalletRpcService.html":{}},"body":{"modules/AppModule.html":{},"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["wallets",{"_index":482,"title":{},"body":{"interfaces/AppState.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletselectors",{"_index":2618,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletservice",{"_index":358,"title":{"injectables/WalletService.html":{}},"body":{"modules/AppModule.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["walletsstate",{"_index":2781,"title":{"interfaces/WalletsState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletstate",{"_index":2779,"title":{"classes/WalletState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["wallettransfers",{"_index":2622,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["want",{"_index":1279,"title":{},"body":{"injectables/CryptService.html":{}}}],["watcher",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["way",{"_index":1012,"title":{},"body":{"injectables/ChartService.html":{}}}],["ways",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{}}}],["web",{"_index":814,"title":{},"body":{"components/BlockchainComponent.html":{},"dependencies.html":{}}}],["web.service",{"_index":1496,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["web.service.ts",{"_index":1505,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:10",{"_index":1507,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:15",{"_index":1508,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:19",{"_index":1510,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:32",{"_index":1511,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:35",{"_index":1513,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:39",{"_index":1515,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:52",{"_index":1517,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["webfilesystem",{"_index":1497,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["websocket",{"_index":2859,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(\"ws://localhost:8081",{"_index":2867,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(ws_endpoint",{"_index":2863,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketservice",{"_index":1150,"title":{"injectables/WebsocketService.html":{}},"body":{"components/ConsoleComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketsubject",{"_index":2852,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["webstorageservice",{"_index":499,"title":{"injectables/WebStorageService.html":{}},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["welcome",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["well",{"_index":1288,"title":{},"body":{"injectables/CryptService.html":{}}}],["whatever",{"_index":2880,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["whenever",{"_index":2872,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["white",{"_index":1756,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["width",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{}}}],["width:80vw",{"_index":949,"title":{},"body":{"directives/ChartDirective.html":{}}}],["wire",{"_index":1953,"title":{},"body":{"injectables/PluginsService.html":{}}}],["wish",{"_index":2462,"title":{},"body":{"components/UserComponent.html":{}}}],["within",{"_index":2037,"title":{},"body":{"interfaces/ProfileState.html":{},"index.html":{}}}],["withlatestfrom",{"_index":1087,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(walletselectors.selectopenedwalletdata",{"_index":2601,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["without",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["withproperties",{"_index":1944,"title":{},"body":{"injectables/PluginsService.html":{}}}],["wizard",{"_index":2489,"title":{},"body":{"modules/UserModule.html":{}}}],["wont",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["word",{"_index":1311,"title":{},"body":{"injectables/CryptService.html":{}}}],["words.states.not_installed",{"_index":2154,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.not_installed_desc",{"_index":2155,"title":{},"body":{"components/RootComponent.html":{}}}],["working",{"_index":1494,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["works",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":2884,"title":{},"body":{"contributing.html":{}}}],["worst",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrapper",{"_index":1495,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["write",{"_index":1447,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["write(filename",{"_index":1516,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["write(type",{"_index":1466,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["writefile",{"_index":1475,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["writefile(filename",{"_index":1490,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["ws",{"_index":1154,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ws://localhost:36909",{"_index":2858,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws_endpoint",{"_index":2857,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["www",{"_index":888,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["x",{"_index":777,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["xterm",{"_index":1221,"title":{},"body":{"components/ConsoleComponent.html":{},"dependencies.html":{}}}],["y",{"_index":781,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["years",{"_index":2345,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["yes",{"_index":1426,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletRpcService.html":{}}}],["yes/no",{"_index":2021,"title":{},"body":{"components/ProfileComponent.html":{}}}],["z",{"_index":1330,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["zerolinewidth",{"_index":1762,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["zone.js",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddAddressBook.html":{"url":"interfaces/AddAddressBook.html","title":"interface - AddAddressBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddAddressBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/addAddressBook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddAddressBook {\n\taddress: string;\n\tpayment_id?: string; // (optional) string, defaults to \"0000000000000000000000000000000000000000000000000000000000000000\";\n\tdescription?: string; // (optional) string, defaults to \"\";\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddComponent.html":{"url":"components/AddComponent.html","title":"component - AddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-add\n            \n\n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTargetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                targetAddForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/add.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        targetAddForm\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTargetTabIndex\n                        \n                    \n                \n            \n            \n                \nsetTargetTabIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetTabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/add.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-wallet-add',\n\ttemplateUrl: './add.component.html'\n})\nexport class AddComponent implements OnInit, OnChanges {\n\t@Input() targetAddForm: string = 'open';\n\ttargetTabIndex: number = 0;\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tthis.setTargetTabIndex();\n\t}\n\n\tsetTargetTabIndex(): void {\n\t\tif (this.targetAddForm === \"open\") {\n\t\t\tthis.targetTabIndex = 2;\n\t\t}else if (this.targetAddForm === \"restore\") {\n\t\t\tthis.targetTabIndex = 1;\n\t\t}else{\n\t\t\tthis.targetTabIndex = 0;\n\t\t}\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.setTargetTabIndex();\n\t}\n\n}\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\t\n\t\t\t\tadd_box\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tcloud_download\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tfile_open\n\t\t\t\n\t\t\n\t\t\n\t\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\tadd_box\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloud_download\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_open\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\taddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentFlag\n                            \n                            \n                                    Public\n                                currentLanguage\n                            \n                            \n                                    Public\n                                currentLanguage$\n                            \n                            \n                                    Public\n                                heading\n                            \n                            \n                                    Public\n                                menu\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getChild\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, metaService: Meta, translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChild\n                        \n                    \n                \n            \n            \n                \ngetChild(activatedRoute: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMeta\n                        \n                    \n                \n            \n            \n                \nupdateMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        heading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menu$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {select, Store} from '@ngrx/store';\nimport {changeLanguage, selectLanguage, selectMenuVisibility, toggleHideNavigation} from '@module/settings/data';\nimport {Subscription} from 'rxjs';\n\n@Component({\n\tselector: 'lthn-app',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\tpublic menu: boolean;\n\tpublic heading = '';\n\n\n\t@ViewChild('sidenav') public sidenav: MatSidenav;\n\tpublic currentFlag: any;\n\tpublic currentLanguage$: Subscription;\n\tpublic currentLanguage: string;\n\tprivate menu$: Subscription;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate translate: TranslateService,\n\t\tprivate store: Store\n\t) {\n\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\ttranslate.setDefaultLang('en');\n\t}\n\n\tngOnInit(): void {\n\t\t// setup language watcher\n\t\tthis.currentLanguage$ = this.store.pipe(select(selectLanguage)).subscribe((lang) => {\n\t\t\tthis.currentLanguage = lang;\n\t\t\tthis.translate.use(lang)\n\t\t})\n\n\t\tthis.updateMeta();\n\t}\n\n\tpublic ngAfterViewInit() {\n\t\tthis.menu$ = this.store.pipe(select(selectMenuVisibility)).subscribe((opened) => {\n\t\t\tthis.menu = opened\n\t\t\tthis.sidenav.toggle();\n\n\t\t})\n\t}\n\n\tchangeLanguage(lang: string){\n\t\tthis.store.dispatch(changeLanguage({language: lang}))\n\t}\n\n\ttoggleMenu() {\n\t\tthis.store.dispatch(toggleHideNavigation())\n\n\t}\n\n\tupdateMeta() {\n\t\tthis.router.events\n\t\t\t.pipe(filter((event) => event instanceof NavigationEnd))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst rt = this.getChild(this.activatedRoute);\n\t\t\t\trt.data.subscribe((data) => {\n\t\t\t\t\tthis.titleService.setTitle(this.translate.instant(data.title));\n\t\t\t\t\tthis.heading = data.heading;\n\t\t\t\t\tif (data.description) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tcontent: this.translate.instant(data.description)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.removeTag(\"name='description'\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!data.robots) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'nofollow,noindex'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'follow,index'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetChild(activatedRoute: ActivatedRoute) {\n\t\tif (activatedRoute.firstChild) {\n\t\t\treturn this.getChild(activatedRoute.firstChild);\n\t\t} else {\n\t\t\treturn activatedRoute;\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                menu\n            \n        \n\n        \n        \n            {{ 'menu.text.dashboard' | translate }}\n            {{ 'menu.text.blockchain' | translate }}\n            {{ 'menu.text.wallet' | translate }}\n            {{ 'menu.text.settings' | translate }}\n        \n        \n        \n    \n\n    \n        \n            \n\n                \n                    menu_open\n                \n                {{heading | translate}}\n                \n                \n                    \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.en' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.ru' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.zh' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.es' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.de' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.fr' | translate }}\n                            \n                        \n\n\n                    \n                \n\n                \n                    \n                \n            \n        \n        \n    \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  .main-container {\n    height: 100vh;\n    width: 100%;\n    min-height: calc(99vh - 54px);\n    overflow: hidden;\n    background: radial-gradient(circle, rgba(8, 242, 181, 1) 0%, rgba(21, 130, 151, 1) 100%);\n\n    mat-card {\n      mat-card-content {\n        img {\n          height: 30vh;\n        }\n      }\n    }\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 64px;\n  }\n\n  mat-sidenav {\n    width: 298px;\n\n    .logo {\n      border: 0;\n      padding: 9px;\n      width: 210px;\n    }\n  }\n\n  html.dark-theme .made-by {\n    --active-background-color: #242628;\n    color: #838488;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                menu                                                {{ \\'menu.text.dashboard\\' | translate }}            {{ \\'menu.text.blockchain\\' | translate }}            {{ \\'menu.text.wallet\\' | translate }}            {{ \\'menu.text.settings\\' | translate }}                                                                                        menu_open                                {{heading | translate}}                                                                                                                                          {{ \\'lang.en\\' | translate }}                                                                                                                                          {{ \\'lang.ru\\' | translate }}                                                                                                                                          {{ \\'lang.zh\\' | translate }}                                                                                                                                          {{ \\'lang.es\\' | translate }}                                                                                                                                          {{ \\'lang.de\\' | translate }}                                                                                                                                          {{ \\'lang.fr\\' | translate }}                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nPluginsModule\n\nPluginsModule\n\nAppModule -->\n\nPluginsModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            PluginsModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule, BrowserTransferStateModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {DataModule} from '@data/data.module';\nimport {StatusModule} from '@module/status/status.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexModule} from '@angular/flex-layout';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {PluginsModule} from '@plugin/plugins.module';\nimport {NotifierModule} from 'angular-notifier';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\treturn new TranslateHttpLoader(http);\n}\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule.withServerTransition({appId: 'lthn-data-sync'}),\n\t\tBrowserTransferStateModule,\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tTranslateModule.forRoot({\n\t\t\tdefaultLanguage: 'en',\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t}\n\t\t}),\n\t\tAppRoutingModule,\n\t\tCommonModule,\n\t\tDataModule,\n\t\tStatusModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatDividerModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatMenuModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tFlexModule,\n\t\tAuthModule,\n\t\tConsoleModule,\n\t\tPluginsModule,\n\t\tNotifierModule.withConfig({\n\t\t\t// Custom options in here\n\t\t}),\n\n\t],\n\tproviders: [],\n\texports: [\n\t],\n\tbootstrap: [AppComponent]\n})\n/**\n * Application shell/bootstrap\n */\nexport class AppModule {\n\n\t/**\n\t * Start blockchain & wallet service automatically on start\n\t *\n\t * @param fs\n\t * @param {BlockchainService} chain\n\t * @param {WalletRpcService} wallet\n\t */\n\tconstructor(private fs: FileSystemService, private chain: BlockchainService, private wallet: WalletService) {\n\t\tthis.fs.listFiles('/cli').then((dat: any) => {\n\t\t\tif(dat.length > 2){\n\t\t\t\tthis.chain.startDaemon().then((data) => {\n\t\t\t\t\tconsole.log(\"blockchain started\")\n\t\t\t\t\tthis.wallet.startWallet().then((data) => console.log('wallet started'))\n\t\t\t\t})\n\t\t\t}\n\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nPostRoutingModule\n\nPostRoutingModule\n\nAppRoutingModule -->\n\nPostRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nAppRoutingModule -->\n\nSettingsRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BlockchainRoutingModule\n                        \n                        \n                            PostRoutingModule\n                        \n                        \n                            RootRoutingModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                        \n                            UserRoutingModule\n                        \n                        \n                            WalletRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PostRoutingModule} from '@plugin/hive/post/post-routing.module';\nimport {BlockchainRoutingModule} from '@plugin/lthn/chain/blockchain-routing.module';\nimport {UserRoutingModule} from '@module/user/user-routing.module';\nimport {RootRoutingModule} from '@module/root-routing.module';\nimport {SettingsRoutingModule} from '@module/settings/settings-routing.module';\nimport {WalletRoutingModule} from '@plugin/lthn/wallet/wallet-routing.module';\nimport {LoginComponent} from '@module/auth/login.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'Login - Lethean (LTHN)',\n\t\t\theading: 'Login',\n\t\t\tdescription: 'Lethean (LTHN) Login',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, { relativeLinkResolution: 'legacy', initialNavigation: 'enabledBlocking' }),\n\t\tPostRoutingModule,\n\t\tBlockchainRoutingModule,\n\t\tUserRoutingModule,\n\t\tSettingsRoutingModule,\n\t\tWalletRoutingModule,\n\t\t// Make sure Root is the last in the list, it has a catch all\n\t\tRootRoutingModule\n\t],\n\texports: [RouterModule]\n})\n/**\n * Application routing bootstrap file, adds all routes as lazy loaded modules\n */\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crypto\n                            \n                            \n                                    Public\n                                letheanConfig\n                            \n                            \n                                openpgp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        letheanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigIniParser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openpgp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n\nimport {APP_CONFIG} from '@env/environment';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * @deprecated\n */\nexport class AppService {\n\n\tpublic letheanConfig: ConfigIniParser;\n\topenpgp: any;\n\tcrypto: any;\n\n\tconstructor() {\n\n\t\t\tthis.openpgp = require('openpgp');\n\t\t\tthis.crypto = require('crypto-js');\n\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            charts\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            settings\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charts:         Chart.ChartsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chart.ChartsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         Logs.LogsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Logs.LogsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         Settings.SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Settings.SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User.UsersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User.UsersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         Wallet.WalletsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wallet.WalletsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {APP_CONFIG} from '@env/environment';\nimport * as Settings from '../../modules/settings/data';\nimport * as User from '../../modules/user/data/user';\nimport {localStorageSync} from 'ngrx-store-localstorage';\nimport * as Chart from '../../modules/chart/data';\nimport * as Wallet from '../../plugins/lthn/wallet/data';\nimport * as Logs from '../logs';\nimport {WebStorageService} from '@service/web-storage.service';\n\nexport interface AppState {\n\tsettings: Settings.SettingsState;\n\tcharts: Chart.ChartsState;\n\tuser: User.UsersState;\n\tlogs: Logs.LogsState;\n\twallets: Wallet.WalletsState;\n}\n\nexport const reducers: ActionReducerMap = {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer,\n\twallets: Wallet.reducer\n};\n\nexport function localStorageSyncReducer(\n\treducer: ActionReducer\n): ActionReducer {\n\treturn localStorageSync({\n\t\tkeys: [\n\t\t\t'settings',\n\t\t\t'wallets',\n\t\t\t{\n\t\t\t\tuser: {\n\t\t\t\t\tencrypt: (state: string) => btoa(state), // placeholder\n\t\t\t\t\tdecrypt: (state: string) => atob(state) // placeholder\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\trehydrate: true,\n\t\tremoveOnUndefined: true,\n\t\t//storage:  new WebStorageService()\n\t})(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !APP_CONFIG.production\n\t? []\n\t: [localStorageSyncReducer];\n\nexport const effects = [Chart.ChartsEffects, Settings.SettingsEffects, Wallet.WalletEffects ];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Atomic.html":{"url":"classes/Atomic.html","title":"class - Atomic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Atomic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toLTHN\n                            \n                            \n                                toNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toLTHN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/auth/route.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/route.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/route.guard.ts:34\n                \n            \n\n\n            \n                \n                    Handles logged out access\nRun during routing to check if the user is logged in or not, we do this check if\ngetAuthStatus() returns true, the username variable is set, to logout simply clear the username\nIf the user is not authenticated this function acts in one of two ways\n\nif ~/Lethean/users is empty perform first run / welcome\nif users do exsist, take to the /login page\n\nif APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\nyou may or may not have to login to develop, for now at least\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\n\t/**\n\t * Handles logged out access\n\t * Run during routing to check if the user is logged in or not, we do this check if\n\t * getAuthStatus() returns true, the username variable is set, to logout simply clear the username\n\t *\n\t * If the user is not authenticated this function acts in one of two ways\n\t *\n\t * 1) if ~/Lethean/users is empty perform first run / welcome\n\t * 2) if users do exsist, take to the /login page\n\t *\n\t * if APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\n\t * you may or may not have to login to develop, for now at least\n\t *\n\t * @param {ActivatedRouteSnapshot} route\n\t * @param {RouterStateSnapshot} state\n\t * @returns {boolean | Promise}\n\t */\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): boolean | Promise {\n\t\tlet isAuthenticated = this.authService.getAuthStatus();\n\t\tif (!isAuthenticated) {\n\t\t\ttry {\n\t\t\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\t\t\tif (dat.length > 0) {\n\t\t\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.router.navigate(['/user']);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}catch (e) {\n\t\t\t\tisAuthenticated = false\n\t\t\t}\n\n\t\t}\n\t\treturn isAuthenticated;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [LoginComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule\n\t]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthStatus\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthStatus\n                        \n                    \n                \n            \n            \n                \ngetAuthStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n                    User auth check is (this.user.length > 0) we only need to store how to access the data.\nPlease do not add identifiable data or anything here, data like that should live in the users encrypted\njson profiles.\nIf extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\nnot because it would just be easier to code\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n                    Takes a username and password and tries to decrypt data files with a name id matching\nIt either works and that was the right password, or it does not and then it wont.\nWe are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\nso if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    Clear the user prop by setting to a empty string, making auth checks fail.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate user = '';\n\tprivate id = '';\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * User auth check is (this.user.length > 0) we only need to store how to access the data.\n\t *\n\t * Please do not add identifiable data or anything here, data like that should live in the users encrypted\n\t * json profiles.\n\t *\n\t * If extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\n\t * not because it would just be easier to code\n\t *\n\t * @returns {boolean}\n\t */\n\tgetAuthStatus() {\n\t\treturn this.user.length > 0;\n\t}\n\n\t/**\n\t * Takes a username and password and tries to decrypt data files with a name id matching\n\t *\n\t * It either works and that was the right password, or it does not and then it wont.\n\t *\n\t * We are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\n\t * so if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync login(username, password) {\n\t\tconst id = this.cryptService.sha256Salty(username);\n\t\tconst data = await this.fileSystem.readFile(`users/${id}.lthn`);\n\n\t\tconst decrypted = JSON.parse(\n\t\t\tawait this.cryptService.decryptPGPSingle(id, password, data)\n\t\t);\n\t\tthis.user = decrypted.username;\n\t\tthis.id = decrypted.id;\n\t}\n\n\t/**\n\t * Clear the user prop by setting to a empty string, making auth checks fail.\n\t */\n\tlogout() {\n\t\tthis.user = '';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackupComponent.html":{"url":"components/BackupComponent.html","title":"component - BackupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/backup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-backup\n            \n\n\n\n\n            \n                templateUrl\n                ./backup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-backup',\n\ttemplateUrl: './backup.component.html'\n})\nexport class BackupComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BackupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/balance.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            unlocked_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlocked_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlocked_balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Balance {\n\tbalance: number; // - unsigned int; The total balance of the current monero-wallet-rpc in session.\n\tunlocked_balance: number; // - unsigned int; Unlocked funds are those funds that are sufficiently deep enough in the Monero blockchain to be considered safe to spend.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseChartConfigService.html":{"url":"injectables/BaseChartConfigService.html","title":"injectable - BaseChartConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/base-chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOptions\n                            \n                            \n                                configureOptions\n                            \n                            \n                                setupCallbacks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: []\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class BaseChartConfigService {\n\tpublic key = '';\n\tpublic type = '';\n\tpublic data: any = {\n\t\tdatasets: []\n\t};\n\tpublic options = {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.configureOptions();\n\t\tthis.setupCallbacks();\n\t}\n\n\tsetupCallbacks() {}\n\n\tconfigureOptions() {}\n\n\taddOptions(overrides: object) {\n\t\tthis.options = { ...this.options, ...overrides };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainComponent.html":{"url":"components/BlockchainComponent.html","title":"component - BlockchainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/chain/blockchain.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ChartService\n                \n            \n\n\n            \n                selector\n                lthn-chain\n            \n\n            \n                styleUrls\n                ./blockchain.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./blockchain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildType\n                            \n                            \n                                    Public\n                                recentTxs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isWeb\n                                \n                                \n                                    isApp\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recentTxs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isWeb\n                    \n                \n\n                \n                    \n                        getisWeb()\n                    \n                \n                            \n                                \n                                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isApp\n                    \n                \n\n                \n                    \n                        getisApp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ChartService} from '@module/chart/chart.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Component({\n\tselector: 'lthn-chain',\n\ttemplateUrl: './blockchain.component.html',\n\tstyleUrls: ['./blockchain.component.scss'],\n\tproviders: [ChartService]\n})\nexport class BlockchainComponent implements OnInit, OnDestroy {\n\tpublic recentTxs: any;\n\tpublic buildType: string;\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic get isWeb() {\n\t\treturn (\n\t\t\tAPP_CONFIG.environment === 'WEB' || APP_CONFIG.environment === 'DEV'\n\t\t);\n\t}\n\n\tpublic get isApp() {\n\t\treturn APP_CONFIG.environment === 'APP';\n\t}\n\n\tngOnInit(): void {\n\t\t// https://lethean.hashvault.pro/explorer/api/transactions\n\t\tthis.http\n\t\t\t.get('https://lethean.hashvault.pro/explorer/api/transactions')\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.recentTxs = data.data.blocks;\n\t\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('BlockchainComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'charts.network-hashrate.title' | translate }}\n        \n          {{ 'charts.network-hashrate.subtitle' | translate }} HashVault\n         {{ 'names.mining-pool' | translate }}\n        \n        \n          \n        \n      \n\n    \n    \n    \n      \n        {{ 'plugin.lthn.chain.table.recent-blocks.title' | translate }}\n        \n          \n            \n            \n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.age' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.hash' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.height' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.time' | translate }}\n            \n            \n\n            \n            \n              {{block.age}}\n              \n                {{block.hash}}\n              \n              \n                {{block.height}}\n              {{block.timestamp * 1000 | date: 'dd/MM/yyyy @ HH:mm:ss'}}\n            \n            \n          \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./blockchain.component.scss\n                \n                :host {\n\n}\n\n@mixin vertical-fill {\n\tbox-sizing: border-box;\n\theight: 100%;\n}\n\n.vertically-filled-mat-card-container {\n\tmat-card {\n\t\t@include vertical-fill;\n\t}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'charts.network-hashrate.title\\' | translate }}                  {{ \\'charts.network-hashrate.subtitle\\' | translate }} HashVault         {{ \\'names.mining-pool\\' | translate }}                                                                  {{ \\'plugin.lthn.chain.table.recent-blocks.title\\' | translate }}                                                        {{ \\'plugin.lthn.chain.table.recent-blocks.headings.age\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.hash\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.height\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.time\\' | translate }}                                                              {{block.age}}                              {{block.hash}}                                            {{block.height}}              {{block.timestamp * 1000 | date: \\'dd/MM/yyyy @ HH:mm:ss\\'}}                                                      '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockchainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockchainComponent} from './blockchain.component';\nimport {ChartModule} from '@module/chart/chart.module';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {TranslateModule} from '@ngx-translate/core';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: BlockchainComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [BlockchainComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tChartModule,\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tTranslateModule\n\t],\n\texports: [RouterModule]\n})\nexport class BlockchainModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainRoutingModule.html":{"url":"modules/BlockchainRoutingModule.html","title":"module - BlockchainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'chain',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./blockchain.module').then((m) => m.BlockchainModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class BlockchainRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadCLI\n                            \n                            \n                                exportChain\n                            \n                            \n                                importChain\n                            \n                            \n                                startDaemon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \ndownloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:75\n                \n            \n\n\n            \n                \n                    Download Lethean binaries to the users home dir\n~/Lethean/cli\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportChain\n                        \n                    \n                \n            \n            \n                \nexportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:31\n                \n            \n\n\n            \n                \n                    Export chain to a raw format\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importChain\n                        \n                    \n                \n            \n            \n                \nimportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:52\n                \n            \n\n\n            \n                \n                    Import raw chain data file\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDaemon\n                        \n                    \n                \n            \n            \n                \nstartDaemon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BlockchainService {\n\tconstructor(private http: HttpClient) {}\n\n\tstartDaemon() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/start`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Export chain to a raw format\n\t *\n\t */\n\texportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/export`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Import raw chain data file\n\t *\n\t */\n\timportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/import`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Download Lethean binaries to the users home dir\n\t * ~/Lethean/cli\n\t *\n\t * @returns {Promise}\n\t */\n\tdownloadCLI() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(`https://localhost:36911/update/cli`, {}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => dat);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartConfigInterface.html":{"url":"interfaces/ChartConfigInterface.html","title":"interface - ChartConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dataMap\n                                    \n                                \n                                \n                                    \n                                        setupCallbacks\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartConfigInterface {\n\tkey: string;\n\ttype: string;\n\tdata: object;\n\toptions: object;\n\n\tsetupCallbacks(): void;\n\n\tdataMap(data: any, i: number): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDifficulty.html":{"url":"interfaces/ChartDifficulty.html","title":"interface - ChartDifficulty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartDifficulty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/interfaces/difficulty.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diff\n                                        \n                                \n                                \n                                        \n                                            ts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDifficultyState {\n\toptions: {\n\t\tpollingInterval: number;\n\t};\n\tdata: ChartDifficulty[];\n}\n\nexport class ChartDifficultyState implements ChartDifficultyState {\n\tdata: ChartDifficulty[] = [];\n\toptions: { pollingInterval: number } = { pollingInterval: 30000 };\n}\n\nexport interface ChartDifficulty {\n\tts: string;\n\tdiff: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChartDirective.html":{"url":"directives/ChartDirective.html","title":"directive - ChartDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ChartDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ChartService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [lthnChart]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChartElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lthnChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elmRef: ElementRef, chartService: ChartService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        ChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        lthnChart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chart/chart.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChartElement\n                        \n                    \n                \n            \n            \n                \ncreateChartElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, PLATFORM_ID, Renderer2} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {ChartService} from './chart.service';\n\n@Directive({\n\tselector: '[lthnChart]',\n\tproviders: [ChartService]\n})\nexport class ChartDirective implements AfterViewInit, OnDestroy {\n\t@Input() lthnChart: string;\n\tprivate chartElement: any;\n\n\tconstructor(\n\t\tprivate renderer: Renderer2,\n\t\tprivate elmRef: ElementRef,\n\t\tprivate chartService: ChartService,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.createChartElement(this.lthnChart);\n\t\t\tthis.chartService.createChart(this.lthnChart);\n\t\t}\n\t}\n\n\tcreateChartElement(name: string) {\n\t\tthis.chartElement = this.renderer.createElement('canvas');\n\t\tthis.renderer.setAttribute(\n\t\t\tthis.chartElement,\n\t\t\t'id',\n\t\t\t`lthn-chart-${name}`\n\t\t);\n\t\tthis.renderer.setStyle(this.elmRef.nativeElement, 'height', '25vh');\n\t\tthis.renderer.setStyle(\n\t\t\tthis.elmRef.nativeElement,\n\t\t\t'position',\n\t\t\t'relative'\n\t\t);\n\n\t\t// position: relative; height:40vh; width:80vw\n\t\tthis.renderer.appendChild(this.elmRef.nativeElement, this.chartElement);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.renderer.removeChild(\n\t\t\t\tthis.elmRef.nativeElement,\n\t\t\t\tthis.chartElement\n\t\t\t);\n\t\t}\n\t\tthis.chartService.destroySubscriptions(this.lthnChart);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_ChartDirective_providers\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nChartDirective\n\nChartDirective\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartService\n\nChartService\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDirective} from './chart.directive';\nimport {ChartService} from './chart.service';\n\n@NgModule({\n\tdeclarations: [ChartDirective],\n\timports: [CommonModule],\n\tproviders: [ChartService],\n\texports: [ChartDirective]\n})\nexport class ChartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData$\n                            \n                            \n                                    Private\n                                chartInstances\n                            \n                            \n                                    Private\n                                chartMeta\n                            \n                            \n                                    Private\n                                chartSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                destroySubscriptions\n                            \n                            \n                                setupDataSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, platformId: Object, NetworkHashrateChart: NetworkHashrateChart)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        NetworkHashrateChart\n                                                  \n                                                        \n                                                                        NetworkHashrateChart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:54\n                \n            \n\n\n            \n                \n                    Loads up a new chart instance,\napplies colour adjustments\ncreates data subscription\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroySubscriptions\n                        \n                    \n                \n            \n            \n                \ndestroySubscriptions(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDataSubscription\n                        \n                    \n                \n            \n            \n                \nsetupDataSubscription(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:98\n                \n            \n\n\n            \n                \n                    Gets the observable for the chart key from the datastore\ncreates the data subscription, the map function is provided by the\nchart config service as a function dataMap(data)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                        \n                    \n\n            \n                \n                    holds all the data observables for all charts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:19\n                        \n                    \n\n            \n                \n                    holds the chart.js instances\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:26\n                        \n                    \n\n            \n                \n                    holds the configurations for each chart type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {Chart, registerables} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport {select, Store} from '@ngrx/store';\nimport colorLib from '@kurkle/color';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {selectChartData} from './data';\nimport {NetworkHashrateChart} from '@plugin/hashvault/charts/network-hashrate.chart';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChartService {\n\t/**\n\t * holds the chart.js instances\n\t *\n\t * @private\n\t */\n\tprivate chartInstances: object = {};\n\tprivate chartSubscriptions: object = {};\n\t/**\n\t * holds the configurations for each chart type\n\t *\n\t * @private\n\t */\n\tprivate chartMeta = {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t};\n\t/**\n\t * holds all the data observables for all charts\n\t *\n\t * @private\n\t */\n\tprivate chartData$: object = {};\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t//@TODO try and find a better way than get DI to give us configs, so they can themselves use services\n\t\tprivate NetworkHashrateChart: NetworkHashrateChart\n\t) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tChart.register(...registerables);\n\t\t}\n\t}\n\n\t/**\n\t * Loads up a new chart instance,\n\t * applies colour adjustments\n\t * creates data subscription\n\t *\n\t * @param name\n\t */\n\tcreateChart(name: string) {\n\t\tconst vm = this;\n\t\tif (!vm.chartMeta[name]) {\n\t\t\tthrow new Error(`Chart Not Defined: ${name}`);\n\t\t}\n\n\t\tvm.chartMeta[name].data.datasets.map((dataset, i) => {\n\t\t\tdataset.backgroundColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t)\n\t\t\t\t.alpha(0.2)\n\t\t\t\t.rgbString();\n\t\t\tdataset.borderColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t).rgbString();\n\t\t\t// if we have more than one data point, change label colors to match data\n\t\t\tif (vm.chartMeta[name].data.datasets.length > 1) {\n\t\t\t\tif (\n\t\t\t\t\tvm.chartMeta[name].options.scales[dataset.yAxisID]\n\t\t\t\t\t\t.position === 'right'\n\t\t\t\t) {\n\t\t\t\t\tvm.chartMeta[name].options.scales[\n\t\t\t\t\t\tdataset.yAxisID\n\t\t\t\t\t\t].ticks.color = dataset.borderColor;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvm.chartInstances[name] = new Chart(`lthn-chart-${name}`, {\n\t\t\ttype: vm.chartMeta[name].type,\n\t\t\tdata: vm.chartMeta[name].data,\n\t\t\toptions: vm.chartMeta[name].options\n\t\t});\n\n\t\tvm.setupDataSubscription(name);\n\t}\n\n\t/**\n\t * Gets the observable for the chart key from the datastore\n\t * creates the data subscription, the map function is provided by the\n\t * chart config service as a function dataMap(data)\n\t *\n\t * @param name\n\t */\n\tsetupDataSubscription(name: string) {\n\t\t//let vm = this\n\t\tthis.chartData$[name] = this.store.pipe(\n\t\t\tselect(selectChartData(this.chartMeta[name].key))\n\t\t);\n\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStartAction);\n\n\t\tthis.chartSubscriptions[name] = this.chartData$[name].subscribe(\n\t\t\t(response) => {\n\t\t\t\tif (response != undefined) {\n\t\t\t\t\tthis.chartInstances[name].data.datasets.map((item, i) => {\n\t\t\t\t\t\tthis.chartInstances[name].data.datasets[i].data =\n\t\t\t\t\t\t\tthis.chartMeta[name].dataMap(response, i);\n\t\t\t\t\t});\n\t\t\t\t\tthis.chartInstances[name].update();\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.destroySubscriptions(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\t//console.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroySubscriptions(name: string): void {\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStopAction);\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.chartSubscriptions[name].unsubscribe();\n\t\t\tthis.chartInstances[name].destroy();\n\t\t\tthis.chartInstances[name] = void 0;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartsEffects.html":{"url":"injectables/ChartsEffects.html","title":"injectable - ChartsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChartNetworkDifficultyStartPolling$\n                            \n                            \n                                ChartNetworkDifficultyStopPolling$\n                            \n                            \n                                LoadRequestedChartDifficulty$\n                            \n                            \n                                    Private\n                                    Static\n                                pollingUntil$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store>, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/data/effects.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                    Store>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStartPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStopPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRequestedChartDifficulty$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pollingUntil$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tChartNetworkDifficulty$: new Subject()\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport * as ChartsActions from './actions';\nimport {of, Subject, timer} from 'rxjs';\nimport {select, State, Store} from '@ngrx/store';\nimport {HttpClient} from '@angular/common/http';\nimport {debug, RxJsLoggingLevel} from '@data/debug.rxjs';\nimport {ChartDifficulty} from './interfaces/difficulty.state';\nimport {selectChartOptions} from './selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\tprivate static pollingUntil$ = {\n\t\tChartNetworkDifficulty$: new Subject()\n\t};\n\t// LoadRequestedChartDifficulty$ = createEffect(() =>\n\t//     this.actions$.pipe(\n\t//         ofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t//         switchMap(() =>\n\t//             this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`)\n\t//                 .pipe(\n\t//                     map(\n\t//                         (networkDifficulty) => ChartsActions.chartNetworkDifficultyLoadSuccess({\n\t//                                 networkDifficulty,\n\t//                             }\n\t//                         ),\n\t//                         catchError((error) => {\n\t//                                 console.error(error);\n\t//                                 return of(ChartsActions.chartNetworkDifficultyLoadFailure({error}));\n\t//                             }\n\t//                         )\n\t//                     )\n\t//                 )\n\t//         )\n\t//     )\n\t// );\n\n\tLoadRequestedChartDifficulty$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tChartNetworkDifficultyStartPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t);\n\tChartNetworkDifficultyStopPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate store$: Store>,\n\t\tprivate http: HttpClient\n\t) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartsState.html":{"url":"interfaces/ChartsState.html","title":"interface - ChartsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            networkDifficulty\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        networkDifficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkDifficulty:         ChartDifficultyState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartDifficultyState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createReducer, on} from '@ngrx/store';\nimport * as ChartsActions from './actions';\nimport {ChartDifficultyState} from './interfaces/difficulty.state';\n\n// export const initialState = PoolStatsState;\nexport const initialState: ChartsState = {\n\tnetworkDifficulty: new ChartDifficultyState()\n};\n\nconst chartDifficultyReducer = createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n);\n\nexport function reducer(state, action) {\n\treturn chartDifficultyReducer(state, action);\n}\n\nexport interface ChartsState {\n\tnetworkDifficulty?: ChartDifficultyState;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/console/console.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-console\n            \n\n            \n                styleUrls\n                ./console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                child\n                            \n                            \n                                    Private\n                                command\n                            \n                            \n                                    Private\n                                sub$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStream\n                            \n                            \n                                getSub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ws: WebsocketService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/console/console.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        attach\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lethean-wallet-rpc'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/console/console.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStream\n                        \n                    \n                \n            \n            \n                \nchangeStream(channel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSub\n                        \n                    \n                \n            \n            \n                \ngetSub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        child\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgTerminal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('term', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub$\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NgTerminal} from 'ng-terminal';\nimport {WebsocketService} from '@service/websocket.service';\n\n\n@Component({\n\tselector: 'lthn-app-console',\n\ttemplateUrl: './console.component.html',\n\tstyleUrls: ['./console.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n\n\n})\nexport class ConsoleComponent implements OnInit, AfterViewInit {\n\t@ViewChild('term', { static: true }) child: NgTerminal;\n\n\t@Input() attach  = 'lethean-wallet-rpc';\n\tprivate command: string[] = []\n\tprivate sub$;\n\tconstructor(private ws: WebsocketService, private ref: ChangeDetectorRef) {\n\t\tthis.ref.detach()\n\t\tsetInterval(() => {\n\t\t\tthis.ref.detectChanges();\n\t\t}, 1000);\n\n\t}\n\n\tngOnInit(): void {\n\t\tlet that = this;\n\n\t\tthis.ref.detectChanges();\n\t\tthis.ws.connect().subscribe((data) => {\n\t\t\tif(this.attach === data[0]) {\n\t\t\t\tlet line  = atob(data[1]);\n\t\t\t\tif(data[0] === 'update-cli'){\n\t\t\t\t\tthis.child.underlying.writeln(data[1]);\n\t\t\t\t}else if(line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154\")){\n\t\t\t\t\tlet parts: string[] = line.split(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154\");\n\t\t\t\t\tif(parts.length > 0){\n\t\t\t\t\t\tthis.child.underlying.writeln(parts[1].trim());\n\t\t\t\t\t}\n\t\t\t\t}else if (line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:305\")){\n\n\t\t\t\t}else{\n\t\t\t\t\tthis.child.underlying.writeln(line.trim());\n\t\t\t\t}\n\n\t\t\t\tthat.ref.markForCheck()\n\t\t\t}\n\n\t\t})\n\n\t\t\tthis.changeStream(this.attach)\n    }\n\n\tgetSub(){\n\t\tthis.sub$ = this.ws.connect();\n\t}\n\n\tchangeStream(channel:string){\n\t\tthis.ws.sendMessage(channel)\n\t\tthis.ref.markForCheck()\n\t}\n\n\tngAfterViewInit() {\n\t\tconst that = this;\n\t\tthis.child.write('$ ');\n\t\tif(this.child.keyEventInput) {\n\n\t\t\tthis.child.keyEventInput.subscribe((e) => {\n\t\t\t\t//console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n\n\t\t\t\tconst ev = e.domEvent;\n\t\t\t\tconst printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n\t\t\t\tif (ev.keyCode === 13) {\n\n\t\t\t\t\t//console.log(`cmd:letheand:${this.command.join('')}`)\n\t\t\t\t\tthat.ws.sendMessage(`cmd:letheand:${this.command.join('')}\\n`)\n\t\t\t\t\tthis.command = []\n\t\t\t\t\tthis.child.underlying.writeln(\"$\");\n\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t} else if (ev.keyCode === 8) {\n\t\t\t\t\t this.command.pop()\n\t\t\t\t\tif (this.child.underlying.buffer.active.cursorX > 0) {\n\t\t\t\t\t\tthis.child.underlying.write('\\b \\b');\n\t\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tthis.command.push(e.key);\n\t\t\t\t\tthis.child.write(e.key);\n\t\t\t\t\t//this.ref.detectChanges();\n\t\t\t\t}\n\t\t\t\t//console.log(this.command.join(\"\"))\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./console.component.scss\n                \n                //.xterm-viewport {\n//\twidth: auto !important;\n//}\n//\n//.xterm-screen {\n//\twidth: auto !important;\n//\t> canvas {\n//\t\twidth: 100% !important;\n//\t}\n//}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleModule.html":{"url":"modules/ConsoleModule.html","title":"module - ConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\n\n\nConsoleModule\n\nConsoleModule\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleComponent } from './console.component';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NgTerminalModule} from 'ng-terminal';\nimport {FlexModule} from '@angular/flex-layout';\n\n\n@NgModule({\n\tdeclarations: [ConsoleComponent],\n\texports: [\n\t\tConsoleComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tNgTerminalModule,\n\t\tFlexModule\n\t]\n})\nexport class ConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateWallet.html":{"url":"interfaces/CreateWallet.html","title":"interface - CreateWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptService.html":{"url":"injectables/CryptService.html","title":"injectable - CryptService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOpenPGP\n                            \n                            \n                                createSalt\n                            \n                            \n                                    Async\n                                decryptPGPSingle\n                            \n                            \n                                    Async\n                                encryptPGPSingle\n                            \n                            \n                                generateKey\n                            \n                            \n                                sha256Salty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypt.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOpenPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOpenPGP(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:71\n                \n            \n\n\n            \n                \n                    Creates a Armoured OpenPGP key for the username protected with the password supplied\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalt\n                        \n                    \n                \n            \n            \n                \ncreateSalt(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:25\n                \n            \n\n\n            \n                \n                    Transforms the input string with a lite l337 conversion\nthis will always give you the same salt, im aware of the issues here\nPlease start a GitHub issue if you have a good idea for knowledge-less reproducible salts\nMaybe allow people to set a custom salter? something for later.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGPSingle(id: string, passphrase: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:121\n                \n            \n\n\n            \n                \n                    Requires the users password, for this reason, you might want to make or interact with profiles\nthey are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPGPSingle(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:92\n                \n            \n\n\n            \n                \n                    Using a Lethean user public key, encrypt the supplied data\nBigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\"quick for you\" it wont be on a Pi4 under load\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateKey\n                        \n                    \n                \n            \n            \n                \ngenerateKey(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:56\n                \n            \n\n\n            \n                \n                    Create a salted PBKDF2 key for encryption purposes using a random word array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Salty\n                        \n                    \n                \n            \n            \n                \nsha256Salty(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:44\n                \n            \n\n\n            \n                \n                    sha256 hash that uses itself converted as a reproducable salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AppService} from '../app.service';\nimport {FileSystemService} from './filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CryptService {\n\tconstructor(\n\t\tprivate appService: AppService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * Transforms the input string with a lite l337 conversion\n\t * this will always give you the same salt, im aware of the issues here\n\t * Please start a GitHub issue if you have a good idea for knowledge-less reproducible salts\n\t *\n\t * Maybe allow people to set a custom salter? something for later.\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSalt(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\t\treturn input\n\t\t\t.replace('o', '0')\n\t\t\t.replace(/l/gi, '1')\n\t\t\t.replace(/e/gi, '3')\n\t\t\t.replace(/a/gi, '4')\n\t\t\t.replace(/s/gi, 'z')\n\t\t\t.replace(/t/gi, '7');\n\t}\n\n\t/**\n\t * sha256 hash that uses itself converted as a reproducable salt\n\t *\n\t * @param input\n\t * @returns {string}\n\t */\n\tsha256Salty(input): string {\n\t\treturn this.appService.crypto\n\t\t\t.SHA256(input + this.createSalt(input))\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Create a salted PBKDF2 key for encryption purposes using a random word array\n\t *\n\t * @param input\n\t * @returns {any}\n\t */\n\tgenerateKey(input) {\n\t\tconst salt = this.appService.crypto.lib.WordArray.random(128 / 8);\n\t\treturn this.appService.crypto.PBKDF2(input, salt, {\n\t\t\tkeySize: 256 / 32\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a Armoured OpenPGP key for the username protected with the password supplied\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync createOpenPGP(username, password) {\n\t\treturn await this.appService.openpgp.generateKey({\n\t\t\ttype: 'rsa', // Type of the key, defaults to ECC\n\t\t\trsaBits: 4096,\n\t\t\tuserIDs: [{name: username}], // you can pass multiple user IDs\n\t\t\tpassphrase: password, // protects the private key\n\t\t\tformat: 'armored' // output key format, defaults to 'armored' (other options: 'binary' or 'object')\n\t\t});\n\t}\n\n\n\t/**\n\t * Using a Lethean user public key, encrypt the supplied data\n\t *\n\t * Bigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\t * \"quick for you\" it wont be on a Pi4 under load\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} data\n\t * @returns {Promise}\n\t */\n\tasync encryptPGPSingle(id: string, data: string) {\n\t\tconst encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.public.asc`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\tconst encrypted = await this.appService.openpgp.encrypt({\n\t\t\tmessage: await this.appService.openpgp.createMessage({\n\t\t\t\ttext: data\n\t\t\t}), // input as Message object\n\t\t\tencryptionKeys: await this.appService.openpgp.readKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t})\n\t\t});\n\n\t\treturn encrypted;\n\t}\n\n\t/**\n\t * Requires the users password, for this reason, you might want to make or interact with profiles\n\t * they are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} passphrase\n\t * @param {string} encrypted\n\t * @returns {Promise}\n\t */\n\tasync decryptPGPSingle(id: string, passphrase: string, encrypted: string) {\n\t\t/**\n\t\t * @type string OpenPGP Armoured private key\n\t\t */\n\t\tlet encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.private.asc`\n\t\t);\n\t\t// decrypt the private key\n\t\tlet privateKey = await this.appService.openpgp.decryptKey({\n\t\t\tprivateKey: await this.appService.openpgp.readPrivateKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t}),\n\t\t\tpassphrase\n\t\t});\n\n\t\tlet message = await this.appService.openpgp.readMessage({\n\t\t\tarmoredMessage: encrypted\n\t\t})\n\n\t\tconst {data: decrypted, signatures} =\n\t\t\tawait this.appService.openpgp.decrypt({\n\t\t\t\tmessage,\n\t\t\t\tdecryptionKeys: privateKey\n\t\t\t});\n\t\t// Leave nothing to chance\n\t\tprivateKey = null\n\t\tencryptionKey = ''\n\t\tmessage = null\n\n\t\treturn decrypted;\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {effects, metaReducers, reducers} from './reducers';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {APP_CONFIG} from '@env/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {EntityDataModule} from '@ngrx/data';\nimport {entityConfig} from './entity-metadata';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forRoot(reducers, {\n\t\t\tmetaReducers\n\t\t}),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25,\n\t\t\tlogOnly: APP_CONFIG.production,\n\t\t\tactionsBlocklist: ['@ngrx/router*']\n\t\t}),\n\t\tEffectsModule.forRoot([...effects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tEntityDataModule.forRoot(entityConfig)\n\t]\n})\nexport class DataModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/destination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface Destination {\n\tamount: number; // - unsigned int; Amount to send to each destination, in atomic units.\n\taddress: Address; // - string; Destination public address.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/status/dialog/no-daemon-running.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            animal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/profile/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects-1.html":{"url":"injectables/Effects-1.html","title":"injectable - Effects-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/user/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EffortPipe.html":{"url":"pipes/EffortPipe.html","title":"pipe - EffortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EffortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/effort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        effort\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/effort.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'effort', pure: false })\nexport class EffortPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tif (valid === false) {\n\t\t\treturn 'black';\n\t\t}\n\t\tconst mid = 100;\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tconst b = 0;\n\t\tif (value \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keepHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(content);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystemInterface.html":{"url":"interfaces/FileSystemInterface.html","title":"interface - FileSystemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileSystemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-system.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        mkdir\n                                    \n                                \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        write\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(type, pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:49\n                \n            \n\n\n            \n                \n                    check if a path.. dir or filename exsists in the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:33\n                \n            \n\n\n            \n                \n                    returns a json list of folder contents\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:41\n                \n            \n\n\n            \n                \n                    make a dir, return result as a boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:8\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:16\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(type, filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:25\n                \n            \n\n\n            \n                \n                    write the string value tot he request filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string value to save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileSystemInterface {\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tpath(type, filename);\n\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tread(type, filename);\n\n\t/**\n\t * write the string value tot he request filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t * @param data string value to save\n\t */\n\twrite(type, filename, data): void;\n\n\t/**\n\t * returns a json list of folder contents\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tlist(type, dirname): any;\n\n\t/**\n\t * make a dir, return result as a boolean\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tmkdir(type, dirname): void;\n\n\t/**\n\t * check if a path.. dir or filename exsists in the filesystem\n\t *\n\t * @param type\n\t * @param pathname full system path\n\t */\n\texists(type, pathname): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemService.html":{"url":"injectables/FileSystemService.html","title":"injectable - FileSystemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exists\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                mkDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileSystem\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appFilesystem: FileSystemWebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appFilesystem\n                                                  \n                                                        \n                                                                        FileSystemWebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:71\n                \n            \n\n\n            \n                \n                    check if a file or directory exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    listFiles(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:27\n                \n            \n\n\n            \n                \n                    List files in the directory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkDir\n                        \n                    \n                \n            \n            \n                \nmkDir(dirname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a directory on the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the string value of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Including system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filename: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:51\n                \n            \n\n\n            \n                \n                    write a file to the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileSystem\n                    \n                \n\n                \n                    \n                        getfileSystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filesystem/file-system.service.ts:17\n                                \n                            \n                    \n                        \n                                returns a working FS wrapper\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemWebService} from './file-system-web.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemService {\n\tpublic type: string;\n\n\tconstructor(private appFilesystem: FileSystemWebService) {\n\t}\n\n\t/**\n\t * returns a working FS wrapper\n\t * @todo add WebFileSystem API wrapper\n\t */\n\tget fileSystem() {\n\t\treturn this.appFilesystem;\n\t}\n\n\t/**\n\t * List files in the directory\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tasync listFiles(dirname) {\n\t\ttry {\n\t\t\treturn await this.fileSystem.list(dirname);\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the string value of a file\n\t *\n\t * @param filename Including system path\n\t */\n\tasync readFile(filename: string) {\n\t\treturn await this.fileSystem.read(filename);\n\t}\n\n\t/**\n\t * write a file to the filesystem\n\t *\n\t * @param filename\n\t * @param data\n\t */\n\twriteFile(filename: string, data: any) {\n\t\treturn this.fileSystem.write(filename, data);\n\t}\n\n\t/**\n\t * Create a directory on the filesystem\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tmkDir(dirname: string) {\n\t\treturn this.fileSystem.mkdir(dirname);\n\t}\n\n\t/**\n\t * check if a file or directory exists\n\t *\n\t * @param pathname\n\t * @returns\n\t */\n\texists(pathname: string) {\n\t\treturn this.fileSystem.exists(pathname);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemWebService.html":{"url":"injectables/FileSystemWebService.html","title":"injectable - FileSystemWebService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemWebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system-web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exists\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                            \n                                    Public\n                                mkdir\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mkdir\n                        \n                    \n                \n            \n            \n                \n                    \n                    mkdir(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        path\n                        \n                    \n                \n            \n            \n                \n                    \n                    path(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                    \n                    write(filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/filesystem'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileSystemInterface} from '@interface/file-system.interface';\nimport {atob, btoa} from 'bytebuffer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemWebService implements FileSystemInterface {\n\tprivate apiUrl = 'https://localhost:36911/filesystem';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic exists(pathname): boolean {\n\t\treturn false;\n\t}\n\n\tpublic async list(dirname) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/list`, {path: dirname}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat));\n\t}\n\n\tpublic mkdir(dirname): void {\n\t}\n\n\tpublic path(filename) {\n\t}\n\n\n\tpublic async read(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/read`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => atob(dat));\n\t}\n\n\tpublic async write(filename, data) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t})\n\t\t};\n\n\t\treturn await this.http\n\t\t\t.post(\n\t\t\t\t`${this.apiUrl}/write`,\n\t\t\t\t{path: filename, data: btoa(data)},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log('e'));\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAddressBookOut.html":{"url":"interfaces/GetAddressBookOut.html","title":"interface - GetAddressBookOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAddressBookOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getAddressBookOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetAddressBookOut {\n\tentries: {\n\t\taddress: string;\n\t\tdescription: string;\n\t\tindex: number;\n\t\tpayment_id: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsIn.html":{"url":"interfaces/GetBulkPaymentsIn.html","title":"interface - GetBulkPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            min_block_height\n                                        \n                                \n                                \n                                        \n                                            payment_ids\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        min_block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetBulkPaymentsIn {\n\tpayment_ids: string[]; // - array of: string\n\tmin_block_height: number; // - unsigned int; The block height at which to start looking for payments.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsOut.html":{"url":"interfaces/GetBulkPaymentsOut.html","title":"interface - GetBulkPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetBulkPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsIn.html":{"url":"interfaces/GetPaymentsIn.html","title":"interface - GetPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetPaymentsIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsOut.html":{"url":"interfaces/GetPaymentsOut.html","title":"interface - GetPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersIn.html":{"url":"interfaces/GetTransfersIn.html","title":"interface - GetTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersIn.ts\n        \n\n\n            \n                Description\n            \n            \n                Get wallet transfers request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter_by_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers FAILED\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter_by_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter_by_height:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter TX's\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers IN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    max height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    min height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers OUT\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers PENDING\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers POOL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GetTransfersIn {\n\t/** transfers IN */\n\tin?: boolean;\n\t/** transfers OUT */\n\tout?: boolean;\n\t/** transfers PENDING */\n\tpending?: boolean;\n\t/** transfers FAILED */\n\tfailed?: boolean;\n\t/** transfers POOL */\n\tpool?: boolean;\n\t/** Filter TX's */\n\tfilter_by_height?: boolean;\n\t/** min height */\n\tmin_height?: number;\n\t/** max height */\n\tmax_height?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersOut.html":{"url":"interfaces/GetTransfersOut.html","title":"interface - GetTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Transfer} from '../types/transfer';\nimport {Destination} from '../types/destination';\n\nexport interface GetTransfersOut {\n\tin?: Transfer[] & Destination[]; // - boolean;\n\tout?: Transfer[]; // - boolean;\n\tpending?: Transfer[]; // - boolean;\n\tfailed?: Transfer[]; // - boolean;\n\tpool?: Transfer[]; // - boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashRatePipe.html":{"url":"pipes/HashRatePipe.html","title":"pipe - HashRatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashRatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number | string, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashrate.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'hashrate', pure: false })\nexport class HashRatePipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content: number | string = 0, decorator?: boolean) {\n\t\tif (typeof content == 'string' || content === null) {\n\t\t\tcontent = 0;\n\t\t}\n\t\tlet i = 0;\n\t\tconst units = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z'];\n\t\twhile (content > 1000) {\n\t\t\tcontent /= 1000;\n\t\t\ti++;\n\t\t}\n\t\tif (decorator === false) {\n\t\t\treturn content.toFixed(2);\n\t\t} else {\n\t\t\treturn `${content.toFixed(2)} ${units[i]}H/s`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/height.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n\theight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersIn.html":{"url":"interfaces/IncomingTransfersIn.html","title":"interface - IncomingTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            transfer_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_type:     \"all\" | \"available\" | \"unavailable\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"all\" | \"available\" | \"unavailable\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersIn {\n\ttransfer_type: 'all' | 'available' | 'unavailable';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersOut.html":{"url":"interfaces/IncomingTransfersOut.html","title":"interface - IncomingTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            global_index\n                                        \n                                \n                                \n                                        \n                                            spent\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersOut {\n\tamount: number; // - unsigned int\n\tspent: boolean; // - boolean\n\tglobal_index: number; // - unsigned int; Mostly internal use, can be ignored by most users.\n\ttx_hash: string; // - string; Several incoming transfers may share the same hash if they were in the same transaction.\n\ttx_size: number; // - unsigned int\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntegratedAddress.html":{"url":"interfaces/IntegratedAddress.html","title":"interface - IntegratedAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IntegratedAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/integratedAddress.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            integrated_address\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface IntegratedAddress {\n\tintegrated_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LTHN.html":{"url":"classes/LTHN.html","title":"class - LTHN","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LTHN\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toAtomic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toAtomic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-login',\n\ttemplateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\terror = '';\n\n\tconstructor(private authService: AuthService, private router: Router) {\n\t}\n\n\tasync submit() {\n\t\tawait this.authService.login(this.username.value, this.password.value);\n\t\tif (this.authService.getAuthStatus()) {\n\t\t\tthis.router.navigateByUrl('/');\n\t\t} else {\n\t\t\tthis.error = 'Login Failed, try again.';\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        Login\n        \n             0\">{{error}}\n            \n                Username\n                \n            \n            \n                Password\n                \n            \n\n            Login\n\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                     0\">{{error}}                            Username                                                        Password                                        Login            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-logs\n            \n\n            \n                styleUrls\n                ./logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/logs/logs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/logs/logs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-logs',\n\ttemplateUrl: './logs.component.html',\n\tstyleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./logs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_declarations\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogsComponent} from './logs.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'logs',\n\t\tcomponent: LogsComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [LogsComponent],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule, LogsComponent]\n})\nexport class LogsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsState.html":{"url":"interfaces/LogsState.html","title":"interface - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeIntegratedAddressIn.html":{"url":"interfaces/MakeIntegratedAddressIn.html","title":"interface - MakeIntegratedAddressIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeIntegratedAddressIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MakeIntegratedAddressIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeUriIn.html":{"url":"interfaces/MakeUriIn.html","title":"interface - MakeUriIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeUriIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeUriIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipient_name\n                                        \n                                \n                                \n                                        \n                                            tx_description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface MakeUriIn {\n\taddress: Address;\n\tamount?: number; // (optional) - the integer amount to receive, in atomic units\n\tpayment_id?: string; // (optional) - 16 or 64 character hexadecimal payment id string\n\trecipient_name?: string; // (optional) - string name of the payment recipient\n\ttx_description: string; // (optional) - string describing the reason for the tx\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/markdown.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/markdown.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {marked} from 'marked';\n\n@Pipe({\n\tname: 'markdown'\n})\nexport class MarkdownPipe implements PipeTransform {\n\ttransform(value: any, args?: any[]): any {\n\t\tif (value && value.length > 0) {\n\t\t\treturn marked(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/services/ui/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalContent\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injectable, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\n\n@Component({\n\tselector: 'modal',\n\ttemplateUrl: './modal.component.html'\n})\n@Injectable({providedIn: 'root'})\nexport class ModalComponent implements OnInit {\n\n\t@Input() public modalConfig: ModalConfig\n\n\t@ViewChild('modal') private modalContent: TemplateRef\n\tprivate modalRef: NgbModalRef\n\n\tconstructor(private modalService: NgbModal) { }\n\n\tngOnInit(): void { }\n\n\topen(): Promise {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.modalRef = this.modalService.open(this.modalContent)\n\t\t\tthis.modalRef.result.then(resolve, resolve)\n\t\t})\n\t}\n\n\tasync close(): Promise {\n\t\tif (this.modalConfig.shouldClose === undefined || (await this.modalConfig.shouldClose())) {\n\t\t\tconst result = this.modalConfig.onClose === undefined || (await this.modalConfig.onClose())\n\t\t\tthis.modalRef.close(result)\n\t\t}\n\t}\n\n\tasync dismiss(): Promise {\n\t\tif (this.modalConfig.shouldDismiss === undefined || (await this.modalConfig.shouldDismiss())) {\n\t\t\tconst result = this.modalConfig.onDismiss === undefined || (await this.modalConfig.onDismiss())\n\t\t\tthis.modalRef.dismiss(result)\n\t\t}\n\t}\n}\n\n\n\n\n\n\n    \n\n    \n        \n    \n        {{ modalConfig.modalTitle }}\n    \n    \n        \n    \n    \n        \n            {{ modalConfig.dismissButtonLabel }}\n        \n        \n            {{ modalConfig.closeButtonLabel }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ modalConfig.modalTitle }}                                            {{ modalConfig.dismissButtonLabel }}                            {{ modalConfig.closeButtonLabel }}            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ui/modal/modalConfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closeButtonLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissButtonLabel\n                                        \n                                \n                                \n                                        \n                                            modalTitle\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        disableCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        disableDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onDismiss\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldDismiss\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableCloseButton\n                        \n                    \n                \n            \n            \n                \ndisableCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableDismissButton\n                        \n                    \n                \n            \n            \n                \ndisableDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideCloseButton\n                        \n                    \n                \n            \n            \n                \nhideCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideDismissButton\n                        \n                    \n                \n            \n            \n                \nhideDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onDismiss\n                        \n                    \n                \n            \n            \n                \nonDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldClose\n                        \n                    \n                \n            \n            \n                \nshouldClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldDismiss\n                        \n                    \n                \n            \n            \n                \nshouldDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modalTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modalTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalConfig {\n\tmodalTitle: string;\n\tdismissButtonLabel?: string;\n\tcloseButtonLabel?: string;\n\n\tshouldClose?(): Promise | boolean;\n\n\tshouldDismiss?(): Promise | boolean;\n\n\tonClose?(): Promise | boolean;\n\n\tonDismiss?(): Promise | boolean;\n\n\tdisableCloseButton?(): boolean;\n\n\tdisableDismissButton?(): boolean;\n\n\thideCloseButton?(): boolean;\n\n\thideDismissButton?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_declarations\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/ui/modal/modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n\n\n@NgModule({\n  declarations: [ModalComponent],\n  exports: [\n    ModalComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkHashrateChart.html":{"url":"injectables/NetworkHashrateChart.html","title":"injectable - NetworkHashrateChart","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkHashrateChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/hashvault/charts/network-hashrate.chart.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseChartConfigService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                pollingStartAction\n                            \n                            \n                                    Public\n                                pollingStopAction\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureOptions\n                            \n                            \n                                dataMap\n                            \n                            \n                                setupCallbacks\n                            \n                            \n                                addOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data, i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'networkDifficulty'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStartAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStartPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStopAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStopPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'line'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as ChartsActions from '@module/chart/data/actions';\nimport {BaseChartConfigService} from '@module/chart/base-chart-config.service';\nimport {ChartConfigInterface} from '@module/chart/chart-config.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class NetworkHashrateChart\n\textends BaseChartConfigService\n\timplements ChartConfigInterface {\n\tpublic pollingStartAction =\n\t\tChartsActions.chartNetworkDifficultyStartPolling();\n\tpublic pollingStopAction =\n\t\tChartsActions.chartNetworkDifficultyStopPolling();\n\tpublic key = 'networkDifficulty';\n\tpublic type = 'line';\n\tpublic data = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconfigureOptions() {\n\t\tthis.addOptions({\n\t\t\tparsing: false,\n\t\t\tspanGaps: true,\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tx: {\n\t\t\t\t\ttitle: 'time',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tday: 'D MMM'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunit: 'day'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsource: 'data',\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\tbounds: 'data',\n\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\toffsetGridLines: false,\n\t\t\t\t\t\ttickMarkLength: 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\ttitle: 'hashrate',\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: null,\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro',\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tmirror: true,\n\t\t\t\t\t\tpadding: 4\n\t\t\t\t\t},\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\ttickMarkLength: 0,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tposition: 'nearest',\n\t\t\t\t\tmode: 'index',\n\t\t\t\t\tintersect: false,\n\t\t\t\t\tcaretSize: 4,\n\t\t\t\t\tbackgroundColor: 'e2e2e2',\n\t\t\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t},\n\t\t\t\tdecimation: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\talgorithm: 'lttb',\n\t\t\t\t\tsamples: 50\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolors: ['#1c9ea3']\n\t\t});\n\t}\n\n\tsetupCallbacks() {\n\t\tconst vm = this;\n\t\t// this.options.scales.y.ticks.callback = function (value, index, values) {\n\t\t//     return vm.hashratePipe.transform(value);\n\t\t// };\n\t\t//\n\t\t// this.options.plugins.tooltip.callbacks = {\n\t\t//     label: context => `Hashrate: ${vm.hashratePipe.transform(context.parsed.y)}`\n\t\t// };\n\t}\n\n\tdataMap(data, i) {\n\t\tconst vm = this;\n\t\treturn data.map((n: any) => ({\n\t\t\tx: n.ts,\n\t\t\ty: Math.floor(n.diff / 120)\n\t\t}));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewComponent.html":{"url":"components/NewComponent.html","title":"component - NewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/new.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-new\n            \n\n\n\n\n            \n                templateUrl\n                ./new.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                password_confirm\n                            \n                            \n                                wallet_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWallet\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletRpc: WalletRpcService, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletRpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_confirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { WalletRpcService } from '@service/wallet.rpc.service';\n\nimport { nameNotTakenValidator } from '../validators'\nimport { WalletService } from '../wallet.service'\n\n@Component({\n\tselector: 'lthn-wallet-new',\n\ttemplateUrl: './new.component.html'\n})\nexport class NewComponent implements OnInit {\n\twallet_name: FormControl;\n\tpassword: FormControl;\n\tpassword_confirm: FormControl;\n\tconstructor(private walletRpc: WalletRpcService, private wallet: WalletService) {}\n\n\tngOnInit(): void {\n\t\tthis.wallet_name = new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]);\n\t\tthis.password = new FormControl('')\n\t\tthis.password_confirm = new FormControl('')\n\t}\n\n\tcreateWallet() {\n\t\tif (this.password.value === this.password_confirm.value) {\n\t\t\tconsole.log(\n\t\t\t\tthis.walletRpc.createWallet({\n\t\t\t\t\tfilename: this.wallet_name.value,\n\t\t\t\t\tpassword: this.password.value,\n\t\t\t\t\tlanguage: 'English'\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.new-wallet' | translate }}\n    \n\n        \n            {{ 'plugin.lthn.wallet.label.filename' | translate }}\n            \n\t\t\tWallet already exists\n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n            \n        \n        {{ 'plugin.lthn.wallet.button.create-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.new-wallet\\' | translate }}                        {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}            \t\t\tWallet already exists                            {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                            {{ \\'plugin.lthn.wallet.button.create-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoDaemonRunningDialog.html":{"url":"components/NoDaemonRunningDialog.html","title":"component - NoDaemonRunningDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoDaemonRunningDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/dialog/no-daemon-running.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status-no-daemon\n            \n\n\n\n\n            \n                templateUrl\n                no-daemon-running.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n    \n        \n  Please Download Our App\n  \n    The blockchain functionality requires extra software, please install our app to enable this feature.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Download Our App      The blockchain functionality requires extra software, please install our app to enable this feature.  '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoDaemonRunningDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-open\n            \n\n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlockWallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, store: Store, notifierService: NotifierService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifierService\n                                                  \n                                                        \n                                                                    NotifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:33\n                \n            \n\n\n            \n                \n                    get list of filesystem wallets\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockWallet\n                        \n                    \n                \n            \n            \n                \nunlockWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:42\n                \n            \n\n\n            \n                \n                    Unlock wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:23\n                        \n                    \n\n            \n                \n                    Lists the wallets known\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {NotifierService} from 'angular-notifier';\nimport {addWallet, openWallet} from '@plugin/lthn/wallet/data';\nimport {Store} from '@ngrx/store';\n\n@Component({\n\tselector: 'lthn-wallet-open',\n\ttemplateUrl: './open.component.html'\n})\nexport class OpenComponent implements OnInit {\n\t@Input() name?: string = '';\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\t/**\n\t * Lists the wallets known\n\t *\n\t * @type {string[]}\n\t */\n\tpublic wallets: string[];\n\n\n\tconstructor(private wallet: WalletService, private store: Store, private notifierService: NotifierService) {\n\n\t}\n\n\t/**\n\t * get list of filesystem wallets\n\t */\n\tngOnInit(): void {\n\t\tthis.wallets = this.wallet.getWalletList()\n\t}\n\n\t/**\n\t * Unlock wallet\n\t *\n\t * @returns {Promise>}\n\t */\n\tunlockWallet(name: string) {\n\t\tthis.store.dispatch(openWallet({address: name, password: (document.getElementById(name + '-pass')).value}))\n//\t\treturn this.wallet.openWallet({\n//\t\t\tfilename: name,\n//\t\t\tpassword:\n//\t\t}).then(() => this.notifierService.notify('success', 'Loaded Wallet: ' + name));\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.unlock-wallet' | translate }}\n    \n        \n            \n            \n                {{wall}}\n                \n                    \n                        {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                        \n                    \n                    {{ 'plugin.lthn.wallet.button.unlock-wallet' | translate }}\n\n                \n            \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.unlock-wallet\\' | translate }}                                                    {{wall}}                                                            {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                {{ \\'plugin.lthn.wallet.button.unlock-wallet\\' | translate }}                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenWallet.html":{"url":"interfaces/OpenWallet.html","title":"interface - OpenWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptions.html":{"url":"classes/PaginatorOptions.html","title":"class - PaginatorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PaginatorOptionsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptionsInterface.html":{"url":"classes/PaginatorOptionsInterface.html","title":"class - PaginatorOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParseUri.html":{"url":"interfaces/ParseUri.html","title":"interface - ParseUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParseUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         MakeUriIn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MakeUriIn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Payment {\n\tamount: number;\n\tblock_height: number;\n\tpayment_id: string;\n\ttx_hash: string;\n\tunlock_time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HashRatePipe} from './crypto/hashrate.pipe';\nimport {TimeAgoPipe} from './date/timeAgo.pipe';\nimport {EscapeHtmlPipe} from './content/html.pipe';\nimport {ShruggiePipe} from './content/shruggie.pipe';\nimport {RemoveTrailingZerosPipe} from './math/removeTrailingZeros.pipe';\nimport {MarkdownPipe} from './content/markdown.pipe';\nimport {EffortPipe} from './crypto/effort.pipe';\nimport {ToCoinPipe} from 'app/pipes/crypto/toCoin.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe,\n\t\tToCoinPipe\n\t],\n\texports: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe,\n\t\tToCoinPipe\n\t],\n\timports: [CommonModule]\n})\nexport class PipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginDefinition.html":{"url":"interfaces/PluginDefinition.html","title":"interface - PluginDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluginDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description_short\n                                        \n                                \n                                \n                                        \n                                            git_repo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            readme_list\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description_short\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_short:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git_repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        git_repo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readme_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readme_list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PluginStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plugins.html":{"url":"interfaces/Plugins.html","title":"interface - Plugins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plugins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_update_check\n                                        \n                                \n                                \n                                        \n                                            loaded_keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_update_check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_update_check:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_keys:         PluginDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PluginsComponent.html":{"url":"components/PluginsComponent.html","title":"component - PluginsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PluginsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/plugins.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-plugins\n            \n\n            \n                styleUrls\n                ./plugins.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./plugins.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, wallet: PluginsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/plugins.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        PluginsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluginsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/plugins.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {PluginsService} from '@plugin/plugins.service';\nimport {createCustomElement} from '@angular/elements';\nimport {WalletComponent} from '@plugin/lthn/wallet/wallet.component';\n\n@Component({\n  selector: 'lthn-app-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrls: ['./plugins.component.scss']\n})\nexport class PluginsComponent implements OnInit {\n\n  constructor(injector: Injector, public wallet: PluginsService) {\n    // Convert `PopupComponent` to a custom element.\n    const PopupElement = createCustomElement(WalletComponent, {injector});\n    // Register the custom element with the browser.\n    customElements.define('lthn-app-wallet', PopupElement);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \nShow as component\nShow as element\n\n    \n\n    \n                \n                    ./plugins.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Show as componentShow as element'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PluginsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginsModule.html":{"url":"modules/PluginsModule.html","title":"module - PluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PluginsModule\n\n\n\ncluster_PluginsModule_exports\n\n\n\ncluster_PluginsModule_providers\n\n\n\ncluster_PluginsModule_declarations\n\n\n\n\nPluginsComponent\n\nPluginsComponent\n\n\n\nPluginsModule\n\nPluginsModule\n\nPluginsModule -->\n\nPluginsComponent->PluginsModule\n\n\n\n\n\nPluginsComponent \n\nPluginsComponent \n\nPluginsComponent  -->\n\nPluginsModule->PluginsComponent \n\n\n\n\n\nPluginsService\n\nPluginsService\n\nPluginsModule -->\n\nPluginsService->PluginsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/plugins.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PluginsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PluginsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PluginsComponent } from 'app/plugins/plugins.component';\nimport {PluginsService} from '@plugin/plugins.service';\n\n\n\n@NgModule({\n  declarations: [\n    PluginsComponent\n  ],\n  exports: [\n    PluginsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    PluginsService\n  ]\n})\nexport class PluginsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginsService.html":{"url":"injectables/PluginsService.html","title":"injectable - PluginsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/plugins.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsComponent\n                            \n                            \n                                showAsElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, applicationRef: ApplicationRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/plugins.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showAsComponent\n                        \n                    \n                \n            \n            \n                \nshowAsComponent(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAsElement\n                        \n                    \n                \n            \n            \n                \nshowAsElement(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ApplicationRef, ComponentFactoryResolver, Injectable, Injector} from '@angular/core';\nimport {WalletComponent} from '@plugin/lthn/wallet/wallet.component';\nimport {NgElement, WithProperties} from '@angular/elements';\n\n\n@Injectable()\nexport class PluginsService {\n\n  constructor(\n      private injector: Injector,\n      private applicationRef: ApplicationRef,\n      private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  showAsElement(message: string) {\n    // Create element\n    const popupEl: NgElement & WithProperties = document.createElement('lthn-app-wallet') as any;\n\n    // Listen to the close event\n   // popupEl.addEventListener('closed', () => document.body.removeChild(popupEl));\n\n    // Set the message\n   // popupEl.message = message;\n\n    // Add to the DOM\n    document.body.appendChild(popupEl);\n  }\n\n  showAsComponent(message: string) {\n    // Create element\n    const popup = document.createElement('lthn-app-wallet');\n\n    // Create the component and wire it up with the element\n    const factory = this.componentFactoryResolver.resolveComponentFactory(WalletComponent);\n    const popupComponentRef = factory.create(this.injector, [], popup);\n\n    // Attach to the view so that the change detector knows to run\n    this.applicationRef.attachView(popupComponentRef.hostView);\n\n    // Listen to the close even\n    // Add to the DOM\n    document.body.appendChild(popup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/hive/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hive/post/post.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client } from '@hiveio/dhive';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'lthn-app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\tpublic post = {};\n\tpublic title = '';\n\tpublic content = '';\n\tpublic author = '';\n\tprivate subs: any = {};\n\n\tconstructor(private router: Router) {}\n\n\tngOnInit(): void {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst slug = this.router.routerState.snapshot.url.replace('/p/', '');\n\t\tconst that = this;\n\t\tconsole.log(this.router.routerState.snapshot.url);\n\n\t\tclient.database.getState(`/hive-179211/@${slug}`).then(function (post) {\n\t\t\tthat.post = post;\n\n\t\t\tthat.content = post.content[slug].body;\n\t\t\tthat.title = post.content[slug].title;\n\t\t\tthat.author = post.content[slug].author;\n\t\t\tconsole.log(post);\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      {{title}}\n      {{author}}\n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                {{title}}      {{author}}                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PostComponent} from './post.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {PipesModule} from '../../../pipes/pipes.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: PostComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: PostComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [PostComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tPipesModule\n\t]\n})\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostRoutingModule.html":{"url":"modules/PostRoutingModule.html","title":"module - PostRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'p',\n\t\tloadChildren: () => \"import('./post.module').then((m) => m.PostModule)\"\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class PostRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                randomAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/profile.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        randomAlias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n\tcolors,\n\tnames,\n\tstarWars,\n\tuniqueNamesGenerator\n} from 'unique-names-generator';\n\n@Component({\n\tselector: 'lthn-user-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\tpublic randomAlias: string = uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t});\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Profiles\n            \n              Profile 1\n              -->\n              \n              -->\n            \n          \n\n          \n          \n            \n              person_add\n            \n          \n          \n            engineering\n          \n        \n      \n\n\n    \n    \n    \n      \n        Profile\n        \n          \n            Name\n          \n        \n      \n      \n        Blockchain Settings\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n      \n        Wallets\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Profiles                          Profile 1              -->                            -->                                                                    person_add                                            engineering                                                  Profile                              Name                                      Blockchain Settings                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                            Wallets                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            dkey\n                                        \n                                \n                                \n                                        \n                                            ekey\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ekey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ekey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileState {\n\t// Friendly name for the profile\n\talias: string;\n\t// auto generated image from the friendly name\n\tavatar: string;\n\t// id's to attached wallets\n\twallets: any;\n\t// application prefrences etc\n\toptions: any;\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: string;\n\t// Encryption Key, to save data\n\tekey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyIn.html":{"url":"interfaces/QueryKeyIn.html","title":"interface - QueryKeyIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyIn {\n\tkey_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyOut.html":{"url":"interfaces/QueryKeyOut.html","title":"interface - QueryKeyOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyOut {\n\tkey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RemoveTrailingZerosPipe.html":{"url":"pipes/RemoveTrailingZerosPipe.html","title":"pipe - RemoveTrailingZerosPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RemoveTrailingZerosPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/math/removeTrailingZeros.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        removeTrailingZero\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/math/removeTrailingZeros.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'removeTrailingZero', pure: true })\nexport class RemoveTrailingZerosPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tvalue = value.toString();\n\t\tif (value.indexOf('.') === -1) {\n\t\t\treturn parseInt(value);\n\t\t}\n\t\twhile (\n\t\t\t(value.slice(-1) === '0' || value.slice(-1) === '.') &&\n\t\t\tvalue.indexOf('.') !== -1\n\t\t) {\n\t\t\tvalue = value.substr(0, value.length - 1);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-rpc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            jsonrpc\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonrpc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonrpc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const rpcBody = (method) => (params) => ({\n\tjsonrpc: '2.0',\n\tid: '0',\n\tmethod: method,\n\tparams: params\n});\nconst axios = require('axios').default;\nexport const request =\n\t(url) =>\n\t (method, params = {}) =>\n\t\t axios.post(url, JSON.stringify(rpcBody(method)(params))).then((data) => {\n\t\t\t console.log(data)\n\t\t\t if(data['data'].error){\n\t\t\t\treturn data['data']\n\t\t\t } else if(data['data']) {\n\t\t\t\t return data['data'].result\n\t\t\t }else{\n\t\t\t\t return data\n\t\t\t }\n\t\t });\n\ninterface Response {\n\tid: string;\n\tjsonrpc: string;\n\tresult: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreComponent.html":{"url":"components/RestoreComponent.html","title":"component - RestoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/restore.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-restore\n            \n\n\n\n\n            \n                templateUrl\n                ./restore.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restoreWalletForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                restoreWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWalletForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {nameNotTakenValidator} from '../validators'\n\n@Component({\n\tselector: 'lthn-wallet-restore',\n\ttemplateUrl: './restore.component.html'\n})\n\nexport class RestoreComponent implements OnInit {\n\trestoreWalletForm : FormGroup;\n\n\tconstructor(private wallet: WalletService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.restoreWalletForm = new FormGroup({\n\t\t\tfilename: new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]),\n\t\t\taddress: new FormControl(''),\n\t\t\trestore_height: new FormControl('0'),\n\t\t\tautosave_current: new FormControl(true),\n\t\t\tpassword: new FormControl(''),\n\t\t\tpassword_confirm: new FormControl(''),\n\t\t\tspendkey: new FormControl(''),\n\t\t\tviewkey: new FormControl(''),\n\t\t\tviewonly_wallet: new FormControl(false),\n\t\t});\n\t}\n\n\trestoreWallet() {\n\n\t\tthis.wallet.restoreWallet({\n\t\t\tfilename: this.restoreWalletForm.value.filename,\n\t\t\taddress: this.restoreWalletForm.value.address,\n\t\t\trestore_height: this.restoreWalletForm.value.restore_height,\n\t\t\tautosave_current: this.restoreWalletForm.value.autosave_current,\n\t\t\tpassword: this.restoreWalletForm.value.password,\n\t\t\tspendkey:\n\t\t\t(\n\t\t\t\tthis.restoreWalletForm.value.viewonly_wallet ?\n\t\t\t\t\t'' : this.restoreWalletForm.value.spendkey\n\t\t\t)\n\t\t\t,\n\t\t\tviewkey: this.restoreWalletForm.value.viewkey\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.restore-seed' | translate }}\n    \n        \n            \n                \n                    {{ 'plugin.lthn.wallet.label.filename' | translate }}\n                    \n\t\t\t\t\tWallet already exists\n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                    \n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n                    \n                \n            \n\n            \n                \n                    {{ 'plugin.lthn.wallet.label.address' | translate }}\n                    \n                \n            \n\n\n\n            \n                {{ 'plugin.lthn.wallet.label.spend-key' | translate }}\n                \n            \n\n            \n                {{ 'plugin.lthn.wallet.label.view-key' | translate }}\n                \n            \n\n            \n\n                \n                    \n                        Optional parameters\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.restore-height' | translate }}\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.autosave' | translate }}\n                \n\n                \n                    View only wallet\n                \n\n            \n\n            \n                {{ 'plugin.lthn.wallet.button.restore-wallet' | translate }}\n            \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.restore-seed\\' | translate }}                                                            {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}                    \t\t\t\t\tWallet already exists                                                    {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                                                                                                {{ \\'plugin.lthn.wallet.label.address\\' | translate }}                                                                            {{ \\'plugin.lthn.wallet.label.spend-key\\' | translate }}                                                        {{ \\'plugin.lthn.wallet.label.view-key\\' | translate }}                                                                                                    Optional parameters                                                                        {{ \\'plugin.lthn.wallet.label.restore-height\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.autosave\\' | translate }}                                                    View only wallet                                                        {{ \\'plugin.lthn.wallet.button.restore-wallet\\' | translate }}                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestoreWallet.html":{"url":"interfaces/RestoreWallet.html","title":"interface - RestoreWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestoreWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/requests/restoreWallet.ts\n        \n\n\n            \n                Description\n            \n            \n                Restore Wallet request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            autosave_current\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            restore_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendkey\n                                        \n                                \n                                \n                                        \n                                            viewkey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's primary address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosave_current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosave_current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Defaults to true) If true, save the current wallet before generating the new wallet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's file name on the RPC server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restore_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restore_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; defaults to 0) The block height to restore the wallet from.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's private view key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RestoreWallet {\n\n\t/**\n\t * The wallet's file name on the RPC server.\n\t */\n\tfilename: string;\n\n\t/**\n\t * (Optional; defaults to 0) The block height to restore the wallet from.\n\t */\n\trestore_height?: number;\n\n\t/**\n\t * The wallet's primary address.\n\t */\n\taddress: string;\n\n\t/**\n\t * (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\t */\n\tspendkey?: string;\n\n\t/**\n\t * The wallet's private view key.\n\t */\n\tviewkey: string;\n\n\t/**\n\t * The wallet's password.\n\t */\n\tpassword: string;\n\n\t/**\n\t * (Defaults to true) If true, save the current wallet before generating the new wallet.\n\t */\n\tautosave_current?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RootComponent.html":{"url":"components/RootComponent.html","title":"component - RootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/root.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-root\n            \n\n\n\n\n            \n                templateUrl\n                ./root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disableConsole\n                            \n                            \n                                    Public\n                                downloadingCLI\n                            \n                            \n                                    Public\n                                hasCLI\n                            \n                            \n                                platformId\n                            \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadCLI\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                renderAppView\n                            \n                            \n                                renderFirstRunView\n                            \n                            \n                                renderWebView\n                            \n                            \n                                startBlockchain\n                            \n                            \n                                startWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, fileSystem: FileSystemService, chain: BlockchainService, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/root.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderAppView\n                        \n                    \n                \n            \n            \n                \nrenderAppView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderFirstRunView\n                        \n                    \n                \n            \n            \n                \nrenderFirstRunView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderWebView\n                        \n                    \n                \n            \n            \n                \nrenderWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startBlockchain\n                        \n                    \n                \n            \n            \n                \nstartBlockchain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disableConsole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadingCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(PLATFORM_ID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit, PLATFORM_ID} from '@angular/core';\nimport {Client} from '@hiveio/dhive';\nimport {Router} from '@angular/router';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport { isPlatformServer} from '@angular/common';\n\n@Component({\n\tselector: 'lthn-root',\n\ttemplateUrl: './root.component.html'\n})\nexport class RootComponent implements OnInit {\n\tpublic posts: any = [];\n\n\tpublic hasCLI: boolean;\n\tpublic downloadingCLI: boolean;\n\t@Inject(PLATFORM_ID) platformId: Object\n\tpublic disableConsole = true\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate chain: BlockchainService,\n\t\tprivate wallet: WalletService\n\t) {\n\t\tthis.disableConsole = isPlatformServer(this.platformId)\n\t}\n\n\tasync ngOnInit() {\n\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\tif (dat.length > 0) {\n\t\t\t\tthis.renderAppView();\n\t\t\t} else {\n\t\t\t\tthis.renderFirstRunView();\n\t\t\t}\n\t\t});\n\t\tthis.fileSystem.listFiles('/cli').then((dat: any) => {\n\t\t\tthis.hasCLI = dat.length > 0;\n\t\t});\n\t}\n\n\trenderAppView() {\n\t}\n\n\trenderFirstRunView() {\n\t\tthis.router.navigateByUrl('/user');\n\t}\n\n\tasync downloadCLI() {\n\t\tthis.downloadingCLI = true\n\t\tawait new Promise(f => setTimeout(f, 1000));\n\t\tthis.chain.downloadCLI().then((data) => {\n\t\t\tthis.downloadingCLI = false;\n\t\t\tthis.router.navigateByUrl('/chain')\n\t\t});\n\t}\n\n\tstartBlockchain() {\n\t\treturn this.chain.startDaemon();\n\t}\n\n\tstartWallet() {\n\t\treturn this.wallet.startWallet();\n\t}\n\n\trenderWebView() {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst that = this;\n\t\tclient.database\n\t\t\t.getDiscussions('trending', {tag: 'dvpn', limit: 5})\n\t\t\t.then(function (discussions) {\n\t\t\t\tthat.posts = discussions;\n\t\t\t});\n\t}\n}\n\n    \n\n    \n        \n    \n    \n        {{ 'words.states.not_installed' | translate }}\n        \n            {{ 'words.states.not_installed_desc' | translate }}\n            {{ 'button.install-blockchain' | translate }}\n            \n                \n            \n        \n    \n    \n\n\n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ \\'words.states.not_installed\\' | translate }}                    {{ \\'words.states.not_installed_desc\\' | translate }}            {{ \\'button.install-blockchain\\' | translate }}                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootModule\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_RootModule_declarations\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConsoleModule\n                        \n                        \n                            TranslateModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RootComponent} from './root.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {WalletModule} from '@plugin/lthn/wallet/wallet.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatDividerModule} from '@angular/material/divider';\n\n@NgModule({\n\tdeclarations: [RootComponent],\n\texports: [\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tMatTabsModule,\n\t\tWalletModule,\n\t\tTranslateModule,\n\t\tMatDividerModule,\n\t\tConsoleModule\n\t]\n})\nexport class RootModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootRoutingModule.html":{"url":"modules/RootRoutingModule.html","title":"module - RootRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RootRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootRoutingModule\n\n\n\ncluster_RootRoutingModule_imports\n\n\n\n\nRootModule\n\nRootModule\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RootModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from '@module/root.component';\nimport {AuthGuard} from '@module/auth/route.guard';\nimport {RootModule} from '@module/root.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: RootComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.dashboard.title',\n\t\t\theading: 'view.dashboard.heading',\n\t\t\tdescription: 'view.dashboard.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule,\n\t\tRootModule,\n\t\tRouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class RootRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                setting_tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        setting_tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'general'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\tsetting_tab = 'general';\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tconsole.log('SettingsComponent INIT');\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('SettingsComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent-1.html":{"url":"components/SettingsComponent-1.html","title":"component - SettingsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-settings',\n\ttemplateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settings.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/data/settings.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/data/settings.effects.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { switchMap } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class SettingsEffects {\n\tchangeLanguage$ = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(private actions$: Actions, private translate: TranslateService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LogsModule} from './logs/logs.module';\nimport {SettingsComponent} from './settings.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: SettingsComponent,\n\t\tdata: {\n\t\t\ttitle: 'Settings',\n\t\t\theading: 'Unified Settings Panel',\n\t\t\tdescription: 'Lethean (LTHN) Blockchain Stats',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'logs',\n\t\tloadChildren: () =>\n\t\t\t\"import('./logs/logs.module').then((m) => m.LogsModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [SettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tFlexModule,\n\t\tMatToolbarModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatTabsModule,\n\t\tLogsModule\n\t],\n\texports: [RouterModule]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./settings.module').then(\\\n\t\t\t\t(m) => m.SettingsModule\\\n\t\t\t)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settingsState.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            biggerContentFont\n                                        \n                                \n                                \n                                        \n                                            daltonism\n                                        \n                                \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                                \n                                        \n                                            globalFontSize\n                                        \n                                \n                                \n                                        \n                                            hideNavigation\n                                        \n                                \n                                \n                                        \n                                            highContrastText\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            rtl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        biggerContentFont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biggerContentFont:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daltonism\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daltonism:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globalFontSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        globalFontSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideNavigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrastText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highContrastText:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rtl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rtl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState {\n\thideNavigation: boolean;\n\t// accessibility\n\tbiggerContentFont: boolean;\n\thighContrastText: boolean;\n\tdaltonism: boolean;\n\trtl: boolean;\n\t// global font size\n\tglobalFontSize: string;\n\t// UI Language\n\tlanguage: string;\n\t// UI mode\n\tdarkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShruggiePipe.html":{"url":"pipes/ShruggiePipe.html","title":"pipe - ShruggiePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShruggiePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/shruggie.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shrug\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/shruggie.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'shrug', pure: false })\nexport class ShruggiePipe implements PipeTransform {\n\ttransform(content, decorator?: boolean) {\n\t\tif (content === null || content === '') {\n\t\t\treturn '¯\\\\_(ツ)_/¯';\n\t\t}\n\t\treturn content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SplitIntegratedAddressOut.html":{"url":"interfaces/SplitIntegratedAddressOut.html","title":"interface - SplitIntegratedAddressOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SplitIntegratedAddressOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            standard_address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standard_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        standard_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface SplitIntegratedAddressOut {\n\tstandard_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/status.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status\n            \n\n            \n                styleUrls\n                ./status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                status_annon\n                            \n                            \n                                status_daemon\n                            \n                            \n                                status_private\n                            \n                            \n                                status_secure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/status.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_annon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_secure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n\tselector: 'lthn-app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent {\n\tstatus_daemon: any;\n\tstatus_secure: any;\n\tstatus_private: any;\n\tstatus_annon: any;\n\n\tconstructor(public dialog: MatDialog) {}\n}\n\n    \n\n    \n        \n    \n        \n            \n                cloud\n            \n            \n                cloud_off\n            \n            \n                lock\n            \n            \n                lock_open\n            \n            \n                visibility_off\n            \n            \n                visibility_off\n            \n            \n                verified_user\n            \n            \n                verified_user\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./status.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cloud                                        cloud_off                                        lock                                        lock_open                                        visibility_off                                        visibility_off                                        verified_user                                        verified_user                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/status/status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NoDaemonRunningDialog\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {NoDaemonRunningDialog} from './dialog/no-daemon-running.component';\n\n@NgModule({\n\tdeclarations: [StatusComponent, NoDaemonRunningDialog],\n\texports: [StatusComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatDialogModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule\n\t]\n})\nexport class StatusModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreOut.html":{"url":"interfaces/StoreOut.html","title":"interface - StoreOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/storeOut.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface StoreOut {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllIn.html":{"url":"interfaces/SweepAllIn.html","title":"interface - SweepAllIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllIn.ts\n        \n\n\n            \n                Description\n            \n            \n                SweepAll request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            below_amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            do_not_relay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_keys\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination public address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        below_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        below_amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        do_not_relay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        do_not_relay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_hex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) return the transactions as hex encoded string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_keys:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Return the transaction keys after sending.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of outpouts from the blockchain to mix with (0 means no mixing).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllIn {\n\n\t/** Destination public address */\n\taddress: string;\n\n\t/** (Optional) */\n\tpriority?: number;\n\n\t/** Number of outpouts from the blockchain to mix with (0 means no mixing). */\n\tmixin: number;\n\n\t/** unsigned int; Number of blocks before the monero can be spent (0 to not add a lock). */\n\tunlock_time: number;\n\n\t/** (Optional) Random 32-byte/64-character hex string to identify a transaction. */\n\tpayment_id?: string;\n\n\t/** (Optional) Return the transaction keys after sending. */\n\tget_tx_keys?: boolean;\n\n\t/** (Optional) */\n\tbelow_amount?: number;\n\n\t/** (Optional)  */\n\tdo_not_relay?: boolean;\n\n\t/** (Optional) return the transactions as hex encoded string. */\n\tget_tx_hex?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllOut.html":{"url":"interfaces/SweepAllOut.html","title":"interface - SweepAllOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_blob_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                                \n                                        \n                                            tx_key_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_blob_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_blob_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllOut {\n\ttx_hash_list: string[];\n\ttx_key_list: string[];\n\ttx_blob_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepDustOut.html":{"url":"interfaces/SweepDustOut.html","title":"interface - SweepDustOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepDustOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepDustOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepDustOut {\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/date/timeAgo.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/date/timeAgo.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'timeAgo',\n\tpure: false\n})\nexport class TimeAgoPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value: number) {\n\t\tconst d = new Date(value * 1000);\n\t\tconst now = new Date();\n\t\tconst seconds = Math.round(\n\t\t\tMath.abs((now.getTime() - d.getTime()) / 1000)\n\t\t);\n\t\tconst minutes = Math.round(Math.abs(seconds / 60));\n\t\tconst hours = Math.round(Math.abs(minutes / 60));\n\t\tconst days = Math.round(Math.abs(hours / 24));\n\t\tconst months = Math.round(Math.abs(days / 30.416));\n\t\tconst years = Math.round(Math.abs(days / 365));\n\t\tif (Number.isNaN(seconds)) {\n\t\t\treturn '';\n\t\t} else if (seconds  545)\n\t\t\treturn years + ' years ago';\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToCoinPipe.html":{"url":"pipes/ToCoinPipe.html","title":"pipe - ToCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/toCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number, symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/toCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    symbol\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'toCoin', pure: false })\nexport class ToCoinPipe implements PipeTransform {\n\n\n  transform (content: number, symbol = false) {\n    return (content / 100000000).toFixed((8))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/transactions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                rows\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadTransactions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                opts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opts\n                    \n                \n                \n                    \n                        Type :         GetTransfersIn\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t}\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetTransfersOut[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Observable, Subscription} from 'rxjs';\nimport {GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {select, Store} from '@ngrx/store';\nimport {selectWalletTransactions} from '@plugin/lthn/wallet/data';\n\n@Component({\n\tselector: 'lthn-wallet-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class TransactionsComponent implements OnInit {\n\t@Input() name?: string = '';\n\t@Input() opts: GetTransfersIn = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t};\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\trows: GetTransfersOut[];\n\n\n\n\tcolumns = [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}];\n\n\tColumnMode = ColumnMode;\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletRpcService, private store: Store) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.subs$['txn'] = this.store.pipe(select(selectWalletTransactions)).subscribe((data) => {\n\t\t\tif(data) {\n\t\t\t\tthis.rows = [...data['in'], ...data['out']]\n\t\t\t}\n\t\t})\n\t\t//this.loadTransactions();\n\t}\n\n\tasync loadTransactions() {\n\n\t\tthis.rows = await this.wallet.getTransfers(this.opts).then((data) => Object.values(data).flat());\n\t\tconsole.log(this.rows);\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.wallet-transactions' | translate }}\n    \n\n            \n                \n                \n                    \n                       {{ value | toCoin}}\n                    \n                \n                \n                    \n                        {{ value | timeAgo }}\n                    \n                \n            \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.wallet-transactions\\' | translate }}                                                                                           {{ value | toCoin}}                                                                                                {{ value | timeAgo }}                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/transfer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            txid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transfer {\n\tamount: number;\n\tfee: number;\n\theight: number;\n\tnote: string;\n\tpayment_id: string;\n\ttimestamp: number;\n\ttxid: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferIn.html":{"url":"interfaces/TransferIn.html","title":"interface - TransferIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from '../types/destination';\n\nexport interface TransferIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. Outputs:\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOut.html":{"url":"interfaces/TransferOut.html","title":"interface - TransferOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferOut {\n\tfee: number; // - Integer value of the fee charged for the txn.\n\ttx_hash: string; // - String for the publically searchable transaction hash\n\ttx_key: string; // - String for the transaction key if get_tx_key is true, otherwise, blank string.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitIn.html":{"url":"interfaces/TransferSplitIn.html","title":"interface - TransferSplitIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            new_algorithm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        new_algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        new_algorithm:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitOut.html":{"url":"interfaces/TransferSplitOut.html","title":"interface - TransferSplitOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferSplitOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee_list:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferSplitOut {\n\tfee_list: number[];\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/i18n/translate/translate.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n  ]\n})\nexport class TranslateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Uri.html":{"url":"interfaces/Uri.html","title":"interface - Uri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Uri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/uri.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Uri {\n\turi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                processingForm\n                            \n                            \n                                task\n                            \n                            \n                                userForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/user.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Welcome To Lethean\n                    \n                        Protecting Privacy &amp; Confidentially since 2017\n                    \n                \n\n            \n        \n        \n        \n\n            \n                New User\n                \n                    \n                        \n                            Username\n                            \n                        \n                        \n                            Password\n                            \n                        \n                        \n                            Password (Confirm)\n                            \n                        \n\n                    \n                    Create User\n                \n            \n\n            \n                Data Handling Declaration\n                \n                    \n                        Lethean's designed to protect your digital security; We encrypt as much as we can.\n                    \n                    \n                        Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you\n                        use your\n                        software and never will.\n                    \n                    \n                        Below is a highlight of some of the steps we take to protect you.\n                    \n                    Data Confidentiality\n                    \n                        User accounts don't hold cleartext data.\n                        Application data is encrypted & meaningless without User authentication.\n                        Transactions on our network are Encrypted, with a secret decryption key per transaction;\n                            confidentiality\n                            is standard.\n                        \n                        There is no method to expose VPN purchase history to anyone but you.\n                        There is no magic key; we can not under any circumstances decrypt or recover your data; it's\n                            just not\n                            possible, dont forget your login details.\n                        \n                    \n                    Data Privacy\n                    \n                        Application data is locked to user accounts with military-grade encryption.\n                        You will be informed when you wish to perform an action that will expose data.\n                    \n                \n            \n        \n        \n            \n                Building Your Encryption Keys\n                \n                    You will be redirected to the profile creation page soon.\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Welcome To Lethean                                            Protecting Privacy & Confidentially since 2017                                                                                                    New User                                                                                        Username                                                                                                        Password                                                                                                        Password (Confirm)                                                                                            Create User                                                        Data Handling Declaration                                                            Lethean\\'s designed to protect your digital security; We encrypt as much as we can.                                                                Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you                        use your                        software and never will.                                                                Below is a highlight of some of the steps we take to protect you.                                        Data Confidentiality                                            User accounts don\\'t hold cleartext data.                        Application data is encrypted & meaningless without User authentication.                        Transactions on our network are Encrypted, with a secret decryption key per transaction;                            confidentiality                            is standard.                                                There is no method to expose VPN purchase history to anyone but you.                        There is no magic key; we can not under any circumstances decrypt or recover your data; it\\'s                            just not                            possible, dont forget your login details.                                                                Data Privacy                                            Application data is locked to user accounts with military-grade encryption.                        You will be informed when you wish to perform an action that will expose data.                                                                                            Building Your Encryption Keys                                    You will be redirected to the profile creation page soon.                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMeta.html":{"url":"interfaces/UserMeta.html","title":"interface - UserMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decryptionKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decryptionKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decryptionKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {UserComponent} from './user.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: UserComponent,\n\t\tdata: {\n\t\t\ttitle: 'New User - Lethean (LTHN)',\n\t\t\theading: 'New User Wizard',\n\t\t\tdescription: 'Lethean (LTHN) New User Panel',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [UserComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatOptionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatDividerModule,\n\t\tMatCardModule,\n\t\tMatInputModule,\n\t\tFlexModule,\n\t\tMatCheckboxModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressBarModule\n\t]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOptions.html":{"url":"interfaces/UserOptions.html","title":"interface - UserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/interfaces/user.options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginMethod\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginMethod:         LoginMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOptions {\n\tloginMethod: LoginMethods;\n}\n\nexport enum LoginMethods {\n\tPASSWORD = 1,\n\tSSH_PEM\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '../auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'user',\n\t\tloadChildren: () =>\n\t\t\t\"import('./user.module').then((m) => m.UserModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         UserMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMeta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         UserOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersState.html":{"url":"interfaces/UsersState.html","title":"interface - UsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VpnComponent.html":{"url":"components/VpnComponent.html","title":"component - VpnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VpnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/vpn/vpn.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-vpn\n            \n\n            \n                styleUrls\n                ./vpn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vpn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/vpn/vpn.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/vpn/vpn.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-vpn',\n\ttemplateUrl: './vpn.component.html',\n\tstyleUrls: ['./vpn.component.scss']\n})\nexport class VpnComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      VPN Marketplace\n      All nodes are community run, browse and keep track of your favourites here.\n      \n        New Provider\n        List Services\n        Deploy ExitNode\n\n      \n    \n    \n      \n        \n          local Blockchain\n          This helps the community the most, and makes you a member of the network. Exactly the same\n            as Torrents, but just our blockchain.\n          \n          \n            \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n            \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./vpn.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            VPN Marketplace      All nodes are community run, browse and keep track of your favourites here.              New Provider        List Services        Deploy ExitNode                                      local Blockchain          This helps the community the most, and makes you a member of the network. Exactly the same            as Torrents, but just our blockchain.                                                                            Region                Provider                Service                Cost                                                                        Region                Provider                Service                Cost                                                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'VpnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnModule.html":{"url":"modules/VpnModule.html","title":"module - VpnModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VpnComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VpnComponent } from './vpn.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [VpnComponent],\n\timports: [CommonModule, MatCardModule, FlexModule, MatButtonModule]\n})\nexport class VpnModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnRoutingModule.html":{"url":"modules/VpnRoutingModule.html","title":"module - VpnRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VpnComponent } from './vpn.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'vpn',\n\t\tcomponent: VpnComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class VpnRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletComponent.html":{"url":"components/WalletComponent.html","title":"component - WalletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/wallet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-wallet\n            \n\n            \n                styleUrls\n                ./wallet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wallet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Private\n                                modalComponent\n                            \n                            \n                                    Public\n                                openedWallet\n                            \n                            \n                                    Public\n                                pluginConfig\n                            \n                            \n                                    Public\n                                showtx\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Public\n                                txnSelection\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Public\n                                isChecked\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWallet\n                            \n                            \n                                    Public\n                                    Async\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isChecked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isChecked(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance | Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openedWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pluginConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluginDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdescription_short: 'test',\n\t\tgit_repo: 'https://github.com/Snider/plugin-bootstrap.git',\n\t\tname: 'test',\n\t\treadme_list: 'https://github.com/Snider/plugin-bootstrap#readme',\n\t\tstatus: PluginStatus.ACTIVE\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        txnSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\nimport {Balance} from '@plugin/lthn/wallet/interfaces';\nimport {PluginDefinition, PluginStatus} from '@data/plugins';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from '@plugin/lthn/wallet/data';\nimport {Subscription} from 'rxjs';\nimport {getWalletData} from '@plugin/lthn/wallet/data';\n\n@Component({\n\tselector: 'lthn-app-wallet',\n\ttemplateUrl: './wallet.component.html',\n\tstyleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit, OnDestroy, AfterViewInit {\n\tpublic pluginConfig: PluginDefinition = {\n\t\tdescription_short: 'test',\n\t\tgit_repo: 'https://github.com/Snider/plugin-bootstrap.git',\n\t\tname: 'test',\n\t\treadme_list: 'https://github.com/Snider/plugin-bootstrap#readme',\n\t\tstatus: PluginStatus.ACTIVE\n\t}\n\tpublic balance:  Balance | Promise;\n\n\tpublic wallets: string[] = [];\n\n\t@ViewChild('modal') private modalComponent: ModalComponent\n\tpublic openedWallet: string = '';\n\tpublic showtx: boolean = false;\n\tpublic txnSelection: any = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t};\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletService, private store: Store) {}\n\n\tngOnInit() {\n\n\t\tthis.subs$['wallets'] = this.store.pipe(select(WalletActions.selectWallets)).subscribe((data) => {\n\t\t\tif(data && data.length > 0) {\n\t\t\t\tthis.wallets = data\n\t\t\t\tthis.subs$['openedWallet'] = this.store.pipe(select(WalletActions.selectOpenedWallet)).subscribe((wallet) => {\n\t\t\t\t\tif(wallet) {\n\t\t\t\t\t\tthis.openedWallet = wallet\n\t\t\t\t\t\tthis.store.dispatch(WalletActions.WalletStartPolling())\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t}\n\t\t})\n\n\t }\n\n\tpublic ngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tfor (let sub of this.subs$){\n\t\t\tsub.unsubscribe();\n\t\t}\n\t\tthis.store.dispatch(WalletActions.WalletStopPolling())\n\t\tconsole.log('WalletComponent DESTROY');\n\t}\n\n\topenWallet(key: string){\n\t\tthis.store.dispatch(WalletActions.switchWallet({address: key}))\n\t}\n\n\tasync getBalance() {\n\t\tthis.balance = await this.wallet.getBalance().then((data) => data)\n\t}\n\n\tpublic async toggle(col) {\n\t\tawait this.wallet.loadTransfers(this.txnSelection);\n\t\tthis.txnSelection[col] = !!this.txnSelection[col]\n\t}\n\n\tpublic isChecked(col) {\n\t\treturn this.txnSelection[col]\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Wallet Manager\n                \n                \n                    account_balance_wallet\n                \n                \n                    cloud_download\n                \n                \n                    cloud_upload\n                \n                \n                    settings\n                \n            \n        \n        \n            \n                \n                    Wallets\n                    \n                        \n                            {{wallet}}\n                        \n                        \n                        Available Columns\n                        \n                            \n                                \n                                Incoming\n                            \n\n                            \n                                \n                                Sent\n                            \n\n                            \n                                \n                                Pending\n                            \n\n                            \n                                \n                                Failed\n                            \n\n                            \n                                \n                                Pool\n                            \n                        \n                    \n                \n            \n            \n                 1\">\n                    \n                \n                \n\n                        \n                        \n\n                \n\n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./wallet.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Wallet Manager                                                    account_balance_wallet                                                    cloud_download                                                    cloud_upload                                                    settings                                                                                            Wallets                                                                        {{wallet}}                                                                        Available Columns                                                                                                                    Incoming                                                                                                                        Sent                                                                                                                        Pending                                                                                                                        Failed                                                                                                                        Pool                                                                                                                                 1\">                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletEffects.html":{"url":"injectables/WalletEffects.html","title":"injectable - WalletEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isPollingActiveStats\n                            \n                            \n                                openWallet\n                            \n                            \n                                StartPollingWallet$\n                            \n                            \n                                StopPollingWallet$\n                            \n                            \n                                WalletLoadData$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, http: HttpClient, translate: TranslateService, store: Store, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:103\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isPollingActiveStats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StopPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WalletLoadData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeWhile, withLatestFrom} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from './actions';\nimport * as WalletSelectors from './selectors';\nimport {merge, of, timer} from 'rxjs';\nimport {selectOpenedWalletData, selectWalletData} from './selectors';\nimport {HttpClient} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {Balance, GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {WalletTransfers} from './actions';\nimport {debug} from '@data/debug.rxjs';\n\n@Injectable()\nexport class WalletEffects {\n\topenWallet = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t);\n\n\tWalletLoadData$ =\n\t\tcreateEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\tStartPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t));\n\tStopPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t));\n\n\tprivate isPollingActiveStats = false;\n\n\tconstructor(private actions$: Actions, private http: HttpClient, private translate: TranslateService, private store: Store, private wallet: WalletService) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_imports\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\n\nAddComponent\n\nAddComponent\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nAddComponent \n\nAddComponent \n\nAddComponent  -->\n\nWalletModule->AddComponent \n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nModalModule\n\nModalModule\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddComponent\n                        \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            WalletComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ModalModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddComponent\n                        \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WalletComponent } from './wallet.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NewComponent } from './components/new.component';\nimport { RestoreComponent } from './components/restore.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {OpenComponent} from '@plugin/lthn/wallet/components/open.component';\nimport {ModalModule} from '@service/ui/modal/modal.module';\nimport {TransactionsComponent} from '@plugin/lthn/wallet/components/transactions.component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatSelectModule} from '@angular/material/select';\nimport {AddComponent} from './components/add.component'\nimport {PipesModule} from 'app/pipes/pipes.module';\n\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallets',\n\t\tcomponent: WalletComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.title',\n\t\t\theading: 'view.wallets.heading',\n\t\t\tdescription: 'view.wallets.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [\n\t\tWalletComponent,\n\t\tNewComponent,\n\t\tRestoreComponent,\n\t\tOpenComponent,\n\t\tTransactionsComponent,\n\t\tAddComponent\n\t],\n\texports: [\n\t\tNewComponent,RestoreComponent,TransactionsComponent,OpenComponent,RouterModule,AddComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tFlexModule,\n\t\tReactiveFormsModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatCheckboxModule,\n\t\tMatExpansionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatTooltipModule,\n\t\tMatInputModule,\n\t\tTranslateModule,\n\t\tModalModule,\n\t\tNgxDatatableModule,\n\t\tMatSelectModule,\n\t\tMatTabsModule,\n\t\tPipesModule\n\t]\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletRoutingModule.html":{"url":"modules/WalletRoutingModule.html","title":"module - WalletRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallet',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./wallet.module').then((m) => m.WalletModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class WalletRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletRpcService.html":{"url":"injectables/WalletRpcService.html","title":"injectable - WalletRpcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletRpcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.rpc.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddressBook\n                            \n                            \n                                createWallet\n                            \n                            \n                                deleteAddressBook\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressBook\n                            \n                            \n                                getBalance\n                            \n                            \n                                getBulkPayments\n                            \n                            \n                                getHeight\n                            \n                            \n                                getPayments\n                            \n                            \n                                getTransferByTxid\n                            \n                            \n                                getTransfers\n                            \n                            \n                                incomingTransfers\n                            \n                            \n                                makeIntegratedAddress\n                            \n                            \n                                makeUri\n                            \n                            \n                                openWallet\n                            \n                            \n                                other\n                            \n                            \n                                parseUri\n                            \n                            \n                                queryKey\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                splitIntegratedAddress\n                            \n                            \n                                startWallet\n                            \n                            \n                                stopWallet\n                            \n                            \n                                store\n                            \n                            \n                                sweepAll\n                            \n                            \n                                sweepDust\n                            \n                            \n                                transfer\n                            \n                            \n                                transferSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddressBook\n                        \n                    \n                \n            \n            \n                \naddAddressBook(x: AddAddressBook)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                AddAddressBook\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet(x: CreateWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                CreateWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddressBook\n                        \n                    \n                \n            \n            \n                \ndeleteAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:62\n                \n            \n\n\n            \n                \n                    Get the address of the opened wallet\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressBook\n                        \n                    \n                \n            \n            \n                \ngetAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:53\n                \n            \n\n\n            \n                \n                    Get openned wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBulkPayments\n                        \n                    \n                \n            \n            \n                \ngetBulkPayments(x: GetBulkPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetBulkPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:71\n                \n            \n\n\n            \n                \n                    Get chain height\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPayments\n                        \n                    \n                \n            \n            \n                \ngetPayments(x: GetPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransferByTxid\n                        \n                    \n                \n            \n            \n                \ngetTransferByTxid(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:152\n                \n            \n\n\n            \n                \n                    Get transfer by Transactin ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransfers\n                        \n                    \n                \n            \n            \n                \ngetTransfers(x: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incomingTransfers\n                        \n                    \n                \n            \n            \n                \nincomingTransfers(x: IncomingTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IncomingTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nmakeIntegratedAddress(x: MakeIntegratedAddressIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeIntegratedAddressIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeUri\n                        \n                    \n                \n            \n            \n                \nmakeUri(x: MakeUriIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeUriIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(x: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n            \n                \nother(method: string, arg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUri\n                        \n                    \n                \n            \n            \n                \nparseUri(x: Uri)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                Uri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKey\n                        \n                    \n                \n            \n            \n                \nqueryKey(x: QueryKeyIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                QueryKeyIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(x: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nsplitIntegratedAddress(x: IntegratedAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IntegratedAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:28\n                \n            \n\n\n            \n                \n                    Send Wallet Service start POST req\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopWallet\n                        \n                    \n                \n            \n            \n                \nstopWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepAll\n                        \n                    \n                \n            \n            \n                \nsweepAll(x: SweepAllIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:107\n                \n            \n\n\n            \n                \n                    Send all funds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                SweepAllIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepDust\n                        \n                    \n                \n            \n            \n                \nsweepDust()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n            \n                \ntransfer(x: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:81\n                \n            \n\n\n            \n                \n                    Send a transaction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferSplit\n                        \n                    \n                \n            \n            \n                \ntransferSplit(x: TransferSplitIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferSplitIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/daemon/wallet/json_rpc'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {request} from '@service/json-rpc';\nimport {AddAddressBook, Address, Balance, CreateWallet, GetAddressBookOut, GetBulkPaymentsIn,\n\tGetBulkPaymentsOut, GetPaymentsIn, GetPaymentsOut, GetTransfersIn, GetTransfersOut, Height, IncomingTransfersIn,\n\tIncomingTransfersOut, IntegratedAddress, MakeIntegratedAddressIn, MakeUriIn, OpenWallet, QueryKeyIn, QueryKeyOut,\n\tSplitIntegratedAddressOut, StoreOut, SweepAllIn, SweepAllOut, Transfer, TransferIn, TransferOut, TransferSplitIn,\n\tTransferSplitOut, Uri} from '@plugin/lthn/wallet/interfaces';\nimport {RestoreWallet} from '@plugin/lthn/wallet/interfaces/requests/restoreWallet';\nimport {Observable} from 'rxjs';\nimport { from } from 'rxjs';\nconst axios = require('axios').default;\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletRpcService {\n\tprivate url = 'https://localhost:36911/daemon/wallet/json_rpc';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\t/**\n\t * Send Wallet Service start POST req\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\n\t\tconst request = {rpcBindPort: '36963', disableRpcLogin: false};\n\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/wallet/rpc`,\n\t\t\t\trequest,\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Get openned wallet balance\n\t *\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn request(this.url)('getbalance');\n\t}\n\n\t/**\n\t * Get the address of the opened wallet\n\t *\n\t * @returns {Promise}\n\t */\n\tgetAddress(): Promise {\n\t\treturn request(this.url)('getaddress');\n\t}\n\n\t/**\n\t * Get chain height\n\t *\n\t * @returns {Promise}\n\t */\n\tgetHeight(): Promise {\n\t\treturn request(this.url)('getheight');\n\t}\n\n\t/**\n\t * Send a transaction\n\t *\n\t * @param {TransferIn} x\n\t * @returns {Promise}\n\t */\n\ttransfer(x: TransferIn): Promise {\n\t\treturn request(this.url)('transfer', x);\n\t}\n\n\t/**\n\t *\n\t * @param {TransferSplitIn} x\n\t * @returns {Promise}\n\t */\n\ttransferSplit(x: TransferSplitIn): Promise {\n\t\treturn request(this.url)('transfer_split', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tsweepDust() {\n\t\treturn request(this.url)('sweep_dust');\n\t}\n\n\t/**\n\t * Send all funds\n\t * @param {SweepAllIn} x\n\t * @returns {Promise}\n\t */\n\tsweepAll(x: SweepAllIn): Promise {\n\t\treturn request(this.url)('sweep_all');\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tstore(): Promise {\n\t\treturn request(this.url)('store');\n\t}\n\n\t/**\n\t *\n\t * @param {GetPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetPayments(x: GetPaymentsIn): Promise {\n\t\treturn request(this.url)('get_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetBulkPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetBulkPayments(x: GetBulkPaymentsIn): Promise {\n\t\treturn request(this.url)('get_bulk_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tgetTransfers(x: GetTransfersIn): Promise {\n\t\treturn request(this.url)('get_transfers', x);\n\t}\n\n\t/**\n\t * Get transfer by Transactin ID\n\t *\n\t * @param {{txid: string}} x\n\t * @returns {Promise}\n\t */\n\tgetTransferByTxid(x: { txid: string }): Promise {\n\t\treturn request(this.url)('get_transfer_by_txid', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IncomingTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tincomingTransfers(\n\t\tx: IncomingTransfersIn\n\t): Promise {\n\t\treturn request(this.url)('incoming_transfers', x);\n\t}\n\n\t/**\n\t *\n\t * @param {QueryKeyIn} x\n\t * @returns {Promise}\n\t */\n\tqueryKey(x: QueryKeyIn): Promise {\n\t\treturn request(this.url)('query_key', x);\n\t}\n\n\t/**\n\t *\n\t * @param {MakeIntegratedAddressIn} x\n\t * @returns {Promise}\n\t */\n\tmakeIntegratedAddress(\n\t\tx: MakeIntegratedAddressIn\n\t): Promise {\n\t\treturn request(this.url)('make_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IntegratedAddress} x\n\t * @returns {Promise}\n\t */\n\tsplitIntegratedAddress(\n\t\tx: IntegratedAddress\n\t): Promise {\n\t\treturn request(this.url)('split_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tstopWallet() {\n\t\treturn request(this.url)('stop_wallet');\n\t}\n\n\t/**\n\t *\n\t * @param {MakeUriIn} x\n\t * @returns {Promise}\n\t */\n\tmakeUri(x: MakeUriIn): Promise {\n\t\treturn request(this.url)('make_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {Uri} x\n\t * @returns {Promise}\n\t */\n\tparseUri(x: Uri): Promise {\n\t\treturn request(this.url)('parse_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{entries: number[]}} x\n\t * @returns {Promise}\n\t */\n\tgetAddressBook(x: { entries: number[] }): Promise {\n\t\treturn request(this.url)('get_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {AddAddressBook} x\n\t * @returns {Promise}\n\t */\n\taddAddressBook(x: AddAddressBook): Promise {\n\t\treturn request(this.url)('add_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{index: number}} x\n\t * @returns {Promise>}\n\t */\n\tdeleteAddressBook(x: { index: number }) {\n\t\treturn request(this.url)('delete_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {OpenWallet} x\n\t * @returns {Promise>}\n\t */\n\topenWallet(x: OpenWallet) {\n\t\treturn request(this.url)('open_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {CreateWallet} x\n\t * @returns {Promise>}\n\t */\n\tcreateWallet(x: CreateWallet) {\n\t\treturn request(this.url)('create_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {RestoreWallet} x\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(x: RestoreWallet) {\n\t\treturn request(this.url)('generate_from_keys', x);\n\t}\n\n\t/**\n\t *\n\t * @param {string} method\n\t * @param arg\n\t * @returns {Promise}\n\t */\n\tother(method: string, arg?: any): Promise {\n\t\treturn request(this.url)(method, arg);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBalance\n                            \n                            \n                                getWalletList\n                            \n                            \n                                loadTransfers\n                            \n                            \n                                openWallet\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                startWallet\n                            \n                            \n                                walletList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService, rpc: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:54\n                \n            \n\n\n            \n                \n                    Get wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWalletList\n                        \n                    \n                \n            \n            \n                \ngetWalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:60\n                \n            \n\n\n            \n                \n                    Gets the list of known wallets from the file system\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTransfers\n                        \n                    \n                \n            \n            \n                \nloadTransfers(opts: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(req: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:44\n                \n            \n\n\n            \n                \n                    Open a known wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(req: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:34\n                \n            \n\n\n            \n                \n                    Restore wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:24\n                \n            \n\n\n            \n                \n                    Start wallet service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletList\n                        \n                    \n                \n            \n            \n                \nwalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:78\n                \n            \n\n\n            \n                \n                    Returns the wallets we know about\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Balance, GetTransfersIn, OpenWallet, RestoreWallet} from '@plugin/lthn/wallet/interfaces';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * Orchestrates dealing with wallets, to add a new wallet type, implement this class\n */\nexport class WalletService {\n\tprivate wallets: string[] = [];\n\n\tconstructor(private fs: FileSystemService, private rpc: WalletRpcService) {\n\t}\n\n\t/**\n\t * Start wallet service\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\treturn this.rpc.startWallet();\n\t}\n\n\t/**\n\t * Restore wallet\n\t *\n\t * @param {RestoreWallet} req\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(req: RestoreWallet) {\n\t\treturn this.rpc.restoreWallet(req);\n\t}\n\n\t/**\n\t * Open a known wallet\n\t *\n\t * @param {OpenWallet} req\n\t * @returns {Promise>}\n\t */\n\topenWallet(req: OpenWallet) {\n\t\treturn this.rpc.openWallet(req);\n\t}\n\n\t/**\n\t * Get wallet balance\n\t *\n\t * @param {Balance} req\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn this.rpc.getBalance()\n\t}\n\t/**\n\t * Gets the list of known wallets from the file system\n\t */\n\tgetWalletList() {\n\t\tthis.fs.listFiles('/wallets').then((data) => {\n\t\t\tif (data.length > 0) {\n\t\t\t\tfor (let dat of data) {\n\t\t\t\t\tif (!this.wallets.includes(dat) && !dat.endsWith('.keys') && !dat.endsWith('.txt')) {\n\t\t\t\t\t\tthis.wallets.push(dat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this.wallets\n\t}\n\n\t/**\n\t * Returns the wallets we know about\n\t *\n\t * @returns {string[]}\n\t */\n\twalletList() {\n\t\tif (this.wallets.length === 0) {\n\t\t\tthis.getWalletList();\n\t\t}\n\t\treturn this.wallets;\n\t}\n\n\tloadTransfers(opts: GetTransfersIn){\n\t\treturn this.rpc.getTransfers(opts).then((data) => Object.values(data).flat());\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletState.html":{"url":"classes/WalletState.html","title":"class - WalletState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/state.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            WalletsState\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                known_wallets\n                            \n                            \n                                loaded_wallet\n                            \n                            \n                                wallets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        known_wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded_wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut, Transfer} from '@plugin/lthn/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletsState.html":{"url":"interfaces/WalletsState.html","title":"interface - WalletsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            known_wallets\n                                        \n                                \n                                \n                                        \n                                            loaded_wallet\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        known_wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known_wallets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_wallet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_wallet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut, Transfer} from '@plugin/lthn/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebStorageService.html":{"url":"injectables/WebStorageService.html","title":"injectable - WebStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/web-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                count\n                            \n                            \n                                    Private\n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backend\n                            \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        backend\n                        \n                    \n                \n            \n            \n                \n                    \n                    backend(cmd: string, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:64\n                \n            \n\n\n            \n                \n                    Performs call to backend object store\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(key: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/object'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/web-storage.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {atob, btoa} from 'bytebuffer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebStorageService implements Storage {\n\n\tprivate items = {};\n\tprivate count = 0\n\tprivate apiUrl = 'https://localhost:36911/object';\n\n\tget length() {\n\t\treturn this.count;\n\t}\n\n\tkey(key:number): string | null {\n\t\treturn this.items[key]\n\t}\n\n\tgetItem(key): string | null {\n\t\ttry {\n\t\t\tconst ret = this.backend('get', {object: key});\n\t\t\tif(ret){\n\t\t\t\treturn JSON.parse(ret)\n\t\t\t}\n\t\t}catch (e){\n\t\t\tconsole.log('getItem Error')\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetItem(key: string, value: string) {\n\t\ttry {\n\t\t\tthis.count++\n\t\t\treturn this.backend('set', {object: key, data: value});\n\t\t}catch (e){\n\t\t\tconsole.log('setItem Error')\n\t\t}\n\t\treturn null;\n\n\t}\n\n\tremoveItem(key) {\n\t\tdelete this.items[key]\n\t\tthis.count--\n\t\tthis.backend('remove', {object: key});\n\t}\n\n\tclear() {\n\t\tthis.items ={}\n\t\tthis.count = 0\n\t\tthis.backend('clear', {});\n\t}\n\n\t/**\n\t * Performs call to backend object store\n\t *\n\t * @param {string} cmd\n\t * @param payload\n\t * @returns {string | null}\n\t * @private\n\t */\n\tprivate backend(cmd:string, payload: any):string|null {\n\t\tconst axios = require('axios').default;\n\t\ttry {\n\t\t\tconst ret = axios.post(`${this.apiUrl}/${cmd}`, {group: 'lthn-app', ...payload}).then((data) => data.data)\n\t\t\treturn ret.data;\n\t\t}catch (NetworkError) {\n\t\t\tconsole.log('HTTP Error')\n\t\t}\n\t\treturn null\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeConnection\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                dataUpdates$\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeConnection\n                        \n                    \n                \n            \n            \n                \ncloseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     WebSocketSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataUpdates$\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataUpdates$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/websocket.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nexport const WS_ENDPOINT = 'ws://localhost:36909';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$: WebSocketSubject;\n\n\tconstructor() {}\n\n\tpublic connect(): WebSocketSubject {\n\t\tif (!this.socket$ || this.socket$.closed) {\n\t\t\tthis.socket$ = webSocket(WS_ENDPOINT);\n\t\t}\n\t\treturn this.socket$;\n\t}\n\n\tpublic dataUpdates$() {\n\t\treturn this.connect().asObservable();\n\t}\n\n\tcloseConnection() {\n\t\tthis.connect().complete();\n\t}\n\n\tsendMessage(msg: string) {\n\t\tthis.socket$.next(msg);\n\t}\n\n\n\t/**\n\timport { webSocket } from \"rxjs/webSocket\";\nconst subject = webSocket(\"ws://localhost:8081\");\n\nsubject.subscribe(\n   msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n   err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n   () => console.log('complete') // Called when connection is closed (for whatever reason).\n );\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nDont be scared, the world was created by people no smarter than you.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.0\n        \n            @angular/cdk : ~13.0.1\n        \n            @angular/common : ~13.0.0\n        \n            @angular/compiler : ~13.0.0\n        \n            @angular/core : ~13.0.0\n        \n            @angular/elements : ^13.0.3\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~13.0.0\n        \n            @angular/localize : ~13.0.0\n        \n            @angular/material : ^13.0.1\n        \n            @angular/platform-browser : ~13.0.0\n        \n            @angular/platform-browser-dynamic : ~13.0.0\n        \n            @angular/platform-server : ~13.0.0\n        \n            @angular/router : ~13.0.0\n        \n            @hiveio/dhive : ^1.1.1\n        \n            @kurkle/color : ^0.1.9\n        \n            @lthn/rxjs-wallet-rpc : ^1.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.1\n        \n            @ngrx/data : ^13.0.1\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @nguniversal/express-engine : ^13.0.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            angular-notifier : ^9.1.0\n        \n            assert : ^2.0.0\n        \n            axios : ^0.24.0\n        \n            big.js : ^6.1.1\n        \n            bootstrap : ^4.5.0\n        \n            chart.js : ^3.6.0\n        \n            chartjs-adapter-moment : ^1.0.0\n        \n            config-ini-parser : ^1.5.9\n        \n            crypto-js : ^4.1.1\n        \n            express : ^4.15.2\n        \n            jszmq : ^0.1.2\n        \n            localstorage-polyfill : ^1.0.1\n        \n            marked : ^3.0.8\n        \n            moment : ^2.29.1\n        \n            ng-socket-io : ^0.2.4\n        \n            ng-terminal : ^3.2.0\n        \n            ngrx-store-localstorage : ^12.0.1\n        \n            ngx-socket-io : ^4.1.0\n        \n            openpgp : ^5.0.0\n        \n            random-js : ^2.1.0\n        \n            rxjs : ~7.4.0\n        \n            stream-browserify : ^3.0.0\n        \n            strip-ansi : ^7.0.1\n        \n            tslib : ^2.3.1\n        \n            typescript : ^4.4.4\n        \n            unique-names-generator : ^4.6.0\n        \n            web-animations-js : ^2.3.2\n        \n            xterm-addon-web-links : ^0.4.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginMethods   (src/.../user.options.ts)\n                        \n                        \n                            PluginStatus   (src/.../state.ts)\n                        \n                        \n                            RxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/data/user/interfaces/user.options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginMethods\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SSH_PEM\n                            \n                        \n            \n        \n\n    src/app/data/plugins/state.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginStatus\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TIMED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 OUTDATED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/data/debug.rxjs.ts\n    \n        \n            \n                \n                    \n                        \n                        RxJsLoggingLevel\n                    \n                \n                    \n                        \n                            Observable logging levels\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            nameNotTakenValidator   (src/.../validators.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            setRxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/wallet/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nameNotTakenValidator\n                        \n                    \n                \n            \n            \n                \nnameNotTakenValidator(nameList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/plugins/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: ProfileState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/wallet/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setRxJsLoggingLevel\n                        \n                    \n                \n            \n            \n                \nsetRxJsLoggingLevel(level: RxJsLoggingLevel)\n                \n            \n\n\n\n\n            \n                \n                    Adjust the logging level during runtime\nsetRxJsLoggingLevel(4) = off\nsetRxJsLoggingLevel(0) - tmi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                RxJsLoggingLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLethean Desktop Interface\n\n\nThis is the application that is run within the lethean desktop, the API refrence for the HTTPS endpoints is here:\nDevelopment Build\nnpm install\nnpm run dev:setup\nnpm run devProduction Build\nnpm install\nnpm run buildDocumentation\nnpm install\nnpm run doc\nnpm run doc:serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PluginsModule\n\n\n\ncluster_PluginsModule_declarations\n\n\n\ncluster_PluginsModule_exports\n\n\n\ncluster_PluginsModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nPluginsModule\n\nPluginsModule\n\nAppModule -->\n\nPluginsModule->AppModule\n\n\n\n\n\nPluginsComponent \n\nPluginsComponent \n\nPluginsComponent  -->\n\nPluginsModule->PluginsComponent \n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nPostRoutingModule\n\nPostRoutingModule\n\nAppRoutingModule -->\n\nPostRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nAppRoutingModule -->\n\nSettingsRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\nChartDirective\n\nChartDirective\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\nPluginsComponent\n\nPluginsComponent\n\nPluginsModule -->\n\nPluginsComponent->PluginsModule\n\n\n\n\n\nPluginsService\n\nPluginsService\n\nPluginsModule -->\n\nPluginsService->PluginsModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\nAddComponent \n\nAddComponent \n\nAddComponent  -->\n\nWalletModule->AddComponent \n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\nAddComponent\n\nAddComponent\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        27 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    55 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
