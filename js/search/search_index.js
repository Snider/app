var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddAddressBook.html",[0,0.231,1,3.787]],["body/interfaces/AddAddressBook.html",[0,0.314,1,6.342,2,1.307,3,0.061,4,0.071,5,0.071,6,6.313,7,0.474,8,0.788,9,4.591,10,1.674,11,4.327,12,4.095,13,1.233,14,0.598,15,0.007,16,0.071,17,4.654,18,6.313,19,0.006,20,0.006]],["title/components/AddComponent.html",[21,0.944,22,1.743]],["body/components/AddComponent.html",[3,0.035,4,0.041,5,0.041,7,0.272,8,0.541,10,0.661,13,0.687,14,0.45,15,0.007,16,0.041,19,0.004,20,0.004,21,1.289,22,2.626,23,2.097,24,1.458,25,1.425,26,1.458,27,3.629,28,1.572,29,2.803,30,6.339,31,1.155,32,3.555,33,2.771,34,2.529,35,2.79,36,2.051,37,5.342,38,6.339,39,1.28,40,5.342,41,3.092,42,6.992,43,3.833,44,6.339,45,1.547,46,1.5,47,5.342,48,1.843,49,1.572,50,4.548,51,3.629,52,5.342,53,6.992,54,3.629,55,0.87,56,1.273,57,3.629,58,1.492,59,2.468,60,3.629,61,3.629,62,1.603,63,2.142,64,0.288,65,3.472,66,0.457,67,0.327,68,5.342,69,5.342,70,6.339,71,2.359,72,2.762,73,1.605,74,5.342,75,4.066,76,5.342,77,1.393,78,2.146,79,2.097,80,1.363,81,2.808,82,1.458,83,1.458,84,1.334,85,1.458,86,1.425,87,3.101,88,1.458,89,1.363,90,1.458,91,1.363,92,1.458,93,1.334,94,1.458,95,1.363,96,1.458,97,1.363,98,1.458,99,1.363,100,1.458,101,1.334,102,1.305,103,1.458,104,1.363,105,1.458,106,1.363,107,1.458,108,1.363,109,1.458,110,1.425,111,1.252,112,1.458,113,1.363,114,1.458,115,1.334,116,1.458,117,1.963,118,2.146,119,1.363,120,1.458,121,1.363,122,1.458,123,1.334,124,1.458,125,1.334,126,1.458,127,1.334,128,1.425,129,1.334,130,1.425,131,1.458]],["title/interfaces/Address.html",[0,0.231,9,2.424]],["body/interfaces/Address.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,9,4.919,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,132,7.007]],["title/components/AppComponent.html",[21,0.944,84,1.706]],["body/components/AppComponent.html",[3,0.019,4,0.023,5,0.023,7,0.151,8,0.34,10,0.786,11,0.989,13,0.778,14,0.512,15,0.007,16,0.023,19,0.002,20,0.002,21,0.877,22,0.755,23,1.316,24,0.807,25,0.789,26,0.807,28,0.987,29,1.908,31,0.639,32,3.289,33,2.549,34,1.85,36,1.287,39,0.804,41,2.227,45,0.818,46,1.511,48,0.693,49,0.591,55,1.034,56,1.272,58,1.423,59,2.003,63,1.133,64,0.571,66,0.253,67,0.181,73,1.483,77,0.771,78,1.347,79,1.316,80,0.755,81,2.023,82,0.807,83,0.807,84,1.851,85,0.807,86,0.789,87,2.72,88,0.807,89,0.755,90,0.807,91,0.755,92,0.807,93,0.738,94,0.807,95,0.755,96,0.807,97,0.755,98,0.807,99,0.755,100,0.807,101,0.738,102,0.723,103,0.807,104,0.755,105,0.807,106,0.755,107,0.807,108,0.755,109,0.807,110,0.789,111,0.693,112,0.807,113,0.755,114,0.807,115,0.738,116,0.807,117,1.232,118,1.347,119,0.755,120,0.807,121,0.755,122,0.807,123,0.738,124,0.807,125,0.738,126,0.807,127,0.738,128,0.789,129,0.738,130,0.789,131,0.807,133,1.083,134,2.01,135,3.284,136,1.751,137,4.315,138,3.353,139,3.489,140,4.315,141,6.049,142,3.64,143,6.725,144,2.41,145,5.037,146,3.836,147,3.353,148,3.834,149,5.037,150,5.037,151,1.53,152,3.932,153,7.571,154,4.315,155,3.015,156,4.315,157,3.834,158,5.214,159,4.109,160,3.071,161,3.353,162,3.353,163,2.01,164,4.315,165,3.353,166,2.01,167,2.01,168,2.01,169,2.01,170,2.01,171,2.01,172,2.01,173,4.262,174,2.01,175,2.01,176,1.206,177,2.01,178,4.315,179,1.369,180,3.353,181,2.01,182,1.53,183,1.786,184,3.353,185,0.826,186,1.306,187,1.252,188,1.639,189,1.53,190,1.252,191,1.252,192,1.306,193,1.049,194,2.01,195,2.01,196,2.01,197,2.01,198,1.203,199,1.786,200,1.639,201,2.489,202,1.786,203,2.01,204,2.01,205,2.01,206,2.01,207,1.369,208,2.01,209,2.01,210,2.01,211,3.353,212,2.01,213,2.01,214,2.01,215,3.353,216,2.01,217,1.786,218,2.01,219,2.01,220,2.01,221,2.01,222,2.01,223,1.639,224,2.01,225,2.01,226,0.528,227,2.01,228,2.01,229,2.01,230,2.01,231,2.01,232,2.01,233,2.01,234,4.315,235,2.906,236,2.01,237,2.01,238,2.01,239,2.18,240,2.01,241,2.01,242,2.01,243,0.932,244,2.01,245,3.353,246,3.353,247,3.353,248,3.353,249,3.353,250,6.049,251,3.353,252,3.353,253,3.353,254,3.353,255,3.353,256,3.353,257,1.639,258,2.01,259,1.786,260,2.479,261,2.01,262,3.836,263,2.552,264,1.639,265,2.01,266,2.01,267,2.01,268,2.01,269,3.353,270,2.01,271,2.01,272,2.01,273,2.01,274,2.01,275,2.01,276,2.01,277,2.01,278,4.977,279,2.981,280,2.01,281,2.01,282,3.353,283,3.353,284,2.01,285,2.01,286,2.01,287,2.01,288,1.786,289,1.786,290,2.01,291,2.01,292,2.01,293,2.01,294,2.01,295,1.53,296,2.981,297,2.01,298,2.01]],["title/modules/AppModule.html",[299,1.706,300,3.331]],["body/modules/AppModule.html",[3,0.035,4,0.04,5,0.04,15,0.007,16,0.059,19,0.004,20,0.004,33,1.051,34,1.921,64,0.751,66,0.45,67,0.321,71,2.322,84,3.225,87,1.313,144,1.821,183,3.175,186,3.432,187,2.225,190,3.288,191,2.225,243,0.993,300,6.676,301,1.232,302,2.171,303,3.175,304,3.175,305,3.175,306,3.175,307,5.56,308,5.56,309,5.279,310,5.56,311,5.56,312,5.56,313,4.611,314,2.277,315,1.541,316,1.341,317,3.175,318,2.073,319,1.94,320,3.596,321,1.94,322,2.073,323,1.285,324,3.175,325,5.28,326,5.28,327,3.572,328,3.912,329,5.28,330,2.322,331,3.572,332,3.572,333,5.28,334,3.788,335,2.563,336,4.307,337,2.914,338,3.788,339,2.563,340,4.018,341,2.719,342,5.28,343,3.572,344,3.046,345,2.06,346,4.307,347,2.914,348,3.288,349,2.138,350,2.06,351,3.175,352,3.175,353,3.572,354,4.506,355,2.914,356,5.28,357,3.572,358,3.175,359,4.693,360,3.16,361,2.433,362,2.941,363,2.225,364,2.138,365,3.175,366,3.572,367,3.572,368,2.914,369,2.914,370,2.433,371,3.175,372,1.183,373,3.572,374,3.572,375,1.285,376,2.914,377,3.572,378,3.572,379,3.572,380,3.175,381,3.572,382,3.175,383,3.572,384,3.572,385,2.914,386,1.58,387,2.563,388,2.138,389,1.541,390,2.563,391,3.572,392,3.596,393,1.664,394,2.563,395,2.225,396,3.623,397,4.307,398,3.288,399,2.322,400,1.468,401,3.572,402,3.572,403,3.572,404,3.572,405,4.307,406,3.572,407,3.572]],["title/modules/AppRoutingModule.html",[299,1.706,307,3.331]],["body/modules/AppRoutingModule.html",[3,0.045,4,0.053,5,0.072,11,2.307,15,0.007,16,0.053,19,0.005,20,0.005,21,0.953,33,1.886,64,0.71,66,0.59,67,0.422,93,2.354,142,3.047,155,2.806,185,1.927,226,1.232,239,3.047,301,2.21,302,2.634,307,6.768,314,2.764,315,2.022,316,1.761,319,2.354,320,3.193,321,2.354,352,7.538,375,1.686,389,2.022,390,3.364,408,4.167,409,4.167,410,6.084,411,6.084,412,6.084,413,6.084,414,6.084,415,6.084,416,4.688,417,2.92,418,3.246,419,3.975,420,4.688,421,4.688,422,4.688,423,4.688,424,4.688,425,4.688,426,4.688,427,2.184,428,5.629,429,4.167,430,3.824,431,3.696,432,1.841,433,4.688,434,4.688,435,4.688,436,4.688,437,4.688,438,3.824,439,4.688,440,2.375,441,4.688,442,3.047,443,3.193,444,4.167,445,4.688,446,4.688,447,4.167]],["title/modules/AppServerModule.html",[299,1.706,448,3.533]],["body/modules/AppServerModule.html",[3,0.059,4,0.068,5,0.068,15,0.007,16,0.068,19,0.006,20,0.006,64,0.688,66,0.767,67,0.548,84,3.396,186,3.957,300,6.537,301,2.1,302,3.125,314,3.279,315,2.626,316,2.286,319,2.793,320,5.177,321,2.793,351,5.411,448,7.034,449,5.411,450,6.087,451,6.087,452,6.087,453,7.601,454,4.633,455,6.087]],["title/injectables/AppService.html",[456,1.315,457,3.787]],["body/injectables/AppService.html",[3,0.057,4,0.066,5,0.066,7,0.444,8,0.756,14,0.581,15,0.007,16,0.066,19,0.005,20,0.005,45,1.996,46,1.653,64,0.681,66,0.744,67,0.532,139,3.362,362,3.293,363,3.681,364,3.538,440,2.995,456,2.114,457,6.087,458,2.55,459,5.911,460,7.269,461,8.177,462,5.57,463,7.462,464,6.67,465,5.911,466,5.911,467,4.026,468,4.026,469,4.241,470,4.499,471,4.499,472,3.087,473,5.911,474,5.911,475,5.911,476,5.911,477,5.911,478,5.254]],["title/interfaces/AppState.html",[0,0.231,479,4.127]],["body/interfaces/AppState.html",[0,0.222,2,0.924,3,0.043,4,0.05,5,0.05,7,0.335,8,0.628,13,0.796,14,0.593,15,0.007,16,0.091,19,0.005,20,0.005,34,1.365,64,0.711,111,2.955,160,2.136,193,2.33,226,1.869,243,1.241,370,3.04,372,1.478,398,5.202,432,2.431,467,3.04,468,3.04,479,5.505,480,3.967,481,7.175,482,5.835,483,5.335,484,3.89,485,7.113,486,7.113,487,7.113,488,7.113,489,7.113,490,7.113,491,6.323,492,6.193,493,6.193,494,4.463,495,4.463,496,6.193,497,3.967,498,3.967,499,3.202,500,4.463,501,4.463,502,4.463,503,5.052,504,4.463,505,4.463,506,3.967,507,4.463,508,4.463,509,4.463,510,4.463,511,4.463,512,4.463,513,5.505,514,5.505,515,3.397,516,3.64,517,4.443,518,4.463,519,6.193,520,3.397,521,4.463,522,4.463,523,4.463,524,3.967,525,3.967,526,3.64,527,3.04,528,4.463,529,4.463,530,4.463]],["title/classes/Atomic.html",[67,0.418,531,2.779]],["body/classes/Atomic.html",[0,0.382,3,0.043,4,0.05,5,0.05,7,0.333,8,0.625,10,1.123,12,2.065,13,1.121,15,0.007,16,0.096,17,2.654,19,0.005,20,0.005,33,1.814,35,2.315,46,1.186,48,2.127,49,1.814,62,2.501,63,2.083,64,0.562,67,0.555,176,2.756,201,3.556,226,1.165,243,1.232,372,2.347,393,2.065,395,2.761,432,1.741,484,2.065,531,4.243,532,3.02,533,3.02,534,4.607,535,5.218,536,4.828,537,4.828,538,4.434,539,4.434,540,2.882,541,3.434,542,2.761,543,3.691,544,3.02,545,3.02,546,4.007,547,2.761,548,2.882,549,3.02,550,3.02,551,3.02,552,3.02,553,3.02,554,2.761,555,2.882,556,2.557,557,3.82,558,3.82,559,3.84,560,2.882,561,2.654,562,2.761,563,2.761,564,2.761,565,2.761,566,2.654,567,2.761,568,2.654,569,2.654,570,2.654,571,2.654,572,2.557,573,2.654,574,2.761,575,2.654,576,2.761,577,2.761,578,3.82,579,2.761,580,1.741,581,2.761,582,3.02,583,2.557,584,3.02,585,2.882,586,1.629,587,2.761,588,2.654,589,2.389,590,3.034,591,2.726,592,2.654,593,2.882]],["title/guards/AuthGuard.html",[594,4.127,595,3.018]],["body/guards/AuthGuard.html",[3,0.037,4,0.043,5,0.043,7,0.285,10,1.006,14,0.392,15,0.007,16,0.043,19,0.004,20,0.004,28,1.118,39,1.323,45,1.348,46,1.063,55,1.323,56,1.006,58,1.681,63,1.283,64,0.601,66,0.478,67,0.342,71,2.469,73,1.68,111,2.465,144,2.245,151,2.891,152,5.148,176,2.341,185,1.561,243,1.056,316,2.074,362,3.98,363,2.365,364,2.274,370,3.762,396,3.186,428,5.683,432,2.168,443,2.587,444,4.909,456,1.564,467,2.587,468,2.587,517,5.126,526,4.505,586,2.391,595,3.59,596,3.798,597,3.798,598,5.446,599,5.568,600,3.896,601,3.798,602,3.798,603,7.591,604,7.591,605,3.798,606,5.523,607,7.145,608,4.909,609,5.126,610,4.909,611,6.028,612,4.909,613,4.277,614,5.523,615,4.505,616,4.909,617,5.523,618,4.505,619,5.523,620,5.523,621,4.909,622,5.523,623,5.523,624,5.523,625,4.909,626,4.909,627,5.523,628,4.909,629,3.439,630,5.523,631,4.505,632,4.203,633,4.909,634,5.523,635,4.909,636,4.505,637,5.523,638,5.523,639,5.523,640,4.909,641,6.508,642,3.754,643,3.376,644,7.145,645,3.376,646,2.469,647,3.376,648,3.376,649,3.798,650,3.798,651,2.587]],["title/modules/AuthModule.html",[299,1.706,308,3.331]],["body/modules/AuthModule.html",[3,0.06,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,64,0.735,66,0.778,67,0.556,93,3.361,301,2.132,302,3.154,308,6.561,314,3.309,315,2.665,316,2.32,318,3.012,319,2.271,321,2.819,322,3.012,323,2.223,344,4.426,345,3.564,652,5.493,653,5.493,654,6.179,655,6.179,656,4.426,657,3.564,658,6.259,659,3.442,660,6.259,661,5.041]],["title/injectables/AuthService.html",[456,1.315,599,3.162]],["body/injectables/AuthService.html",[3,0.031,4,0.036,5,0.067,7,0.243,8,0.498,10,0.894,13,0.85,14,0.421,15,0.007,16,0.036,19,0.004,20,0.005,35,2.565,39,1.177,45,1.199,46,1.439,48,1.694,49,1.445,55,1.177,56,1.204,58,1.672,59,1.074,63,2.003,64,0.524,66,0.408,67,0.292,111,2.824,139,2.019,144,2.879,160,2.35,176,1.767,207,3.345,226,1.558,243,0.901,264,4.006,362,3.683,363,2.02,364,1.941,375,3.093,387,4.744,396,2.833,428,3.524,440,1.643,456,1.391,458,1.399,462,3.345,467,2.209,468,2.209,472,1.693,520,5.69,580,2.935,591,3.751,599,3.345,600,3.548,608,4.366,611,3.738,612,5.878,613,3.958,616,5.878,618,4.006,625,4.366,629,3.059,633,5.878,642,1.871,662,3.243,663,4.029,664,3.302,665,2.882,666,5.363,667,4.911,668,3.243,669,5.928,670,4.911,671,4.006,672,4.911,673,4.911,674,4.911,675,3.738,676,3.524,677,4.006,678,4.366,679,4.911,680,4.911,681,4.366,682,4.911,683,4.911,684,4.911,685,4.911,686,4.911,687,3.243,688,4.911,689,4.911,690,4.366,691,4.911,692,4.006,693,4.366,694,6.645,695,4.911,696,4.366,697,4.366,698,4.911,699,4.911,700,4.911,701,4.911,702,4.911,703,3.243,704,4.911,705,4.911,706,4.911,707,4.911,708,4.911,709,3.243,710,2.645,711,2.645,712,2.736,713,3.243,714,2.882,715,3.243,716,3.243,717,4.911,718,3.243,719,3.243,720,3.243]],["title/components/BackupComponent.html",[21,0.944,86,1.822]],["body/components/BackupComponent.html",[3,0.041,4,0.048,5,0.048,7,0.318,15,0.007,16,0.048,19,0.004,20,0.004,21,1.405,22,1.589,23,2.342,24,1.699,25,1.661,26,1.699,28,1.756,29,3.057,31,1.346,32,3.606,33,2.814,34,2.636,36,2.291,39,1.43,41,3.319,45,1.687,46,1.148,56,1.259,58,0.996,59,1.976,64,0.335,66,0.533,67,0.381,75,4.541,77,1.624,78,2.397,79,2.342,80,1.589,81,3.015,82,1.699,83,1.699,84,1.555,85,1.699,86,2.947,87,3.3,88,1.699,89,1.589,90,1.699,91,1.589,92,1.699,93,1.555,94,1.699,95,1.589,96,1.699,97,1.589,98,1.699,99,1.589,100,1.699,101,1.555,102,1.522,103,1.699,104,1.589,105,1.699,106,1.589,107,1.699,108,1.589,109,1.699,110,1.661,111,1.46,112,1.699,113,1.589,114,1.699,115,1.555,116,1.699,117,2.193,118,2.397,119,1.589,120,1.699,121,1.589,122,1.699,123,1.555,124,1.699,125,1.555,126,1.699,127,1.555,128,1.661,129,1.555,130,1.661,131,1.699,386,2.639,483,3.716,484,2.779,696,5.304,721,4.231,722,5.967,723,4.231,724,4.231,725,4.867,726,4.867,727,4.867,728,5.304,729,3.761,730,3.761]],["title/interfaces/Balance.html",[0,0.231,731,3.162]],["body/interfaces/Balance.html",[0,0.312,2,1.299,3,0.061,4,0.07,5,0.07,7,0.471,8,0.785,14,0.55,15,0.007,16,0.07,19,0.006,20,0.006,34,1.919,62,2.754,207,4.274,393,2.922,557,4.174,558,4.174,569,4.636,731,6.336,732,6.274,733,8.773,734,5.118,735,3.756,736,6.274,737,6.274,738,6.885,739,6.274,740,6.274,741,6.274,742,6.274,743,6.274,744,6.274,745,5.577]],["title/injectables/BaseChartConfigService.html",[456,1.315,746,3.787]],["body/injectables/BaseChartConfigService.html",[3,0.034,4,0.04,5,0.04,7,0.267,8,0.533,10,0.647,13,0.676,14,0.583,15,0.007,16,0.04,19,0.004,20,0.004,39,1.26,45,1.528,46,1.582,48,2.387,49,2.037,55,0.852,56,0.647,58,1.473,59,2.073,63,2.777,64,0.282,66,0.447,67,0.32,77,2.019,139,3.604,375,2.252,386,2.769,432,2.717,456,1.49,458,1.533,472,1.855,499,6.022,580,2.458,586,2.543,746,4.29,747,8.394,748,3.553,749,4.675,750,6.152,751,5.646,752,3.553,753,4.675,754,3.855,755,3.553,756,4.675,757,3.553,758,3.553,759,4.675,760,3.553,761,3.553,762,4.675,763,4.675,764,4.003,765,4.675,766,4.675,767,4.675,768,4.675,769,4.675,770,4.29,771,4.675,772,4.675,773,4.675,774,4.003,775,4.003,776,4.675,777,4.29,778,4.675,779,4.675,780,4.675,781,4.675,782,4.29,783,6.152,784,6.152,785,4.499,786,4.675,787,3.582,788,4.675,789,4.675,790,4.675,791,3.553,792,3.553,793,3.553,794,3.553,795,5.259]],["title/components/BlockchainComponent.html",[21,0.944,89,1.743]],["body/components/BlockchainComponent.html",[3,0.027,4,0.032,5,0.032,7,0.211,8,0.445,10,0.511,13,0.565,14,0.384,15,0.007,16,0.032,19,0.003,20,0.003,21,1.101,22,1.054,23,1.725,24,1.127,25,1.101,26,1.127,28,1.293,29,2.394,31,0.893,32,3.453,33,2.686,34,2.158,36,1.686,39,1.053,41,2.709,45,0.685,46,1.28,55,0.672,56,1.115,58,1.034,59,2.028,64,0.622,66,0.353,67,0.253,77,1.077,78,1.764,79,1.725,80,1.054,81,2.46,82,1.127,83,1.127,84,1.031,85,1.127,86,1.101,87,2.883,88,1.127,89,2.3,90,1.127,91,1.054,92,1.127,93,1.031,94,1.127,95,1.054,96,1.127,97,1.054,98,1.127,99,1.054,100,1.127,101,1.031,102,1.009,103,1.127,104,1.054,105,1.127,106,1.054,107,1.127,108,1.054,109,1.127,110,1.101,111,0.968,112,1.127,113,1.054,114,1.127,115,1.031,116,1.127,117,1.614,118,1.764,119,1.054,120,1.127,121,1.054,122,1.127,123,1.031,124,1.127,125,1.031,126,1.127,127,1.031,128,1.101,129,1.031,130,1.101,131,1.127,133,1.512,136,2.294,139,2.9,144,1.515,158,5.208,160,3.528,193,1.465,200,2.289,257,2.289,259,2.494,260,1.381,263,2.135,278,3.905,279,3.905,288,2.494,328,3.815,330,1.824,354,4.395,355,2.289,388,2.63,398,4.142,400,1.153,467,1.911,468,1.911,561,1.679,735,1.679,796,2.806,797,4.121,798,3.519,799,5.414,800,4.393,801,5.414,802,5.414,803,4.662,804,2.135,805,4.393,806,2.855,807,2.806,808,2.806,809,2.806,810,2.806,811,2.135,812,2.135,813,2.135,814,2.494,815,2.494,816,2.806,817,2.013,818,2.806,819,3.905,820,2.806,821,2.806,822,2.494,823,2.494,824,2.494,825,2.806,826,2.806,827,2.289,828,6.126,829,4.393,830,4.393,831,4.393,832,4.393,833,3.152,834,8.025,835,4.393,836,4.393,837,4.393,838,4.393,839,4.393,840,4.393,841,4.393,842,4.393,843,4.393,844,3.152,845,3.905,846,4.393,847,4.393,848,4.393,849,3.905,850,4.393,851,2.806,852,2.806,853,2.806,854,2.806]],["title/modules/BlockchainModule.html",[299,1.706,855,3.533]],["body/modules/BlockchainModule.html",[3,0.05,4,0.058,5,0.058,11,2.554,15,0.007,16,0.058,19,0.005,20,0.005,21,1.055,64,0.732,66,0.653,67,0.467,89,3.436,142,3.373,155,3.106,185,2.133,190,3.232,191,3.232,226,1.364,239,3.373,301,1.79,302,2.82,313,5.44,314,2.959,315,2.238,316,1.949,318,2.693,319,2.521,321,2.521,322,2.693,323,1.866,338,4.922,339,3.723,344,3.957,345,2.993,348,4.272,349,3.106,350,2.993,375,1.866,389,2.238,418,3.475,419,3.893,427,2.417,586,1.907,656,3.957,657,2.993,798,4.995,855,7.032,856,4.613,857,4.613,858,4.613,859,4.613,860,6.266,861,5.189,862,5.189,863,5.189,864,5.189,865,5.189,866,5.189,867,2.71]],["title/modules/BlockchainRoutingModule.html",[299,1.706,410,3.331]],["body/modules/BlockchainRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,64,0.697,66,0.797,67,0.57,185,2.603,226,1.664,301,2.184,318,2.486,319,2.327,321,2.862,322,3.058,323,2.278,388,3.791,389,2.732,398,3.944,410,5.589,417,3.944,418,3.946,419,4.274,427,2.949,595,5.484,598,4.543,867,3.307,868,6.333,869,4.82,870,4.313,871,6.333,872,6.333]],["title/injectables/BlockchainService.html",[354,3.331,456,1.315]],["body/injectables/BlockchainService.html",[3,0.036,4,0.042,5,0.072,7,0.281,10,0.995,13,0.83,14,0.559,15,0.007,16,0.072,19,0.004,20,0.004,39,1.309,45,0.913,46,1.516,55,1.309,56,0.995,58,1.854,64,0.598,66,0.471,67,0.337,226,1.865,235,4.093,243,2.098,328,4.419,330,2.433,354,3.92,372,2.349,375,1.965,386,3.688,398,4.419,400,1.538,431,3.152,440,1.896,456,1.548,458,1.614,472,1.954,629,3.403,642,2.159,676,5.091,735,2.24,804,2.848,806,3.551,811,2.848,812,2.848,817,5.414,873,3.742,874,5.464,875,6.307,876,7.095,877,7.095,878,7.095,879,3.742,880,5.464,881,5.736,882,3.742,883,2.848,884,3.742,885,4.857,886,5.464,887,5.464,888,4.857,889,5.464,890,3.742,891,7.095,892,4.857,893,3.742,894,3.742,895,6.156,896,5.788,897,5.788,898,5.788,899,5.788,900,5.788,901,5.788,902,5.4,903,4.911,904,3.742,905,5.788,906,5.788,907,5.736,908,3.742,909,3.742,910,3.742,911,3.327,912,3.742,913,3.742]],["title/interfaces/ChainGetInfo.html",[0,0.231,813,3.533]],["body/interfaces/ChainGetInfo.html",[0,0.249,2,1.035,3,0.048,4,0.056,5,0.056,7,0.375,8,0.678,13,1.111,14,0.669,15,0.007,16,0.056,19,0.005,20,0.005,62,2.944,102,2.897,176,2.713,260,3.964,813,5.092,914,4.998,915,8.055,916,8.055,917,8.055,918,8.055,919,8.055,920,8.055,921,8.055,922,8.055,923,8.055,924,8.055,925,8.055,926,8.055]],["title/interfaces/ChartConfigInterface.html",[0,0.231,927,3.787]],["body/interfaces/ChartConfigInterface.html",[0,0.29,2,1.206,3,0.057,4,0.065,5,0.065,7,0.437,8,0.749,10,1.061,13,1.158,14,0.664,15,0.007,16,0.065,19,0.005,20,0.005,39,1.772,46,1.423,55,1.396,56,1.061,58,1.74,59,2.448,62,2.437,375,3.172,386,3.778,580,3.354,751,6.97,754,5.019,927,6.032,928,8.123,929,5.826,930,6.573,931,6.032,932,5.826,933,5.826]],["title/interfaces/ChartDifficulty.html",[0,0.231,934,3.787]],["body/interfaces/ChartDifficulty.html",[0,0.38,2,1.268,3,0.059,4,0.069,5,0.069,7,0.46,8,0.773,13,1.173,14,0.542,15,0.007,16,0.093,19,0.006,20,0.006,28,1.802,62,2.289,67,0.551,375,2.744,386,3.374,934,7.096,935,6.124,936,8.699,937,8.699,938,7.387,939,6.779,940,6.124]],["title/directives/ChartDirective.html",[80,1.743,129,1.706]],["body/directives/ChartDirective.html",[3,0.043,4,0.05,5,0.05,7,0.332,8,0.624,10,1.121,13,1.034,14,0.543,15,0.007,16,0.05,19,0.004,20,0.004,28,1.812,31,1.407,32,2.312,33,1.302,39,1.475,43,4.417,45,1.503,46,1.603,55,1.475,56,1.394,58,1.666,59,2.535,64,0.561,65,4.001,66,0.557,67,0.398,80,2.312,128,1.737,129,2.262,130,3.159,135,5.388,144,2.948,148,5.826,260,2.177,323,1.591,388,3.685,499,3.174,663,2.384,754,3.944,797,5.388,798,5.753,803,5.826,941,4.424,942,7.08,943,6.156,944,4.424,945,7.654,946,7.08,947,7.654,948,5.775,949,6.156,950,6.156,951,4.424,952,6.156,953,4.424,954,4.424,955,4.424,956,3.174,957,3.609,958,3.933,959,3.933,960,3.609,961,5.472,962,4.424,963,4.424,964,7.654,965,4.424,966,4.424,967,4.424,968,4.424,969,4.424,970,6.156,971,5.022,972,6.156,973,4.424,974,4.424,975,4.424,976,4.424,977,4.424]],["title/modules/ChartModule.html",[299,1.706,860,3.331]],["body/modules/ChartModule.html",[3,0.058,4,0.067,5,0.067,15,0.007,16,0.067,19,0.005,20,0.005,64,0.683,66,0.753,67,0.538,129,3.542,301,2.063,302,3.09,314,3.242,315,2.579,316,2.246,318,2.951,319,2.197,321,2.762,322,2.951,323,2.151,388,4.5,389,3.242,798,5.985,860,6.74,959,5.316,978,5.316,979,5.98,980,5.98,981,5.316,982,5.98,983,5.98]],["title/injectables/ChartService.html",[456,1.315,798,3.018]],["body/injectables/ChartService.html",[3,0.027,4,0.031,5,0.031,7,0.207,8,0.44,10,1.106,13,1.004,14,0.578,15,0.007,16,0.031,19,0.003,20,0.003,39,1.04,45,1.06,46,1.503,48,2.096,49,1.788,55,1.456,56,1.483,58,1.262,59,2.187,63,0.934,64,0.602,66,0.348,67,0.249,73,1.222,144,3.04,160,3.354,173,4.624,192,1.797,193,1.443,226,0.726,323,0.994,370,4.138,372,2.012,375,2.874,386,1.222,394,3.115,396,2.504,440,1.4,456,1.23,458,1.192,469,3.115,472,1.443,481,3.859,499,5.733,580,1.704,583,1.594,621,2.457,646,1.797,692,2.255,754,4.451,764,2.104,775,2.104,785,1.797,798,2.822,931,3.542,948,4.374,956,1.983,957,2.255,958,2.457,960,2.255,961,3.859,971,2.255,984,2.764,985,5.362,986,5.362,987,5.362,988,5.362,989,4.342,990,4.342,991,4.342,992,2.764,993,5.98,994,4.342,995,4.342,996,2.764,997,4.342,998,3.304,999,4.342,1000,4.342,1001,4.342,1002,4.342,1003,5.401,1004,4.342,1005,2.764,1006,4.342,1007,2.764,1008,3.859,1009,2.957,1010,4.342,1011,3.542,1012,4.342,1013,7.009,1014,4.342,1015,2.764,1016,4.766,1017,4.342,1018,3.304,1019,4.342,1020,2.764,1021,4.342,1022,3.859,1023,2.764,1024,2.764,1025,2.457,1026,2.457,1027,2.457,1028,5.362,1029,2.457,1030,2.457,1031,2.764,1032,2.764,1033,2.764,1034,2.457,1035,2.764,1036,2.764,1037,2.764,1038,2.764,1039,2.457,1040,2.764,1041,2.764,1042,2.457,1043,2.764,1044,3.859,1045,2.764,1046,2.457,1047,2.764,1048,2.764,1049,2.764,1050,4.342,1051,2.764,1052,4.342,1053,4.342,1054,2.764,1055,2.255,1056,2.457,1057,2.764,1058,2.764,1059,2.764,1060,2.764,1061,2.764,1062,2.764,1063,2.764,1064,2.764,1065,2.764,1066,2.764,1067,2.764,1068,2.764,1069,2.764,1070,2.764,1071,2.764,1072,2.764,1073,2.764,1074,2.764,1075,3.304,1076,2.764,1077,2.764,1078,2.764,1079,2.764,1080,2.457,1081,2.764,1082,1.654,1083,2.764,1084,2.764,1085,2.764,1086,2.764,1087,2.764]],["title/injectables/ChartsEffects.html",[456,1.315,1088,4.127]],["body/injectables/ChartsEffects.html",[3,0.029,4,0.033,5,0.033,7,0.222,8,0.463,10,0.537,14,0.324,15,0.007,16,0.033,19,0.003,20,0.003,45,1.115,46,1.311,48,2.172,49,1.853,55,0.707,56,0.537,64,0.645,66,0.372,67,0.266,144,2.485,160,3.595,189,2.247,192,1.919,193,1.541,198,4.961,243,1.893,328,3.921,330,1.919,372,1.513,386,2.021,392,3.113,456,1.295,458,1.273,517,2.118,754,1.644,806,4.427,817,3.279,934,2.408,1011,6.332,1018,4.792,1075,3.478,1082,2.736,1088,4.062,1089,2.952,1090,6.81,1091,6.81,1092,6.296,1093,4.971,1094,5.592,1095,2.118,1096,5.117,1097,2.952,1098,6.332,1099,6.128,1100,4.57,1101,6.954,1102,8.141,1103,5.168,1104,6.296,1105,4.57,1106,2.952,1107,4.57,1108,4.57,1109,2.952,1110,5.592,1111,6.296,1112,4.971,1113,4.57,1114,4.57,1115,4.57,1116,4.57,1117,4.57,1118,4.062,1119,4.062,1120,4.062,1121,4.57,1122,5.592,1123,4.57,1124,4.971,1125,5.136,1126,4.57,1127,2.412,1128,4.57,1129,4.57,1130,4.517,1131,4.971,1132,4.971,1133,4.971,1134,4.57,1135,2.952,1136,4.57,1137,4.971,1138,2.952,1139,2.408,1140,1.919,1141,2.624,1142,2.408,1143,2.408,1144,2.624,1145,2.624,1146,2.952,1147,2.624,1148,2.952,1149,2.952]],["title/interfaces/ChartsState.html",[0,0.231,1150,4.127]],["body/interfaces/ChartsState.html",[0,0.285,2,1.186,3,0.056,4,0.064,5,0.064,7,0.43,8,0.741,10,1.332,14,0.407,15,0.007,16,0.095,19,0.005,20,0.005,64,0.639,193,2.991,226,2.118,243,1.592,370,3.902,372,1.897,375,2.06,432,2.249,517,6.092,938,7.798,1018,7.027,1082,3.429,1096,3.902,1103,5.248,1131,5.092,1142,4.673,1145,5.092,1150,7.163,1151,5.092,1152,7.315,1153,8.059,1154,5.728,1155,5.728,1156,5.728,1157,5.728,1158,5.092,1159,5.728]],["title/components/ConsoleComponent.html",[21,0.944,91,1.743]],["body/components/ConsoleComponent.html",[3,0.026,4,0.03,5,0.03,7,0.203,8,0.432,10,0.776,13,0.892,14,0.464,15,0.007,16,0.03,19,0.003,20,0.003,21,1.074,22,1.015,23,1.674,24,1.085,25,1.061,26,1.085,28,1.255,29,2.336,31,0.86,32,3.436,33,2.672,34,2.304,36,1.637,39,1.022,41,2.653,43,3.06,45,0.659,46,1.492,48,1.471,49,1.255,55,1.022,56,1.189,58,1.412,59,2.163,63,1.441,64,0.419,65,2.772,66,0.34,67,0.243,77,1.037,78,1.713,79,1.674,80,1.015,81,2.41,82,1.085,83,1.085,84,0.993,85,1.085,86,1.061,87,2.975,88,1.085,89,1.015,90,1.085,91,2.253,92,1.085,93,0.993,94,1.085,95,1.015,96,1.085,97,1.015,98,1.085,99,1.015,100,1.085,101,0.993,102,0.972,103,1.085,104,1.015,105,1.085,106,1.015,107,1.085,108,1.015,109,1.085,110,1.061,111,0.932,112,1.085,113,1.015,114,1.085,115,0.993,116,1.085,117,1.567,118,1.713,119,1.015,120,1.085,121,1.015,122,1.085,123,0.993,124,1.085,125,0.993,126,1.085,127,0.993,128,1.061,129,0.993,130,1.061,131,1.085,133,1.456,135,4.021,136,2.227,144,2.507,148,4.566,179,1.84,182,2.056,223,2.204,226,1.388,262,4.696,263,2.056,400,1.111,431,2.46,432,1.674,697,2.402,735,2.553,777,2.204,844,1.938,1093,3.791,1160,2.702,1161,4.264,1162,4.264,1163,4.264,1164,4.264,1165,4.264,1166,5.283,1167,4.264,1168,5.283,1169,5.283,1170,4.31,1171,4.264,1172,6,1173,4.696,1174,2.702,1175,4.894,1176,5.283,1177,6,1178,4.264,1179,4.264,1180,2.702,1181,2.702,1182,2.702,1183,2.702,1184,2.702,1185,2.702,1186,2.702,1187,5.283,1188,4.264,1189,2.702,1190,2.702,1191,2.702,1192,2.702,1193,2.056,1194,2.204,1195,2.702,1196,2.702,1197,2.702,1198,6.531,1199,2.702,1200,2.702,1201,2.702,1202,2.702,1203,2.702,1204,2.702,1205,2.702,1206,2.702,1207,2.702,1208,2.702,1209,2.702,1210,2.702,1211,2.702,1212,2.702,1213,2.702,1214,2.702,1215,2.702,1216,2.702,1217,2.702,1218,2.702,1219,2.702,1220,2.702,1221,2.702,1222,2.702,1223,2.702,1224,2.702,1225,2.702,1226,2.702,1227,2.702,1228,4.264,1229,2.702,1230,2.702,1231,2.702,1232,4.264,1233,2.702,1234,2.702,1235,2.702,1236,2.702,1237,2.702,1238,2.204,1239,2.702,1240,2.702,1241,2.702,1242,2.402,1243,2.702,1244,2.702,1245,2.702,1246,3.791,1247,2.702,1248,3.791,1249,5.283,1250,2.702,1251,2.702]],["title/modules/ConsoleModule.html",[299,1.706,309,3.162]],["body/modules/ConsoleModule.html",[3,0.056,4,0.065,5,0.065,15,0.007,16,0.065,19,0.005,20,0.005,64,0.724,66,0.73,67,0.521,91,3.577,301,1.998,302,3.029,309,6.227,314,3.178,315,2.499,316,2.175,318,2.892,319,2.129,321,2.707,322,2.892,323,2.084,344,4.25,345,3.342,348,4.588,349,3.468,350,3.342,389,3.178,656,4.25,657,3.342,1193,4.409,1194,4.726,1252,5.15,1253,5.15,1254,5.15,1255,5.793,1256,5.793,1257,7.368]],["title/interfaces/CreateWallet.html",[0,0.231,592,2.779]],["body/interfaces/CreateWallet.html",[0,0.382,2,0.92,3,0.043,4,0.05,5,0.05,7,0.334,8,0.626,10,1.124,12,2.069,13,1.192,14,0.504,15,0.007,16,0.096,17,2.66,19,0.005,20,0.005,33,1.817,35,2.32,62,2.503,63,2.087,64,0.562,67,0.556,176,2.758,201,4.649,226,1.168,243,1.235,372,2.35,393,2.069,395,2.767,432,1.744,484,2.069,531,3.696,533,3.026,534,4.014,535,4.833,536,3.026,537,3.026,540,2.888,541,3.44,542,2.767,543,3.696,544,3.026,545,3.026,546,4.014,547,2.767,548,2.888,549,3.026,550,3.026,551,3.026,552,3.026,553,3.026,554,2.767,555,2.888,556,2.563,557,3.824,558,3.824,559,3.845,560,2.888,561,2.66,562,2.767,563,2.767,564,2.767,565,2.767,566,2.66,567,2.767,568,2.66,569,2.66,570,2.66,571,2.66,572,2.563,573,2.66,574,2.767,575,2.66,576,2.767,577,2.767,578,3.824,579,2.767,580,1.744,581,2.767,582,3.026,583,2.563,584,3.026,585,2.888,586,1.633,587,2.767,588,2.66,589,2.395,590,3.966,591,3.564,592,3.696,593,2.888]],["title/injectables/CryptService.html",[456,1.315,666,3.331]],["body/injectables/CryptService.html",[3,0.021,4,0.024,5,0.024,7,0.164,10,1.212,11,1.765,13,1.178,14,0.472,15,0.007,16,0.024,17,2.147,19,0.003,20,0.003,39,0.859,45,0.875,46,1.281,55,1.595,56,1.266,58,1.826,63,1.212,64,0.362,65,4.94,66,0.274,67,0.196,73,0.964,111,1.576,139,1.474,144,2.019,226,1.392,243,1.85,362,2.95,364,1.305,372,0.722,375,2.5,380,3.188,385,2.925,386,0.964,387,2.573,392,2.443,396,4.278,431,2.069,438,2.925,440,1.104,456,1.016,457,5.135,458,0.94,462,3.112,472,1.138,516,2.925,520,1.659,572,2.069,573,1.305,580,3.047,591,3.185,600,2.735,613,3.504,615,2.925,629,2.233,631,2.925,642,2.636,663,3.393,664,4.012,666,2.573,671,4.32,675,5.065,677,2.925,693,3.188,694,4.707,712,4.131,714,3.188,754,1.998,892,3.188,902,1.659,1003,3.188,1039,3.188,1046,1.937,1170,2.925,1238,1.778,1258,2.179,1259,3.586,1260,3.586,1261,3.586,1262,3.586,1263,3.586,1264,3.586,1265,2.179,1266,2.179,1267,3.586,1268,2.179,1269,4.569,1270,3.586,1271,5.295,1272,3.727,1273,3.586,1274,2.179,1275,3.586,1276,3.586,1277,3.586,1278,3.586,1279,3.586,1280,2.925,1281,6.295,1282,3.586,1283,3.586,1284,3.586,1285,3.586,1286,3.586,1287,3.586,1288,3.586,1289,3.586,1290,3.586,1291,3.586,1292,3.586,1293,3.586,1294,3.586,1295,3.188,1296,3.586,1297,3.586,1298,3.586,1299,3.586,1300,6.295,1301,2.179,1302,3.188,1303,2.925,1304,3.586,1305,3.586,1306,3.188,1307,4.569,1308,3.586,1309,3.586,1310,3.586,1311,3.586,1312,3.586,1313,3.586,1314,5.295,1315,3.586,1316,2.179,1317,3.586,1318,3.586,1319,3.586,1320,3.586,1321,3.586,1322,3.188,1323,3.586,1324,3.188,1325,3.586,1326,3.586,1327,3.188,1328,4.569,1329,3.586,1330,2.179,1331,2.573,1332,3.586,1333,3.586,1334,3.727,1335,3.586,1336,3.586,1337,3.188,1338,3.586,1339,2.179,1340,3.586,1341,2.925,1342,3.586,1343,3.586,1344,3.586,1345,3.586,1346,2.179,1347,2.179,1348,2.179,1349,2.179,1350,2.179,1351,1.659,1352,2.179,1353,1.937,1354,2.179,1355,1.937,1356,2.179,1357,2.179,1358,2.179,1359,2.179,1360,2.179,1361,1.778,1362,2.179,1363,2.179,1364,2.179,1365,2.179,1366,2.179,1367,2.179,1368,2.179,1369,2.179,1370,2.179,1371,2.179,1372,2.179,1373,2.179,1374,2.179,1375,3.586,1376,2.179,1377,2.179,1378,5.853,1379,3.586,1380,2.179,1381,2.179,1382,2.179,1383,2.179,1384,4.775,1385,2.179,1386,2.179,1387,2.179,1388,3.586,1389,2.179,1390,4.32,1391,2.179,1392,2.179,1393,2.179,1394,2.179,1395,2.179,1396,2.179,1397,2.179,1398,2.179,1399,2.179,1400,2.179,1401,2.443]],["title/modules/DataModule.html",[299,1.706,310,3.331]],["body/modules/DataModule.html",[3,0.059,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,31,1.948,64,0.747,66,0.771,67,0.551,160,2.93,193,3.984,301,2.112,310,5.474,318,2.404,319,2.25,321,2.803,467,4.171,468,4.171,506,6.782,525,6.782,526,4.995,527,4.171,1140,3.98,1402,6.124,1403,6.124,1404,6.124,1405,6.124,1406,6.124,1407,6.124,1408,6.782,1409,6.124,1410,5.443,1411,6.124,1412,6.124,1413,6.124,1414,6.124,1415,6.124,1416,6.124,1417,6.124,1418,6.124,1419,6.124,1420,6.124,1421,6.124]],["title/interfaces/Destination.html",[0,0.231,541,2.586]],["body/interfaces/Destination.html",[0,0.32,2,1.332,3,0.062,4,0.072,5,0.072,7,0.483,8,0.797,9,4.997,13,0.827,14,0.558,15,0.007,16,0.072,19,0.006,20,0.006,62,2.549,64,0.51,139,2.644,531,3.851,541,4.93,557,3.467,558,3.467,1022,5.718,1422,6.433,1423,6.183,1424,5.718,1425,5.247]],["title/interfaces/DialogData.html",[0,0.231,1426,3.787]],["body/interfaces/DialogData.html",[0,0.295,2,1.227,3,0.057,4,0.067,5,0.067,7,0.445,8,0.758,13,1.164,14,0.531,15,0.007,16,0.084,19,0.005,20,0.005,21,1.52,32,2.226,33,1.745,36,2.276,45,1.447,56,1.565,59,1.963,64,0.592,66,0.747,67,0.534,87,2.178,101,2.178,102,2.132,139,3.073,375,2.132,956,4.253,1426,6.679,1427,5.269,1428,6.232,1429,5.269,1430,7.643,1431,5.269,1432,6.645,1433,4.512,1434,5.269,1435,5.269,1436,5.269,1437,5.269,1438,5.269]],["title/injectables/Effects.html",[456,1.315,527,3.162]],["body/injectables/Effects.html",[3,0.065,4,0.075,5,0.075,10,1.213,14,0.473,15,0.007,16,0.075,19,0.006,20,0.006,45,1.626,46,1.282,55,1.597,56,1.213,64,0.637,66,0.839,67,0.6,400,2.739,456,2.276,458,2.874,527,5.473,1095,4.781,1096,6.343,1140,4.331,1439,6.664,1440,6.664]],["title/injectables/Effects-1.html",[73,1.708,456,1.094,527,2.631]],["body/injectables/Effects-1.html",[3,0.065,4,0.075,5,0.075,10,1.213,14,0.473,15,0.007,16,0.075,19,0.006,20,0.006,45,1.626,46,1.282,55,1.597,56,1.213,64,0.637,66,0.839,67,0.6,400,2.739,456,2.276,458,2.874,527,5.473,1095,4.781,1096,6.343,1140,4.331,1441,6.664,1442,6.664]],["title/pipes/EffortPipe.html",[1127,2.002,1443,3.533]],["body/pipes/EffortPipe.html",[3,0.058,4,0.067,5,0.067,10,1.086,13,0.767,14,0.423,15,0.007,16,0.067,19,0.005,20,0.005,28,1.755,31,1.897,39,1.429,45,1.455,46,1.147,49,2.208,55,1.429,56,1.495,58,1.403,63,2.774,64,0.472,66,0.751,67,0.537,176,2.953,226,1.972,243,1.657,263,4.538,586,2.757,1127,3.236,1242,5.3,1443,5.71,1444,3.439,1445,5.963,1446,7.503,1447,3.569,1448,5.71,1449,7.659,1450,5.963,1451,4.061,1452,4.491,1453,3.713,1454,5.963,1455,5.963,1456,5.963,1457,5.3]],["title/pipes/EscapeHtmlPipe.html",[1127,2.002,1458,3.533]],["body/pipes/EscapeHtmlPipe.html",[3,0.061,4,0.071,5,0.071,10,1.149,15,0.007,16,0.071,19,0.006,20,0.006,28,1.858,31,2.008,39,1.513,46,1.215,55,1.513,56,1.534,58,1.485,64,0.616,66,0.795,67,0.568,186,4.104,187,3.932,235,3.642,243,1.755,400,2.595,586,2.32,1127,3.354,1444,3.642,1447,3.779,1452,4.654,1453,3.932,1458,5.917,1459,6.313,1460,7.775,1461,5.578,1462,6.313,1463,6.911,1464,5.612,1465,6.313]],["title/interfaces/FileSystemInterface.html",[0,0.231,1466,3.787]],["body/interfaces/FileSystemInterface.html",[0,0.179,2,0.742,3,0.035,4,0.04,5,0.04,7,0.269,10,1.413,11,3.819,13,1.059,14,0.624,15,0.007,16,0.04,19,0.004,20,0.004,39,1.269,46,1.493,49,2.045,55,1.86,56,1.413,58,1.939,59,2.301,176,2.5,243,2.157,375,2.964,396,5.118,427,4.23,430,7.165,438,4.318,442,4.518,590,4.563,600,3.169,611,4.029,676,3.798,888,6.178,1466,4.318,1467,8.027,1468,3.585,1469,3.798,1470,4.318,1471,4.705,1472,5.67,1473,5.293,1474,5.67,1475,3.585,1476,5.293,1477,6.685,1478,5.293,1479,6.722,1480,3.585,1481,5.293,1482,5.293,1483,5.293,1484,3.585,1485,4.318,1486,5.293,1487,3.585,1488,6.95,1489,5.293,1490,3.585,1491,5.293,1492,3.585,1493,5.293,1494,3.606,1495,4.318]],["title/injectables/FileSystemService.html",[362,2.586,456,1.315]],["body/injectables/FileSystemService.html",[3,0.035,4,0.04,5,0.092,7,0.268,8,0.534,10,1.41,11,1.755,13,1.167,14,0.596,15,0.007,16,0.04,19,0.004,20,0.004,35,1.862,39,1.264,45,0.87,46,1.583,49,1.552,55,1.856,56,1.41,58,2.064,64,0.418,66,0.449,67,0.321,139,2.579,243,2.228,362,2.937,375,2.661,396,4.468,397,4.301,400,1.466,427,2.456,440,1.807,442,3.427,443,2.429,456,1.494,458,1.538,472,1.862,590,3.412,600,4.797,611,4.013,646,2.318,651,2.429,664,4.314,690,4.687,712,2.937,1034,3.17,1272,4.301,1331,3.783,1469,4.974,1470,4.301,1472,4.301,1474,4.301,1477,4.775,1479,5.655,1496,7.468,1497,3.566,1498,5.273,1499,5.273,1500,5.273,1501,4.687,1502,3.566,1503,5.655,1504,5.273,1505,5.273,1506,4.687,1507,3.566,1508,7.745,1509,5.273,1510,3.566,1511,4.687,1512,3.566,1513,5.273,1514,3.566,1515,5.273,1516,5.273,1517,3.566,1518,3.566,1519,3.566,1520,5.273,1521,6.274,1522,3.566,1523,3.566,1524,2.909,1525,3.566,1526,3.566,1527,3.566,1528,3.566,1529,3.566,1530,3.566]],["title/injectables/FileSystemWebService.html",[456,1.315,1503,3.787]],["body/injectables/FileSystemWebService.html",[3,0.034,4,0.04,5,0.04,7,0.266,8,0.532,10,1.457,13,0.456,14,0.524,15,0.007,16,0.04,19,0.004,20,0.004,28,1.044,39,1.259,45,0.866,46,1.581,48,1.224,49,1.044,55,1.917,56,1.457,58,1.819,59,2.071,64,0.548,66,0.447,67,0.319,139,3.771,144,2.158,176,1.889,226,1.644,235,3.608,243,1.922,328,4.307,330,2.306,372,2.071,375,2.487,386,3.419,400,1.458,427,3.438,440,1.797,442,3.414,456,1.488,458,1.53,472,1.852,586,1.303,590,3.633,664,4.674,676,3.768,712,3.484,804,2.7,806,3.414,817,4.488,895,5.641,896,5.103,897,5.103,898,5.103,899,5.103,900,5.103,901,4.285,902,3.998,903,2.7,905,5.103,906,5.103,1272,5.103,1466,4.285,1469,3.768,1470,4.285,1471,4.669,1472,4.285,1474,2.894,1477,6.386,1479,5.103,1496,7.458,1503,4.285,1506,4.669,1511,4.669,1531,3.547,1532,5.56,1533,5.253,1534,3.547,1535,5.253,1536,3.547,1537,3.547,1538,5.253,1539,3.547,1540,5.253,1541,3.547,1542,5.253,1543,3.547,1544,5.253,1545,3.547,1546,3.547,1547,3.153,1548,3.153,1549,3.153,1550,3.547,1551,3.547,1552,3.547,1553,3.547,1554,3.547,1555,3.547,1556,3.547]],["title/interfaces/GetAddressBookOut.html",[0,0.231,1557,3.787]],["body/interfaces/GetAddressBookOut.html",[0,0.336,2,1.398,3,0.065,4,0.076,5,0.076,7,0.608,8,0.821,9,3.526,11,3.323,12,3.145,13,1.115,14,0.616,15,0.007,16,0.076,19,0.006,20,0.006,62,2.026,1557,6.606,1558,6.752,1559,7.997,1560,6.164]],["title/interfaces/GetBulkPaymentsIn.html",[0,0.231,1561,3.787]],["body/interfaces/GetBulkPaymentsIn.html",[0,0.327,2,1.358,3,0.064,4,0.074,5,0.074,7,0.492,8,0.806,13,1.145,14,0.565,15,0.007,16,0.074,19,0.006,20,0.006,62,2.57,260,3.227,392,4.466,557,3.533,558,3.533,1337,5.828,1561,6.491,1562,6.557,1563,8.908,1564,8.908,1565,5.828,1566,6.557,1567,5.349]],["title/interfaces/GetBulkPaymentsOut.html",[0,0.231,1568,3.787]],["body/interfaces/GetBulkPaymentsOut.html",[0,0.345,2,1.436,3,0.067,4,0.078,5,0.078,7,0.521,8,0.834,14,0.492,15,0.007,16,0.078,19,0.006,20,0.006,64,0.55,1567,7.404,1568,6.713,1569,6.935,1570,6.182,1571,6.165]],["title/interfaces/GetPaymentsIn.html",[0,0.231,1572,3.787]],["body/interfaces/GetPaymentsIn.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,12,4.241,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,1572,6.754,1573,7.007]],["title/interfaces/GetPaymentsOut.html",[0,0.231,1574,3.787]],["body/interfaces/GetPaymentsOut.html",[0,0.345,2,1.436,3,0.067,4,0.078,5,0.078,7,0.521,8,0.834,14,0.492,15,0.007,16,0.078,19,0.006,20,0.006,64,0.55,1567,7.404,1570,6.182,1571,6.165,1574,6.713,1575,6.935]],["title/interfaces/GetTransfersIn.html",[0,0.231,1576,3.162]],["body/interfaces/GetTransfersIn.html",[0,0.244,2,1.013,3,0.047,4,0.055,5,0.055,7,0.367,8,0.668,10,1.727,11,2.407,14,0.634,15,0.007,16,0.055,19,0.005,20,0.005,34,1.496,62,2.576,176,3.435,188,5.379,260,3.929,264,5.379,316,3.225,833,6.161,1130,3.509,1494,3.331,1576,4.491,1577,4.891,1578,6.616,1579,5.849,1580,7.097,1581,7.097,1582,7.097,1583,6.161,1584,6.594,1585,6.594]],["title/interfaces/GetTransfersOut.html",[0,0.231,1586,3.018]],["body/interfaces/GetTransfersOut.html",[0,0.293,2,1.217,3,0.057,4,0.066,5,0.066,7,0.441,8,0.753,10,1.718,14,0.608,15,0.007,16,0.066,19,0.005,20,0.005,64,0.589,176,3.18,316,3.218,541,4.141,542,3.66,833,6.149,1579,5.838,1583,6.149,1586,4.833,1587,5.877,1588,6.553,1589,5.877]],["title/pipes/HashLinkPipe.html",[1127,2.002,1590,3.533]],["body/pipes/HashLinkPipe.html",[3,0.055,4,0.064,5,0.064,10,1.325,13,1.17,14,0.601,15,0.007,16,0.064,19,0.005,20,0.005,28,1.672,31,1.807,39,1.361,45,1.386,46,1.4,48,1.959,49,1.672,55,1.744,56,1.541,58,1.712,64,0.45,66,0.715,67,0.511,144,2.51,235,4.197,243,2.022,547,3.538,586,2.087,785,3.692,1127,3.138,1444,3.277,1447,3.4,1452,4.355,1453,3.538,1461,5.22,1590,5.537,1591,5.68,1592,7.276,1593,5.68,1594,7.276,1595,8.464,1596,5.68,1597,5.68,1598,6.467,1599,4.634,1600,5.68,1601,5.049,1602,5.68]],["title/pipes/HashRatePipe.html",[1127,2.002,1603,3.533]],["body/pipes/HashRatePipe.html",[3,0.051,4,0.059,5,0.059,10,0.955,13,1.055,14,0.372,15,0.007,16,0.059,19,0.005,20,0.005,28,1.543,31,1.668,39,1.256,46,1.009,48,1.808,49,1.543,55,1.256,56,1.406,58,1.233,62,2.317,63,2.774,64,0.547,66,0.66,67,0.472,176,2.778,186,3.408,187,3.265,226,1.378,235,5.053,243,1.92,400,2.155,586,2.538,651,3.571,844,4.955,1127,2.979,1355,4.66,1401,3.571,1425,4.277,1444,3.024,1447,3.138,1451,3.571,1452,4.134,1453,3.265,1457,4.66,1461,4.955,1463,6.139,1464,4.66,1603,5.256,1604,5.242,1605,6.139,1606,7.297,1607,5.242,1608,5.242,1609,5.242,1610,4.66,1611,5.242,1612,3.99,1613,6.906,1614,5.242]],["title/interfaces/Height.html",[0,0.231,260,2.285]],["body/interfaces/Height.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,62,2.644,260,4.636,1615,7.007]],["title/interfaces/IncomingTransfersIn.html",[0,0.231,1616,3.787]],["body/interfaces/IncomingTransfersIn.html",[0,0.339,2,1.407,3,0.066,4,0.076,5,0.076,7,0.51,8,0.824,14,0.483,15,0.007,16,0.076,19,0.006,20,0.006,1616,6.633,1617,6.797,1618,9.016,1619,7.097,1620,8.7]],["title/interfaces/IncomingTransfersOut.html",[0,0.231,1621,3.787]],["body/interfaces/IncomingTransfersOut.html",[0,0.288,2,1.196,3,0.056,4,0.065,5,0.065,7,0.434,8,0.745,13,1.095,14,0.624,15,0.007,16,0.065,19,0.005,20,0.005,62,2.801,176,3.064,557,4.36,558,4.36,559,3.598,570,5.098,578,3.113,583,3.332,629,3.598,1280,5.999,1341,4.712,1423,5.801,1578,4.145,1621,5.999,1622,5.777,1623,8.517,1624,6.948,1625,8.517,1626,5.777,1627,5.777,1628,5.777,1629,5.135,1630,5.777]],["title/interfaces/IntegratedAddress.html",[0,0.231,1631,3.787]],["body/interfaces/IntegratedAddress.html",[0,0.335,2,1.393,3,0.065,4,0.076,5,0.076,7,0.505,8,0.819,9,4.8,12,4.185,13,1.114,14,0.574,15,0.007,16,0.076,19,0.006,20,0.006,64,0.533,1631,6.593,1632,6.73,1633,8.986]],["title/classes/LTHN.html",[33,1.366,67,0.418]],["body/classes/LTHN.html",[0,0.385,3,0.044,4,0.051,5,0.051,7,0.34,8,0.634,10,1.14,12,2.111,13,1.127,15,0.007,16,0.097,17,2.713,19,0.005,20,0.005,33,2.11,35,2.367,46,0.872,48,1.563,49,1.334,62,2.518,63,2.115,64,0.568,67,0.563,176,2.782,201,3.611,226,1.191,243,1.26,372,2.375,393,2.111,395,2.823,432,1.779,484,2.111,531,3.747,532,3.087,533,3.087,534,4.661,535,5.268,536,3.087,537,3.087,540,2.946,541,3.487,542,2.823,543,3.747,544,3.087,545,3.087,546,4.069,547,2.823,548,2.946,549,3.087,550,4.884,551,3.087,552,3.087,553,3.087,554,2.823,555,2.946,556,2.614,557,3.865,558,3.865,559,3.899,560,2.946,561,2.713,562,2.823,563,2.823,564,2.823,565,2.823,566,2.713,567,2.823,568,2.713,569,2.713,570,2.713,571,2.713,572,2.614,573,2.713,574,2.823,575,2.713,576,2.823,577,2.823,578,3.865,579,2.823,580,1.779,581,2.823,582,3.087,583,2.614,584,3.087,585,2.946,586,1.665,587,2.823,588,2.713,589,2.442,590,3.081,591,2.768,592,2.713,593,2.946,1634,4.532]],["title/interfaces/LogEntry.html",[0,0.231,1635,3.787]],["body/interfaces/LogEntry.html",[0,0.399,2,1.375,3,0.064,4,0.075,5,0.075,7,0.499,8,0.813,13,1.21,14,0.569,15,0.007,16,0.09,19,0.006,20,0.006,482,4.524,1635,6.542,1636,5.904,1637,7.298,1638,7.953,1639,5.418]],["title/components/LoginComponent.html",[21,0.944,93,1.706]],["body/components/LoginComponent.html",[3,0.035,4,0.041,5,0.041,7,0.272,8,0.541,10,0.661,13,0.467,14,0.379,15,0.007,16,0.041,19,0.004,20,0.004,21,1.289,22,1.363,23,2.097,24,1.458,25,1.425,26,1.458,31,1.155,32,3.555,33,2.771,34,2.384,36,2.051,39,1.28,45,0.886,46,1.5,48,2.412,49,2.058,55,0.87,56,1.273,58,0.854,64,0.554,66,0.457,67,0.327,77,1.393,78,2.146,79,2.097,80,1.363,81,2.808,82,1.458,83,1.458,84,1.334,85,1.458,86,1.425,87,3.101,88,1.458,89,1.363,90,1.458,91,1.363,92,1.458,93,2.569,94,1.458,95,1.363,96,1.458,97,1.363,98,1.458,99,1.363,100,1.458,101,1.334,102,1.305,103,1.458,104,1.363,105,1.458,106,1.363,107,1.458,108,1.363,109,1.458,110,1.425,111,1.252,112,1.458,113,1.363,114,1.458,115,1.334,116,1.458,117,1.963,118,2.146,119,1.363,120,1.458,121,1.363,122,1.458,123,1.334,124,1.458,125,1.334,126,1.458,127,1.334,128,1.425,129,1.334,130,1.425,131,1.458,144,1.252,152,5.238,185,1.492,372,2.581,400,1.492,428,5.782,591,3.296,599,5.309,613,4.461,643,3.226,645,3.226,646,2.359,659,2.022,664,3.531,712,2.022,1082,3.795,1579,2.472,1640,3.629,1641,5.342,1642,5.171,1643,6.992,1644,3.629,1645,5.342,1646,3.629,1647,5.238,1648,3.629,1649,3.629,1650,3.629,1651,3.629,1652,2.762,1653,2.96,1654,3.629,1655,3.629,1656,5.342]],["title/components/LogsComponent.html",[21,0.944,95,1.743]],["body/components/LogsComponent.html",[3,0.042,4,0.049,5,0.049,7,0.328,15,0.007,16,0.049,19,0.004,20,0.004,21,1.429,22,1.64,23,2.395,24,1.754,25,1.714,26,1.754,28,1.795,29,3.109,31,1.389,32,3.616,33,2.822,34,2.538,36,2.342,39,1.462,41,3.366,45,1.716,46,1.174,56,1.28,58,1.028,59,2.02,64,0.346,66,0.55,67,0.393,77,1.676,78,2.45,79,2.395,80,1.64,81,3.057,82,1.754,83,1.754,84,1.605,85,1.754,86,1.714,87,3.32,88,1.754,89,1.64,90,1.754,91,1.64,92,1.754,93,1.605,94,1.754,95,2.858,96,1.754,97,1.64,98,1.754,99,1.64,100,1.754,101,1.605,102,1.571,103,1.754,104,1.64,105,1.754,106,1.64,107,1.754,108,1.64,109,1.754,110,1.714,111,1.506,112,1.754,113,1.64,114,1.754,115,1.605,116,1.754,117,2.242,118,2.45,119,1.64,120,1.754,121,1.64,122,1.754,123,1.605,124,1.754,125,1.605,126,1.754,127,1.605,128,1.714,129,1.605,130,1.714,131,1.754,133,2.354,136,3.186,482,4.155,1657,4.367,1658,7.031,1659,6.101,1660,4.367,1661,4.367]],["title/modules/LogsModule.html",[299,1.706,1662,3.331]],["body/modules/LogsModule.html",[3,0.058,4,0.067,5,0.067,15,0.007,16,0.067,19,0.005,20,0.005,21,1.216,64,0.683,66,0.753,67,0.538,95,3.607,185,2.458,226,1.572,301,2.063,302,3.09,314,3.242,315,2.579,316,2.246,318,2.951,319,2.197,321,2.762,322,2.951,323,2.151,389,3.242,418,3.808,419,4.165,427,2.785,482,4.073,867,3.123,1662,6.605,1663,5.316,1664,5.316,1665,5.316,1666,5.98,1667,5.98]],["title/interfaces/LogsState.html",[0,0.231,1639,3.787]],["body/interfaces/LogsState.html",[0,0.405,2,1.407,3,0.066,4,0.076,5,0.076,7,0.51,8,0.824,13,1.185,14,0.483,15,0.007,16,0.091,19,0.006,20,0.006,482,6.141,1635,5.545,1636,6.042,1637,5.545,1638,6.042,1639,6.633]],["title/interfaces/MakeIntegratedAddressIn.html",[0,0.231,1668,3.787]],["body/interfaces/MakeIntegratedAddressIn.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,12,4.241,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,1668,6.754,1669,7.007]],["title/interfaces/MakeUriIn.html",[0,0.231,543,2.779]],["body/interfaces/MakeUriIn.html",[0,0.279,2,1.16,3,0.054,4,0.063,5,0.063,7,0.421,8,0.731,9,4.799,10,1.705,12,3.922,13,1.219,14,0.619,15,0.007,16,0.063,19,0.005,20,0.005,56,1.02,62,2.393,64,0.444,531,3.354,543,4.317,547,3.489,548,3.642,575,3.354,663,3.019,1303,4.57,1423,5.934,1425,4.57,1570,4.912,1670,5.602,1671,8.42,1672,8.42,1673,4.98,1674,4.98,1675,5.602,1676,5.602,1677,5.602,1678,5.602,1679,5.602]],["title/pipes/MarkdownPipe.html",[1127,2.002,1680,3.533]],["body/pipes/MarkdownPipe.html",[3,0.06,4,0.07,5,0.07,10,1.132,14,0.441,15,0.007,16,0.07,19,0.006,20,0.006,28,1.83,31,1.978,39,1.49,46,1.196,49,2.462,55,1.49,56,1.523,58,1.463,63,2.101,64,0.61,66,0.783,67,0.56,243,2.141,1127,3.322,1444,3.586,1447,3.721,1448,5.861,1451,4.235,1452,4.61,1680,5.861,1681,6.217,1682,7.701,1683,8.367,1684,6.217,1685,6.846,1686,5.526,1687,6.217]],["title/components/ModalComponent.html",[21,0.944,97,1.743]],["body/components/ModalComponent.html",[3,0.032,4,0.037,5,0.037,7,0.245,8,0.501,10,0.595,14,0.423,15,0.007,16,0.037,19,0.004,20,0.004,21,1.211,22,1.227,23,1.94,24,1.313,25,1.283,26,1.313,28,1.454,29,2.634,31,1.04,32,3.516,33,2.718,34,2.294,36,1.897,39,1.184,41,2.936,45,0.798,46,1.498,50,4.763,55,0.783,56,1.209,58,1.562,59,1.636,64,0.472,65,3.212,66,0.412,67,0.294,77,1.255,78,1.984,79,1.94,80,1.227,81,2.667,82,1.313,83,1.313,84,1.201,85,1.313,86,1.283,87,3.016,88,1.313,89,1.227,90,1.313,91,1.227,92,1.313,93,1.201,94,1.313,95,1.227,96,1.313,97,2.493,98,1.313,99,1.227,100,1.313,101,1.201,102,1.176,103,1.313,104,1.227,105,1.313,106,1.227,107,1.313,108,1.227,109,1.313,110,1.283,111,1.128,112,1.313,113,1.227,114,1.313,115,1.201,116,1.313,117,1.816,118,1.984,119,1.227,120,1.313,121,1.227,122,1.313,123,1.201,124,1.313,125,1.201,126,1.313,127,1.201,128,1.283,129,1.201,130,1.283,131,1.313,139,1.344,144,2.587,179,2.226,182,2.488,226,1.298,243,0.909,320,2.226,372,1.082,400,1.344,440,1.656,456,0.926,642,4.325,664,4.177,712,3.698,785,4.316,1193,2.488,1485,4.031,1688,3.269,1689,4.941,1690,4.941,1691,5.957,1692,5.957,1693,5.902,1694,6.639,1695,3.269,1696,6.639,1697,4.941,1698,4.941,1699,3.269,1700,3.269,1701,3.269,1702,3.269,1703,5.957,1704,4.392,1705,3.269,1706,5.957,1707,2.906,1708,4.859,1709,3.269,1710,3.269,1711,3.269,1712,3.269,1713,3.269,1714,3.269,1715,3.269,1716,4.941,1717,4.941,1718,3.269,1719,4.941,1720,4.941,1721,3.269,1722,4.941,1723,4.941,1724,4.941]],["title/interfaces/ModalConfig.html",[0,0.231,1708,3.787]],["body/interfaces/ModalConfig.html",[0,0.238,2,0.989,3,0.046,4,0.054,5,0.054,7,0.359,8,0.658,10,1.744,13,1.157,14,0.523,15,0.007,16,0.054,19,0.005,20,0.005,39,1.555,46,1.708,58,2.088,176,3.401,642,5.12,1708,5.293,1725,4.776,1726,7.906,1727,7.906,1728,7.906,1729,7.906,1730,7.906,1731,7.906,1732,7.906,1733,7.906,1734,7.906,1735,7.906,1736,7.906,1737,4.776,1738,4.776,1739,4.776,1740,4.776,1741,4.776,1742,4.776,1743,4.776,1744,4.776]],["title/modules/ModalModule.html",[299,1.706,1745,3.331]],["body/modules/ModalModule.html",[3,0.06,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,64,0.66,66,0.776,67,0.554,97,3.606,301,2.125,302,3.148,314,3.303,315,2.657,316,2.313,318,3.006,319,2.264,321,2.814,322,3.006,323,2.216,389,3.303,1745,6.648,1746,5.476,1747,5.476,1748,5.476,1749,6.161,1750,5.476]],["title/injectables/NetworkHashrateChart.html",[456,1.315,993,3.787]],["body/injectables/NetworkHashrateChart.html",[3,0.025,4,0.066,5,0.029,7,0.386,8,0.418,10,0.751,13,0.753,14,0.543,15,0.007,16,0.029,19,0.003,20,0.003,28,0.762,39,0.988,46,1.508,48,2.35,49,2.103,55,0.988,56,0.751,58,1.378,59,1.701,63,2.831,64,0.464,66,0.326,67,0.233,71,1.683,73,1.823,77,1.582,139,3.551,155,2.468,226,1.083,243,1.146,289,4.566,296,5.686,350,1.493,370,1.763,375,2.819,386,1.823,432,2.913,456,1.168,458,1.117,472,1.352,499,1.857,534,2.68,580,2.017,585,1.683,586,2.88,692,2.112,746,6.393,749,3.664,750,5.207,751,4.778,753,2.301,754,3.263,756,2.301,759,3.664,762,2.301,763,2.301,764,3.137,765,3.664,766,2.301,767,2.301,768,2.301,769,2.301,770,2.112,771,2.301,772,2.301,773,2.301,774,1.97,775,3.91,776,2.301,777,4.19,778,2.301,779,3.664,780,2.301,781,3.664,782,4.19,783,5.207,784,4.566,785,2.68,786,4.566,787,2.808,788,5.207,789,3.664,790,3.664,849,3.664,927,3.363,930,3.664,931,3.363,971,3.363,993,3.363,1018,3.137,1044,3.664,1056,4.566,1142,2.112,1353,3.664,1401,4.868,1605,3.664,1751,5.858,1752,2.589,1753,5.137,1754,5.137,1755,7.147,1756,2.589,1757,2.589,1758,2.589,1759,2.589,1760,4.122,1761,5.137,1762,5.137,1763,2.589,1764,2.589,1765,4.122,1766,2.589,1767,4.122,1768,2.589,1769,2.589,1770,2.589,1771,2.589,1772,2.589,1773,2.589,1774,2.589,1775,2.589,1776,2.589,1777,2.589,1778,2.589,1779,4.122,1780,2.589,1781,2.589,1782,3.664,1783,2.589,1784,2.589,1785,4.122,1786,2.301,1787,2.589,1788,2.589,1789,3.664,1790,3.137,1791,3.363,1792,4.122,1793,4.122,1794,4.122,1795,4.122,1796,2.589,1797,2.589,1798,4.122,1799,4.122,1800,4.122,1801,4.122,1802,2.589,1803,4.122,1804,2.589,1805,2.589,1806,4.122,1807,2.589,1808,2.589,1809,2.301,1810,2.589,1811,2.589,1812,2.589,1813,2.589,1814,2.589,1815,2.589,1816,2.589,1817,2.589,1818,2.589,1819,2.589,1820,2.589,1821,2.589,1822,2.589,1823,2.589,1824,2.589,1825,2.589,1826,2.589,1827,2.589,1828,2.589,1829,2.589]],["title/components/NewComponent.html",[21,0.944,99,1.743]],["body/components/NewComponent.html",[3,0.031,4,0.036,5,0.036,7,0.242,8,0.495,10,0.586,14,0.468,15,0.007,16,0.036,19,0.004,20,0.004,21,1.199,22,1.208,23,1.917,24,1.292,25,1.263,26,1.292,28,1.437,29,2.609,31,1.024,32,3.509,33,2.733,34,2.748,36,1.874,39,1.17,41,2.912,45,0.785,46,1.434,55,0.771,56,1.199,58,1.149,59,1.953,64,0.561,66,0.405,67,0.29,77,1.235,78,1.961,79,1.917,80,1.208,81,2.645,82,1.292,83,1.292,84,1.182,85,1.292,86,1.263,87,3.002,88,1.292,89,1.208,90,1.292,91,1.208,92,1.292,93,1.182,94,1.292,95,1.208,96,1.292,97,1.208,98,1.292,99,2.473,100,1.292,101,1.182,102,1.157,103,1.292,104,1.208,105,1.292,106,1.208,107,1.292,108,1.208,109,1.292,110,1.263,111,1.11,112,1.292,113,1.208,114,1.292,115,1.182,116,1.292,117,1.794,118,1.961,119,1.208,120,1.292,121,1.208,122,1.292,123,1.182,124,1.292,125,1.182,126,1.292,127,1.182,128,1.263,129,1.182,130,1.263,131,1.292,144,1.11,158,4.986,201,1.856,360,3.942,372,2.344,399,4.281,400,1.323,590,1.583,591,3.528,592,3.942,659,1.792,1469,3.502,1647,5.415,1652,3.716,1830,3.217,1831,4.882,1832,5.244,1833,5.899,1834,3.217,1835,4.882,1836,4.882,1837,3.217,1838,3.217,1839,3.217,1840,3.217,1841,2.449,1842,2.624,1843,2.86,1844,3.217,1845,3.217,1846,2.86,1847,3.217,1848,3.217,1849,3.217,1850,3.217,1851,3.217,1852,3.217,1853,3.217,1854,4.882,1855,4.34,1856,4.34,1857,5.372,1858,3.982,1859,4.882]],["title/components/NoDaemonRunningDialog.html",[21,0.944,101,1.706]],["body/components/NoDaemonRunningDialog.html",[0,0.182,3,0.035,4,0.041,5,0.041,7,0.274,8,0.544,10,0.666,13,0.69,14,0.452,15,0.007,16,0.06,19,0.004,20,0.004,21,1.294,22,1.373,23,2.108,24,1.468,25,1.435,26,1.468,31,1.163,32,3.557,33,2.773,34,2.39,36,2.061,39,1.287,45,1.311,46,1.35,55,0.876,56,1.361,58,0.86,59,1.778,64,0.426,66,0.46,67,0.329,77,1.403,78,2.157,79,2.108,80,1.373,81,2.818,82,1.468,83,1.468,84,1.343,85,1.468,86,1.435,87,3.326,88,1.468,89,1.373,90,1.468,91,1.373,92,1.468,93,1.343,94,1.468,95,1.373,96,1.468,97,1.373,98,1.468,99,1.373,100,1.468,101,2.578,102,2.29,103,1.468,104,1.373,105,1.468,106,1.373,107,1.468,108,1.373,109,1.468,110,1.435,111,1.261,112,1.468,113,1.373,114,1.468,115,1.343,116,1.468,117,1.973,118,2.157,119,1.373,120,1.468,121,1.373,122,1.468,123,1.343,124,1.468,125,1.343,126,1.468,127,1.343,128,1.435,129,1.343,130,1.435,131,1.468,139,3.212,179,2.49,375,2.688,393,2.501,671,5.723,678,4.774,885,4.774,956,2.622,1302,4.774,1426,6.097,1427,6.644,1428,6.436,1429,3.249,1430,3.249,1431,3.249,1432,6.644,1433,2.782,1434,4.774,1435,6.237,1436,4.774,1437,6.237,1438,3.249,1860,3.655,1861,3.655,1862,3.655,1863,3.655,1864,3.655,1865,5.37,1866,4.774,1867,4.774,1868,5.37,1869,5.37]],["title/components/OpenComponent.html",[21,0.944,104,1.743]],["body/components/OpenComponent.html",[3,0.029,4,0.034,5,0.034,7,0.226,8,0.469,10,0.843,13,1.004,14,0.487,15,0.007,16,0.034,19,0.003,20,0.003,21,1.15,22,1.128,23,1.819,24,1.207,25,1.179,26,1.207,28,1.363,29,2.5,31,0.956,32,3.482,33,2.71,34,2.716,36,1.778,39,1.11,41,2.81,43,3.324,45,0.733,46,1.455,48,1.95,49,1.664,50,3.324,55,1.11,56,1.538,58,1.33,59,1.872,64,0.575,65,3.011,66,0.378,67,0.27,77,1.153,78,1.861,79,1.819,80,1.128,81,2.552,82,1.207,83,1.207,84,1.104,85,1.207,86,1.179,87,2.943,88,1.207,89,1.128,90,1.207,91,1.128,92,1.207,93,1.104,94,1.207,95,1.128,96,1.207,97,1.128,98,1.207,99,1.128,100,1.207,101,1.104,102,1.081,103,1.207,104,2.386,105,1.207,106,1.128,107,1.207,108,1.128,109,1.207,110,1.179,111,1.036,112,1.207,113,1.128,114,1.207,115,1.104,116,1.207,117,1.702,118,1.861,119,1.128,120,1.207,121,1.128,122,1.207,123,1.104,124,1.207,125,1.104,126,1.207,127,1.104,128,1.179,129,1.104,130,1.179,131,1.207,139,2.324,144,1.598,158,4.342,160,3.618,193,1.569,243,0.835,360,3.804,361,2.046,368,2.45,369,2.45,372,2.104,400,1.235,442,3.011,447,2.67,484,3.521,589,1.619,590,3.128,591,3.343,600,2.773,642,1.733,659,1.673,1647,4.463,1857,3.779,1870,3.004,1871,4.632,1872,4.632,1873,2.286,1874,7.56,1875,4.632,1876,3.004,1877,3.004,1878,4.632,1879,3.004,1880,4.118,1881,3.004,1882,3.004,1883,4.632,1884,4.118,1885,3.004,1886,2.45,1887,2.45,1888,3.004,1889,3.004,1890,3.004,1891,3.004,1892,2.67,1893,3.004,1894,4.632,1895,4.632,1896,4.632]],["title/interfaces/OpenWallet.html",[0,0.231,589,2.502]],["body/interfaces/OpenWallet.html",[0,0.384,2,0.934,3,0.044,4,0.051,5,0.051,7,0.339,8,0.632,10,1.136,12,2.101,13,1.179,14,0.443,15,0.007,16,0.096,17,2.701,19,0.005,20,0.005,33,1.837,35,2.356,62,2.515,63,2.109,64,0.567,67,0.562,176,2.777,201,3.6,226,1.186,243,1.254,372,2.369,393,2.101,395,2.81,432,1.771,484,2.101,531,3.736,533,3.073,534,4.057,535,4.873,536,3.073,537,3.073,540,2.933,541,3.476,542,2.81,543,3.736,544,3.073,545,3.073,546,4.057,547,2.81,548,2.933,549,3.073,550,3.073,551,3.073,552,3.073,553,3.073,554,2.81,555,2.933,556,2.603,557,3.856,558,3.856,559,3.887,560,2.933,561,2.701,562,2.81,563,2.81,564,2.81,565,2.81,566,2.701,567,2.81,568,2.701,569,2.701,570,2.701,571,2.701,572,2.603,573,2.701,574,2.81,575,2.701,576,2.81,577,2.81,578,3.856,579,2.81,580,1.771,581,2.81,582,3.073,583,2.603,584,3.073,585,2.933,586,1.658,587,2.81,588,2.701,589,3.363,590,3.988,591,3.584,592,2.701,593,2.933]],["title/classes/PaginatorOptions.html",[67,0.418,1897,3.331]],["body/classes/PaginatorOptions.html",[3,0.053,4,0.062,5,0.062,7,0.414,8,0.723,14,0.594,15,0.007,16,0.08,19,0.005,20,0.005,28,2.1,46,1.61,48,2.887,49,2.463,62,2.838,67,0.642,73,3.701,207,3.754,532,3.754,632,5.431,734,5.821,774,5.431,1790,6.369,1897,5.119,1898,4.899,1899,6.455,1900,7.439,1901,7.439,1902,7.439,1903,5.512,1904,6.343,1905,5.512,1906,6.343,1907,5.512,1908,5.512,1909,4.899]],["title/classes/PaginatorOptionsInterface.html",[67,0.418,1899,3.787]],["body/classes/PaginatorOptionsInterface.html",[3,0.056,4,0.065,5,0.065,7,0.435,8,0.747,14,0.605,15,0.007,16,0.083,19,0.005,20,0.005,28,1.705,46,1.641,62,2.857,67,0.663,73,3.258,207,3.946,532,3.946,632,5.607,734,6.01,774,5.607,1790,6.489,1897,4.156,1898,5.15,1899,6.609,1900,7.579,1901,7.579,1902,7.579,1904,5.15,1906,5.15,1909,5.15,1910,5.793,1911,5.793,1912,5.793,1913,5.793]],["title/interfaces/ParseUri.html",[0,0.231,587,2.891]],["body/interfaces/ParseUri.html",[0,0.387,2,0.949,3,0.044,4,0.051,5,0.051,7,0.344,8,0.639,10,1.149,12,2.135,13,1.13,14,0.325,15,0.007,16,0.097,17,2.743,19,0.005,20,0.005,33,1.856,35,2.393,62,2.527,63,2.132,64,0.572,67,0.568,176,2.795,201,3.639,226,1.204,243,1.274,372,2.389,393,2.135,395,2.854,432,1.799,484,2.135,531,3.776,533,3.122,534,4.1,535,4.913,536,3.122,537,3.122,540,2.979,541,3.514,542,2.854,543,4.652,544,3.122,545,3.122,546,4.1,547,2.854,548,2.979,549,3.122,550,3.122,551,3.122,552,3.122,553,3.122,554,2.854,555,2.979,556,2.644,557,3.887,558,3.887,559,3.929,560,2.979,561,2.743,562,2.854,563,2.854,564,2.854,565,2.854,566,2.743,567,2.854,568,2.743,569,2.743,570,2.743,571,2.743,572,2.644,573,2.743,574,2.854,575,2.743,576,2.854,577,2.854,578,3.887,579,2.854,580,1.799,581,2.854,582,3.122,583,2.644,584,3.122,585,2.979,586,1.684,587,3.929,588,4.652,589,2.47,590,3.105,591,2.79,592,2.743,593,2.979]],["title/interfaces/Payment.html",[0,0.231,1570,3.162]],["body/interfaces/Payment.html",[0,0.311,2,1.291,3,0.06,4,0.07,5,0.07,7,0.468,8,0.782,12,4.077,13,1.178,14,0.639,15,0.007,16,0.07,19,0.006,20,0.006,62,2.839,566,5.241,1423,5.963,1570,5.255,1624,7.142,1914,6.236,1915,8.755]],["title/modules/PipesModule.html",[299,1.706,1916,3.018]],["body/modules/PipesModule.html",[3,0.041,4,0.048,5,0.048,15,0.007,16,0.048,19,0.004,20,0.004,64,0.712,66,0.536,67,0.383,301,1.469,302,2.464,314,2.585,315,1.837,316,1.599,318,2.353,319,1.565,321,2.202,322,2.353,323,1.531,389,2.585,1443,6.908,1458,6.908,1590,6.908,1603,6.908,1680,6.908,1916,6.296,1917,3.785,1918,3.785,1919,3.785,1920,6.908,1921,6.908,1922,6.908,1923,6.908,1924,4.258,1925,4.258,1926,4.258,1927,4.258,1928,4.258,1929,4.258,1930,4.258,1931,4.258,1932,4.258,1933,4.258]],["title/interfaces/PluginDefinition.html",[0,0.231,1934,3.533]],["body/interfaces/PluginDefinition.html",[0,0.366,2,1.196,3,0.056,4,0.065,5,0.065,7,0.434,8,0.745,13,1.224,14,0.624,15,0.007,16,0.091,19,0.005,20,0.005,56,1.551,62,1.733,63,1.952,71,3.755,73,2.555,102,3.064,295,4.397,787,3.935,1351,4.397,1934,6.158,1935,4.712,1936,6.948,1937,6.948,1938,6.948,1939,6.482,1940,5.135,1941,5.135,1942,4.712,1943,4.712,1944,4.712,1945,4.712]],["title/interfaces/Plugins.html",[0,0.231,787,3.162]],["body/interfaces/Plugins.html",[0,0.381,2,1.272,3,0.06,4,0.069,5,0.069,7,0.461,8,0.775,13,1.119,14,0.543,15,0.007,16,0.093,19,0.006,20,0.006,56,1.118,62,2.497,63,2.076,71,3.992,73,2.716,102,2.209,295,4.675,787,5.206,1351,4.675,1934,6.628,1935,5.01,1936,5.01,1937,5.01,1938,5.01,1939,5.817,1940,7.741,1941,7.741,1942,5.01,1943,5.01,1944,5.01,1945,5.01]],["title/components/PluginsComponent.html",[21,0.944,106,1.743]],["body/components/PluginsComponent.html",[3,0.037,4,0.043,5,0.043,7,0.289,8,0.566,10,0.702,14,0.396,15,0.007,16,0.043,19,0.004,20,0.004,21,1.463,22,1.448,23,2.192,24,1.549,25,1.514,26,1.549,28,1.643,29,2.903,31,1.227,32,3.576,33,2.789,34,2.726,36,2.143,39,1.338,41,3.182,45,0.941,46,1.263,55,0.924,56,1.31,58,0.907,59,1.849,64,0.57,66,0.486,67,0.347,77,1.48,78,2.242,79,3.126,80,1.448,81,2.89,82,1.549,83,1.549,84,1.417,85,1.549,86,1.514,87,3.274,88,1.549,89,1.448,90,1.549,91,1.448,92,1.549,93,1.417,94,1.549,95,1.448,96,1.549,97,1.448,98,1.549,99,1.448,100,1.549,101,1.417,102,1.387,103,1.549,104,1.448,105,1.549,106,2.702,107,1.549,108,1.448,109,1.549,110,1.514,111,1.33,112,1.549,113,1.448,114,1.549,115,1.417,116,1.549,117,2.052,118,2.242,119,1.448,120,1.549,121,1.448,122,1.549,123,1.417,124,1.549,125,1.417,126,1.549,127,2.052,128,1.514,129,1.417,130,1.514,131,1.549,133,2.078,136,2.915,139,2.698,187,2.401,226,1.013,385,4.554,787,3.803,1946,3.855,1947,6.564,1948,5.583,1949,4.963,1950,7.077,1951,5.479,1952,3.855,1953,3.855,1954,3.855,1955,3.427,1956,3.855,1957,3.145,1958,3.427,1959,3.855,1960,3.855,1961,5.583,1962,3.855,1963,3.855,1964,3.855,1965,6.564,1966,3.855]],["title/modules/PluginsModule.html",[299,1.706,311,3.331]],["body/modules/PluginsModule.html",[3,0.056,4,0.065,5,0.065,15,0.007,16,0.065,19,0.005,20,0.005,64,0.676,66,0.732,67,0.523,106,3.578,301,2.004,302,3.034,311,6.706,314,3.184,315,2.506,316,2.182,318,2.898,319,2.135,321,2.712,322,2.898,323,2.09,388,4.418,389,3.184,1951,6.46,1955,5.164,1967,5.164,1968,5.164,1969,5.164,1970,5.164,1971,5.81,1972,5.81]],["title/injectables/PluginsService.html",[456,1.315,1951,3.331]],["body/injectables/PluginsService.html",[3,0.045,4,0.052,5,0.052,7,0.346,10,1.318,13,1.085,14,0.514,15,0.007,16,0.052,19,0.005,20,0.005,21,0.938,25,2.488,34,1.939,35,3.309,39,1.519,45,1.547,46,1.393,55,1.735,56,1.318,58,1.491,59,2.099,64,0.574,66,0.581,67,0.415,79,2.842,87,2.329,127,1.695,144,2.497,223,3.764,226,2.048,456,1.795,458,1.99,609,3.31,615,3.764,998,3.512,1055,3.764,1173,4.102,1324,4.102,1331,5.194,1384,6.357,1693,5.634,1949,4.102,1950,7.502,1951,4.547,1957,3.764,1958,4.102,1973,4.614,1974,6.338,1975,6.338,1976,8.644,1977,8.644,1978,4.614,1979,6.338,1980,4.614,1981,6.338,1982,4.614,1983,6.338,1984,6.338,1985,4.614,1986,6.338,1987,6.338,1988,4.614,1989,4.614,1990,4.614,1991,4.614,1992,6.338,1993,4.614,1994,4.614,1995,4.614,1996,4.614,1997,4.614,1998,3.764,1999,4.614,2000,4.614,2001,4.614,2002,4.614]],["title/components/PostComponent.html",[21,0.944,108,1.743]],["body/components/PostComponent.html",[3,0.032,4,0.037,5,0.037,7,0.248,8,0.505,10,0.602,13,0.771,14,0.535,15,0.007,16,0.037,19,0.004,20,0.004,21,1.219,22,1.241,23,1.956,24,1.328,25,1.298,26,1.328,28,1.466,29,2.652,31,1.052,32,3.52,33,2.742,34,2.304,36,1.913,39,1.194,41,2.953,45,0.807,46,1.504,48,2.471,49,2.108,55,0.792,56,1.216,58,0.778,59,1.65,63,1.684,64,0.475,66,0.416,67,0.298,77,1.269,78,2.001,79,1.956,80,1.241,81,2.682,82,1.328,83,1.328,84,1.215,85,1.328,86,1.298,87,3.131,88,1.328,89,1.241,90,1.328,91,1.241,92,1.328,93,1.215,94,1.328,95,1.241,96,1.328,97,1.241,98,1.328,99,1.241,100,1.328,101,1.215,102,1.189,103,1.328,104,1.241,105,1.328,106,1.241,107,1.328,108,2.507,109,1.328,110,1.298,111,1.14,112,1.328,113,1.241,114,1.328,115,1.215,116,1.328,117,1.831,118,2.001,119,1.241,120,1.328,121,1.241,122,1.328,123,1.215,124,1.328,125,1.215,126,1.328,127,1.215,128,1.298,129,1.215,130,1.298,131,1.328,133,1.782,136,2.602,139,3.55,144,2.069,151,2.516,152,4.895,155,4.289,185,1.359,226,1.576,235,3.46,372,1.095,400,1.359,754,1.841,903,5.949,2003,3.306,2004,5.998,2005,4.983,2006,7.164,2007,4.893,2008,4.983,2009,3.306,2010,3.306,2011,3.306,2012,3.306,2013,3.306,2014,5.331,2015,2.697,2016,2.939,2017,2.939,2018,2.939,2019,2.939,2020,3.306,2021,3.306,2022,3.306,2023,3.306,2024,3.306,2025,3.306,2026,3.306,2027,3.306,2028,3.306,2029,3.306,2030,3.306,2031,3.306,2032,3.306]],["title/modules/PostModule.html",[299,1.706,2033,3.533]],["body/modules/PostModule.html",[3,0.057,4,0.066,5,0.066,15,0.007,16,0.066,19,0.005,20,0.005,21,1.517,64,0.717,66,0.744,67,0.532,108,3.489,185,2.43,226,1.553,301,2.039,302,3.068,314,3.219,315,2.55,316,2.22,318,2.929,319,2.172,321,2.742,322,2.929,323,2.126,418,2.995,419,4.143,427,3.475,656,4.304,657,3.41,867,3.087,1916,4.85,2033,6.883,2034,5.254,2035,5.254,2036,5.911,2037,5.911,2038,5.911]],["title/modules/PostRoutingModule.html",[299,1.706,411,3.331]],["body/modules/PostRoutingModule.html",[3,0.062,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,64,0.672,66,0.808,67,0.577,185,2.636,226,1.685,301,2.212,319,2.356,321,2.884,322,3.082,323,2.306,389,2.766,411,5.632,417,3.994,418,3.977,419,4.298,427,2.987,867,3.348,870,4.368,1612,4.88,2039,6.412,2040,6.412,2041,6.412]],["title/components/ProfileComponent.html",[21,0.944,110,1.822]],["body/components/ProfileComponent.html",[3,0.034,4,0.04,5,0.04,7,0.265,8,0.53,13,0.673,14,0.251,15,0.007,16,0.04,19,0.004,20,0.004,21,1.268,22,1.325,23,2.054,24,1.417,25,1.385,26,1.417,28,1.54,29,2.758,31,1.123,32,3.544,33,2.762,34,2.36,36,2.009,39,1.254,41,3.05,45,1.522,46,1.2,48,1.217,49,1.038,56,1.341,58,0.83,59,1.733,64,0.415,66,0.444,67,0.318,73,2.314,77,1.355,78,2.102,79,2.054,80,1.325,81,2.77,82,1.417,83,1.417,84,1.297,85,1.417,86,1.385,87,3.079,88,1.417,89,1.325,90,1.417,91,1.325,92,1.417,93,1.297,94,1.417,95,1.325,96,1.417,97,1.325,98,1.417,99,1.325,100,1.417,101,1.297,102,1.269,103,1.417,104,1.325,105,1.417,106,1.325,107,1.417,108,1.325,109,1.417,110,2.708,111,2.151,112,1.417,113,1.325,114,1.417,115,1.297,116,1.417,117,1.923,118,2.102,119,1.325,120,1.417,121,1.325,122,1.417,123,1.297,124,1.417,125,1.297,126,1.417,127,1.297,128,1.385,129,1.297,130,1.385,131,1.417,133,1.902,136,2.732,139,2.564,393,2.437,398,4.296,431,3.979,483,3.259,484,2.437,583,3.979,609,4.949,677,4.268,764,4.746,1428,5.25,2042,3.529,2043,5.872,2044,6.236,2045,5.232,2046,6.236,2047,3.529,2048,3.529,2049,6.236,2050,5.232,2051,6.131,2052,6.236,2053,5.232,2054,5.232,2055,5.232,2056,3.529,2057,3.137,2058,3.137,2059,5.232,2060,5.232,2061,8.202,2062,6.897,2063,6.131]],["title/interfaces/ProfileState.html",[0,0.231,2064,3.787]],["body/interfaces/ProfileState.html",[0,0.278,2,1.157,3,0.054,4,0.063,5,0.063,7,0.419,8,0.729,13,1.218,14,0.633,15,0.007,16,0.063,19,0.005,20,0.005,56,1.311,160,2.674,202,4.966,375,2.589,386,3.72,390,4.008,484,4.054,580,2.826,636,4.558,675,4.252,1248,4.966,1334,4.558,1495,4.558,2043,5.479,2064,5.872,2065,5.587,2066,8.412,2067,8.412,2068,8.412,2069,8.412,2070,7.199,2071,5.587,2072,5.587,2073,5.587,2074,5.587,2075,5.587,2076,5.587,2077,4.966,2078,5.587,2079,4.252,2080,5.587]],["title/interfaces/QueryKeyIn.html",[0,0.231,2081,3.787]],["body/interfaces/QueryKeyIn.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,2081,6.754,2082,7.007,2083,9.106]],["title/interfaces/QueryKeyOut.html",[0,0.231,2084,3.787]],["body/interfaces/QueryKeyOut.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,580,3.575,2084,6.754,2085,7.007]],["title/pipes/RemoveTrailingZerosPipe.html",[1127,2.002,1920,3.533]],["body/pipes/RemoveTrailingZerosPipe.html",[3,0.055,4,0.064,5,0.064,10,1.04,14,0.406,15,0.007,16,0.064,19,0.005,20,0.005,28,1.681,31,1.817,39,1.369,45,1.394,46,1.099,49,2.496,55,1.369,56,1.465,58,1.344,63,1.93,64,0.453,66,0.719,67,0.514,73,3.876,176,2.895,243,2.03,432,2.866,1127,3.149,1444,3.295,1447,3.419,1448,5.557,1449,7.154,1451,3.891,1452,4.371,1453,4.547,1686,5.078,1920,5.557,2086,5.712,2087,7.302,2088,5.712,2089,5.712,2090,7.302,2091,5.712,2092,7.302,2093,5.712]],["title/interfaces/Response.html",[0,0.231,1075,3.533]],["body/interfaces/Response.html",[0,0.285,2,1.186,3,0.056,4,0.064,5,0.064,7,0.43,8,0.741,13,1.153,14,0.572,15,0.007,16,0.082,19,0.005,20,0.005,63,1.936,226,2.118,243,2.24,375,2.06,663,4.728,811,4.36,881,7.547,883,6.462,1075,5.567,1485,6.926,1494,3.902,1599,4.673,2094,5.728,2095,5.728,2096,8.773,2097,5.728,2098,4.36,2099,4.673,2100,5.728,2101,5.728,2102,5.728,2103,5.728,2104,5.728,2105,5.728,2106,5.728]],["title/components/RestoreComponent.html",[21,0.944,113,1.743]],["body/components/RestoreComponent.html",[3,0.029,4,0.033,5,0.033,7,0.221,8,0.462,9,2.378,10,1.015,14,0.323,15,0.007,16,0.033,19,0.003,20,0.003,21,1.134,22,1.104,23,1.788,24,1.18,25,1.154,26,1.18,28,1.34,29,2.466,31,0.935,32,3.473,33,2.702,34,2.685,36,1.749,39,1.092,41,2.778,45,0.717,46,1.209,55,1.336,56,1.144,58,1.072,59,1.847,64,0.539,66,0.37,67,0.265,72,3.467,77,1.128,78,1.829,79,1.788,80,1.104,81,2.523,82,1.18,83,1.18,84,1.08,85,1.18,86,1.154,87,2.924,88,1.18,89,1.104,90,1.18,91,1.104,92,1.18,93,1.08,94,1.18,95,1.104,96,1.18,97,1.104,98,1.18,99,1.104,100,1.18,101,1.08,102,1.057,103,1.18,104,1.104,105,1.18,106,1.104,107,1.18,108,1.104,109,1.18,110,1.154,111,1.014,112,1.18,113,2.359,114,1.18,115,1.08,116,1.18,117,1.674,118,1.829,119,1.104,120,1.18,121,1.104,122,1.18,123,1.08,124,1.18,125,1.08,126,1.18,127,1.08,128,1.154,129,1.08,130,1.154,131,1.18,158,5.397,260,2.242,360,3.76,361,2.002,372,2.692,399,1.91,400,1.208,580,2.466,590,2.242,591,3.18,593,2.961,659,1.637,1469,3.268,1647,4.875,1832,2.613,1841,2.237,1842,2.398,1843,2.613,1846,2.613,1855,4.049,1856,4.049,1857,5.124,1858,3.716,1873,2.237,1998,3.716,2107,2.939,2108,4.555,2109,5.577,2110,4.507,2111,4.555,2112,2.939,2113,2.939,2114,5.124,2115,2.939,2116,4.049,2117,2.939,2118,4.049,2119,2.939,2120,4.049,2121,4.049,2122,2.939,2123,2.939,2124,2.939,2125,2.939,2126,2.939,2127,2.939,2128,2.939,2129,2.939,2130,2.939,2131,2.939,2132,2.939,2133,4.555,2134,4.555,2135,4.555,2136,4.555,2137,4.555,2138,4.555,2139,4.555]],["title/interfaces/RestoreWallet.html",[0,0.231,2110,3.331]],["body/interfaces/RestoreWallet.html",[0,0.222,2,0.924,3,0.043,4,0.05,5,0.08,7,0.335,8,0.628,9,4.362,10,1.635,11,2.196,13,1.199,14,0.608,15,0.007,16,0.05,17,4.599,19,0.005,20,0.005,34,2.713,56,1.128,62,2.134,63,2.093,72,5.414,144,2.65,176,2.558,207,4.218,260,3.048,372,2.051,432,3.016,454,4.714,568,3.707,580,3.016,590,3.781,591,3.694,735,3.707,745,5.505,1130,3.202,1331,4.443,1494,3.04,1495,5.052,1565,5.505,1998,6.267,2110,4.443,2116,6.83,2118,6.83,2120,6.83,2121,6.83,2140,4.463,2141,8.979,2142,6.193,2143,6.193,2144,6.193]],["title/components/RootComponent.html",[21,0.944,115,1.706]],["body/components/RootComponent.html",[3,0.019,4,0.022,5,0.022,7,0.148,8,0.335,10,0.36,14,0.426,15,0.007,16,0.022,19,0.002,20,0.002,21,0.867,22,0.742,23,1.298,24,0.794,25,0.776,26,0.794,28,0.973,29,1.885,31,0.629,32,3.28,33,2.541,34,2.123,36,1.27,39,0.793,41,2.204,45,0.807,46,1.504,48,1.141,49,0.973,55,0.474,56,0.908,58,1.499,59,1.412,62,2.004,63,1.118,64,0.583,66,0.249,67,0.178,77,0.759,78,1.328,79,1.298,80,0.742,81,2.002,82,0.794,83,0.794,84,0.726,85,0.794,86,0.776,87,2.55,88,0.794,89,0.742,90,0.794,91,0.742,92,0.794,93,0.726,94,0.794,95,0.742,96,0.794,97,0.742,98,0.794,99,0.742,100,0.794,101,0.726,102,0.711,103,0.794,104,0.742,105,0.794,106,0.742,107,0.794,108,0.742,109,0.794,110,0.776,111,0.682,112,0.794,113,0.742,114,0.794,115,1.832,116,0.794,117,1.215,118,1.328,119,0.742,120,0.794,121,0.742,122,0.794,123,0.726,124,0.794,125,0.726,126,0.794,127,0.726,128,0.776,129,0.726,130,0.776,131,0.794,139,3.263,144,1.914,151,1.504,152,3.899,158,5.538,160,3.048,176,1.793,179,1.346,185,0.813,192,1.285,193,1.032,198,1.183,199,1.757,200,1.612,226,0.869,243,0.919,323,0.711,354,3.576,355,1.612,360,2.984,361,1.346,362,2.777,363,1.231,364,1.183,372,1.095,393,2.794,398,2.655,431,1.908,432,1.674,440,1.676,586,0.726,600,2.552,647,1.757,648,2.94,664,3.342,712,1.101,754,1.842,813,1.504,814,1.757,815,1.757,819,1.757,822,1.757,823,1.757,824,1.757,844,1.418,875,4.431,948,3.478,956,1.418,957,1.612,960,2.698,1009,2.904,1030,1.757,1080,1.757,2014,3.79,2015,1.612,2016,1.757,2017,1.757,2018,1.757,2019,1.757,2145,1.977,2146,3.307,2147,4.264,2148,4.264,2149,4.264,2150,4.264,2151,4.264,2152,4.985,2153,4.985,2154,4.985,2155,4.985,2156,4.066,2157,3.307,2158,1.977,2159,1.977,2160,1.977,2161,1.977,2162,1.977,2163,1.977,2164,1.977,2165,1.977,2166,1.977,2167,1.977,2168,1.977,2169,1.977,2170,1.977,2171,1.977,2172,1.977,2173,1.977,2174,1.977,2175,1.977,2176,1.977,2177,1.977,2178,3.307,2179,1.977,2180,1.977,2181,1.977,2182,1.977,2183,1.977,2184,1.977,2185,1.977,2186,1.977,2187,1.977,2188,1.977,2189,1.977,2190,1.757,2191,1.977,2192,3.307,2193,1.977,2194,4.985,2195,4.985,2196,4.985,2197,3.307,2198,3.307,2199,3.307,2200,3.307,2201,3.307,2202,3.307,2203,3.307,2204,3.307,2205,3.307,2206,3.307,2207,3.307,2208,3.307,2209,3.307,2210,3.307,2211,3.307,2212,3.307,2213,3.307,2214,3.307,2215,3.307,2216,3.307,2217,3.307,2218,3.307,2219,3.307,2220,3.307,2221,3.307,2222,3.307,2223,3.307,2224,3.307,2225,3.307]],["title/modules/RootModule.html",[299,1.706,2226,3.331]],["body/modules/RootModule.html",[3,0.051,4,0.059,5,0.059,15,0.007,16,0.059,19,0.005,20,0.005,64,0.754,66,0.657,67,0.469,115,3.214,190,3.248,191,3.248,301,1.799,302,2.83,309,5.958,313,5.447,314,2.969,315,2.25,316,1.959,318,2.702,319,2.529,321,2.529,322,2.702,323,1.876,336,5.615,337,4.255,338,4.938,339,3.742,344,3.97,345,3.009,348,4.287,349,3.122,350,3.009,365,4.636,389,2.25,656,3.97,657,3.009,1916,4.474,2226,6.731,2227,4.636,2228,4.636,2229,4.636,2230,6.275,2231,5.216,2232,5.216,2233,5.615,2234,4.255,2235,5.216,2236,6.883,2237,4.636,2238,5.216,2239,6.883,2240,4.636,2241,4.636]],["title/modules/RootRoutingModule.html",[299,1.706,412,3.331]],["body/modules/RootRoutingModule.html",[3,0.056,4,0.065,5,0.065,11,2.835,15,0.007,16,0.065,19,0.005,20,0.005,21,1.171,64,0.712,66,0.725,67,0.518,115,2.698,142,3.744,155,3.448,185,2.368,226,1.514,239,3.744,301,1.987,302,3.018,314,3.166,315,2.485,316,2.163,318,2.261,319,2.698,321,2.698,322,2.882,323,2.072,375,2.072,389,2.485,412,6.446,417,3.588,418,3.719,419,4.094,427,2.683,429,5.121,430,4.699,432,2.261,595,4.772,598,4.133,867,3.008,869,4.384,2226,6.446,2242,5.761,2243,5.761,2244,5.761,2245,5.761,2246,5.761,2247,5.761,2248,5.761,2249,5.761]],["title/components/SettingsComponent.html",[21,0.944,117,1.706]],["body/components/SettingsComponent.html",[3,0.039,4,0.045,5,0.045,7,0.303,8,0.585,13,0.519,14,0.287,15,0.007,16,0.045,19,0.004,20,0.004,21,1.37,22,1.517,23,2.266,24,1.622,25,1.585,26,1.622,28,1.699,29,2.979,31,1.285,32,3.591,33,2.802,34,2.474,36,2.216,39,1.383,41,3.251,45,1.644,46,1.415,48,1.393,49,1.189,56,1.227,58,1.358,59,2.434,64,0.32,66,0.509,67,0.364,77,1.55,78,2.319,79,2.266,80,1.517,81,2.952,82,1.622,83,1.622,84,1.484,85,1.622,86,1.585,87,3.185,88,1.622,89,1.517,90,1.622,91,1.517,92,1.622,93,1.484,94,1.622,95,1.517,96,1.622,97,1.517,98,1.622,99,1.517,100,1.622,101,1.484,102,1.453,103,1.622,104,1.517,105,1.622,106,1.517,107,1.622,108,1.517,109,1.622,110,1.585,111,1.393,112,1.622,113,1.517,114,1.622,115,1.484,116,1.622,117,2.857,118,2.319,119,1.517,120,1.622,121,1.517,122,1.622,123,1.484,124,1.622,125,1.484,126,1.622,127,1.484,128,1.585,129,1.484,130,1.585,131,1.622,133,2.177,136,3.014,257,3.295,483,3.595,797,5.127,803,5.595,827,3.295,2250,4.039,2251,6.737,2252,5.131,2253,6.737,2254,5.773,2255,4.039,2256,4.039,2257,5.773,2258,5.773,2259,4.039]],["title/components/SettingsComponent-1.html",[21,0.785,73,1.708,117,1.42]],["body/components/SettingsComponent-1.html",[3,0.041,4,0.047,5,0.047,7,0.317,15,0.007,16,0.047,19,0.004,20,0.004,21,1.404,22,1.586,23,2.339,24,1.696,25,1.658,26,1.696,28,1.753,29,3.053,31,1.343,32,3.605,33,2.814,34,2.635,36,2.287,39,1.428,41,3.316,45,1.685,46,1.147,56,1.257,58,0.994,59,1.973,64,0.335,66,0.532,67,0.38,73,1.867,75,4.535,77,1.621,78,2.393,79,2.339,80,1.586,81,3.012,82,1.696,83,1.696,84,1.552,85,1.696,86,1.658,87,3.299,88,1.696,89,1.586,90,1.696,91,1.586,92,1.696,93,1.552,94,1.696,95,1.586,96,1.696,97,1.586,98,1.696,99,1.586,100,1.696,101,1.552,102,1.519,103,1.696,104,1.586,105,1.696,106,1.586,107,1.696,108,1.586,109,1.696,110,1.658,111,1.457,112,1.696,113,1.586,114,1.696,115,1.552,116,1.696,117,2.906,118,2.393,119,1.586,120,1.696,121,1.586,122,1.696,123,1.552,124,1.696,125,1.552,126,1.696,127,1.552,128,1.658,129,1.552,130,1.658,131,1.696,386,2.635,483,4.671,484,2.775,725,4.86,726,4.86,727,4.86,728,5.296,729,3.753,730,3.753,2252,5.296,2260,4.223,2261,4.223,2262,4.223]],["title/injectables/SettingsEffects.html",[456,1.315,2263,4.127]],["body/injectables/SettingsEffects.html",[3,0.051,4,0.059,5,0.059,7,0.397,8,0.703,10,0.962,13,1.058,14,0.55,15,0.007,16,0.059,19,0.005,20,0.005,45,1.29,46,1.336,48,1.822,49,1.555,55,1.266,56,0.962,64,0.652,66,0.665,67,0.476,144,1.822,146,6.891,158,4.641,159,6.716,189,4.021,190,3.29,191,3.29,201,4.749,243,1.93,400,2.172,456,1.966,458,2.279,586,2.551,1055,5.662,1095,3.79,1096,5.979,1098,6.324,1099,5.662,1125,4.31,1139,4.31,1140,3.434,2263,6.17,2264,5.283,2265,5.283,2266,6.941,2267,6.17,2268,6.941,2269,6.17,2270,5.283]],["title/modules/SettingsModule.html",[299,1.706,2271,3.533]],["body/modules/SettingsModule.html",[3,0.048,4,0.056,5,0.056,11,2.448,15,0.007,16,0.056,19,0.005,20,0.005,21,1.011,33,1.464,64,0.746,66,0.626,67,0.448,117,3.239,142,3.233,155,2.977,185,2.045,226,1.307,239,3.233,301,1.716,302,2.742,314,2.877,315,2.146,316,1.868,318,2.618,319,2.451,321,2.451,322,2.618,323,1.789,334,4.785,335,3.569,338,4.785,339,3.569,340,5.076,341,3.786,344,3.847,345,2.869,348,4.153,349,2.977,350,2.869,375,1.789,389,2.146,393,2.317,418,3.379,419,3.812,427,3.106,431,2.869,482,3.388,483,4.153,586,1.828,656,3.847,657,2.869,867,2.597,870,3.388,1662,6.191,2233,5.44,2234,4.058,2271,6.819,2272,4.422,2273,4.974,2274,4.422,2275,4.974,2276,5.928,2277,4.422,2278,4.422,2279,5.44,2280,4.058,2281,4.974,2282,4.974,2283,4.974,2284,4.422,2285,4.974,2286,4.974,2287,4.974]],["title/modules/SettingsRoutingModule.html",[299,1.706,413,3.331]],["body/modules/SettingsRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,64,0.696,66,0.793,67,0.566,185,2.587,226,1.654,301,2.171,318,2.471,319,2.313,321,2.851,322,3.046,323,2.264,388,3.767,389,2.715,413,5.567,417,3.92,418,3.931,419,4.262,427,2.931,483,3.92,595,5.469,598,4.515,867,3.286,869,4.79,870,4.287,1610,5.595,2288,6.294,2289,6.294,2290,6.294]],["title/interfaces/SettingsState.html",[0,0.231,2291,4.127]],["body/interfaces/SettingsState.html",[0,0.278,2,1.154,3,0.054,4,0.063,5,0.063,7,0.418,8,0.728,13,1.145,14,0.652,15,0.007,16,0.063,19,0.005,20,0.005,176,3.481,201,5.017,1322,6.388,1789,4.953,1790,4.241,1809,4.953,2291,6.388,2292,5.572,2293,8.403,2294,8.403,2295,8.403,2296,8.403,2297,8.403,2298,8.403,2299,8.403,2300,5.572,2301,5.572]],["title/pipes/ShruggiePipe.html",[1127,2.002,1921,3.533]],["body/pipes/ShruggiePipe.html",[3,0.06,4,0.069,5,0.069,10,1.118,14,0.436,15,0.007,16,0.069,19,0.006,20,0.006,28,1.808,31,1.954,39,1.472,46,1.182,55,1.472,56,1.515,58,1.445,64,0.487,66,0.773,67,0.553,176,2.993,235,5.023,243,2.125,586,2.257,1127,3.297,1401,4.184,1444,3.543,1447,3.677,1451,4.184,1452,4.575,1453,3.825,1461,5.484,1601,5.46,1606,7.397,1921,5.817,2302,6.142,2303,7.644,2304,6.142]],["title/interfaces/SplitIntegratedAddressOut.html",[0,0.231,2305,3.787]],["body/interfaces/SplitIntegratedAddressOut.html",[0,0.335,2,1.393,3,0.065,4,0.076,5,0.076,7,0.505,8,0.819,9,4.692,12,4.185,13,1.114,14,0.574,15,0.007,16,0.076,19,0.006,20,0.006,64,0.533,1673,5.982,2305,6.593,2306,6.73,2307,8.986]],["title/components/StatusComponent.html",[21,0.944,119,1.743]],["body/components/StatusComponent.html",[3,0.038,4,0.044,5,0.044,7,0.294,8,0.573,10,0.714,14,0.569,15,0.007,16,0.044,19,0.004,20,0.004,21,1.347,22,1.473,23,2.219,24,1.575,25,1.54,26,1.575,31,1.248,32,3.581,33,2.793,34,2.45,36,2.17,45,0.957,46,1.541,55,0.94,56,1.321,64,0.448,66,0.494,67,0.353,77,1.506,78,2.27,79,2.219,80,1.473,81,2.913,82,1.575,83,1.575,84,1.441,85,1.575,86,1.54,87,3.251,88,1.575,89,1.473,90,1.575,91,1.473,92,1.575,93,1.441,94,1.575,95,1.473,96,1.575,97,1.473,98,1.575,99,1.473,100,1.575,101,1.441,102,2.384,103,1.575,104,1.473,105,1.575,106,1.473,107,1.575,108,1.473,109,1.575,110,1.54,111,1.353,112,1.575,113,1.473,114,1.575,115,1.441,116,1.575,117,2.077,118,2.27,119,2.724,120,1.575,121,1.473,122,1.575,123,1.441,124,1.575,125,1.441,126,1.575,127,1.441,128,1.54,129,1.441,130,1.54,131,1.575,133,2.114,136,2.952,139,2.324,571,3.384,1433,2.985,2308,3.922,2309,6.628,2310,5.653,2311,7.253,2312,6.628,2313,6.628,2314,6.628,2315,6.628,2316,3.922,2317,7.688,2318,5.653,2319,3.922,2320,3.922,2321,3.922,2322,3.922,2323,3.922,2324,5.653,2325,5.653,2326,5.653,2327,7.253,2328,7.253]],["title/modules/StatusModule.html",[299,1.706,312,3.331]],["body/modules/StatusModule.html",[3,0.055,4,0.064,5,0.064,15,0.007,16,0.064,19,0.005,20,0.005,64,0.738,66,0.717,67,0.513,101,3.292,119,3.568,301,1.965,302,2.996,312,6.682,314,3.144,315,2.457,316,2.139,318,2.861,319,2.093,321,2.678,322,2.861,323,2.049,334,5.229,335,4.087,344,4.204,345,3.286,346,5.946,347,4.647,389,3.144,656,4.204,657,3.286,1428,4.335,1433,4.335,2329,5.063,2330,5.063,2331,5.063,2332,5.696,2333,5.696,2334,7.289,2335,5.696,2336,5.696]],["title/interfaces/StoreOut.html",[0,0.231,2337,3.787]],["body/interfaces/StoreOut.html",[0,0.364,2,1.513,3,0.071,4,0.082,5,0.082,15,0.007,16,0.082,19,0.006,20,0.006,2337,6.922,2338,7.308]],["title/interfaces/SweepAllIn.html",[0,0.231,2339,3.787]],["body/interfaces/SweepAllIn.html",[0,0.21,2,0.874,3,0.041,4,0.047,5,0.047,7,0.317,8,0.604,9,4.286,10,1.741,11,2.078,12,3.493,13,1.141,14,0.622,15,0.007,16,0.047,19,0.004,20,0.004,35,3.111,62,2.792,63,2.534,139,2.449,176,3.15,243,2.085,393,2.775,515,4.535,541,3.319,557,3.211,558,3.211,561,4.489,562,3.711,563,3.711,564,3.711,565,3.711,566,4.489,567,3.711,568,3.567,569,3.567,570,3.567,571,3.567,572,3.437,573,3.567,574,3.711,575,3.567,576,4.671,577,3.711,578,4.042,581,3.711,1130,3.029,1494,2.876,2339,4.86,2340,4.223,2341,3.753,2342,7.5,2343,7.5,2344,7.5,2345,7.5,2346,7.5,2347,4.86,2348,5.958]],["title/interfaces/SweepAllOut.html",[0,0.231,2349,3.787]],["body/interfaces/SweepAllOut.html",[0,0.329,2,1.366,3,0.064,4,0.074,5,0.074,7,0.495,8,0.809,13,1.228,14,0.61,15,0.007,16,0.074,19,0.006,20,0.006,2349,6.516,2350,6.599,2351,8.927,2352,7.282,2353,8.927]],["title/interfaces/SweepDustOut.html",[0,0.231,2354,4.127]],["body/interfaces/SweepDustOut.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,2352,7.428,2354,7.36,2355,7.007]],["title/interfaces/Task.html",[0,0.231,2356,3.787]],["body/interfaces/Task.html",[0,0.192,2,0.8,3,0.037,4,0.043,5,0.063,7,0.29,8,0.567,13,1.024,14,0.466,15,0.007,16,0.063,19,0.004,20,0.004,21,1.137,32,1.451,33,1.137,36,1.483,45,0.943,56,1.391,64,0.651,66,0.486,67,0.348,102,2.749,111,1.929,123,1.419,136,2.017,144,2.484,152,4.271,176,2.363,185,1.588,226,2.094,362,3.114,363,2.406,364,2.312,372,2.786,375,1.389,376,3.151,393,1.799,432,1.516,443,2.631,462,2.631,464,3.151,469,2.771,470,2.94,471,2.94,515,4.255,580,1.516,586,2.054,591,3.523,599,4.475,600,3.347,613,4.769,646,2.511,651,3.808,659,2.152,663,2.082,664,2.152,666,4.714,710,3.151,711,3.151,712,4.776,998,2.94,1361,3.151,1390,4.561,1612,2.94,1642,5.875,1647,5.341,1652,2.94,1653,3.151,2043,2.94,2079,2.94,2114,4.561,2356,5.875,2357,3.434,2358,6.793,2359,3.434,2360,3.434,2361,3.434,2362,3.434,2363,3.434,2364,3.434,2365,3.434,2366,3.434,2367,3.434,2368,3.434,2369,3.434,2370,3.434,2371,3.434,2372,6.793,2373,3.434,2374,3.434,2375,3.434,2376,3.434,2377,3.434,2378,5.841,2379,4.97,2380,4.97,2381,4.97,2382,3.434,2383,3.434,2384,3.151,2385,3.434,2386,3.434,2387,3.434,2388,3.434,2389,3.434,2390,3.434,2391,3.434,2392,3.434,2393,3.434,2394,3.434,2395,3.434,2396,3.434,2397,3.434,2398,3.434,2399,3.434]],["title/pipes/TimeAgoPipe.html",[1127,2.002,1922,3.533]],["body/pipes/TimeAgoPipe.html",[3,0.052,4,0.06,5,0.06,10,0.969,13,0.684,14,0.378,15,0.007,16,0.06,19,0.005,20,0.005,28,1.567,31,1.694,39,1.276,45,1.3,46,1.025,49,1.567,55,1.276,56,1.417,58,1.253,62,2.335,64,0.422,66,0.671,67,0.479,226,2.39,243,1.939,372,2.31,586,1.957,640,4.733,844,5.006,845,4.733,1127,3.009,1444,3.071,1447,3.187,1448,5.31,1452,4.176,1453,3.316,1786,4.733,1922,5.31,2400,5.325,2401,6.202,2402,5.325,2403,5.325,2404,6.977,2405,5.325,2406,5.325,2407,5.325,2408,5.325,2409,5.325,2410,6.977,2411,5.325,2412,5.325,2413,5.325,2414,5.325,2415,5.325,2416,5.325,2417,6.977,2418,5.325,2419,7.782,2420,5.325,2421,5.325,2422,5.325,2423,5.325]],["title/pipes/ToCoinPipe.html",[1127,2.002,1923,3.533]],["body/pipes/ToCoinPipe.html",[3,0.06,4,0.07,5,0.07,10,1.132,14,0.441,15,0.007,16,0.07,19,0.006,20,0.006,28,1.83,31,1.978,39,1.49,46,1.196,48,2.144,49,1.83,55,1.49,56,1.523,58,1.463,62,2.51,64,0.493,66,0.783,67,0.56,235,4.826,243,1.728,586,3.075,1127,3.322,1444,3.586,1447,4.61,1452,4.61,1453,3.872,1461,4.46,1923,5.861,2424,6.217,2425,6.846,2426,8.367,2427,6.217,2428,6.217]],["title/components/TransactionsComponent.html",[21,0.944,121,1.743]],["body/components/TransactionsComponent.html",[3,0.026,4,0.031,5,0.031,7,0.204,8,0.435,10,0.496,13,0.552,14,0.536,15,0.007,16,0.031,19,0.003,20,0.003,21,1.08,22,1.023,23,1.685,24,1.094,25,1.069,26,1.094,28,1.263,29,2.348,31,0.866,32,3.44,33,2.675,34,2.434,36,1.647,39,1.028,41,2.665,43,3.079,45,0.665,46,1.561,48,2.514,49,2.388,55,0.653,56,1.662,58,1.01,59,1.421,64,0.599,65,3.452,66,0.343,67,0.245,77,1.045,78,1.724,79,1.685,80,1.023,81,2.42,82,1.094,83,1.094,84,1.001,85,1.094,86,1.069,87,2.856,88,1.094,89,1.023,90,1.094,91,1.023,92,1.094,93,1.001,94,1.094,95,1.023,96,1.094,97,1.023,98,1.094,99,1.023,100,1.094,101,1.001,102,0.98,103,1.094,104,1.023,105,1.094,106,1.023,107,1.094,108,1.023,109,1.094,110,1.069,111,0.939,112,1.094,113,1.023,114,1.094,115,1.001,116,1.094,117,1.577,118,1.724,119,1.023,120,1.094,121,2.263,122,1.094,123,1.001,124,1.094,125,1.001,126,1.094,127,1.001,128,1.069,129,1.001,130,1.069,131,1.094,144,2.079,158,2.569,160,3.488,173,4.042,192,1.77,193,1.422,198,1.63,260,2.112,316,1.611,372,1.996,399,3.917,400,1.12,432,3.124,556,2.475,590,2.614,591,2.348,659,1.517,663,2.313,664,2.958,712,1.517,833,3.079,1009,1.855,1238,3.501,1423,2.923,1570,2.923,1576,3.617,1579,2.923,1583,3.079,1586,3.452,1647,4.262,1782,3.815,1841,2.073,1873,2.073,1880,3.815,1886,2.222,2007,4.332,2347,4.916,2401,3.815,2425,3.815,2429,2.723,2430,4.291,2431,6.965,2432,4.721,2433,5.311,2434,6.026,2435,4.721,2436,4.291,2437,2.723,2438,2.723,2439,2.723,2440,2.723,2441,2.723,2442,3.815,2443,3.815,2444,3.501,2445,2.723,2446,2.723,2447,2.723,2448,2.723,2449,1.77,2450,2.222,2451,2.222,2452,2.723,2453,2.723,2454,2.723,2455,2.421,2456,4.291,2457,2.723,2458,2.723,2459,2.723,2460,2.723,2461,2.421,2462,2.723,2463,4.291,2464,2.723,2465,2.723]],["title/interfaces/Transfer.html",[0,0.231,1588,3.162]],["body/interfaces/Transfer.html",[0,0.287,2,1.193,3,0.056,4,0.065,5,0.065,7,0.432,8,0.744,12,3.963,13,1.223,14,0.676,15,0.007,16,0.065,19,0.005,20,0.005,62,2.855,260,4.187,556,4.908,1423,5.795,1588,5,2442,7.563,2443,7.563,2444,6.941,2466,5.761]],["title/interfaces/TransferIn.html",[0,0.231,2467,3.787]],["body/interfaces/TransferIn.html",[0,0.26,2,1.08,3,0.051,4,0.059,5,0.059,7,0.392,8,0.697,10,1.648,12,3.816,13,1.095,14,0.621,15,0.007,16,0.059,19,0.005,20,0.005,35,2.724,62,2.796,63,2.326,64,0.413,176,2.947,243,1.45,393,2.429,395,3.248,541,4.563,542,3.248,555,5.325,556,4.726,557,4.152,558,4.152,559,3.248,560,3.39,561,4.904,562,3.248,563,3.248,564,3.248,565,3.248,566,4.904,567,3.248,568,3.122,569,3.122,570,3.122,571,3.122,572,3.009,573,3.122,574,3.248,575,3.122,576,3.248,577,3.248,578,3.709,579,5.102,580,2.048,581,3.248,2467,5.615,2468,5.216,2469,5.216]],["title/interfaces/TransferOut.html",[0,0.231,2470,3.787]],["body/interfaces/TransferOut.html",[0,0.308,2,1.279,3,0.06,4,0.069,5,0.069,7,0.464,8,0.777,13,1.215,14,0.592,15,0.007,16,0.069,19,0.006,20,0.006,49,1.819,62,2.503,432,2.426,556,5.176,578,4.135,579,3.848,580,2.426,1341,5.041,1598,5.493,1624,7.119,1674,5.493,2470,6.259,2471,6.179,2472,8.727,2473,6.179,2474,6.179,2475,6.179,2476,6.179,2477,6.179]],["title/interfaces/TransferSplitIn.html",[0,0.231,554,2.891]],["body/interfaces/TransferSplitIn.html",[0,0.369,2,0.853,3,0.04,4,0.046,5,0.046,7,0.309,8,0.593,10,1.608,12,3.455,13,1.135,14,0.595,15,0.007,16,0.094,17,2.466,19,0.004,20,0.004,33,1.723,35,2.152,62,2.707,63,1.979,64,0.54,67,0.527,176,3.079,201,3.378,226,1.083,243,1.145,372,2.256,393,1.919,395,2.566,432,1.618,484,1.919,531,3.505,533,2.806,534,3.806,535,4.64,536,2.806,537,2.806,540,2.678,541,4.132,542,2.566,543,3.505,544,2.806,545,2.806,546,3.806,547,2.566,548,2.678,549,2.806,550,2.806,551,2.806,552,2.806,553,2.806,554,3.647,555,4.822,556,4.279,557,3.671,558,3.671,559,3.647,560,2.678,561,4.44,562,2.566,563,2.566,564,2.566,565,2.566,566,4.44,567,2.566,568,2.466,569,2.466,570,2.466,571,2.466,572,2.377,573,2.466,574,2.566,575,2.466,576,2.566,577,2.566,578,3.671,579,4.62,580,1.618,581,2.566,582,5.052,583,2.377,584,2.806,585,2.678,586,1.514,587,2.566,588,2.466,589,2.22,590,2.882,591,2.589,592,2.466,593,2.678]],["title/interfaces/TransferSplitOut.html",[0,0.231,2478,3.787]],["body/interfaces/TransferSplitOut.html",[0,0.339,2,1.407,3,0.066,4,0.076,5,0.076,7,0.51,8,0.824,13,1.118,14,0.577,15,0.007,16,0.076,19,0.006,20,0.006,62,2.61,2352,7.355,2478,6.633,2479,6.797,2480,9.016]],["title/modules/TranslateModule.html",[299,1.706,313,2.891]],["body/modules/TranslateModule.html",[3,0.065,4,0.076,5,0.076,15,0.007,16,0.076,19,0.006,20,0.006,64,0.687,66,0.85,67,0.608,186,4.389,187,4.205,301,2.329,313,5.044,318,2.651,319,2.481,321,2.976,322,3.179,323,2.429,324,7.199,2481,6.752]],["title/interfaces/Uri.html",[0,0.231,588,2.779]],["body/interfaces/Uri.html",[0,0.349,2,1.451,3,0.068,4,0.079,5,0.079,7,0.526,8,0.839,13,1.133,14,0.497,15,0.007,16,0.079,19,0.006,20,0.006,588,5.639,2482,7.007]],["title/components/UserComponent.html",[21,0.944,123,1.706]],["body/components/UserComponent.html",[0,0.103,3,0.02,4,0.023,5,0.039,7,0.156,8,0.349,10,0.378,13,0.443,14,0.245,15,0.007,16,0.039,19,0.003,20,0.003,21,0.898,22,0.78,23,1.353,24,0.834,25,0.815,26,0.834,31,0.661,32,3.307,33,2.564,34,1.881,36,1.323,39,0.826,45,0.841,46,1.312,48,2.121,49,1.81,55,0.498,56,1.186,58,0.489,64,0.516,66,0.262,67,0.187,77,0.797,78,1.384,79,1.353,80,0.78,81,2.065,82,0.834,83,0.834,84,0.763,85,0.834,86,0.815,87,2.6,88,0.834,89,0.78,90,0.834,91,0.78,92,0.834,93,0.763,94,0.834,95,0.78,96,0.834,97,0.78,98,0.834,99,0.78,100,0.834,101,0.763,102,1.849,103,0.834,104,0.78,105,0.834,106,0.78,107,0.834,108,0.78,109,0.834,110,0.815,111,2.734,112,0.834,113,0.78,114,0.834,115,0.763,116,0.834,117,1.267,118,1.384,119,0.78,120,0.834,121,0.78,122,0.834,123,1.889,124,0.834,125,0.763,126,0.834,127,0.763,128,0.815,129,0.763,130,0.815,131,0.834,133,1.119,136,1.8,144,1.774,152,4.235,176,0.747,185,0.854,226,1.616,362,2.864,363,1.294,364,1.243,372,2.729,375,2.964,376,2.812,390,3.689,393,1.605,428,2.473,431,1.988,432,0.815,443,1.415,462,1.415,464,1.694,469,1.49,470,1.581,471,1.581,515,3.913,516,2.812,520,2.623,578,1.858,580,2.239,583,2.966,586,1.889,591,3.447,599,4.437,600,3.078,613,4.48,626,3.064,628,3.064,631,2.812,632,2.623,635,3.064,636,2.812,646,1.35,651,2.348,659,1.157,663,1.119,664,2.461,665,1.846,666,4.412,675,3.913,681,4.571,710,1.694,711,1.694,712,3.941,883,2.623,998,1.581,1103,2.473,1306,4.571,1327,3.064,1331,2.473,1334,4.194,1361,1.694,1390,2.812,1612,1.581,1642,5.314,1647,5.067,1652,1.581,1653,1.694,1858,2.812,1866,4.571,2043,3.362,2079,1.581,2114,3.604,2347,2.812,2356,5.017,2357,1.846,2358,3.927,2359,1.846,2360,3.064,2361,3.927,2362,3.927,2363,3.927,2364,4.571,2365,1.846,2366,1.846,2367,1.846,2368,1.846,2369,1.846,2370,1.846,2371,1.846,2372,5.069,2373,1.846,2374,1.846,2375,1.846,2376,1.846,2377,1.846,2378,3.927,2379,3.064,2380,3.064,2381,3.064,2382,1.846,2383,1.846,2384,1.694,2385,1.846,2386,1.846,2387,1.846,2388,1.846,2389,1.846,2390,1.846,2391,1.846,2392,1.846,2393,1.846,2394,1.846,2395,1.846,2396,1.846,2397,1.846,2398,1.846,2399,1.846,2483,3.447,2484,2.077,2485,2.077,2486,2.077,2487,2.077,2488,2.077,2489,2.077,2490,3.447,2491,5.142,2492,2.077,2493,3.447,2494,3.447,2495,3.447,2496,3.447,2497,2.077,2498,3.447,2499,5.142,2500,3.447,2501,3.447,2502,3.447,2503,6.15,2504,3.447,2505,3.447,2506,3.447,2507,3.447,2508,3.447,2509,3.447,2510,3.447,2511,5.142,2512,2.077,2513,3.447,2514,3.447,2515,3.447,2516,3.447,2517,3.064,2518,3.447,2519,3.447,2520,3.447,2521,2.812,2522,3.447,2523,3.447,2524,3.447,2525,3.447,2526,3.447,2527,3.447,2528,2.077,2529,3.447,2530,3.064,2531,3.447,2532,3.447,2533,3.447,2534,3.447,2535,3.447,2536,3.447,2537,3.447,2538,3.447,2539,3.447,2540,3.447,2541,3.447,2542,2.077,2543,2.077,2544,2.077]],["title/interfaces/UserMeta.html",[0,0.231,2545,3.533]],["body/interfaces/UserMeta.html",[0,0.423,2,1.328,3,0.062,4,0.072,5,0.072,7,0.481,8,0.795,13,1.186,14,0.455,15,0.007,16,0.095,19,0.006,20,0.006,64,0.508,157,4.88,386,2.836,613,3.838,629,3.994,663,4.23,2545,6.456,2546,5.231,2547,7.211,2548,5.632,2549,5.231,2550,4.88,2551,5.974]],["title/modules/UserModule.html",[299,1.706,2552,3.533]],["body/modules/UserModule.html",[3,0.049,4,0.056,5,0.056,11,2.472,15,0.007,16,0.056,19,0.005,20,0.005,21,1.021,33,1.976,64,0.756,66,0.633,67,0.452,111,2.608,123,3.247,142,3.265,155,3.007,185,2.065,226,1.32,239,3.265,301,1.733,302,2.76,314,2.896,315,2.167,316,1.886,318,2.635,319,1.846,321,2.467,322,2.635,323,1.807,334,4.816,335,3.604,336,5.476,337,4.098,340,5.109,341,3.823,344,3.872,345,2.897,348,4.181,349,3.007,350,2.897,372,2.504,375,1.807,418,2.545,419,3.831,427,2.339,431,3.872,586,1.846,656,3.872,657,2.897,658,5.476,659,2.798,660,5.476,661,4.098,867,2.623,2237,4.465,2276,5.967,2277,4.465,2278,4.465,2279,5.476,2280,4.098,2284,4.465,2552,6.587,2553,4.465,2554,4.465,2555,5.023,2556,6.713,2557,5.023,2558,5.023,2559,5.967,2560,4.465,2561,6.713,2562,5.023,2563,5.023]],["title/interfaces/UserOptions.html",[0,0.231,2548,3.331]],["body/interfaces/UserOptions.html",[0,0.339,2,1.407,3,0.066,4,0.076,5,0.076,7,0.51,8,0.824,14,0.483,15,0.007,16,0.091,19,0.006,20,0.006,73,3.006,591,3.006,1942,5.545,2548,5.834,2564,6.042,2565,9.016,2566,8.014,2567,6.042]],["title/modules/UserRoutingModule.html",[299,1.706,414,3.331]],["body/modules/UserRoutingModule.html",[3,0.062,4,0.072,5,0.072,15,0.007,16,0.072,19,0.006,20,0.006,64,0.699,66,0.802,67,0.574,111,2.198,185,2.62,226,1.675,301,2.198,318,2.502,319,2.342,321,2.873,322,3.07,323,2.292,388,3.814,389,2.749,414,5.61,417,3.969,418,3.962,419,4.286,427,2.968,595,5.083,867,3.328,870,4.34,2568,6.372,2569,6.372,2570,6.372,2571,6.372]],["title/interfaces/UserState.html",[0,0.231,2551,3.533]],["body/interfaces/UserState.html",[0,0.411,2,1.246,3,0.058,4,0.068,5,0.068,7,0.452,8,0.765,13,1.198,14,0.614,15,0.007,16,0.093,19,0.006,20,0.006,64,0.477,157,6.578,386,3.822,613,5.174,629,3.746,663,4.798,2545,6.578,2546,4.907,2547,4.907,2548,6.201,2549,4.907,2550,4.578,2551,6.274]],["title/interfaces/UsersState.html",[0,0.231,2550,3.533]],["body/interfaces/UsersState.html",[0,0.421,2,1.319,3,0.062,4,0.072,5,0.072,7,0.478,8,0.792,13,1.134,14,0.601,15,0.007,16,0.095,19,0.006,20,0.006,64,0.505,157,4.85,386,2.818,613,3.814,629,5.494,663,4.214,1560,5.951,2545,5.951,2546,5.198,2547,5.198,2548,5.61,2549,5.198,2550,5.951,2551,5.951]],["title/components/VpnComponent.html",[21,0.944,125,1.706]],["body/components/VpnComponent.html",[3,0.037,4,0.043,5,0.043,7,0.286,15,0.007,16,0.043,19,0.004,20,0.004,21,1.325,22,1.429,23,2.171,24,1.528,25,1.494,26,1.528,28,1.627,29,2.881,31,1.211,32,3.571,33,2.785,34,2.424,36,2.123,39,1.325,41,3.162,45,1.59,46,1.064,56,1.186,58,0.895,59,1.831,64,0.302,66,0.479,67,0.342,77,1.461,78,2.221,79,2.171,80,1.429,81,2.872,82,1.528,83,1.528,84,1.398,85,1.528,86,1.494,87,3.139,88,1.528,89,1.429,90,1.528,91,1.429,92,1.528,93,1.398,94,1.528,95,1.429,96,1.528,97,1.429,98,1.528,99,1.429,100,1.528,101,1.398,102,1.369,103,1.528,104,1.429,105,1.528,106,1.429,107,1.528,108,1.429,109,1.528,110,1.494,111,1.313,112,1.528,113,1.429,114,1.528,115,1.398,116,1.528,117,2.032,118,2.221,119,1.429,120,1.528,121,1.429,122,1.528,123,1.398,124,1.528,125,2.628,126,1.528,127,1.398,128,1.494,129,1.398,130,1.494,131,1.528,133,2.051,136,2.888,372,1.831,387,3.968,393,3.331,394,5.131,442,3.595,609,3.968,1042,4.916,1280,4.511,2063,4.916,2079,4.209,2517,4.916,2521,5.834,2572,3.805,2573,6.515,2574,5.53,2575,3.805,2576,3.805,2577,5.53,2578,7.151,2579,4.916,2580,5.53,2581,5.53,2582,5.53,2583,7.926,2584,5.53,2585,5.53,2586,5.53,2587,5.53,2588,5.53,2589,5.53,2590,5.53,2591,7.151,2592,7.151]],["title/modules/VpnModule.html",[299,1.706,2593,3.533]],["body/modules/VpnModule.html",[3,0.059,4,0.068,5,0.068,15,0.007,16,0.068,19,0.006,20,0.006,64,0.721,66,0.764,67,0.546,125,3.346,301,2.093,302,3.119,314,3.272,315,2.618,316,2.279,318,2.978,319,2.23,321,2.788,322,2.978,323,2.183,344,4.376,345,3.501,348,4.725,349,3.633,350,3.501,656,4.376,657,3.501,2593,6.929,2594,5.395,2595,5.395,2596,6.069,2597,5.395]],["title/modules/VpnRoutingModule.html",[299,1.706,2598,3.787]],["body/modules/VpnRoutingModule.html",[3,0.062,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,21,1.292,64,0.698,66,0.8,67,0.572,125,2.868,185,2.611,226,1.669,301,2.191,318,2.494,319,2.334,321,2.868,322,3.064,323,2.285,389,2.74,417,3.956,418,3.954,419,4.28,427,2.959,867,3.317,2521,5.182,2597,5.647,2598,6.366,2599,6.352]],["title/components/WalletComponent.html",[21,0.944,127,1.706]],["body/components/WalletComponent.html",[3,0.022,4,0.026,5,0.026,7,0.171,8,0.377,10,0.99,13,0.872,14,0.534,15,0.007,16,0.026,19,0.003,20,0.003,21,0.958,22,0.856,23,1.46,24,0.915,25,0.895,26,0.915,28,1.095,29,2.084,31,0.725,32,3.355,33,2.604,34,2.517,36,1.428,39,0.891,41,2.406,45,0.556,46,1.602,48,2.218,49,1.893,55,1.304,56,1.333,58,1.596,59,1.985,63,0.77,64,0.58,66,0.287,67,0.205,73,1.645,75,2.831,77,0.875,78,1.494,79,1.46,80,0.856,81,2.185,82,0.915,83,0.915,84,0.837,85,0.915,86,0.895,87,2.832,88,0.915,89,0.856,90,0.915,91,0.856,92,0.915,93,0.837,94,0.915,95,0.856,96,0.915,97,2.547,98,0.915,99,0.856,100,0.915,101,0.837,102,1.695,103,0.915,104,0.856,105,0.915,106,0.856,107,0.915,108,0.856,109,0.915,110,0.895,111,0.786,112,0.915,113,0.856,114,0.915,115,0.837,116,0.915,117,1.367,118,1.494,119,0.856,120,0.915,121,0.856,122,0.915,123,0.837,124,0.915,125,0.837,126,0.915,127,1.999,128,0.895,129,0.837,130,0.895,131,0.915,133,1.228,135,3.587,136,1.943,139,3.689,144,2.34,148,4.14,160,3.246,173,3.587,176,1.338,179,1.552,182,1.735,192,1.481,193,1.19,198,1.364,243,0.634,316,1.397,360,3.256,361,1.552,375,1.338,400,0.937,432,2.955,483,2.317,484,2.792,580,1.46,586,1.999,589,2.005,642,2.146,664,3.582,712,2.072,725,3.035,726,3.035,727,3.035,731,4.38,797,3.587,803,4.14,827,1.859,833,3.903,1170,1.859,1401,3.705,1579,3.705,1580,3.307,1581,3.307,1582,3.307,1583,3.903,1619,3.035,1629,3.307,1704,3.307,1750,2.026,1873,1.735,1886,3.035,1887,1.859,1934,3.587,1936,3.035,1937,3.035,1938,3.035,1939,1.735,2007,3.845,2432,3.307,2449,1.481,2455,2.026,2600,2.279,2601,4.714,2602,3.72,2603,4.714,2604,4.714,2605,4.714,2606,4.714,2607,4.438,2608,3.72,2609,3.72,2610,3.72,2611,2.279,2612,3.72,2613,2.279,2614,3.72,2615,2.279,2616,2.279,2617,2.279,2618,3.72,2619,2.279,2620,3.72,2621,2.279,2622,2.279,2623,2.279,2624,2.279,2625,5.44,2626,5.44,2627,3.72,2628,3.72,2629,3.72,2630,2.279,2631,2.279,2632,2.279,2633,2.279,2634,2.279,2635,2.026,2636,2.279,2637,2.279,2638,2.279,2639,2.026,2640,2.279,2641,2.279,2642,2.279,2643,2.279,2644,2.279,2645,2.279,2646,2.279,2647,2.279,2648,2.279,2649,2.279,2650,2.279,2651,2.279,2652,2.279,2653,4.714,2654,3.72]],["title/injectables/WalletEffects.html",[456,1.315,2655,4.127]],["body/injectables/WalletEffects.html",[3,0.027,4,0.031,5,0.031,7,0.21,8,0.444,9,3.677,10,0.509,13,0.786,14,0.383,15,0.007,16,0.031,19,0.003,20,0.003,34,2.252,45,0.682,46,1.355,48,2.29,49,1.953,50,3.142,55,0.67,56,0.509,64,0.682,66,0.352,67,0.251,144,2.539,158,3.232,159,4.986,160,3.523,188,3.572,189,2.127,190,1.74,191,1.74,192,1.816,193,1.459,198,1.673,243,2.228,316,1.644,328,3.807,330,1.816,360,3.659,361,1.903,400,1.149,432,3.147,456,1.24,458,1.205,586,2.587,589,2.91,590,2.155,591,2.703,731,4.521,735,1.673,806,3.51,811,2.127,812,2.127,1011,5.415,1095,2.005,1096,5.19,1098,6.391,1099,6.216,1101,2.279,1103,3.142,1112,2.484,1118,3.892,1119,3.892,1120,3.892,1124,2.484,1125,4.405,1127,3.037,1132,3.892,1133,3.892,1139,2.279,1140,1.816,1141,2.484,1144,2.484,1147,3.892,1576,3.678,1578,3.142,1579,2.983,1583,3.142,1586,3.51,1892,3.892,2267,3.892,2269,3.892,2449,1.816,2635,2.484,2655,3.892,2656,2.794,2657,5.4,2658,5.4,2659,5.4,2660,5.4,2661,4.379,2662,4.379,2663,4.379,2664,4.379,2665,2.794,2666,4.379,2667,7.041,2668,4.379,2669,2.794,2670,4.379,2671,4.379,2672,2.794,2673,4.379,2674,4.379,2675,4.379,2676,6.638,2677,4.379,2678,5.4,2679,6.112,2680,4.379,2681,6.112,2682,6.112,2683,4.379,2684,6.112,2685,6.112,2686,4.379,2687,4.379,2688,4.379,2689,4.379,2690,4.379,2691,2.794,2692,2.794,2693,2.794,2694,2.794,2695,2.794]],["title/modules/WalletModule.html",[299,1.706,2230,3.331]],["body/modules/WalletModule.html",[3,0.035,4,0.041,5,0.041,11,1.786,15,0.007,16,0.041,19,0.004,20,0.004,21,0.738,22,3.268,64,0.75,66,0.457,67,0.327,99,3.268,104,3.268,113,3.268,121,3.268,127,2.961,142,2.359,155,2.172,185,1.492,190,2.26,191,2.26,226,0.954,239,2.359,301,1.252,302,2.196,313,4.854,314,2.304,315,1.565,316,1.363,318,2.097,319,1.963,321,1.963,322,2.097,323,1.305,334,3.833,335,2.604,338,3.833,339,2.604,340,4.066,341,2.762,344,3.081,345,2.093,346,4.358,347,2.96,348,3.327,349,2.172,350,2.093,375,1.305,389,2.304,418,1.839,419,3.212,427,1.69,432,1.425,484,1.69,656,3.081,657,2.093,658,4.358,659,2.022,660,4.358,661,2.96,867,1.895,1745,5.592,1916,3.472,2230,6.774,2233,4.358,2234,2.96,2241,3.226,2279,4.358,2280,2.96,2450,2.96,2451,2.96,2559,4.749,2560,3.226,2696,3.226,2697,3.226,2698,3.226,2699,3.629,2700,3.629,2701,3.629,2702,5.342,2703,3.629,2704,3.629,2705,3.629,2706,3.629,2707,3.629,2708,3.629,2709,5.342,2710,3.629,2711,3.629,2712,3.629,2713,3.629,2714,3.629]],["title/modules/WalletRoutingModule.html",[299,1.706,415,3.331]],["body/modules/WalletRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,34,1.937,64,0.697,66,0.797,67,0.57,185,2.603,226,1.664,301,2.184,318,2.486,319,2.327,321,2.862,322,3.058,323,2.278,388,3.791,389,2.732,415,5.589,417,3.944,418,3.946,419,4.274,427,2.949,595,5.484,598,4.543,867,3.307,869,4.82,870,4.313,2715,6.333,2716,6.333,2717,6.333]],["title/injectables/WalletRpcService.html",[399,3.018,456,1.315]],["body/injectables/WalletRpcService.html",[1,4.65,3,0.015,4,0.018,5,0.018,7,0.271,8,0.276,9,1.882,10,1.464,13,0.733,14,0.605,15,0.007,16,0.018,19,0.002,20,0.002,34,1.626,39,0.653,45,0.384,46,1.64,48,0.543,49,0.464,55,1.927,56,1.464,58,2.163,62,1.288,64,0.452,66,0.198,67,0.142,144,1.243,160,2.055,198,1.632,217,2.423,226,0.947,235,0.909,243,2.342,260,1.773,328,2.675,330,1.024,372,0.522,386,1.205,392,1.857,394,1.956,396,4.638,398,1.698,399,1.772,400,0.648,440,0.798,456,0.772,458,0.679,472,0.823,543,2.905,554,3.023,578,1.469,586,0.579,587,1.698,588,2.905,589,3.072,592,3.412,642,5.399,663,1.469,676,1.13,731,2.454,735,0.943,738,2.423,782,7.558,804,1.199,806,1.772,812,1.199,817,1.13,883,2.075,895,2.224,896,1.285,897,1.285,898,1.285,899,1.285,900,1.285,901,1.285,902,1.199,903,2.743,905,1.285,906,1.285,907,1.4,1009,1.073,1424,4.724,1451,1.073,1494,2.454,1557,1.285,1559,2.423,1560,4.045,1561,3.959,1568,1.285,1572,3.959,1574,1.285,1576,3.306,1586,1.024,1588,3.306,1599,2.94,1616,3.959,1621,1.285,1631,3.959,1668,3.959,2081,3.959,2084,1.285,2098,1.199,2099,1.285,2110,4.09,2156,3.503,2305,1.285,2337,1.285,2339,3.959,2341,2.423,2349,1.285,2444,2.224,2449,1.024,2467,3.959,2470,1.285,2478,1.285,2607,3.503,2718,1.575,2719,2.726,2720,4.295,2721,2.726,2722,2.726,2723,4.295,2724,2.726,2725,2.726,2726,2.726,2727,3.604,2728,3.604,2729,2.726,2730,2.726,2731,3.604,2732,4.295,2733,4.295,2734,2.726,2735,2.726,2736,2.726,2737,1.575,2738,2.726,2739,1.575,2740,2.726,2741,1.575,2742,1.575,2743,2.726,2744,1.575,2745,1.575,2746,2.726,2747,2.726,2748,1.575,2749,1.575,2750,2.726,2751,1.575,2752,2.726,2753,1.575,2754,2.726,2755,2.726,2756,1.575,2757,1.575,2758,1.575,2759,1.575,2760,1.575,2761,2.726,2762,1.575,2763,2.726,2764,1.575,2765,2.726,2766,4.853,2767,1.575,2768,2.726,2769,1.575,2770,2.726,2771,1.575,2772,2.726,2773,1.575,2774,1.575,2775,1.575,2776,1.575,2777,2.423,2778,1.575,2779,1.575,2780,2.726,2781,1.575,2782,1.575,2783,2.726,2784,1.575,2785,2.726,2786,1.575,2787,2.726,2788,1.575,2789,1.575,2790,1.575,2791,1.575,2792,1.575,2793,1.575,2794,1.575,2795,1.575,2796,1.575,2797,1.575,2798,1.575,2799,1.575,2800,1.575,2801,1.575,2802,1.575,2803,1.575,2804,1.575,2805,1.575,2806,1.575,2807,1.575,2808,1.575,2809,1.575,2810,1.575,2811,1.575,2812,1.575,2813,1.575,2814,1.575,2815,1.575,2816,1.575,2817,1.575,2818,1.575]],["title/injectables/WalletService.html",[360,2.779,456,1.315]],["body/injectables/WalletService.html",[3,0.033,4,0.039,5,0.069,7,0.259,8,0.521,10,1.241,13,0.79,14,0.543,15,0.007,16,0.039,19,0.004,20,0.004,34,2.547,35,1.799,39,1.232,45,0.841,46,1.602,48,1.188,49,1.014,50,3.688,55,1.634,56,1.241,58,2.091,63,1.737,64,0.578,66,0.434,67,0.463,72,3.912,144,2.351,198,2.062,243,2.203,360,3.077,362,3.797,363,2.146,364,2.062,372,1.141,375,1.239,392,3.501,394,3.688,396,3.547,397,4.193,399,4.431,400,1.416,440,1.746,442,3.341,456,1.456,458,1.486,472,1.799,484,3.794,589,4.271,642,4.412,731,4.643,735,3.68,911,3.063,1008,4.569,1009,2.347,1477,3.912,1576,4.643,1841,2.622,1884,6.059,1887,4.193,2110,5.685,2156,5.561,2435,3.063,2449,2.239,2461,3.063,2607,5.561,2639,3.063,2777,6.482,2819,3.445,2820,6.817,2821,5.14,2822,6.817,2823,3.445,2824,5.14,2825,3.445,2826,3.445,2827,5.14,2828,3.445,2829,5.14,2830,3.445,2831,5.14,2832,3.445,2833,3.445,2834,3.445,2835,5.14,2836,3.445,2837,3.445,2838,3.445,2839,3.445,2840,3.445,2841,3.445,2842,3.445,2843,3.445,2844,3.445,2845,3.445,2846,3.445,2847,3.445,2848,3.445,2849,3.445,2850,3.445]],["title/classes/WalletState.html",[67,0.418,2851,3.787]],["body/classes/WalletState.html",[0,0.336,3,0.049,4,0.057,5,0.057,7,0.38,8,0.684,13,1.138,14,0.539,15,0.007,16,0.091,19,0.005,20,0.005,28,2.233,34,2.579,46,1.46,48,2.618,49,2.233,56,1.228,62,2.277,64,0.535,67,0.607,260,3.32,372,1.676,386,2.983,484,3.77,532,3.447,580,1.987,754,2.819,785,3.289,939,5.503,1082,3.029,1578,3.631,1586,4.385,1588,3.447,1791,4.128,1897,5.445,2449,3.289,2851,5.503,2852,4.498,2853,6.191,2854,7.195,2855,7.195,2856,5.06,2857,5.06,2858,5.06,2859,4.498,2860,5.997,2861,5.997,2862,4.498,2863,4.498,2864,4.498]],["title/interfaces/WalletsState.html",[0,0.231,2853,3.787]],["body/interfaces/WalletsState.html",[0,0.343,2,1.08,3,0.051,4,0.059,5,0.059,7,0.392,8,0.697,13,1.189,14,0.605,15,0.007,16,0.092,19,0.005,20,0.005,28,2.026,34,2.605,56,1.253,62,2.311,64,0.545,67,0.619,260,3.387,372,1.727,386,3.044,484,3.966,580,2.048,785,3.39,939,5.615,1082,3.122,1560,5.238,1578,3.742,1586,4.474,1588,3.553,1791,4.255,1897,5.527,2449,3.39,2851,4.255,2852,4.636,2853,6.284,2854,7.57,2855,7.57,2859,4.636,2860,6.118,2861,6.118,2862,4.636,2863,4.636,2864,4.636]],["title/injectables/WebStorageService.html",[456,1.315,503,3.787]],["body/injectables/WebStorageService.html",[3,0.033,4,0.038,5,0.038,7,0.255,8,0.515,10,1.319,13,1.165,14,0.54,15,0.007,16,0.038,19,0.004,20,0.004,28,0.999,33,0.999,39,1.218,46,1.625,48,2.102,49,2.321,55,1.736,56,1.319,58,1.855,59,1.683,62,1.828,63,2.059,64,0.403,66,0.427,67,0.305,87,1.247,144,3.028,160,2.432,226,1.601,243,2.254,375,1.221,396,2.932,440,1.719,443,4.15,456,1.44,458,1.464,472,1.772,503,4.146,524,3.017,546,3.961,580,3.255,618,5.519,646,3.961,651,3.462,754,4.237,1082,3.647,1130,4.854,1401,5.648,1501,4.518,1532,5.416,1547,3.017,1548,3.017,1549,3.017,1637,2.768,2098,2.583,2099,2.768,2865,8.573,2866,3.394,2867,6.093,2868,6.093,2869,6.766,2870,5.082,2871,5.082,2872,5.082,2873,3.394,2874,3.394,2875,5.082,2876,5.082,2877,5.082,2878,3.394,2879,5.082,2880,3.394,2881,3.394,2882,3.394,2883,5.082,2884,3.394,2885,5.082,2886,3.394,2887,5.082,2888,3.394,2889,3.394,2890,3.394,2891,3.394,2892,3.394,2893,6.766,2894,3.394,2895,5.082,2896,5.082,2897,3.394,2898,3.394,2899,3.394,2900,3.394,2901,3.394,2902,3.394,2903,3.394,2904,3.394,2905,3.394,2906,3.394,2907,3.394,2908,3.394,2909,3.394,2910,3.394,2911,3.394,2912,3.394,2913,3.394,2914,3.394]],["title/injectables/WebsocketService.html",[456,1.315,1175,3.787]],["body/injectables/WebsocketService.html",[3,0.045,4,0.052,5,0.052,7,0.35,8,0.646,10,0.848,13,0.935,14,0.453,15,0.007,16,0.072,19,0.005,20,0.005,39,1.528,45,1.775,46,1.629,55,1.116,56,0.848,58,1.841,59,2.112,64,0.576,66,0.586,67,0.419,139,3.479,144,2.509,226,1.676,243,1.773,440,2.359,454,3.544,456,1.807,458,2.008,472,2.431,775,3.544,1082,2.787,1137,4.139,1175,5.202,1303,3.798,1384,3.798,1524,3.798,2915,4.656,2916,6.465,2917,7.823,2918,7.823,2919,7.823,2920,6.377,2921,6.377,2922,4.656,2923,4.656,2924,8.195,2925,4.656,2926,6.377,2927,4.656,2928,7.273,2929,4.656,2930,4.656,2931,7.273,2932,6.377,2933,7.273,2934,4.656,2935,4.656,2936,4.656,2937,4.656,2938,4.656,2939,4.656,2940,4.656,2941,4.656,2942,4.656,2943,7.273,2944,4.656,2945,4.656,2946,4.656,2947,4.656,2948,4.656,2949,4.656,2950,4.656,2951,4.656,2952,4.656]],["title/contributing.html",[405,3.151,2953,3.434,2954,3.863]],["body/contributing.html",[15,0.006,19,0.006,20,0.006,1295,6.615,2384,6.07,2530,6.615,2955,7.441,2956,7.441,2957,7.441]],["title/dependencies.html",[302,2.299,2958,3.863]],["body/dependencies.html",[15,0.007,19,0.004,20,0.004,34,1.289,66,0.531,160,3.3,185,1.732,186,4.483,187,3.705,190,4.295,191,2.624,193,2.2,198,2.522,302,1.732,320,4.052,323,1.516,349,2.522,350,2.431,358,3.746,359,3.746,368,3.437,369,3.437,454,3.207,460,3.746,462,2.87,469,3.023,470,3.207,471,3.207,478,6.13,497,3.746,498,5.289,540,2.739,572,2.431,659,2.347,735,2.522,770,3.437,1016,3.746,1025,3.746,1026,3.746,1027,5.289,1029,3.746,1140,2.739,1193,5.249,1194,3.437,1246,3.746,1408,3.746,1410,3.746,1685,3.746,1707,3.746,1957,3.437,2015,3.437,2051,3.746,2057,3.746,2058,3.746,2098,3.207,2240,5.289,2450,3.437,2451,3.437,2916,5.289,2959,4.214,2960,8.874,2961,4.214,2962,8.874,2963,4.214,2964,4.214,2965,4.214,2966,4.214,2967,4.214,2968,4.214,2969,4.214,2970,4.214,2971,4.214,2972,4.214,2973,4.214,2974,4.214,2975,4.214,2976,4.214,2977,4.214,2978,4.214,2979,4.214,2980,4.214,2981,4.214,2982,4.214,2983,4.214,2984,4.214,2985,4.214,2986,4.214,2987,4.214,2988,4.214,2989,4.214,2990,4.214,2991,4.214,2992,4.214,2993,4.214,2994,4.214,2995,4.214,2996,4.214,2997,4.214,2998,4.214,2999,5.95,3000,4.214,3001,4.214,3002,4.214,3003,4.214,3004,4.214,3005,4.214,3006,4.214,3007,4.214,3008,4.214,3009,4.214,3010,4.214,3011,4.214,3012,4.214,3013,4.214,3014,4.214,3015,4.214,3016,4.214,3017,4.214,3018,5.95,3019,4.214,3020,4.214,3021,4.214,3022,4.214,3023,4.214,3024,4.214]],["title/miscellaneous/enumerations.html",[3025,2.94,3026,4.97]],["body/miscellaneous/enumerations.html",[3,0.063,7,0.491,15,0.007,19,0.006,20,0.006,49,2.683,63,2.209,71,4.248,73,3.512,295,4.974,591,2.89,1009,4.452,1082,3.912,1101,5.331,1143,6.478,1351,4.974,1935,5.331,1939,6.044,1943,5.331,1944,5.331,1945,5.331,2564,5.81,2566,7.059,2567,5.81,3025,4.974,3026,5.81,3027,6.536,3028,6.536,3029,5.81,3030,5.81,3031,5.81,3032,6.536,3033,6.536,3034,6.536]],["title/miscellaneous/functions.html",[3025,2.94,3035,4.97]],["body/miscellaneous/functions.html",[7,0.347,10,1.676,14,0.554,15,0.007,19,0.005,20,0.005,55,2.206,56,1.676,58,1.493,317,4.111,320,4.937,328,3.953,371,4.111,382,5.642,480,4.111,491,6.442,513,5.642,514,8.406,517,6.32,610,4.111,806,3.006,1103,6.809,1143,5.178,1151,4.111,1158,7.83,1842,5.178,2064,5.178,3025,3.52,3029,4.111,3030,4.111,3031,4.111,3035,4.111,3036,4.625,3037,4.625,3038,4.625,3039,4.625,3040,8.649,3041,4.625,3042,6.348,3043,4.625,3044,4.625,3045,4.625,3046,4.625,3047,4.625,3048,4.625,3049,4.625,3050,4.625,3051,4.625,3052,4.625,3053,4.625,3054,4.625,3055,4.625,3056,4.625,3057,4.625,3058,6.348,3059,4.625,3060,4.625,3061,4.625,3062,4.625]],["title/index.html",[7,0.29,405,3.151,2953,3.434]],["body/index.html",[0,0.333,15,0.006,19,0.006,20,0.006,387,4.797,390,4.797,431,4.644,609,6.686,1524,5.454,1867,7.679,2077,5.943,3063,8.051,3064,6.686,3065,6.686,3066,6.686,3067,6.686,3068,8.051,3069,9.507,3070,6.686,3071,6.686,3072,6.686,3073,6.686,3074,6.686]],["title/modules.html",[301,2.195]],["body/modules.html",[15,0.005,19,0.005,20,0.005,187,5.996,300,3.695,301,1.776,307,3.695,308,3.695,309,3.508,310,3.695,311,3.695,312,3.695,313,3.207,410,3.695,411,3.695,412,3.695,413,3.695,414,3.695,415,3.695,448,3.919,855,3.919,860,3.695,1619,7.365,1662,3.695,1745,3.695,1916,3.347,2033,3.919,2226,3.695,2230,3.695,2271,3.919,2552,3.919,2579,8.683,2593,3.919,2598,4.201,3075,9.628,3076,9.628,3077,9.028]],["title/overview.html",[3078,5.657]],["body/overview.html",[2,0.519,15,0.007,19,0.003,20,0.003,22,2.649,23,0.984,73,1.776,80,0.941,84,2.779,89,2.363,91,2.649,93,1.847,95,2.649,97,2.649,99,2.649,101,1.847,104,2.649,106,2.649,108,1.888,113,2.649,115,1.847,117,1.847,119,2.649,121,2.649,123,1.847,125,1.847,127,1.847,129,2.779,300,6.301,301,0.864,302,1.651,303,2.228,304,2.228,305,2.228,306,2.228,307,6.036,308,4.515,309,4.806,310,3.607,311,5.261,312,5.261,313,4.183,314,1.733,315,1.081,316,0.941,408,2.228,409,2.228,410,3.607,411,3.607,412,4.515,413,3.607,414,3.607,415,3.607,448,4.79,449,2.228,458,1.081,532,1.707,594,2.228,652,2.228,653,2.228,798,4.091,855,5.581,856,2.228,857,2.228,858,2.228,859,2.228,860,5.261,978,2.228,981,2.228,1252,2.228,1253,2.228,1254,2.228,1443,5.37,1444,1.445,1458,5.37,1590,5.37,1603,5.37,1662,4.819,1663,2.228,1664,2.228,1665,2.228,1680,5.37,1745,4.819,1746,2.228,1747,2.228,1748,2.228,1916,5.952,1917,2.228,1918,2.228,1919,2.228,1920,5.37,1921,5.37,1922,5.37,1923,5.37,1951,3.607,1967,2.228,1968,2.228,1969,2.228,1970,2.228,2033,4.377,2034,2.228,2035,2.228,2190,2.228,2226,5.688,2227,2.228,2228,2.228,2229,2.228,2230,6.443,2271,5.112,2272,2.228,2274,2.228,2329,2.228,2330,2.228,2331,2.228,2552,4.377,2553,2.228,2554,2.228,2593,4.377,2594,2.228,2595,2.228,2696,2.228,2697,2.228,2698,2.228,3078,2.228,3079,2.506,3080,2.506,3081,2.506,3082,2.506,3083,2.506,3084,2.506]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":63,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["0\">{{error",{"_index":1656,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.1",{"_index":1807,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["0.1.2",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["0.2.4",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":780,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["0000000000000000000000000000000000000000000000000000000000000000",{"_index":18,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["1",{"_index":73,"title":{"injectables/Effects-1.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserOptions.html":{},"components/WalletComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1791,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["10.0.0",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["1000",{"_index":844,"title":{},"body":{"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/HashRatePipe.html":{},"components/RootComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["10000",{"_index":2862,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100000000).tofixed((8",{"_index":2428,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["100vh",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["12.0.0",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["12.0.1",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":1829,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["13",{"_index":1233,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["13.0.0",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["130",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["14.0.0",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1904,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["151",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":547,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"pipes/HashLinkPipe.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["179211/@${slug}`).then(function",{"_index":2024,"title":{},"body":{"components/PostComponent.html":{}}}],["181",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["1c9ea3",{"_index":1819,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["2",{"_index":71,"title":{},"body":{"components/AddComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":2097,"title":{},"body":{"interfaces/Response.html":{}}}],["2.0.0",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3082,"title":{},"body":{"overview.html":{}}}],["20.0.0",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":2494,"title":{},"body":{"components/UserComponent.html":{}}}],["210px",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":3081,"title":{},"body":{"overview.html":{}}}],["24",{"_index":2415,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["242",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["242628",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":1416,"title":{},"body":{"modules/DataModule.html":{}}}],["255",{"_index":1806,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["256",{"_index":1365,"title":{},"body":{"injectables/CryptService.html":{}}}],["25vh",{"_index":968,"title":{},"body":{"directives/ChartDirective.html":{}}}],["27",{"_index":3080,"title":{},"body":{"overview.html":{}}}],["298px",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1351,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1906,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["30.416",{"_index":2418,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["30000",{"_index":940,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["30vh",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["32",{"_index":573,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["365",{"_index":2420,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["36963",{"_index":2790,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["4",{"_index":1353,"title":{},"body":{"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["4.1.0",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["4.15.2",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["4.4.4",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["4096",{"_index":1370,"title":{},"body":{"injectables/CryptService.html":{}}}],["5",{"_index":2190,"title":{},"body":{"components/RootComponent.html":{},"overview.html":{}}}],["5.0.0",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1818,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["545",{"_index":2422,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["54px",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["56",{"_index":3084,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2410,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["64",{"_index":548,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["64px",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1357,"title":{},"body":{"injectables/CryptService.html":{}}}],["7.0.0",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1238,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/TransactionsComponent.html":{}}}],["838488",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":3083,"title":{},"body":{"overview.html":{}}}],["9.1.0",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["9px",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["_(ツ)_",{"_index":1601,"title":{},"body":{"pipes/HashLinkPipe.html":{},"pipes/ShruggiePipe.html":{}}}],["access",{"_index":608,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["accessibility",{"_index":2300,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["accessors",{"_index":1501,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebStorageService.html":{}}}],["account_balance_wallet",{"_index":726,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["accounts",{"_index":1306,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["action",{"_index":1103,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/UserComponent.html":{},"injectables/WalletEffects.html":{},"miscellaneous/functions.html":{}}}],["actionreducer",{"_index":491,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":492,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":1096,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["actionsblocklist",{"_index":1418,"title":{},"body":{"modules/DataModule.html":{}}}],["activatedroute",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroute.firstchild",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":603,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["acts",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["adapter",{"_index":1026,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["add",{"_index":35,"title":{},"body":{"components/AddComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/FileSystemService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/PluginsService.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{}}}],["add'},{'name",{"_index":83,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["add.component.html",{"_index":37,"title":{},"body":{"components/AddComponent.html":{}}}],["add_box",{"_index":74,"title":{},"body":{"components/AddComponent.html":{}}}],["addaddressbook",{"_index":1,"title":{"interfaces/AddAddressBook.html":{}},"body":{"interfaces/AddAddressBook.html":{},"injectables/WalletRpcService.html":{}}}],["addaddressbook(x",{"_index":2736,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["addcomponent",{"_index":22,"title":{"components/AddComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["adding",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["addon",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["addoptions",{"_index":749,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["addoptions(overrides",{"_index":753,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["address",{"_index":9,"title":{"interfaces/Address.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["adds",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adduser",{"_index":2364,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["addwallet",{"_index":1885,"title":{},"body":{"components/OpenComponent.html":{}}}],["adjust",{"_index":3057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adjustments",{"_index":1002,"title":{},"body":{"injectables/ChartService.html":{}}}],["afterviewinit",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["again",{"_index":1655,"title":{},"body":{"components/LoginComponent.html":{}}}],["ago",{"_index":2423,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["algorithm",{"_index":585,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["alias",{"_index":2066,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["allow",{"_index":1294,"title":{},"body":{"injectables/CryptService.html":{}}}],["alpha(0.2",{"_index":1051,"title":{},"body":{"injectables/ChartService.html":{}}}],["already",{"_index":1856,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["alt_blocks_count",{"_index":915,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["always",{"_index":1279,"title":{},"body":{"injectables/CryptService.html":{}}}],["amount",{"_index":1423,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["amp",{"_index":2492,"title":{},"body":{"components/UserComponent.html":{}}}],["angular",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["angular/compiler",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":66,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":1957,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":659,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/card",{"_index":657,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/checkbox",{"_index":2560,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/core",{"_index":2557,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/dialog",{"_index":1433,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{}}}],["angular/material/divider",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/expansion",{"_index":2703,"title":{},"body":{"modules/WalletModule.html":{}}}],["angular/material/form",{"_index":2277,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/input",{"_index":661,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/list",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/menu",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":2237,"title":{},"body":{"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":2280,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/sidenav",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":2234,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/toolbar",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/tooltip",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["angular/platform",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":1430,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["animation",{"_index":766,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animationduration",{"_index":768,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animations",{"_index":770,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"dependencies.html":{}}}],["ansi",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["any):string|null",{"_index":2908,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["anyone",{"_index":2524,"title":{},"body":{"components/UserComponent.html":{}}}],["anything",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1524,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebsocketService.html":{},"index.html":{}}}],["apiurl",{"_index":1532,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["app",{"_index":87,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["app'},{'name",{"_index":85,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["app.component",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":455,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app.service",{"_index":1346,"title":{},"body":{"injectables/CryptService.html":{}}}],["app/pipes/crypto/hashlink.pipe",{"_index":1933,"title":{},"body":{"modules/PipesModule.html":{}}}],["app/pipes/crypto/tocoin.pipe",{"_index":1932,"title":{},"body":{"modules/PipesModule.html":{}}}],["app/pipes/pipes.module",{"_index":2241,"title":{},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["app/plugins/plugins.component",{"_index":1972,"title":{},"body":{"modules/PluginsModule.html":{}}}],["app_config",{"_index":467,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["app_config.production",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/DataModule.html":{}}}],["appcomponent",{"_index":84,"title":{"components/AppComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["appfilesystem",{"_index":1505,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["application",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"index.html":{}}}],["application/x",{"_index":897,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["applicationref",{"_index":1976,"title":{},"body":{"injectables/PluginsService.html":{}}}],["applies",{"_index":1000,"title":{},"body":{"injectables/ChartService.html":{}}}],["appmodule",{"_index":300,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":307,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":448,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":457,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CryptService.html":{}}}],["appstate",{"_index":479,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{}}}],["arg",{"_index":2766,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["args",{"_index":1683,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["armored",{"_index":1375,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredkey",{"_index":1388,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredmessage",{"_index":1394,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoured",{"_index":1269,"title":{},"body":{"injectables/CryptService.html":{}}}],["array",{"_index":1337,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{}}}],["assert",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["async",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["atob",{"_index":1547,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["atob(dat",{"_index":1553,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["atob(data[1",{"_index":1202,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["atob(state",{"_index":521,"title":{},"body":{"interfaces/AppState.html":{}}}],["atomic",{"_index":531,"title":{"classes/Atomic.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["atomic(this.times(1e8",{"_index":551,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["attach",{"_index":1173,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/PluginsService.html":{}}}],["attached",{"_index":2074,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["auth",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":2359,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auth/route.guard",{"_index":2569,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["authenticated",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2516,"title":{},"body":{"components/UserComponent.html":{}}}],["authguard",{"_index":595,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["authmodule",{"_index":308,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2006,"title":{},"body":{"components/PostComponent.html":{}}}],["authservice",{"_index":599,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auto",{"_index":1248,"title":{},"body":{"components/ConsoleComponent.html":{},"interfaces/ProfileState.html":{}}}],["automatically",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["autosave_current",{"_index":2118,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["available",{"_index":1619,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{},"components/WalletComponent.html":{},"modules.html":{}}}],["avatar",{"_index":2067,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["await",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["aware",{"_index":1283,"title":{},"body":{"injectables/CryptService.html":{}}}],["away",{"_index":2398,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["axios",{"_index":2098,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["axios.post(`${this.apiurl}/${cmd",{"_index":2909,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["axios.post(url",{"_index":2100,"title":{},"body":{"interfaces/Response.html":{}}}],["b",{"_index":1242,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["backend",{"_index":2869,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd",{"_index":2873,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd:string",{"_index":2907,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["background",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["backgroundcolor",{"_index":1761,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["backup",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{},"components/BackupComponent.html":{}}}],["backup'},{'name",{"_index":88,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["backup.component.html",{"_index":722,"title":{},"body":{"components/BackupComponent.html":{}}}],["backupcomponent",{"_index":86,"title":{"components/BackupComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["balance",{"_index":731,"title":{"interfaces/Balance.html":{}},"body":{"interfaces/Balance.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["bar",{"_index":2562,"title":{},"body":{"modules/UserModule.html":{}}}],["basechartconfigservice",{"_index":746,"title":{"injectables/BaseChartConfigService.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:12",{"_index":1770,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:121",{"_index":1758,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:16",{"_index":1764,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:17",{"_index":1769,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:18",{"_index":1763,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:31",{"_index":1756,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:61",{"_index":1759,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["before",{"_index":568,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["below",{"_index":2508,"title":{},"body":{"components/UserComponent.html":{}}}],["below_amount",{"_index":2342,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["benefit",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta.35",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1036,"title":{},"body":{"injectables/ChartService.html":{}}}],["big",{"_index":535,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["big.js",{"_index":540,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["bigger",{"_index":1317,"title":{},"body":{"injectables/CryptService.html":{}}}],["biggercontentfont",{"_index":2293,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["binaries",{"_index":886,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["binary",{"_index":1377,"title":{},"body":{"injectables/CryptService.html":{}}}],["black",{"_index":1454,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["blank",{"_index":2477,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["block",{"_index":1565,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/RestoreWallet.html":{}}}],["block.age",{"_index":840,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.hash",{"_index":841,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.height",{"_index":842,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.timestamp",{"_index":843,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block_height",{"_index":1915,"title":{},"body":{"interfaces/Payment.html":{}}}],["blockchain",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["blockchain.component",{"_index":862,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain.component.html",{"_index":800,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchain.component.scss",{"_index":799,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchaincomponent",{"_index":89,"title":{"components/BlockchainComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["blockchainmodule",{"_index":855,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainroutingmodule",{"_index":410,"title":{"modules/BlockchainRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":354,"title":{"injectables/BlockchainService.html":{}},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["blocks",{"_index":567,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["blocks.headings.age",{"_index":836,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.hash",{"_index":837,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.height",{"_index":838,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.time",{"_index":839,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.title",{"_index":835,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["bootstrap",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["bootstrap#readme",{"_index":2628,"title":{},"body":{"components/WalletComponent.html":{}}}],["bootstrap.git",{"_index":2627,"title":{},"body":{"components/WalletComponent.html":{}}}],["bootstrap/ng",{"_index":1707,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["border",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["bordercolor",{"_index":1762,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["borderwidth",{"_index":779,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["bottom",{"_index":1781,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["bounds",{"_index":1796,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["box",{"_index":850,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["brain",{"_index":1311,"title":{},"body":{"injectables/CryptService.html":{}}}],["browse",{"_index":2579,"title":{},"body":{"components/VpnComponent.html":{},"modules.html":{}}}],["browser",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"components/PluginsComponent.html":{},"modules/TranslateModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["browserify",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/TranslateModule.html":{}}}],["browsermodule.withservertransition({appid",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa",{"_index":1548,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["btoa(data",{"_index":1555,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["btoa(state",{"_index":518,"title":{},"body":{"interfaces/AppState.html":{}}}],["build",{"_index":3068,"title":{},"body":{"index.html":{}}}],["builddocumentation",{"_index":3072,"title":{},"body":{"index.html":{}}}],["building",{"_index":2538,"title":{},"body":{"components/UserComponent.html":{}}}],["buildtype",{"_index":801,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["button.install",{"_index":2196,"title":{},"body":{"components/RootComponent.html":{}}}],["bypassed",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["byte/64",{"_index":574,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["bytebuffer",{"_index":1549,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["calc(99vh",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["calculated",{"_index":560,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["call",{"_index":2876,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["callback",{"_index":784,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["callbacks",{"_index":790,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["called",{"_index":2943,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["canactivate",{"_index":598,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["canactivate(route",{"_index":602,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cant",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canvas",{"_index":1251,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["capital",{"_index":2054,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["caretsize",{"_index":1811,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["catch",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/FileSystemService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["catcherror",{"_index":1141,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["catcherror((error",{"_index":1132,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["chain",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{}}}],["chain'},{'name",{"_index":90,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["chain.chainstate",{"_index":485,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain.reducer",{"_index":512,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain/explorer/${type}/${content",{"_index":1600,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["chaingetinfo",{"_index":813,"title":{"interfaces/ChainGetInfo.html":{}},"body":{"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/RootComponent.html":{}}}],["chaininfo",{"_index":2147,"title":{},"body":{"components/RootComponent.html":{}}}],["chainrpc",{"_index":874,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainrpc(method",{"_index":880,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainsetgetinfo",{"_index":815,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["chance",{"_index":1400,"title":{},"body":{"injectables/CryptService.html":{}}}],["change",{"_index":1055,"title":{},"body":{"injectables/ChartService.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{}}}],["changedetection",{"_index":1161,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy",{"_index":1191,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1162,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectorref",{"_index":1177,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changelanguage",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["changelanguage(lang",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":57,"title":{},"body":{"components/AddComponent.html":{}}}],["changestream",{"_index":1171,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel",{"_index":1181,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel:string",{"_index":1217,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["channel",{"_index":1183,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["character",{"_index":575,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["charged",{"_index":2473,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["chart",{"_index":499,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BaseChartConfigService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chart(`lthn",{"_index":1064,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.chartseffects",{"_index":528,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.chartsstate",{"_index":486,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.directive",{"_index":983,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.js",{"_index":1016,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chart.reducer",{"_index":508,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.register(...registerables",{"_index":1043,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.service",{"_index":959,"title":{},"body":{"directives/ChartDirective.html":{},"modules/ChartModule.html":{}}}],["chartconfiginterface",{"_index":927,"title":{"interfaces/ChartConfigInterface.html":{}},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartdata",{"_index":985,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartdifficulty",{"_index":934,"title":{"interfaces/ChartDifficulty.html":{}},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartsEffects.html":{}}}],["chartdifficultyreducer",{"_index":1155,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultyreducer(state",{"_index":1159,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultystate",{"_index":938,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{}}}],["chartdirective",{"_index":129,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["chartelement",{"_index":942,"title":{},"body":{"directives/ChartDirective.html":{}}}],["chartinstances",{"_index":986,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartjs",{"_index":1025,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chartmeta",{"_index":987,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartmodule",{"_index":860,"title":{"modules/ChartModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartnetworkdifficulty",{"_index":1136,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultyloadrequested",{"_index":1111,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystartpolling",{"_index":1090,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystoppolling",{"_index":1091,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["charts",{"_index":481,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ChartService.html":{}}}],["charts.network",{"_index":828,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["chartsactions",{"_index":1142,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultyloadfailure",{"_index":1134,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadrequested",{"_index":1105,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadsuccess",{"_index":1131,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["chartsactions.chartnetworkdifficultystartpolling",{"_index":1765,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultystoppedpolling",{"_index":1108,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultystoppolling",{"_index":1767,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartseffects",{"_index":1088,"title":{"injectables/ChartsEffects.html":{}},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty",{"_index":1123,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty$.next(true",{"_index":1104,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartservice",{"_index":798,"title":{"injectables/ChartService.html":{}},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"overview.html":{}}}],["chartsstate",{"_index":1150,"title":{"interfaces/ChartsState.html":{}},"body":{"interfaces/ChartsState.html":{}}}],["chartsubscriptions",{"_index":988,"title":{},"body":{"injectables/ChartService.html":{}}}],["check",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{}}}],["checks",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1168,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["circumstances",{"_index":2526,"title":{},"body":{"components/UserComponent.html":{}}}],["class",{"_index":67,"title":{"classes/Atomic.html":{},"classes/LTHN.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["classes",{"_index":532,"title":{},"body":{"classes/Atomic.html":{},"classes/LTHN.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"overview.html":{}}}],["clear",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/WebStorageService.html":{}}}],["cleartext",{"_index":2514,"title":{},"body":{"components/UserComponent.html":{}}}],["cli",{"_index":1204,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["client",{"_index":2014,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["client.database",{"_index":2185,"title":{},"body":{"components/RootComponent.html":{}}}],["client.database.getstate(`/hive",{"_index":2023,"title":{},"body":{"components/PostComponent.html":{}}}],["close",{"_index":1693,"title":{},"body":{"components/ModalComponent.html":{},"injectables/PluginsService.html":{}}}],["closebuttonlabel",{"_index":1726,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["closeconnection",{"_index":2917,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closed",{"_index":2951,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cloud",{"_index":2324,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_download",{"_index":75,"title":{},"body":{"components/AddComponent.html":{},"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cloud_off",{"_index":2325,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_upload",{"_index":727,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cluster_appmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":449,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":450,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":451,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":652,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":653,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":856,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_blockchaincomponent_providers",{"_index":859,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_declarations",{"_index":858,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":857,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":978,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_chartdirective_providers",{"_index":980,"title":{},"body":{"modules/ChartModule.html":{}}}],["cluster_chartmodule_declarations",{"_index":3079,"title":{},"body":{"overview.html":{}}}],["cluster_chartmodule_exports",{"_index":981,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_providers",{"_index":979,"title":{},"body":{"modules/ChartModule.html":{}}}],["cluster_consolemodule",{"_index":1252,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_declarations",{"_index":1254,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_exports",{"_index":1253,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":1663,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_declarations",{"_index":1665,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":1664,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":1746,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1747,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1748,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1917,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1919,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1918,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule",{"_index":1967,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_declarations",{"_index":1968,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_exports",{"_index":1969,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_providers",{"_index":1970,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":2034,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_declarations",{"_index":2035,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_rootmodule",{"_index":2227,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_declarations",{"_index":2228,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_imports",{"_index":2229,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootroutingmodule",{"_index":2242,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_rootroutingmodule_imports",{"_index":2243,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_settingsmodule",{"_index":2272,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2274,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2273,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_statusmodule",{"_index":2329,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_declarations",{"_index":2331,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":2330,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2553,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2554,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_vpnmodule",{"_index":2594,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_vpnmodule_declarations",{"_index":2595,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":2696,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_declarations",{"_index":2698,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_exports",{"_index":2697,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":2699,"title":{},"body":{"modules/WalletModule.html":{}}}],["cmd",{"_index":2877,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["code",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["col",{"_index":2614,"title":{},"body":{"components/WalletComponent.html":{}}}],["color",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["colorlib",{"_index":1028,"title":{},"body":{"injectables/ChartService.html":{}}}],["colors",{"_index":764,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{}}}],["colour",{"_index":1001,"title":{},"body":{"injectables/ChartService.html":{}}}],["columnmode",{"_index":2431,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["columns",{"_index":2432,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["command",{"_index":1169,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["commonmodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["community",{"_index":2578,"title":{},"body":{"components/VpnComponent.html":{}}}],["completed",{"_index":2358,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["component",{"_index":21,"title":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{}}}],["component_template",{"_index":82,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["componentfactoryresolver",{"_index":1977,"title":{},"body":{"injectables/PluginsService.html":{}}}],["components",{"_index":23,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["components/add.component",{"_index":2710,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/new.component",{"_index":2704,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/restore.component",{"_index":2705,"title":{},"body":{"modules/WalletModule.html":{}}}],["componentshow",{"_index":1966,"title":{},"body":{"components/PluginsComponent.html":{}}}],["conf/app.ini",{"_index":2373,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["confidentiality",{"_index":2511,"title":{},"body":{"components/UserComponent.html":{}}}],["confidentially",{"_index":2493,"title":{},"body":{"components/UserComponent.html":{}}}],["config",{"_index":469,"title":{},"body":{"injectables/AppService.html":{},"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["config.interface",{"_index":1775,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.interface.ts",{"_index":929,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:7",{"_index":933,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:9",{"_index":932,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.service",{"_index":1773,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.service.ts",{"_index":748,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:12",{"_index":791,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:50",{"_index":752,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:57",{"_index":758,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:59",{"_index":757,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:61",{"_index":755,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:7",{"_index":761,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:8",{"_index":792,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:9",{"_index":760,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["configiniparser",{"_index":464,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser('\\r\\n",{"_index":2368,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser.errors.errorduplicatesectionerror",{"_index":2375,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configs",{"_index":1040,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurations",{"_index":1021,"title":{},"body":{"injectables/ChartService.html":{}}}],["configureoptions",{"_index":750,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["confirm",{"_index":1858,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/UserComponent.html":{}}}],["connect",{"_index":2918,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connection",{"_index":2950,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["considered",{"_index":743,"title":{},"body":{"interfaces/Balance.html":{}}}],["console",{"_index":1165,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console'},{'name",{"_index":92,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["console.component",{"_index":1256,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["console.component.html",{"_index":1167,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":1166,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.error('duplicated",{"_index":2376,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.error(error",{"_index":1133,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["console.log",{"_index":1850,"title":{},"body":{"components/NewComponent.html":{}}}],["console.log(\"blockchain",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('blockchaincomponent",{"_index":826,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["console.log('cleaning",{"_index":2396,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('complete",{"_index":2949,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('creating",{"_index":2379,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('done",{"_index":2397,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('e",{"_index":1556,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log('getitem",{"_index":2900,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('http",{"_index":2914,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('keyboard",{"_index":1223,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log('keys",{"_index":2383,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('message",{"_index":2941,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('saving",{"_index":2385,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('setitem",{"_index":2902,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('settingscomponent",{"_index":2258,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log('wallet",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('walletcomponent",{"_index":2648,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.log(`cmd:letheand:${this.command.join",{"_index":1234,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(dat",{"_index":907,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{}}}],["console.log(data",{"_index":2102,"title":{},"body":{"interfaces/Response.html":{}}}],["console.log(data.result",{"_index":825,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["console.log(err",{"_index":2946,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":1083,"title":{},"body":{"injectables/ChartService.html":{}}}],["console.log(post",{"_index":2032,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.command.join",{"_index":1245,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(this.router.routerstate.snapshot.url",{"_index":2022,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.rows",{"_index":2462,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["consolecomponent",{"_index":91,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["consolemodule",{"_index":309,"title":{"modules/ConsoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["construction",{"_index":584,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["constructor",{"_index":45,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(actions",{"_index":1095,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["constructor(appfilesystem",{"_index":1502,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["constructor(appservice",{"_index":1265,"title":{},"body":{"injectables/CryptService.html":{}}}],["constructor(authservice",{"_index":1644,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cryptservice",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor(dialog",{"_index":2316,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(dialogref",{"_index":1860,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["constructor(fs",{"_index":2823,"title":{},"body":{"injectables/WalletService.html":{}}}],["constructor(http",{"_index":804,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["constructor(injector",{"_index":1949,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["constructor(modalservice",{"_index":1695,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(name",{"_index":2863,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["constructor(private",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["constructor(public",{"_index":2323,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(renderer",{"_index":944,"title":{},"body":{"directives/ChartDirective.html":{}}}],["constructor(router",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["constructor(store",{"_index":992,"title":{},"body":{"injectables/ChartService.html":{}}}],["constructor(wallet",{"_index":1873,"title":{},"body":{"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(walletrpc",{"_index":1834,"title":{},"body":{"components/NewComponent.html":{}}}],["constructor(ws",{"_index":1174,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["container",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["content",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockchainService.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/PostComponent.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletRpcService.html":{}}}],["content.tofixed(2",{"_index":1613,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["content/html.pipe",{"_index":1927,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/markdown.pipe",{"_index":1930,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/shruggie.pipe",{"_index":1928,"title":{},"body":{"modules/PipesModule.html":{}}}],["contents",{"_index":1482,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["context",{"_index":1824,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["contributing",{"_index":2954,"title":{"contributing.html":{}},"body":{}}],["conversion",{"_index":1278,"title":{},"body":{"injectables/CryptService.html":{}}}],["convert",{"_index":1959,"title":{},"body":{"components/PluginsComponent.html":{}}}],["converted",{"_index":1344,"title":{},"body":{"injectables/CryptService.html":{}}}],["cost",{"_index":2592,"title":{},"body":{"components/VpnComponent.html":{}}}],["count",{"_index":2867,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["create",{"_index":1331,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/PluginsService.html":{},"interfaces/RestoreWallet.html":{},"components/UserComponent.html":{}}}],["createchart",{"_index":989,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchart(name",{"_index":995,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchartelement",{"_index":943,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createchartelement(name",{"_index":952,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createcustomelement",{"_index":1956,"title":{},"body":{"components/PluginsComponent.html":{}}}],["createcustomelement(walletcomponent",{"_index":1962,"title":{},"body":{"components/PluginsComponent.html":{}}}],["created",{"_index":2384,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"contributing.html":{}}}],["createeffect",{"_index":1098,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["createopenpgp",{"_index":1259,"title":{},"body":{"injectables/CryptService.html":{}}}],["createopenpgp(username",{"_index":1267,"title":{},"body":{"injectables/CryptService.html":{}}}],["createreducer",{"_index":1152,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["creates",{"_index":1003,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["createsalt",{"_index":1260,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(input",{"_index":1273,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(username",{"_index":2394,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createwallet",{"_index":592,"title":{"interfaces/CreateWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["createwallet(x",{"_index":2738,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["creation",{"_index":2540,"title":{},"body":{"components/UserComponent.html":{}}}],["crypto",{"_index":460,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["crypto/effort.pipe",{"_index":1931,"title":{},"body":{"modules/PipesModule.html":{}}}],["crypto/hashrate.pipe",{"_index":1925,"title":{},"body":{"modules/PipesModule.html":{}}}],["cryptservice",{"_index":666,"title":{"injectables/CryptService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["cryptservice.sha256salty(username",{"_index":1314,"title":{},"body":{"injectables/CryptService.html":{}}}],["current",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/RestoreWallet.html":{}}}],["currentflag",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["currentlanguage",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{},"components/PluginsComponent.html":{}}}],["customelements.define('lthn",{"_index":1964,"title":{},"body":{"components/PluginsComponent.html":{}}}],["cutmiddle",{"_index":1593,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["cutmiddle(string",{"_index":1594,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["d",{"_index":1786,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"pipes/TimeAgoPipe.html":{}}}],["d.gettime",{"_index":2407,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["daemon",{"_index":1428,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/ProfileComponent.html":{},"modules/StatusModule.html":{}}}],["daemon'},{'name",{"_index":103,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["daltonism",{"_index":2294,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["darkmode",{"_index":2295,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["dat",{"_index":911,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletService.html":{}}}],["dat.endswith('.keys",{"_index":2845,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.endswith('.txt",{"_index":2846,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.length",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["data",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/ProfileState.html":{},"interfaces/Response.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["data.data",{"_index":2911,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["data.data.blocks",{"_index":821,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["data.description",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["data.heading",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["data.length",{"_index":2639,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["data.map((n",{"_index":1826,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["data.result",{"_index":824,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["data.robots",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["data/data.module",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["data/debug.rxjs",{"_index":1144,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["data/interface/pagination",{"_index":2859,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["data/plugins",{"_index":2634,"title":{},"body":{"components/WalletComponent.html":{}}}],["data['data",{"_index":2104,"title":{},"body":{"interfaces/Response.html":{}}}],["data['data'].result",{"_index":2106,"title":{},"body":{"interfaces/Response.html":{}}}],["data['in",{"_index":2457,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data['out",{"_index":2458,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data[0",{"_index":1201,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["database",{"_index":2080,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["datamap",{"_index":930,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamap(data",{"_index":931,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamodule",{"_index":310,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["dataset",{"_index":1760,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dataset.backgroundcolor",{"_index":1049,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.bordercolor",{"_index":1053,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.yaxisid",{"_index":1061,"title":{},"body":{"injectables/ChartService.html":{}}}],["datasets",{"_index":759,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datastore",{"_index":1010,"title":{},"body":{"injectables/ChartService.html":{}}}],["datatable",{"_index":2451,"title":{},"body":{"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["dataupdates",{"_index":2919,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["date",{"_index":845,"title":{},"body":{"components/BlockchainComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["date(value",{"_index":2403,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date/timeago.pipe",{"_index":1926,"title":{},"body":{"modules/PipesModule.html":{}}}],["day",{"_index":1785,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["days",{"_index":2413,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["dd/mm/yyyy",{"_index":846,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["dealing",{"_index":2837,"title":{},"body":{"injectables/WalletService.html":{}}}],["debug",{"_index":1101,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{},"miscellaneous/enumerations.html":{}}}],["debug(rxjslogginglevel.debug",{"_index":1129,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["decimation",{"_index":1814,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["declaration",{"_index":2496,"title":{},"body":{"components/UserComponent.html":{}}}],["declarations",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["decorator",{"_index":1606,"title":{},"body":{"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{}}}],["decorators",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["decrypt",{"_index":520,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["decrypted",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["decrypted.id",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["decrypted.username",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["decryption",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["decryptionkey",{"_index":2547,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["decryptionkeys",{"_index":1397,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle",{"_index":1261,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle(id",{"_index":1299,"title":{},"body":{"injectables/CryptService.html":{}}}],["deep",{"_index":741,"title":{},"body":{"interfaces/Balance.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["defaultlanguage",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":17,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/TransferSplitIn.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["delete",{"_index":2903,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["deleteaddressbook",{"_index":2719,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["deleteaddressbook(x",{"_index":2740,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dependencies",{"_index":302,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2584,"title":{},"body":{"components/VpnComponent.html":{}}}],["deprecated",{"_index":473,"title":{},"body":{"injectables/AppService.html":{}}}],["deps",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["describes",{"_index":1312,"title":{},"body":{"injectables/CryptService.html":{}}}],["describing",{"_index":1678,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["description_short",{"_index":1936,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["designed",{"_index":2498,"title":{},"body":{"components/UserComponent.html":{}}}],["desktop",{"_index":3063,"title":{},"body":{"index.html":{}}}],["destination",{"_index":541,"title":{"interfaces/Destination.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destinations",{"_index":555,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destroy",{"_index":827,"title":{},"body":{"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["destroysubscriptions",{"_index":990,"title":{},"body":{"injectables/ChartService.html":{}}}],["destroysubscriptions(name",{"_index":1004,"title":{},"body":{"injectables/ChartService.html":{}}}],["details",{"_index":2532,"title":{},"body":{"components/UserComponent.html":{}}}],["detector",{"_index":1999,"title":{},"body":{"injectables/PluginsService.html":{}}}],["dev:setup",{"_index":3070,"title":{},"body":{"index.html":{}}}],["develop",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["development",{"_index":3067,"title":{},"body":{"index.html":{}}}],["devices",{"_index":1321,"title":{},"body":{"injectables/CryptService.html":{}}}],["devproduction",{"_index":3071,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1405,"title":{},"body":{"modules/DataModule.html":{}}}],["di",{"_index":1038,"title":{},"body":{"injectables/ChartService.html":{}}}],["dialog",{"_index":2311,"title":{},"body":{"components/StatusComponent.html":{}}}],["dialog/no",{"_index":2335,"title":{},"body":{"modules/StatusModule.html":{}}}],["dialogdata",{"_index":1426,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dialogref",{"_index":1435,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dictionaries",{"_index":2050,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diff",{"_index":936,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["difficulty",{"_index":916,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["digital",{"_index":2500,"title":{},"body":{"components/UserComponent.html":{}}}],["dir",{"_index":888,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{}}}],["directive",{"_index":80,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["directives",{"_index":128,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["directory",{"_index":1508,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["dirname",{"_index":1479,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["disableclosebutton",{"_index":1729,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disableconsole",{"_index":2148,"title":{},"body":{"components/RootComponent.html":{}}}],["disabled",{"_index":1943,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["disabledismissbutton",{"_index":1730,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disablerpclogin",{"_index":2791,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["discussions",{"_index":2192,"title":{},"body":{"components/RootComponent.html":{}}}],["dismiss",{"_index":1694,"title":{},"body":{"components/ModalComponent.html":{}}}],["dismissbuttonlabel",{"_index":1727,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["dispatch",{"_index":2269,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["display",{"_index":788,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["displaycolors",{"_index":1813,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["displayformats",{"_index":1784,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dkey",{"_index":2068,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["do_not_relay",{"_index":2343,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["doc",{"_index":3073,"title":{},"body":{"index.html":{}}}],["doc:serve",{"_index":3074,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(popup",{"_index":2002,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.body.appendchild(popupel",{"_index":1991,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.body.removechild(popupel",{"_index":1989,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.createelement('lthn",{"_index":1986,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.getelementbyid(name",{"_index":1890,"title":{},"body":{"components/OpenComponent.html":{}}}],["dom",{"_index":25,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["domsanitizer",{"_index":1463,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["don't",{"_index":2512,"title":{},"body":{"components/UserComponent.html":{}}}],["don\\'t",{"_index":2543,"title":{},"body":{"components/UserComponent.html":{}}}],["dont",{"_index":2530,"title":{},"body":{"components/UserComponent.html":{},"contributing.html":{}}}],["download",{"_index":885,"title":{},"body":{"injectables/BlockchainService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["downloadcli",{"_index":875,"title":{},"body":{"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["downloadingcli",{"_index":2149,"title":{},"body":{"components/RootComponent.html":{}}}],["drawborder",{"_index":1800,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dto/makeuriin",{"_index":544,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["duration",{"_index":769,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["during",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["dvpn",{"_index":2188,"title":{},"body":{"components/RootComponent.html":{}}}],["dynamic",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FileSystemService.html":{},"pipes/HashRatePipe.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["e.domevent",{"_index":1227,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.domevent.keycode",{"_index":1224,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.key",{"_index":1225,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e2e2e2",{"_index":765,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["each",{"_index":1022,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Destination.html":{}}}],["easier",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["ecc",{"_index":1368,"title":{},"body":{"injectables/CryptService.html":{}}}],["effects",{"_index":527,"title":{"injectables/Effects.html":{},"injectables/Effects-1.html":{}},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{}}}],["effectsmodule",{"_index":1406,"title":{},"body":{"modules/DataModule.html":{}}}],["effectsmodule.forroot([...effects",{"_index":1419,"title":{},"body":{"modules/DataModule.html":{}}}],["effort",{"_index":1446,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["effortpipe",{"_index":1443,"title":{"pipes/EffortPipe.html":{}},"body":{"pipes/EffortPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["ekey",{"_index":2069,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["elementref",{"_index":947,"title":{},"body":{"directives/ChartDirective.html":{}}}],["elements",{"_index":774,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["elmref",{"_index":946,"title":{},"body":{"directives/ChartDirective.html":{}}}],["empty",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["en",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":1868,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["enabled",{"_index":1815,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["enabledblocking",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encapsulation",{"_index":1163,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encoded",{"_index":2348,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["encrypt",{"_index":516,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["encrypted",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryption",{"_index":1334,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryptionkey",{"_index":1378,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkey.length",{"_index":1381,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkeys",{"_index":1386,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle",{"_index":1262,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle(id",{"_index":1315,"title":{},"body":{"injectables/CryptService.html":{}}}],["endpoints",{"_index":3066,"title":{},"body":{"index.html":{}}}],["engine",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["engineering",{"_index":2060,"title":{},"body":{"components/ProfileComponent.html":{}}}],["english",{"_index":1853,"title":{},"body":{"components/NewComponent.html":{}}}],["enough",{"_index":742,"title":{},"body":{"interfaces/Balance.html":{}}}],["entity",{"_index":1412,"title":{},"body":{"modules/DataModule.html":{}}}],["entityconfig",{"_index":1411,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule",{"_index":1409,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule.forroot(entityconfig",{"_index":1421,"title":{},"body":{"modules/DataModule.html":{}}}],["entries",{"_index":1559,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["enum",{"_index":1942,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/UserOptions.html":{}}}],["enumerations",{"_index":3026,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":468,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["err",{"_index":2945,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["error",{"_index":1082,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["error(`chart",{"_index":1047,"title":{},"body":{"injectables/ChartService.html":{}}}],["error(`failed",{"_index":1382,"title":{},"body":{"injectables/CryptService.html":{}}}],["escapehtmlpipe",{"_index":1458,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["etc",{"_index":2076,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["ev",{"_index":1226,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.altkey",{"_index":1229,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.ctrlkey",{"_index":1230,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.keycode",{"_index":1232,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.metakey",{"_index":1231,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["even",{"_index":1324,"title":{},"body":{"injectables/CryptService.html":{},"injectables/PluginsService.html":{}}}],["event",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"injectables/PluginsService.html":{}}}],["exactly",{"_index":2589,"title":{},"body":{"components/VpnComponent.html":{}}}],["exists",{"_index":1469,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["exists(pathname",{"_index":1506,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(type",{"_index":1473,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["exitnode",{"_index":2585,"title":{},"body":{"components/VpnComponent.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["exportchain",{"_index":876,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["exports",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["expose",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["express",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["exsist",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exsists",{"_index":1476,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["extends",{"_index":534,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["extra",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["factory",{"_index":1994,"title":{},"body":{"injectables/PluginsService.html":{}}}],["factory.create(this.injector",{"_index":1997,"title":{},"body":{"injectables/PluginsService.html":{}}}],["fail",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":1579,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["fallback",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":586,"title":{},"body":{"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["family",{"_index":1792,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["favourites",{"_index":2582,"title":{},"body":{"components/VpnComponent.html":{}}}],["feature",{"_index":1869,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["fee",{"_index":556,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["fee_list",{"_index":2480,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["feedback",{"_index":1323,"title":{},"body":{"injectables/CryptService.html":{}}}],["field",{"_index":2278,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["file_open",{"_index":76,"title":{},"body":{"components/AddComponent.html":{}}}],["filename",{"_index":590,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{}}}],["files",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileSystemService.html":{}}}],["filesystem",{"_index":600,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["filesystem/file",{"_index":1347,"title":{},"body":{"injectables/CryptService.html":{}}}],["filesysteminterface",{"_index":1466,"title":{"interfaces/FileSystemInterface.html":{}},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["filesystemservice",{"_index":362,"title":{"injectables/FileSystemService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["filesystemwebservice",{"_index":1503,"title":{"injectables/FileSystemWebService.html":{}},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["fill",{"_index":849,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["filled",{"_index":853,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["filter",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GetTransfersIn.html":{},"injectables/WalletEffects.html":{}}}],["filter_by_height",{"_index":1580,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["find",{"_index":1035,"title":{},"body":{"injectables/ChartService.html":{}}}],["first",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["flexmodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["folder",{"_index":1481,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["follow,index",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":1789,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["forget",{"_index":2531,"title":{},"body":{"components/UserComponent.html":{}}}],["form",{"_index":899,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["format",{"_index":892,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{}}}],["formcontrol",{"_index":1647,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["formcontrol('0",{"_index":2117,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(false",{"_index":2123,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(true",{"_index":2119,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formgroup",{"_index":2114,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["found",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["free",{"_index":2503,"title":{},"body":{"components/UserComponent.html":{}}}],["friendly",{"_index":2070,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["fs",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"injectables/FileSystemService.html":{},"injectables/WalletService.html":{}}}],["full",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"modules/RootRoutingModule.html":{}}}],["function",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["functionality",{"_index":1865,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["functions",{"_index":3035,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funds",{"_index":738,"title":{},"body":{"interfaces/Balance.html":{},"injectables/WalletRpcService.html":{}}}],["g",{"_index":1457,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{}}}],["general",{"_index":2257,"title":{},"body":{"components/SettingsComponent.html":{}}}],["generated",{"_index":2071,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["generatekey",{"_index":1263,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatekey(input",{"_index":1329,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatepaymentid",{"_index":545,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["generating",{"_index":2143,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["generator",{"_index":2058,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["get('https://lethean.hashvault.pro/explorer/api/transactions",{"_index":818,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["get_tx_hex",{"_index":2344,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["get_tx_key",{"_index":579,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["get_tx_keys",{"_index":2345,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["getaddress",{"_index":2720,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook",{"_index":2721,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook(x",{"_index":2743,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbookout",{"_index":1557,"title":{"interfaces/GetAddressBookOut.html":{}},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["getauthstatus",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getbalance",{"_index":2607,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["getbulkpayments",{"_index":2722,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpayments(x",{"_index":2747,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsin",{"_index":1561,"title":{"interfaces/GetBulkPaymentsIn.html":{}},"body":{"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsout",{"_index":1568,"title":{"interfaces/GetBulkPaymentsOut.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["getchaininfo",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/RootComponent.html":{}}}],["getchild",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(activatedroute",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["getdiscussions('trending",{"_index":2186,"title":{},"body":{"components/RootComponent.html":{}}}],["getfilesystem",{"_index":1518,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["getheight",{"_index":2723,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getitem",{"_index":2870,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getitem(key",{"_index":2879,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getlength",{"_index":2891,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getpayments",{"_index":2724,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpayments(x",{"_index":2750,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpaymentsin",{"_index":1572,"title":{"interfaces/GetPaymentsIn.html":{}},"body":{"interfaces/GetPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getpaymentsout",{"_index":1574,"title":{"interfaces/GetPaymentsOut.html":{}},"body":{"interfaces/GetPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["gets",{"_index":1008,"title":{},"body":{"injectables/ChartService.html":{},"injectables/WalletService.html":{}}}],["getsub",{"_index":1172,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["getting",{"_index":2953,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["gettransferbytxid",{"_index":2725,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransferbytxid(x",{"_index":2752,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers",{"_index":2726,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers(x",{"_index":2755,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfersin",{"_index":1576,"title":{"interfaces/GetTransfersIn.html":{}},"body":{"interfaces/GetTransfersIn.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["gettransfersout",{"_index":1586,"title":{"interfaces/GetTransfersOut.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["getwalletdata",{"_index":2636,"title":{},"body":{"components/WalletComponent.html":{}}}],["getwalletlist",{"_index":2820,"title":{},"body":{"injectables/WalletService.html":{}}}],["git_repo",{"_index":1937,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["github",{"_index":1285,"title":{},"body":{"injectables/CryptService.html":{}}}],["give",{"_index":1039,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["global",{"_index":2301,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["global_index",{"_index":1623,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["globalfontsize",{"_index":2296,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["go",{"_index":2399,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["good",{"_index":1287,"title":{},"body":{"injectables/CryptService.html":{}}}],["grade",{"_index":2535,"title":{},"body":{"components/UserComponent.html":{}}}],["gradient(circle",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":3077,"title":{},"body":{"modules.html":{}}}],["grey_peerlist_size",{"_index":917,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["gridlines",{"_index":1798,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["group",{"_index":1637,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"injectables/WebStorageService.html":{}}}],["guard",{"_index":594,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":596,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handles",{"_index":606,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handling",{"_index":2495,"title":{},"body":{"components/UserComponent.html":{}}}],["happen",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["hascli",{"_index":2150,"title":{},"body":{"components/RootComponent.html":{}}}],["hash",{"_index":1341,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/TransferOut.html":{}}}],["hashlink",{"_index":1592,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["hashlinkpipe",{"_index":1590,"title":{"pipes/HashLinkPipe.html":{}},"body":{"pipes/HashLinkPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashrate",{"_index":1605,"title":{},"body":{"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart",{"_index":1033,"title":{},"body":{"injectables/ChartService.html":{}}}],["hashrate.chart.ts",{"_index":1752,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:12",{"_index":1766,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:132",{"_index":1757,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:14",{"_index":1768,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.subtitle",{"_index":830,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hashrate.title",{"_index":829,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hashratepipe",{"_index":1603,"title":{"pipes/HashRatePipe.html":{}},"body":{"pipes/HashRatePipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashvault",{"_index":831,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["headers",{"_index":896,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["heading",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["height",{"_index":260,"title":{"interfaces/Height.html":{}},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"directives/ChartDirective.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Height.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["height:40vh",{"_index":973,"title":{},"body":{"directives/ChartDirective.html":{}}}],["helps",{"_index":2586,"title":{},"body":{"components/VpnComponent.html":{}}}],["here",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["hex",{"_index":576,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["hexadecimal",{"_index":1676,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["hh:mm:ss",{"_index":847,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hidden",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["hideclosebutton",{"_index":1731,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidedismissbutton",{"_index":1732,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidenavigation",{"_index":2297,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highcontrasttext",{"_index":2298,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highlight",{"_index":2509,"title":{},"body":{"components/UserComponent.html":{}}}],["history",{"_index":2523,"title":{},"body":{"components/UserComponent.html":{}}}],["hiveio/dhive",{"_index":2015,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{},"dependencies.html":{}}}],["hold",{"_index":2513,"title":{},"body":{"components/UserComponent.html":{}}}],["holds",{"_index":1013,"title":{},"body":{"injectables/ChartService.html":{}}}],["home",{"_index":887,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["host",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{}}}],["hours",{"_index":2411,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["hover",{"_index":767,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hovering",{"_index":771,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hsm/encrypted",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["html.dark",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":806,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":895,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["httploaderfactory",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["https",{"_index":3065,"title":{},"body":{"index.html":{}}}],["https://anyx.io",{"_index":2018,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1126,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["https://api.hive.blog",{"_index":2016,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hivekings.com",{"_index":2017,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.openhive.network",{"_index":2019,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://github.com/snider/plugin",{"_index":2626,"title":{},"body":{"components/WalletComponent.html":{}}}],["https://lethean.hashvault.pro/explorer/api/transactions",{"_index":816,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["https://localhost:36911/daemon/chain/export",{"_index":908,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/import",{"_index":909,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/start",{"_index":904,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/wallet/json_rpc",{"_index":2787,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/daemon/wallet/rpc",{"_index":2792,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/filesystem",{"_index":1544,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["https://localhost:36911/object",{"_index":2887,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["id",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"directives/ChartDirective.html":{},"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Response.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{}}}],["id's",{"_index":2073,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["idea",{"_index":1288,"title":{},"body":{"injectables/CryptService.html":{}}}],["identifiable",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["identify",{"_index":577,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["ids",{"_index":1373,"title":{},"body":{"injectables/CryptService.html":{}}}],["if(dat.length",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["if(data",{"_index":2455,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["if(data['data",{"_index":2105,"title":{},"body":{"interfaces/Response.html":{}}}],["if(data['data'].error",{"_index":2103,"title":{},"body":{"interfaces/Response.html":{}}}],["if(data[0",{"_index":1203,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154",{"_index":1206,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(parts.length",{"_index":1209,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(ret",{"_index":2898,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["if(this.attach",{"_index":1200,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(this.child.keyeventinput",{"_index":1221,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(wallet",{"_index":2642,"title":{},"body":{"components/WalletComponent.html":{}}}],["ignored",{"_index":559,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["im",{"_index":1282,"title":{},"body":{"injectables/CryptService.html":{}}}],["image",{"_index":2072,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["img",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":2838,"title":{},"body":{"injectables/WalletService.html":{}}}],["implements",{"_index":28,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["import('./blockchain.module').then((m",{"_index":871,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["import('./logs/logs.module').then((m",{"_index":2286,"title":{},"body":{"modules/SettingsModule.html":{}}}],["import('./post.module').then((m",{"_index":2040,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["import('./settings.module').then",{"_index":2289,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["import('./user.module').then((m",{"_index":2570,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["import('./wallet.module').then((m",{"_index":2716,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["important",{"_index":1249,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["importchain",{"_index":877,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imports",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["impose",{"_index":2505,"title":{},"body":{"components/UserComponent.html":{}}}],["inactivitythreshold",{"_index":2860,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["include",{"_index":854,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["including",{"_index":1515,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["incoming",{"_index":1629,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"components/WalletComponent.html":{}}}],["incoming_connections_count",{"_index":918,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["incomingtransfers",{"_index":2727,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfers(x",{"_index":2757,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfersin",{"_index":1616,"title":{"interfaces/IncomingTransfersIn.html":{}},"body":{"interfaces/IncomingTransfersIn.html":{},"injectables/WalletRpcService.html":{}}}],["incomingtransfersout",{"_index":1621,"title":{"interfaces/IncomingTransfersOut.html":{}},"body":{"interfaces/IncomingTransfersOut.html":{},"injectables/WalletRpcService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["info.alt_blocks_count",{"_index":2204,"title":{},"body":{"components/RootComponent.html":{}}}],["info.difficulty",{"_index":2206,"title":{},"body":{"components/RootComponent.html":{}}}],["info.grey_peerlist_size",{"_index":2208,"title":{},"body":{"components/RootComponent.html":{}}}],["info.height",{"_index":2200,"title":{},"body":{"components/RootComponent.html":{}}}],["info.incoming_connections_count",{"_index":2210,"title":{},"body":{"components/RootComponent.html":{}}}],["info.outgoing_connections_count",{"_index":2212,"title":{},"body":{"components/RootComponent.html":{}}}],["info.status",{"_index":2214,"title":{},"body":{"components/RootComponent.html":{}}}],["info.target",{"_index":2216,"title":{},"body":{"components/RootComponent.html":{}}}],["info.target_height",{"_index":2218,"title":{},"body":{"components/RootComponent.html":{}}}],["info.testnet",{"_index":2220,"title":{},"body":{"components/RootComponent.html":{}}}],["info.tx_count",{"_index":2223,"title":{},"body":{"components/RootComponent.html":{}}}],["info.tx_pool_size",{"_index":2202,"title":{},"body":{"components/RootComponent.html":{}}}],["info.white_peerlist_size",{"_index":2225,"title":{},"body":{"components/RootComponent.html":{}}}],["informed",{"_index":2536,"title":{},"body":{"components/UserComponent.html":{}}}],["inherited",{"_index":1755,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ini",{"_index":470,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["init",{"_index":2259,"title":{},"body":{"components/SettingsComponent.html":{}}}],["initialnavigation",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":1153,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["inject",{"_index":956,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/RootComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1436,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(platform_id",{"_index":960,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["injectable",{"_index":456,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["injectable({providedin",{"_index":1710,"title":{},"body":{"components/ModalComponent.html":{}}}],["injectables",{"_index":458,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["injector",{"_index":1950,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["input",{"_index":65,"title":{},"body":{"components/AddComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["inputs",{"_index":43,"title":{},"body":{"components/AddComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["install",{"_index":1867,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"index.html":{}}}],["instance",{"_index":999,"title":{},"body":{"injectables/ChartService.html":{}}}],["instanceof",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["instances",{"_index":1017,"title":{},"body":{"injectables/ChartService.html":{}}}],["int",{"_index":558,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["integer",{"_index":1674,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/TransferOut.html":{}}}],["integrated_address",{"_index":1633,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["integratedaddress",{"_index":1631,"title":{"interfaces/IntegratedAddress.html":{}},"body":{"interfaces/IntegratedAddress.html":{},"injectables/WalletRpcService.html":{}}}],["interact",{"_index":1305,"title":{},"body":{"injectables/CryptService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["interface/file",{"_index":1545,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{},"overview.html":{}}}],["interfaces/difficulty.state",{"_index":1145,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["interfaces/user.options",{"_index":2549,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["internal",{"_index":1627,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["intersect",{"_index":1810,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["interval",{"_index":2674,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["io",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ischecked",{"_index":2608,"title":{},"body":{"components/WalletComponent.html":{}}}],["ischecked(col",{"_index":2612,"title":{},"body":{"components/WalletComponent.html":{}}}],["isn't",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":958,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":961,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformserver",{"_index":1030,"title":{},"body":{"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["isplatformserver(this.platformid",{"_index":1080,"title":{},"body":{"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["ispollingactivestats",{"_index":2657,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["issue",{"_index":1286,"title":{},"body":{"injectables/CryptService.html":{}}}],["issues",{"_index":1284,"title":{},"body":{"injectables/CryptService.html":{}}}],["it'll",{"_index":1319,"title":{},"body":{"injectables/CryptService.html":{}}}],["it's",{"_index":2528,"title":{},"body":{"components/UserComponent.html":{}}}],["it\\'s",{"_index":2544,"title":{},"body":{"components/UserComponent.html":{}}}],["item",{"_index":772,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["items",{"_index":2868,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["itself",{"_index":1343,"title":{},"body":{"injectables/CryptService.html":{}}}],["js",{"_index":478,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["json",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["json.parse",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(dat",{"_index":1551,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["json.parse(ret",{"_index":2899,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["json.stringify",{"_index":2391,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["json.stringify(rpcbody('get_transfers')({in",{"_index":2686,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody('getbalance",{"_index":2680,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody(method)(params",{"_index":913,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["json.stringify(rpcbody(method)(params))).then((data",{"_index":2101,"title":{},"body":{"interfaces/Response.html":{}}}],["jsonrpc",{"_index":2096,"title":{},"body":{"interfaces/Response.html":{}}}],["jszmq",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1609,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["keep",{"_index":2580,"title":{},"body":{"components/VpnComponent.html":{}}}],["keephtml",{"_index":1460,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["kept",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":580,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["key(key",{"_index":2881,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key(key:number",{"_index":2894,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key_type",{"_index":2083,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["keys",{"_index":515,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["keysize",{"_index":1364,"title":{},"body":{"injectables/CryptService.html":{}}}],["kind",{"_index":2948,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["know",{"_index":2835,"title":{},"body":{"injectables/WalletService.html":{}}}],["knowledge",{"_index":1289,"title":{},"body":{"injectables/CryptService.html":{}}}],["known",{"_index":1884,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletService.html":{}}}],["known_wallets",{"_index":2854,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["knows",{"_index":2000,"title":{},"body":{"injectables/PluginsService.html":{}}}],["kurkle/color",{"_index":1029,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["l337",{"_index":1277,"title":{},"body":{"injectables/CryptService.html":{}}}],["label",{"_index":1056,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["lang",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.de",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.en",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.es",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.fr",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.ru",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.zh",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/TransferSplitIn.html":{}}}],["last",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["last_update_check",{"_index":1940,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["later",{"_index":1298,"title":{},"body":{"injectables/CryptService.html":{}}}],["layout",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"injectables/NetworkHashrateChart.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leave",{"_index":1398,"title":{},"body":{"injectables/CryptService.html":{}}}],["left",{"_index":1779,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["legacy",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["length",{"_index":546,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WebStorageService.html":{}}}],["less",{"_index":1290,"title":{},"body":{"injectables/CryptService.html":{}}}],["lethean",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"index.html":{}}}],["lethean's",{"_index":2497,"title":{},"body":{"components/UserComponent.html":{}}}],["lethean/cli",{"_index":889,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["lethean/users",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["lethean\\'s",{"_index":2542,"title":{},"body":{"components/UserComponent.html":{}}}],["letheanconfig",{"_index":461,"title":{},"body":{"injectables/AppService.html":{}}}],["level",{"_index":3058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["levels",{"_index":3032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["limit",{"_index":2189,"title":{},"body":{"components/RootComponent.html":{}}}],["limitations",{"_index":2506,"title":{},"body":{"components/UserComponent.html":{}}}],["line",{"_index":777,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/ConsoleComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:305",{"_index":1211,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["line.split(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154",{"_index":1208,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["linewidth",{"_index":1799,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["links",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"components/VpnComponent.html":{},"injectables/WalletService.html":{}}}],["list(dirname",{"_index":1535,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["list(type",{"_index":1478,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["listen",{"_index":1987,"title":{},"body":{"injectables/PluginsService.html":{}}}],["listfiles",{"_index":1498,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["listfiles(dirname",{"_index":1509,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["lists",{"_index":1883,"title":{},"body":{"components/OpenComponent.html":{}}}],["lite",{"_index":1276,"title":{},"body":{"injectables/CryptService.html":{}}}],["literal",{"_index":1560,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"interfaces/WalletsState.html":{}}}],["live",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":1328,"title":{},"body":{"injectables/CryptService.html":{}}}],["loadchildren",{"_index":870,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["loaded",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OpenComponent.html":{}}}],["loaded_keys",{"_index":1941,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["loaded_wallet",{"_index":2855,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["loader",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadrequestedchartdifficulty",{"_index":1092,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["loads",{"_index":997,"title":{},"body":{"injectables/ChartService.html":{}}}],["loadtransactions",{"_index":2434,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["loadtransfers",{"_index":2821,"title":{},"body":{"injectables/WalletService.html":{}}}],["loadtransfers(opts",{"_index":2827,"title":{},"body":{"injectables/WalletService.html":{}}}],["local",{"_index":2079,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["localstorage",{"_index":498,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":496,"title":{},"body":{"interfaces/AppState.html":{}}}],["localstoragesyncreducer",{"_index":513,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reducer",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lock",{"_index":571,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["lock_open",{"_index":2326,"title":{},"body":{"components/StatusComponent.html":{}}}],["locked",{"_index":2533,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":1638,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logentry",{"_index":1635,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logged",{"_index":607,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logging",{"_index":3031,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login'},{'name",{"_index":94,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["login(username",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":655,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":1641,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":93,"title":{"components/LoginComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["loginmethod",{"_index":2565,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["loginmethods",{"_index":2566,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["logo",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["logonly",{"_index":1417,"title":{},"body":{"modules/DataModule.html":{}}}],["logout",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["logs",{"_index":482,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/LogEntry.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"modules/SettingsModule.html":{}}}],["logs'},{'name",{"_index":96,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["logs.component",{"_index":1667,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.component.html",{"_index":1659,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1658,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.logsstate",{"_index":487,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs.reducer",{"_index":510,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs/logs.module",{"_index":2281,"title":{},"body":{"modules/SettingsModule.html":{}}}],["logscomponent",{"_index":95,"title":{"components/LogsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["logsmodule",{"_index":1662,"title":{"modules/LogsModule.html":{}},"body":{"modules/LogsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsstate",{"_index":1639,"title":{"interfaces/LogsState.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["longer",{"_index":1318,"title":{},"body":{"injectables/CryptService.html":{}}}],["looking",{"_index":1566,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["lthn",{"_index":33,"title":{"classes/LTHN.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/DialogData.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["lthn(this.div(1e8",{"_index":552,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["lthn/rxjs",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["lthnchart",{"_index":130,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["lttb",{"_index":1816,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["m",{"_index":1610,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/SettingsRoutingModule.html":{}}}],["m.blockchainmodule",{"_index":872,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["m.logsmodule",{"_index":2287,"title":{},"body":{"modules/SettingsModule.html":{}}}],["m.postmodule",{"_index":2041,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2290,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["m.usermodule",{"_index":2571,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["m.walletmodule",{"_index":2717,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["made",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["magic",{"_index":2525,"title":{},"body":{"components/UserComponent.html":{}}}],["main",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["maintainaspectratio",{"_index":762,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["make",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{}}}],["makeintegratedaddress",{"_index":2728,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddress(x",{"_index":2759,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddressin",{"_index":1668,"title":{"interfaces/MakeIntegratedAddressIn.html":{}},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"injectables/WalletRpcService.html":{}}}],["makes",{"_index":2587,"title":{},"body":{"components/VpnComponent.html":{}}}],["makeuri",{"_index":2729,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuri(x",{"_index":2761,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuriin",{"_index":543,"title":{"interfaces/MakeUriIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["making",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":725,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["map",{"_index":1011,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["map((payload",{"_index":2688,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["map((res",{"_index":2681,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["markdown",{"_index":1682,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownpipe",{"_index":1680,"title":{"pipes/MarkdownPipe.html":{}},"body":{"pipes/MarkdownPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["marked",{"_index":1685,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["marked(value",{"_index":1687,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["marketplace",{"_index":2577,"title":{},"body":{"components/VpnComponent.html":{}}}],["mat",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["mat_dialog_data",{"_index":1431,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matbuttonmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["matcardmodule",{"_index":656,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["match",{"_index":1057,"title":{},"body":{"injectables/ChartService.html":{}}}],["matcheckboxmodule",{"_index":2559,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matdialog",{"_index":2317,"title":{},"body":{"components/StatusComponent.html":{}}}],["matdialogmodule",{"_index":2334,"title":{},"body":{"modules/StatusModule.html":{}}}],["matdialogref",{"_index":1432,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matdividermodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["matexpansionmodule",{"_index":2702,"title":{},"body":{"modules/WalletModule.html":{}}}],["matformfieldmodule",{"_index":2276,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["math.abs((now.gettime",{"_index":2406,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.floor(n.diff",{"_index":1828,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["math.round",{"_index":2405,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(days",{"_index":2417,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(hours",{"_index":2414,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(minutes",{"_index":2412,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(seconds",{"_index":2409,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math/removetrailingzeros.pipe",{"_index":1929,"title":{},"body":{"modules/PipesModule.html":{}}}],["maticonmodule",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matinputmodule",{"_index":660,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matlistmodule",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["matmenumodule",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["matoptionmodule",{"_index":2556,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":2561,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressspinnermodule",{"_index":2236,"title":{},"body":{"modules/RootModule.html":{}}}],["matselectmodule",{"_index":2279,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matsidenav",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":2233,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["mattoolbarmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["mattooltipmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["max",{"_index":1585,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["max_height",{"_index":1581,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["maxage",{"_index":1415,"title":{},"body":{"modules/DataModule.html":{}}}],["maxlength",{"_index":1595,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["maxrotation",{"_index":1797,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["maybe",{"_index":1293,"title":{},"body":{"injectables/CryptService.html":{}}}],["meaningless",{"_index":2515,"title":{},"body":{"components/UserComponent.html":{}}}],["means",{"_index":564,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["member",{"_index":2588,"title":{},"body":{"components/VpnComponent.html":{}}}],["menu",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.blockchain",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.dashboard",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.settings",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.wallet",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["menu_open",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":2676,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["message",{"_index":1384,"title":{},"body":{"injectables/CryptService.html":{},"injectables/PluginsService.html":{},"injectables/WebsocketService.html":{}}}],["meta",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["metadata",{"_index":31,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"modules/DataModule.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["metareducer",{"_index":493,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":525,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["metaservice",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":883,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/Response.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["mid",{"_index":1455,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["military",{"_index":2534,"title":{},"body":{"components/UserComponent.html":{}}}],["min",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{}}}],["min_block_height",{"_index":1563,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["min_height",{"_index":1582,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["mine",{"_index":728,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["minutes",{"_index":2408,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["mirror",{"_index":1804,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["miscellaneous",{"_index":3025,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mix",{"_index":563,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixin",{"_index":561,"title":{},"body":{"classes/Atomic.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixing",{"_index":565,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mkdir",{"_index":1470,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(dirname",{"_index":1511,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(type",{"_index":1483,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["mmm",{"_index":1787,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modal",{"_index":1689,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":98,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["modal.component.html",{"_index":1690,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":97,"title":{"components/ModalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["modalconfig",{"_index":1708,"title":{"interfaces/ModalConfig.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{}}}],["modalconfig.closebuttonlabel",{"_index":1724,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.dismissbuttonlabel",{"_index":1723,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.modaltitle",{"_index":1722,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":1691,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalmodule",{"_index":1745,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["modalref",{"_index":1692,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalservice",{"_index":1698,"title":{},"body":{"components/ModalComponent.html":{}}}],["modaltitle",{"_index":1728,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["mode",{"_index":1809,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["modify",{"_index":2504,"title":{},"body":{"components/UserComponent.html":{}}}],["module",{"_index":299,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}},"body":{}}],["module/auth/auth.module",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/login.component",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/auth/route.guard",{"_index":869,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/chart/base",{"_index":1772,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart",{"_index":1774,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart.module",{"_index":863,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chart/chart.service",{"_index":810,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["module/chart/data/actions",{"_index":1771,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/root",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/root.component",{"_index":2245,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/root.module",{"_index":2246,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/settings/data",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["module/settings/settings",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/status/status.module",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":301,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/chart/data",{"_index":500,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/settings/data",{"_index":494,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/user/data/user",{"_index":495,"title":{},"body":{"interfaces/AppState.html":{}}}],["moment",{"_index":1027,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["monero",{"_index":569,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["months",{"_index":2416,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["more",{"_index":1054,"title":{},"body":{"injectables/ChartService.html":{}}}],["mostly",{"_index":1626,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["msg",{"_index":2928,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["much",{"_index":2502,"title":{},"body":{"components/UserComponent.html":{}}}],["multiple",{"_index":1307,"title":{},"body":{"injectables/CryptService.html":{}}}],["n.ts",{"_index":1827,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["namelist",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator",{"_index":1842,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"miscellaneous/functions.html":{}}}],["namenottakenvalidator(namelist",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator(this.wallet.walletlist",{"_index":1846,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["names",{"_index":2051,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["names.mining",{"_index":832,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["navigationend",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp;&nbsp",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["nearest",{"_index":1808,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["need",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["network",{"_index":2517,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["network/chart/difficulty",{"_index":1128,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["networkdifficulty",{"_index":1018,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["networkerror",{"_index":2913,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["networkhashratechart",{"_index":993,"title":{"injectables/NetworkHashrateChart.html":{}},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["never",{"_index":2507,"title":{},"body":{"components/UserComponent.html":{}}}],["new",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["new'},{'name",{"_index":100,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["new.component.html",{"_index":1831,"title":{},"body":{"components/NewComponent.html":{}}}],["new_algorithm",{"_index":582,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["newcomponent",{"_index":99,"title":{"components/NewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["newcomponent,restorecomponent,transactionscomponent,opencomponent,routermodule,addcomponent",{"_index":2714,"title":{},"body":{"modules/WalletModule.html":{}}}],["ng",{"_index":1193,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["ngbmodal",{"_index":1696,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodalref",{"_index":1706,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngelement",{"_index":1983,"title":{},"body":{"injectables/PluginsService.html":{}}}],["ngmodule",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["ngonchanges",{"_index":40,"title":{},"body":{"components/AddComponent.html":{}}}],["ngonchanges(changes",{"_index":52,"title":{},"body":{"components/AddComponent.html":{}}}],["ngondestroy",{"_index":803,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["ngrx",{"_index":497,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/component",{"_index":2240,"title":{},"body":{"modules/RootModule.html":{},"dependencies.html":{}}}],["ngrx/data",{"_index":1410,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1140,"title":{},"body":{"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1408,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"modules/DataModule.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngterminal",{"_index":1187,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ngterminalmodule",{"_index":1257,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["nguniversal/express",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":2709,"title":{},"body":{"modules/WalletModule.html":{}}}],["nodaemonrunningdialog",{"_index":101,"title":{"components/NoDaemonRunningDialog.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["nodes",{"_index":2063,"title":{},"body":{"components/ProfileComponent.html":{},"components/VpnComponent.html":{}}}],["nofollow,noindex",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["none",{"_index":3034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["normalized",{"_index":763,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["note",{"_index":2442,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["nothing",{"_index":1399,"title":{},"body":{"injectables/CryptService.html":{}}}],["notifier",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"dependencies.html":{}}}],["notifiermodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["notifiermodule.withconfig",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["notifierservice",{"_index":1874,"title":{},"body":{"components/OpenComponent.html":{}}}],["now",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/TimeAgoPipe.html":{}}}],["npm",{"_index":3069,"title":{},"body":{"index.html":{}}}],["null",{"_index":1401,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"pipes/ShruggiePipe.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["number",{"_index":62,"title":{},"body":{"components/AddComponent.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["number(this",{"_index":553,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["number.isnan(seconds",{"_index":2421,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["number:'1.0",{"_index":2464,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["number:\\'1.0",{"_index":2465,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["object",{"_index":754,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["object.values(data).flat",{"_index":2461,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["observable",{"_index":1009,"title":{},"body":{"injectables/ChartService.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{}}}],["observables",{"_index":1014,"title":{},"body":{"injectables/ChartService.html":{}}}],["of(chartsactions.chartnetworkdifficultyloadfailure({error",{"_index":1149,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["of(walletactions.walletfailure({error",{"_index":2690,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["offsetgridlines",{"_index":1802,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["oftype",{"_index":1139,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["oftype('[settings",{"_index":2266,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype('[wallet",{"_index":2662,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultyloadrequested",{"_index":1110,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystartpolling",{"_index":1100,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystoppolling",{"_index":1107,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(walletactions.walletloaddata",{"_index":2673,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstartpolling",{"_index":2666,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstoppolling",{"_index":2670,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["omit",{"_index":2144,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["on(chartsactions.chartnetworkdifficultyloadfailure",{"_index":1157,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["onchanges",{"_index":30,"title":{},"body":{"components/AddComponent.html":{}}}],["onclose",{"_index":1733,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["ondestroy",{"_index":797,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ondismiss",{"_index":1734,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["one",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["onnoclick",{"_index":1437,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["open",{"_index":50,"title":{},"body":{"components/AddComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["open'},{'name",{"_index":105,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["open.component.html",{"_index":1871,"title":{},"body":{"components/OpenComponent.html":{}}}],["opencomponent",{"_index":104,"title":{"components/OpenComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["opened",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/WalletRpcService.html":{}}}],["openedwallet",{"_index":2603,"title":{},"body":{"components/WalletComponent.html":{}}}],["openned",{"_index":2746,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openpgp",{"_index":462,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["openwallet",{"_index":589,"title":{"interfaces/OpenWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["openwallet(key",{"_index":2618,"title":{},"body":{"components/WalletComponent.html":{}}}],["openwallet(req",{"_index":2829,"title":{},"body":{"injectables/WalletService.html":{}}}],["openwallet(x",{"_index":2763,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["option",{"_index":1116,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["options.pollinginterval).pipe",{"_index":1121,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["opts",{"_index":2435,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["orchestrates",{"_index":2836,"title":{},"body":{"injectables/WalletService.html":{}}}],["other(method",{"_index":2765,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["otherwise",{"_index":2476,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["out",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["outdated",{"_index":1945,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["outgoing_connections_count",{"_index":919,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["outpouts",{"_index":562,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["output",{"_index":1376,"title":{},"body":{"injectables/CryptService.html":{}}}],["outputs",{"_index":2469,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["overflow",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":756,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["overview",{"_index":3078,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1612,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/PostRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.addsection('daemon",{"_index":2369,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.set('daemon",{"_index":2370,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.stringify('\\r\\n",{"_index":2374,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["package",{"_index":2958,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["page",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/UserComponent.html":{}}}],["pagenumber",{"_index":1900,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pages",{"_index":1909,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pagination",{"_index":2861,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptions",{"_index":1897,"title":{"classes/PaginatorOptions.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptionsinterface",{"_index":1899,"title":{"classes/PaginatorOptionsInterface.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["panel",{"_index":2284,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["param",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":881,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/Response.html":{}}}],["parseint(value",{"_index":2091,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["parser",{"_index":471,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["parseuri",{"_index":587,"title":{"interfaces/ParseUri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["parseuri(x",{"_index":2768,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["parsing",{"_index":1777,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["parts",{"_index":1207,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["pass",{"_index":1372,"title":{},"body":{"injectables/CryptService.html":{}}}],["pass')).value",{"_index":1891,"title":{},"body":{"components/OpenComponent.html":{}}}],["passphrase",{"_index":1300,"title":{},"body":{"injectables/CryptService.html":{}}}],["password",{"_index":591,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"interfaces/UserOptions.html":{},"injectables/WalletEffects.html":{},"miscellaneous/enumerations.html":{}}}],["password_confirm",{"_index":1832,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["passwordless",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordrepeat",{"_index":1642,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["path",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["path(filename",{"_index":1538,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["path(type",{"_index":1486,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["pathmatch",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["pathname",{"_index":1474,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["payload",{"_index":1130,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WebStorageService.html":{}}}],["payload}).then((data",{"_index":2910,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payment",{"_index":1570,"title":{"interfaces/Payment.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{}}}],["payment_id",{"_index":12,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["payment_ids",{"_index":1564,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["payments",{"_index":1567,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["pbkdf2",{"_index":1333,"title":{},"body":{"injectables/CryptService.html":{}}}],["pending",{"_index":1583,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["people",{"_index":1295,"title":{},"body":{"injectables/CryptService.html":{},"contributing.html":{}}}],["per",{"_index":2519,"title":{},"body":{"components/UserComponent.html":{}}}],["perform",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["performs",{"_index":2875,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["persist",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["person_add",{"_index":2059,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personality",{"_index":1308,"title":{},"body":{"injectables/CryptService.html":{}}}],["pi4",{"_index":1326,"title":{},"body":{"injectables/CryptService.html":{}}}],["pipe",{"_index":1127,"title":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}},"body":{"injectables/ChartsEffects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletEffects.html":{}}}],["pipe(filter((event",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1444,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["pipes/pipes.module",{"_index":2038,"title":{},"body":{"modules/PostModule.html":{}}}],["pipesmodule",{"_index":1916,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1452,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["placeholder",{"_index":519,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":957,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["platformid",{"_index":948,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["please",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["plugin.lthn.chain.table.recent",{"_index":834,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.words.alt_blocks",{"_index":2203,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.difficulty",{"_index":2205,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.grey_peerlist_size",{"_index":2207,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.height",{"_index":2199,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.incoming_connections_count",{"_index":2209,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.outgoing_connections_count",{"_index":2211,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.status",{"_index":2213,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.target",{"_index":2215,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.target_height",{"_index":2217,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.testnet",{"_index":2219,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.top_block_hash",{"_index":2221,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.tx_count",{"_index":2222,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.tx_pool",{"_index":2201,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.white_peerlist_size",{"_index":2224,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.wallet.button.create",{"_index":1859,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.button.restore",{"_index":2139,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.button.unlock",{"_index":1896,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.label.address",{"_index":2134,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.autosave",{"_index":2138,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.filename",{"_index":1855,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.restore",{"_index":2137,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.spend",{"_index":2135,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.view",{"_index":2136,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.wallet",{"_index":1857,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.new",{"_index":1854,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.titles.restore",{"_index":2133,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.unlock",{"_index":1894,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.titles.wallet",{"_index":2463,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["plugin/console/console.module",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{}}}],["plugin/hashvault/charts/network",{"_index":1032,"title":{},"body":{"injectables/ChartService.html":{}}}],["plugin/hive/post/post",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain.service",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/chain/data",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/chain/interfaces/props/get_info",{"_index":814,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/wallet/components/open.component",{"_index":2706,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/components/transactions.component",{"_index":2708,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/data",{"_index":1886,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["plugin/lthn/wallet/interfaces",{"_index":2449,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["plugin/lthn/wallet/interfaces/requests/restorewallet",{"_index":2788,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["plugin/lthn/wallet/wallet",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/wallet/wallet.component",{"_index":1958,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["plugin/lthn/wallet/wallet.module",{"_index":2235,"title":{},"body":{"modules/RootModule.html":{}}}],["plugin/lthn/wallet/wallet.service",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["plugin/plugins.module",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin/plugins.service",{"_index":1955,"title":{},"body":{"components/PluginsComponent.html":{},"modules/PluginsModule.html":{}}}],["pluginconfig",{"_index":2604,"title":{},"body":{"components/WalletComponent.html":{}}}],["plugindefinition",{"_index":1934,"title":{"interfaces/PluginDefinition.html":{}},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["plugins",{"_index":787,"title":{"interfaces/Plugins.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{}}}],["plugins'},{'name",{"_index":107,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["plugins.component.html",{"_index":1948,"title":{},"body":{"components/PluginsComponent.html":{}}}],["plugins.component.scss",{"_index":1947,"title":{},"body":{"components/PluginsComponent.html":{}}}],["plugins/lthn/chain/data",{"_index":502,"title":{},"body":{"interfaces/AppState.html":{}}}],["plugins/lthn/wallet/data",{"_index":501,"title":{},"body":{"interfaces/AppState.html":{}}}],["pluginscomponent",{"_index":106,"title":{"components/PluginsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["pluginsmodule",{"_index":311,"title":{"modules/PluginsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginsservice",{"_index":1951,"title":{"injectables/PluginsService.html":{}},"body":{"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"overview.html":{}}}],["pluginstatus",{"_index":1939,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pluginstatus.active",{"_index":2629,"title":{},"body":{"components/WalletComponent.html":{}}}],["point",{"_index":775,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WebsocketService.html":{}}}],["polling",{"_index":1119,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["pollinginterval",{"_index":939,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["pollingstartaction",{"_index":1753,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollingstopaction",{"_index":1754,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollinguntil",{"_index":1094,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["polyfill",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["pool",{"_index":833,"title":{},"body":{"components/BlockchainComponent.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["poolstatsstate",{"_index":1154,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["popup",{"_index":1992,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupcomponent",{"_index":1960,"title":{},"body":{"components/PluginsComponent.html":{}}}],["popupcomponentref",{"_index":1996,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel",{"_index":1985,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel.addeventlistener('closed",{"_index":1988,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel.message",{"_index":1990,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupelement",{"_index":1961,"title":{},"body":{"components/PluginsComponent.html":{}}}],["position",{"_index":971,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["possible",{"_index":2529,"title":{},"body":{"components/UserComponent.html":{}}}],["post",{"_index":903,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"injectables/WalletRpcService.html":{}}}],["post'},{'name",{"_index":109,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["post('https://localhost:36911/daemon/chain/json_rpc",{"_index":912,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["post(`${this.apiurl}/list",{"_index":1550,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/read",{"_index":1552,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`https://localhost:36911/update/cli",{"_index":910,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["post.component",{"_index":2037,"title":{},"body":{"modules/PostModule.html":{}}}],["post.component.html",{"_index":2005,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.scss",{"_index":2004,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].author",{"_index":2031,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].body",{"_index":2027,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].title",{"_index":2029,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":108,"title":{"components/PostComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["postmodule",{"_index":2033,"title":{"modules/PostModule.html":{}},"body":{"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postroutingmodule",{"_index":411,"title":{"modules/PostRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":2151,"title":{},"body":{"components/RootComponent.html":{}}}],["prefrences",{"_index":2075,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["primary",{"_index":2142,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["printable",{"_index":1228,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["priority",{"_index":2346,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["privacy",{"_index":2491,"title":{},"body":{"components/UserComponent.html":{}}}],["private",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["privatekey",{"_index":1390,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pro",{"_index":1794,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["processingform",{"_index":2363,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile",{"_index":2043,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile'},{'name",{"_index":112,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profile.component.html",{"_index":2045,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":2044,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profiles",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{}}}],["profilestate",{"_index":2064,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["promise(f",{"_index":2179,"title":{},"body":{"components/RootComponent.html":{}}}],["promise(resolve",{"_index":1711,"title":{},"body":{"components/ModalComponent.html":{}}}],["prop",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["protect",{"_index":2499,"title":{},"body":{"components/UserComponent.html":{}}}],["protected",{"_index":1270,"title":{},"body":{"injectables/CryptService.html":{}}}],["protecting",{"_index":2490,"title":{},"body":{"components/UserComponent.html":{}}}],["protects",{"_index":1374,"title":{},"body":{"injectables/CryptService.html":{}}}],["provide",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{}}}],["provided",{"_index":1012,"title":{},"body":{"injectables/ChartService.html":{}}}],["providedin",{"_index":472,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["provider",{"_index":2583,"title":{},"body":{"components/VpnComponent.html":{}}}],["providers",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"modules/PluginsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["public",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["publically",{"_index":2474,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["publickey",{"_index":2380,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["purchase",{"_index":2522,"title":{},"body":{"components/UserComponent.html":{}}}],["pure",{"_index":1453,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["purposes",{"_index":1335,"title":{},"body":{"injectables/CryptService.html":{}}}],["querykey",{"_index":2730,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykey(x",{"_index":2770,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykeyin",{"_index":2081,"title":{"interfaces/QueryKeyIn.html":{}},"body":{"interfaces/QueryKeyIn.html":{},"injectables/WalletRpcService.html":{}}}],["querykeyout",{"_index":2084,"title":{"interfaces/QueryKeyOut.html":{}},"body":{"interfaces/QueryKeyOut.html":{},"injectables/WalletRpcService.html":{}}}],["quick",{"_index":1325,"title":{},"body":{"injectables/CryptService.html":{}}}],["r",{"_index":1456,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["radial",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":776,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["random",{"_index":572,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["random.hex(false)(random.engines.nativemath",{"_index":549,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["randomalias",{"_index":2046,"title":{},"body":{"components/ProfileComponent.html":{}}}],["raw",{"_index":891,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["reactivecomponentmodule",{"_index":2239,"title":{},"body":{"modules/RootModule.html":{}}}],["reactiveformsmodule",{"_index":658,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["read",{"_index":1471,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["read(filename",{"_index":1540,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["read(type",{"_index":1489,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["readfile",{"_index":1499,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readfile(filename",{"_index":1513,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readme_list",{"_index":1938,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["reason",{"_index":1303,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"injectables/WebsocketService.html":{}}}],["receive",{"_index":1675,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["received",{"_index":2942,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["recenttxs",{"_index":802,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["recipient",{"_index":1677,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recipient_name",{"_index":1671,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recover",{"_index":2527,"title":{},"body":{"components/UserComponent.html":{}}}],["redirected",{"_index":2539,"title":{},"body":{"components/UserComponent.html":{}}}],["reducer",{"_index":514,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1158,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":506,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["ref",{"_index":1176,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["refrence",{"_index":3064,"title":{},"body":{"index.html":{}}}],["region",{"_index":2591,"title":{},"body":{"components/VpnComponent.html":{}}}],["register",{"_index":1963,"title":{},"body":{"components/PluginsComponent.html":{}}}],["registerables",{"_index":1024,"title":{},"body":{"injectables/ChartService.html":{}}}],["rehydrate",{"_index":522,"title":{},"body":{"interfaces/AppState.html":{}}}],["relative",{"_index":972,"title":{},"body":{"directives/ChartDirective.html":{}}}],["relativelinkresolution",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remote",{"_index":2062,"title":{},"body":{"components/ProfileComponent.html":{}}}],["removeitem",{"_index":2871,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeitem(key",{"_index":2883,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeonundefined",{"_index":523,"title":{},"body":{"interfaces/AppState.html":{}}}],["removetrailingzero",{"_index":2087,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["removetrailingzerospipe",{"_index":1920,"title":{"pipes/RemoveTrailingZerosPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"overview.html":{}}}],["renderappview",{"_index":2152,"title":{},"body":{"components/RootComponent.html":{}}}],["renderer",{"_index":950,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderer2",{"_index":945,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderfirstrunview",{"_index":2153,"title":{},"body":{"components/RootComponent.html":{}}}],["renderwebview",{"_index":2154,"title":{},"body":{"components/RootComponent.html":{}}}],["replace('o",{"_index":1348,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/a/gi",{"_index":1352,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/e/gi",{"_index":1350,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/l/gi",{"_index":1349,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/s/gi",{"_index":1354,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/t/gi",{"_index":1356,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducable",{"_index":1345,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducible",{"_index":1291,"title":{},"body":{"injectables/CryptService.html":{}}}],["req",{"_index":2777,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["req.address",{"_index":2663,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["req.password",{"_index":2664,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["request",{"_index":1494,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["request(this.url)('add_address_book",{"_index":2813,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('create_wallet",{"_index":2816,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('delete_address_book",{"_index":2814,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('generate_from_keys",{"_index":2817,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_address_book",{"_index":2812,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_bulk_payments",{"_index":2802,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_payments",{"_index":2801,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfer_by_txid",{"_index":2804,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfers",{"_index":2803,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getaddress",{"_index":2794,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getbalance",{"_index":2793,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getheight",{"_index":2795,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('incoming_transfers",{"_index":2805,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_integrated_address",{"_index":2807,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_uri",{"_index":2810,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('open_wallet",{"_index":2815,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('parse_uri",{"_index":2811,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('query_key",{"_index":2806,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('split_integrated_address",{"_index":2808,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('stop_wallet",{"_index":2809,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('store",{"_index":2800,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_all",{"_index":2799,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_dust",{"_index":2798,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer",{"_index":2796,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer_split",{"_index":2797,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)(method",{"_index":2818,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["requested",{"_index":1488,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["require('axios').default",{"_index":2099,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{}}}],["require('crypto",{"_index":477,"title":{},"body":{"injectables/AppService.html":{}}}],["require('openpgp",{"_index":475,"title":{},"body":{"injectables/AppService.html":{}}}],["required",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["requires",{"_index":1302,"title":{},"body":{"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["res['result",{"_index":2685,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["reset",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":1715,"title":{},"body":{"components/ModalComponent.html":{}}}],["response",{"_index":1075,"title":{"interfaces/Response.html":{}},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/Response.html":{}}}],["responsetype",{"_index":901,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["responsiveanimationduration",{"_index":773,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["restore",{"_index":72,"title":{},"body":{"components/AddComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletService.html":{}}}],["restore'},{'name",{"_index":114,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["restore.component.html",{"_index":2108,"title":{},"body":{"components/RestoreComponent.html":{}}}],["restore_height",{"_index":2116,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["restorecomponent",{"_index":113,"title":{"components/RestoreComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["restorewallet",{"_index":2110,"title":{"interfaces/RestoreWallet.html":{}},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["restorewallet(req",{"_index":2831,"title":{},"body":{"injectables/WalletService.html":{}}}],["restorewallet(x",{"_index":2772,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["restorewalletform",{"_index":2109,"title":{},"body":{"components/RestoreComponent.html":{}}}],["result",{"_index":1485,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"components/ModalComponent.html":{},"interfaces/Response.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":2896,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["ret.data",{"_index":2912,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["return",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["revocationcertificate",{"_index":2381,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["rgba(21",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":1805,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(255,255,255,0.5",{"_index":1812,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(8",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["rgbstring",{"_index":1052,"title":{},"body":{"injectables/ChartService.html":{}}}],["rick's",{"_index":729,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["rick\\'s",{"_index":730,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["right",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["robots",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["root",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["root.component",{"_index":2232,"title":{},"body":{"modules/RootModule.html":{}}}],["root.component.html",{"_index":2146,"title":{},"body":{"components/RootComponent.html":{}}}],["rootcomponent",{"_index":115,"title":{"components/RootComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["rootmodule",{"_index":2226,"title":{"modules/RootModule.html":{}},"body":{"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rootroutingmodule",{"_index":412,"title":{"modules/RootRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["route",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["routermodule",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":867,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":604,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routing",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["routing.module",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["row",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":2433,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rpc",{"_index":735,"title":{},"body":{"interfaces/Balance.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rpc.ts",{"_index":2095,"title":{},"body":{"interfaces/Response.html":{}}}],["rpcbindport",{"_index":2789,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["rpcbody",{"_index":811,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/Response.html":{},"injectables/WalletEffects.html":{}}}],["rsa",{"_index":1367,"title":{},"body":{"injectables/CryptService.html":{}}}],["rsabits",{"_index":1369,"title":{},"body":{"injectables/CryptService.html":{}}}],["rt",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["rt.data.subscribe((data",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":2299,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["run",{"_index":609,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PluginsService.html":{},"components/ProfileComponent.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["running.component",{"_index":2336,"title":{},"body":{"modules/StatusModule.html":{}}}],["running.component.html",{"_index":1434,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts",{"_index":1429,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:13",{"_index":1861,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:15",{"_index":1864,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:16",{"_index":1863,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:19",{"_index":1862,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["runtime",{"_index":3059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxjs",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["rxjs/websocket",{"_index":2932,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rxjslogginglevel",{"_index":1143,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rxjslogginglevel.debug",{"_index":1115,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["rxjslogginglevel.info",{"_index":1102,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["safe",{"_index":744,"title":{},"body":{"interfaces/Balance.html":{}}}],["salt",{"_index":1281,"title":{},"body":{"injectables/CryptService.html":{}}}],["salted",{"_index":1332,"title":{},"body":{"injectables/CryptService.html":{}}}],["salter",{"_index":1296,"title":{},"body":{"injectables/CryptService.html":{}}}],["salts",{"_index":1292,"title":{},"body":{"injectables/CryptService.html":{}}}],["same",{"_index":1280,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"components/VpnComponent.html":{}}}],["samples",{"_index":1817,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sanitizer",{"_index":1464,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["sans",{"_index":1793,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["save",{"_index":1495,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/ProfileState.html":{},"interfaces/RestoreWallet.html":{}}}],["scales",{"_index":781,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["scared",{"_index":2955,"title":{},"body":{"contributing.html":{}}}],["screen",{"_index":1250,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["searchable",{"_index":2475,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["seconds",{"_index":2404,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["secret",{"_index":2518,"title":{},"body":{"components/UserComponent.html":{}}}],["section",{"_index":2377,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["security",{"_index":2501,"title":{},"body":{"components/UserComponent.html":{}}}],["seed",{"_index":593,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["select",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["select(selectchartdata(this.chartmeta[name].key",{"_index":1071,"title":{},"body":{"injectables/ChartService.html":{}}}],["select(selectchartoptions('networkdifficulty",{"_index":1114,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectchartdata",{"_index":1031,"title":{},"body":{"injectables/ChartService.html":{}}}],["selectchartoptions",{"_index":1146,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selecthashrateminersoptions",{"_index":1117,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectlanguage",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenuvisibility",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["selectopenedwalletdata",{"_index":2693,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["selector",{"_index":32,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["selectors",{"_index":1147,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["selectwalletdata",{"_index":2694,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["selectwallettransactions",{"_index":2452,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["send",{"_index":1424,"title":{},"body":{"interfaces/Destination.html":{},"injectables/WalletRpcService.html":{}}}],["sending",{"_index":581,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["sendmessage",{"_index":2920,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmessage(msg",{"_index":2926,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sent",{"_index":2654,"title":{},"body":{"components/WalletComponent.html":{}}}],["separator",{"_index":2055,"title":{},"body":{"components/ProfileComponent.html":{}}}],["server",{"_index":454,"title":{},"body":{"modules/AppServerModule.html":{},"interfaces/RestoreWallet.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["servermodule",{"_index":453,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartService.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["service/crypt.service",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["service/filesystem/file",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["service/json",{"_index":812,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["service/ui/modal/modal.component",{"_index":1750,"title":{},"body":{"modules/ModalModule.html":{},"components/WalletComponent.html":{}}}],["service/ui/modal/modal.module",{"_index":2707,"title":{},"body":{"modules/WalletModule.html":{}}}],["service/ui/modal/modalconfig",{"_index":1709,"title":{},"body":{"components/ModalComponent.html":{}}}],["service/wallet.rpc.service",{"_index":1841,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["service/web",{"_index":504,"title":{},"body":{"interfaces/AppState.html":{}}}],["service/websocket.service",{"_index":1195,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["services",{"_index":1042,"title":{},"body":{"injectables/ChartService.html":{},"components/VpnComponent.html":{}}}],["session",{"_index":736,"title":{},"body":{"interfaces/Balance.html":{}}}],["set",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"injectables/PluginsService.html":{}}}],["setinterval",{"_index":1197,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["setitem",{"_index":2872,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setitem(key",{"_index":2885,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setrxjslogginglevel",{"_index":3042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(0",{"_index":3061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(4",{"_index":3060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(level",{"_index":3056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settargettabindex",{"_index":42,"title":{},"body":{"components/AddComponent.html":{}}}],["settimeout(f",{"_index":2180,"title":{},"body":{"components/RootComponent.html":{}}}],["setting",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["setting_tab",{"_index":2253,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":483,"title":{},"body":{"interfaces/AppState.html":{},"components/BackupComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/WalletComponent.html":{}}}],["settings'},{'name",{"_index":118,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["settings.component",{"_index":2282,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":2252,"title":{},"body":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}}}],["settings.component.scss",{"_index":2251,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.reducer",{"_index":507,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingseffects",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingsstate",{"_index":488,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingscomponent",{"_index":117,"title":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["settingseffects",{"_index":2263,"title":{"injectables/SettingsEffects.html":{}},"body":{"injectables/SettingsEffects.html":{}}}],["settingsmodule",{"_index":2271,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":413,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsstate",{"_index":2291,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/SettingsState.html":{}}}],["setup",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["setupcallbacks",{"_index":751,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["setupdatasubscription",{"_index":991,"title":{},"body":{"injectables/ChartService.html":{}}}],["setupdatasubscription(name",{"_index":1006,"title":{},"body":{"injectables/ChartService.html":{}}}],["several",{"_index":1628,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["sha256",{"_index":1340,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256(input",{"_index":1359,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty",{"_index":1264,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty(input",{"_index":1338,"title":{},"body":{"injectables/CryptService.html":{}}}],["share",{"_index":1630,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["shared",{"_index":2078,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["shell/bootstrap",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldclose",{"_index":1735,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shoulddismiss",{"_index":1736,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["show",{"_index":1965,"title":{},"body":{"components/PluginsComponent.html":{}}}],["showascomponent",{"_index":1974,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showascomponent(message",{"_index":1979,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showaselement",{"_index":1975,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showaselement(message",{"_index":1981,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showtx",{"_index":2605,"title":{},"body":{"components/WalletComponent.html":{}}}],["shrug",{"_index":2303,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["shruggiepipe",{"_index":1921,"title":{"pipes/ShruggiePipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ShruggiePipe.html":{},"overview.html":{}}}],["sidenav",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["signals",{"_index":2947,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signatures",{"_index":1395,"title":{},"body":{"injectables/CryptService.html":{}}}],["simplechanges",{"_index":53,"title":{},"body":{"components/AddComponent.html":{}}}],["simply",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":1790,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/SettingsState.html":{}}}],["sizing",{"_index":851,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["slow",{"_index":1320,"title":{},"body":{"injectables/CryptService.html":{}}}],["slug",{"_index":2020,"title":{},"body":{"components/PostComponent.html":{}}}],["smarter",{"_index":2957,"title":{},"body":{"contributing.html":{}}}],["socket",{"_index":2916,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["software",{"_index":1866,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"components/UserComponent.html":{}}}],["something",{"_index":1297,"title":{},"body":{"injectables/CryptService.html":{}}}],["soon",{"_index":2541,"title":{},"body":{"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["spangaps",{"_index":1778,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["spend",{"_index":745,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/RestoreWallet.html":{}}}],["spendkey",{"_index":2120,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spent",{"_index":570,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["spinner",{"_index":2238,"title":{},"body":{"modules/RootModule.html":{}}}],["split",{"_index":1310,"title":{},"body":{"injectables/CryptService.html":{}}}],["splitintegratedaddress",{"_index":2731,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddress(x",{"_index":2774,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddressout",{"_index":2305,"title":{"interfaces/SplitIntegratedAddressOut.html":{}},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"injectables/WalletRpcService.html":{}}}],["src/.../app.module.ts",{"_index":3037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug.rxjs.ts",{"_index":3029,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":3038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducer.ts",{"_index":3040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.reducer.ts",{"_index":3041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../state.ts",{"_index":3028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.options.ts",{"_index":3027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":3039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:100",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.server.module.ts",{"_index":452,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.service.ts",{"_index":459,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:16",{"_index":465,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:17",{"_index":466,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:18",{"_index":463,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/data/data.module.ts",{"_index":1402,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/debug.rxjs.ts",{"_index":3030,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/interface/pagination.ts",{"_index":1898,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:10",{"_index":1910,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:14",{"_index":1905,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:15",{"_index":1907,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:16",{"_index":1908,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:17",{"_index":1903,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:4",{"_index":1911,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:6",{"_index":1912,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:8",{"_index":1913,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/logs/reducer.ts",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/logs/state.ts",{"_index":1636,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["src/app/data/plugins/reducer.ts",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/plugins/state.ts",{"_index":1935,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/reducers/index.ts",{"_index":480,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["src/app/interfaces/file",{"_index":1467,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":654,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:11",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:30",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:46",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:60",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/login.component.ts",{"_index":1640,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:11",{"_index":1650,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:12",{"_index":1648,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:13",{"_index":1649,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:14",{"_index":1645,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:19",{"_index":1646,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/route.guard.ts",{"_index":597,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:34",{"_index":605,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:8",{"_index":601,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/chart/base",{"_index":747,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["src/app/modules/chart/chart",{"_index":928,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["src/app/modules/chart/chart.directive.ts",{"_index":941,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:10",{"_index":951,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:11",{"_index":949,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:21",{"_index":954,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:28",{"_index":953,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:46",{"_index":955,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.module.ts",{"_index":982,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/app/modules/chart/chart.service.ts",{"_index":984,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:125",{"_index":1005,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:19",{"_index":1015,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:20",{"_index":1023,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:26",{"_index":1020,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:34",{"_index":994,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:54",{"_index":996,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:98",{"_index":1007,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/data/effects.ts",{"_index":1089,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:112",{"_index":1109,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:124",{"_index":1097,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:14",{"_index":1138,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:39",{"_index":1135,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:99",{"_index":1106,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/interfaces/difficulty.state.ts",{"_index":935,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["src/app/modules/chart/data/reducer.ts",{"_index":1151,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["src/app/modules/root",{"_index":2244,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["src/app/modules/root.component.ts",{"_index":2145,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:18",{"_index":2169,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:20",{"_index":2167,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:21",{"_index":2166,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:22",{"_index":2168,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:23",{"_index":2165,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:24",{"_index":2157,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:35",{"_index":2159,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:51",{"_index":2160,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:56",{"_index":2161,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:60",{"_index":2158,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:69",{"_index":2163,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:73",{"_index":2164,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:77",{"_index":2162,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.module.ts",{"_index":2231,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/settings/data/settings.effects.ts",{"_index":2264,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:17",{"_index":2265,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:8",{"_index":2270,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.reducer.ts",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/settings/data/settingsstate.ts",{"_index":2292,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/modules/settings/logs/logs.component.ts",{"_index":1657,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:11",{"_index":1661,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:8",{"_index":1660,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.module.ts",{"_index":1666,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/app/modules/settings/settings",{"_index":2288,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2250,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:13",{"_index":2256,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:17",{"_index":2255,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:9",{"_index":2254,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2275,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/status/dialog/no",{"_index":1427,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["src/app/modules/status/status.component.ts",{"_index":2308,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:10",{"_index":2320,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:11",{"_index":2322,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:12",{"_index":2321,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:13",{"_index":2318,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:15",{"_index":2319,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.module.ts",{"_index":2332,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/app/modules/user/data/profile/effects.ts",{"_index":1439,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/effects.ts:5",{"_index":1440,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/reducer.ts",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/profile/state.ts",{"_index":2065,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["src/app/modules/user/data/user/effects.ts",{"_index":1441,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/effects.ts:5",{"_index":1442,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/interfaces/user.options.ts",{"_index":2564,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/data/user/reducer.ts",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/user/state.ts",{"_index":2546,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["src/app/modules/user/profile.component.ts",{"_index":2042,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:15",{"_index":2056,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:19",{"_index":2047,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:23",{"_index":2048,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/user",{"_index":2568,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2357,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:21",{"_index":2487,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:27",{"_index":2488,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:33",{"_index":2489,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:34",{"_index":2485,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:35",{"_index":2486,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:36",{"_index":2483,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:46",{"_index":2484,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2555,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/pipes/content/html.pipe.ts",{"_index":1459,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/html.pipe.ts:8",{"_index":1462,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts",{"_index":1681,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts:8",{"_index":1684,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts",{"_index":2302,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts:5",{"_index":2304,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts",{"_index":1445,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts:7",{"_index":1450,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts",{"_index":1591,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts:15",{"_index":1596,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts:7",{"_index":1597,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts",{"_index":1604,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts:8",{"_index":1607,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts",{"_index":2424,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts:7",{"_index":2427,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts",{"_index":2400,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:10",{"_index":2402,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts",{"_index":2086,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts:7",{"_index":2088,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1924,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/plugins/console/console.component.ts",{"_index":1160,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:16",{"_index":1189,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:18",{"_index":1180,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:19",{"_index":1190,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:20",{"_index":1178,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:29",{"_index":1186,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:57",{"_index":1184,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:61",{"_index":1182,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:66",{"_index":1185,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.module.ts",{"_index":1255,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/plugins/hashvault/charts/network",{"_index":1751,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["src/app/plugins/hive/post/post",{"_index":2039,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["src/app/plugins/hive/post/post.component.ts",{"_index":2003,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:11",{"_index":2012,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:12",{"_index":2013,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:13",{"_index":2011,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:14",{"_index":2010,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:15",{"_index":2008,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:19",{"_index":2009,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.module.ts",{"_index":2036,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain",{"_index":868,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts",{"_index":796,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:18",{"_index":809,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:19",{"_index":805,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:25",{"_index":808,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:39",{"_index":807,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.module.ts",{"_index":861,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts",{"_index":873,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:11",{"_index":894,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:32",{"_index":890,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:53",{"_index":893,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:76",{"_index":884,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:8",{"_index":879,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:89",{"_index":882,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/data/reducer.ts",{"_index":3054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/chain/interfaces/props/get_info.ts",{"_index":914,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["src/app/plugins/lthn/vpn/vpn",{"_index":2599,"title":{},"body":{"modules/VpnRoutingModule.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts",{"_index":2572,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:11",{"_index":2576,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:8",{"_index":2575,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.module.ts",{"_index":2596,"title":{},"body":{"modules/VpnModule.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts",{"_index":27,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:13",{"_index":60,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:17",{"_index":61,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:27",{"_index":54,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:8",{"_index":51,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:9",{"_index":47,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts",{"_index":721,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:10",{"_index":724,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:7",{"_index":723,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts",{"_index":1830,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:14",{"_index":1840,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:15",{"_index":1839,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:16",{"_index":1835,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:19",{"_index":1838,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:25",{"_index":1837,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts",{"_index":1870,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:14",{"_index":1876,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:16",{"_index":1881,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:17",{"_index":1882,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:23",{"_index":1875,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:33",{"_index":1877,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:42",{"_index":1879,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts",{"_index":2107,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:13",{"_index":2111,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:18",{"_index":2112,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:32",{"_index":2113,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts",{"_index":2260,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:10",{"_index":2262,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:7",{"_index":2261,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts",{"_index":2429,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:16",{"_index":2437,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:17",{"_index":2438,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:25",{"_index":2446,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:26",{"_index":2447,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:28",{"_index":2448,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:32",{"_index":2445,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:36",{"_index":2441,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:37",{"_index":2436,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:42",{"_index":2440,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:51",{"_index":2439,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts",{"_index":2656,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:103",{"_index":2661,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:19",{"_index":2665,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:33",{"_index":2691,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:86",{"_index":2669,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:94",{"_index":2672,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/reducer.ts",{"_index":3055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts",{"_index":2852,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:12",{"_index":2857,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:13",{"_index":2856,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:14",{"_index":2858,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getaddressbookout.ts",{"_index":1558,"title":{},"body":{"interfaces/GetAddressBookOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsin.ts",{"_index":1562,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsout.ts",{"_index":1569,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsin.ts",{"_index":1573,"title":{},"body":{"interfaces/GetPaymentsIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsout.ts",{"_index":1575,"title":{},"body":{"interfaces/GetPaymentsOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersin.ts",{"_index":1577,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersout.ts",{"_index":1587,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersin.ts",{"_index":1617,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersout.ts",{"_index":1622,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeintegratedaddressin.ts",{"_index":1669,"title":{},"body":{"interfaces/MakeIntegratedAddressIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeuriin.ts",{"_index":1670,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyin.ts",{"_index":2082,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyout.ts",{"_index":2085,"title":{},"body":{"interfaces/QueryKeyOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/splitintegratedaddressout.ts",{"_index":2306,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/storeout.ts",{"_index":2338,"title":{},"body":{"interfaces/StoreOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallin.ts",{"_index":2340,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallout.ts",{"_index":2350,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepdustout.ts",{"_index":2355,"title":{},"body":{"interfaces/SweepDustOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferin.ts",{"_index":2468,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferout.ts",{"_index":2471,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transfersplitout.ts",{"_index":2479,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/requests/restorewallet.ts",{"_index":2140,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/addaddressbook.ts",{"_index":6,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/address.ts",{"_index":132,"title":{},"body":{"interfaces/Address.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/balance.ts",{"_index":732,"title":{},"body":{"interfaces/Balance.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/destination.ts",{"_index":1422,"title":{},"body":{"interfaces/Destination.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/height.ts",{"_index":1615,"title":{},"body":{"interfaces/Height.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/integratedaddress.ts",{"_index":1632,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/payment.ts",{"_index":1914,"title":{},"body":{"interfaces/Payment.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/transfer.ts",{"_index":2466,"title":{},"body":{"interfaces/Transfer.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/uri.ts",{"_index":2482,"title":{},"body":{"interfaces/Uri.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts",{"_index":533,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:13",{"_index":538,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:14",{"_index":539,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:9",{"_index":1634,"title":{},"body":{"classes/LTHN.html":{}}}],["src/app/plugins/lthn/wallet/validators.ts",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/wallet/wallet",{"_index":2715,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts",{"_index":2600,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:17",{"_index":2630,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:24",{"_index":2622,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:26",{"_index":2633,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:28",{"_index":2623,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:29",{"_index":2624,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:30",{"_index":2631,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:31",{"_index":2632,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:41",{"_index":2610,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:44",{"_index":2617,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:61",{"_index":2615,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:65",{"_index":2616,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:73",{"_index":2619,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:77",{"_index":2611,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:81",{"_index":2621,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:86",{"_index":2613,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.module.ts",{"_index":2700,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts",{"_index":2819,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:14",{"_index":2824,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:24",{"_index":2833,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:34",{"_index":2832,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:44",{"_index":2830,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:54",{"_index":2825,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:60",{"_index":2826,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:78",{"_index":2834,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:85",{"_index":2828,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/plugins.component.ts",{"_index":1946,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:11",{"_index":1952,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:13",{"_index":1954,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:20",{"_index":1953,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.module.ts",{"_index":1971,"title":{},"body":{"modules/PluginsModule.html":{}}}],["src/app/plugins/plugins.service.ts",{"_index":1973,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:15",{"_index":1982,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:29",{"_index":1980,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:7",{"_index":1978,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/services/crypt.service.ts",{"_index":1258,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:121",{"_index":1301,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:25",{"_index":1274,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:44",{"_index":1339,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:56",{"_index":1330,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:71",{"_index":1268,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:8",{"_index":1266,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:92",{"_index":1316,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/filesystem/file",{"_index":1496,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["src/app/services/i18n/translate/translate.module.ts",{"_index":2481,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/app/services/json",{"_index":2094,"title":{},"body":{"interfaces/Response.html":{}}}],["src/app/services/ui/modal/modal.component.ts",{"_index":1688,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:14",{"_index":1705,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:15",{"_index":1697,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:19",{"_index":1701,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:21",{"_index":1702,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:28",{"_index":1699,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:35",{"_index":1700,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.module.ts",{"_index":1749,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/services/ui/modal/modalconfig.ts",{"_index":1725,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:10",{"_index":1741,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:12",{"_index":1742,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:14",{"_index":1737,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:16",{"_index":1738,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:18",{"_index":1739,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:20",{"_index":1740,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:6",{"_index":1743,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:8",{"_index":1744,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/wallet.rpc.service.ts",{"_index":2718,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:107",{"_index":2781,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:115",{"_index":2779,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:124",{"_index":2751,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:133",{"_index":2748,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:142",{"_index":2756,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:152",{"_index":2753,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:161",{"_index":2758,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:172",{"_index":2771,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:18",{"_index":2735,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:181",{"_index":2760,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:192",{"_index":2775,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:202",{"_index":2778,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:211",{"_index":2762,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:220",{"_index":2769,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:229",{"_index":2744,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:238",{"_index":2737,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:247",{"_index":2741,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:256",{"_index":2764,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:265",{"_index":2739,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:274",{"_index":2773,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:28",{"_index":2776,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:284",{"_index":2767,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:53",{"_index":2745,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:62",{"_index":2742,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:71",{"_index":2749,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:81",{"_index":2784,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:90",{"_index":2786,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:98",{"_index":2782,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/web",{"_index":2865,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["src/app/services/websocket.service.ts",{"_index":2915,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:10",{"_index":2921,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:14",{"_index":2923,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:21",{"_index":2925,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:25",{"_index":2922,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:29",{"_index":2927,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/main.ts",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssh_pem",{"_index":2567,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["standard",{"_index":2520,"title":{},"body":{"components/UserComponent.html":{}}}],["standard_address",{"_index":2307,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["start",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["start_on_boot",{"_index":2371,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["startblockchain",{"_index":2155,"title":{},"body":{"components/RootComponent.html":{}}}],["startdaemon",{"_index":878,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["started",{"_index":405,"title":{"contributing.html":{},"index.html":{}},"body":{"modules/AppModule.html":{}}}],["startpollingwallet",{"_index":2658,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["startwallet",{"_index":2156,"title":{},"body":{"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["starwars",{"_index":2052,"title":{},"body":{"components/ProfileComponent.html":{}}}],["state",{"_index":517,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["state.networkdifficulty",{"_index":1156,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["static",{"_index":1093,"title":{},"body":{"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{}}}],["stats",{"_index":2285,"title":{},"body":{"modules/SettingsModule.html":{}}}],["status",{"_index":102,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status'},{'name",{"_index":120,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status.component",{"_index":2333,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.component.html",{"_index":2310,"title":{},"body":{"components/StatusComponent.html":{}}}],["status.component.scss",{"_index":2309,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_annon",{"_index":2312,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_daemon",{"_index":2313,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_private",{"_index":2314,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_secure",{"_index":2315,"title":{},"body":{"components/StatusComponent.html":{}}}],["statuscomponent",{"_index":119,"title":{"components/StatusComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["statusmodule",{"_index":312,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["steps",{"_index":2510,"title":{},"body":{"components/UserComponent.html":{}}}],["stoppollingwallet",{"_index":2659,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["stopwallet",{"_index":2732,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["storage",{"_index":524,"title":{},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["storage.service",{"_index":505,"title":{},"body":{"interfaces/AppState.html":{}}}],["storage.service.ts",{"_index":2866,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:10",{"_index":2889,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:11",{"_index":2888,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:13",{"_index":2892,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:17",{"_index":2882,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:21",{"_index":2880,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:33",{"_index":2886,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:44",{"_index":2884,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:50",{"_index":2878,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:64",{"_index":2874,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:9",{"_index":2890,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["store",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"components/OpenComponent.html":{},"interfaces/ProfileState.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["stored",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["storedevtoolsmodule",{"_index":1404,"title":{},"body":{"modules/DataModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":1414,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule",{"_index":1403,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule.forroot(reducers",{"_index":1413,"title":{},"body":{"modules/DataModule.html":{}}}],["storeout",{"_index":2337,"title":{"interfaces/StoreOut.html":{}},"body":{"interfaces/StoreOut.html":{},"injectables/WalletRpcService.html":{}}}],["storerouterconnectingmodule",{"_index":1407,"title":{},"body":{"modules/DataModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":1420,"title":{},"body":{"modules/DataModule.html":{}}}],["stream",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetPaymentsIn.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["strip",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["style",{"_index":2053,"title":{},"body":{"components/ProfileComponent.html":{}}}],["styles",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["styleurls",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["sub",{"_index":1170,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/WalletComponent.html":{}}}],["sub.unsubscribe",{"_index":2646,"title":{},"body":{"components/WalletComponent.html":{}}}],["subject",{"_index":1137,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WebsocketService.html":{}}}],["subject.subscribe",{"_index":2940,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["submit",{"_index":1643,"title":{},"body":{"components/LoginComponent.html":{}}}],["subs",{"_index":2007,"title":{},"body":{"components/PostComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["subscribe",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((data",{"_index":819,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["subscription",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["sufficiently",{"_index":740,"title":{},"body":{"interfaces/Balance.html":{}}}],["supplied",{"_index":1271,"title":{},"body":{"injectables/CryptService.html":{}}}],["support",{"_index":3075,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["svg",{"_index":3076,"title":{},"body":{"modules.html":{}}}],["sweepall",{"_index":2341,"title":{},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepall(x",{"_index":2780,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepallin",{"_index":2339,"title":{"interfaces/SweepAllIn.html":{}},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepallout",{"_index":2349,"title":{"interfaces/SweepAllOut.html":{}},"body":{"interfaces/SweepAllOut.html":{},"injectables/WalletRpcService.html":{}}}],["sweepdust",{"_index":2733,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepdustout",{"_index":2354,"title":{"interfaces/SweepDustOut.html":{}},"body":{"interfaces/SweepDustOut.html":{}}}],["swimlane/ngx",{"_index":2450,"title":{},"body":{"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["switchmap",{"_index":1125,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap(([action",{"_index":1118,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap((req",{"_index":2267,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["symbol",{"_index":2426,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["sync",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["syndrome",{"_index":1309,"title":{},"body":{"injectables/CryptService.html":{}}}],["system",{"_index":1477,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{}}}],["system.interface",{"_index":1546,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["system.interface.ts",{"_index":1468,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:16",{"_index":1490,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:25",{"_index":1492,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:33",{"_index":1480,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:41",{"_index":1484,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:49",{"_index":1475,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:8",{"_index":1487,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.service",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["system.service.ts",{"_index":1497,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:17",{"_index":1519,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:27",{"_index":1510,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:41",{"_index":1514,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:51",{"_index":1517,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:61",{"_index":1512,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:71",{"_index":1507,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:8",{"_index":1504,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["t",{"_index":1611,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["tag",{"_index":2187,"title":{},"body":{"components/RootComponent.html":{}}}],["take",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["takes",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["takeuntil",{"_index":1122,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["takewhile",{"_index":2678,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["target",{"_index":920,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["target_height",{"_index":921,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["targetaddform",{"_index":44,"title":{},"body":{"components/AddComponent.html":{}}}],["targettabindex",{"_index":38,"title":{},"body":{"components/AddComponent.html":{}}}],["task",{"_index":2356,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["templateref",{"_index":1703,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":36,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tension",{"_index":778,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["terminal",{"_index":1194,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"dependencies.html":{}}}],["test",{"_index":2625,"title":{},"body":{"components/WalletComponent.html":{}}}],["testnet",{"_index":922,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["text",{"_index":902,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["that.author",{"_index":2030,"title":{},"body":{"components/PostComponent.html":{}}}],["that.content",{"_index":2026,"title":{},"body":{"components/PostComponent.html":{}}}],["that.post",{"_index":2025,"title":{},"body":{"components/PostComponent.html":{}}}],["that.posts",{"_index":2193,"title":{},"body":{"components/RootComponent.html":{}}}],["that.ref.markforcheck",{"_index":1213,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["that.title",{"_index":2028,"title":{},"body":{"components/PostComponent.html":{}}}],["that.ws.sendmessage(`cmd:letheand:${this.command.join('')}\\n",{"_index":1235,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["theme",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["themselves",{"_index":1041,"title":{},"body":{"injectables/ChartService.html":{}}}],["then((dat",{"_index":906,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["then(function",{"_index":2191,"title":{},"body":{"components/RootComponent.html":{}}}],["this.actions$.pipe",{"_index":1099,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["this.addoptions",{"_index":1776,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.apiurl}/write",{"_index":1554,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.appfilesystem",{"_index":1525,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.applicationref.attachview(popupcomponentref.hostview",{"_index":2001,"title":{},"body":{"injectables/PluginsService.html":{}}}],["this.appservice.crypto",{"_index":1358,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.lib.wordarray.random(128",{"_index":1362,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.pbkdf2(input",{"_index":1363,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.createmessage",{"_index":1385,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decrypt",{"_index":1396,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decryptkey",{"_index":1391,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.encrypt",{"_index":1383,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.generatekey",{"_index":1366,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readkey",{"_index":1387,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readmessage",{"_index":1393,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readprivatekey",{"_index":1392,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.authservice.getauthstatus",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(this.username.value",{"_index":1651,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(username",{"_index":2395,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.backend('clear",{"_index":2906,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('get",{"_index":2897,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('remove",{"_index":2904,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('set",{"_index":2901,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.balance",{"_index":2650,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.chain.chainrpc('get_info",{"_index":822,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.chain.downloadcli().then((data",{"_index":2181,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon",{"_index":2183,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon().then((data",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["this.chaininfo",{"_index":2175,"title":{},"body":{"components/RootComponent.html":{}}}],["this.changestream(this.attach",{"_index":1214,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.chartdata$[name",{"_index":1069,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartdata$[name].subscribe",{"_index":1074,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartelement",{"_index":964,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartinstances[name",{"_index":1087,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets.map((item",{"_index":1076,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets[i].data",{"_index":1077,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].destroy",{"_index":1086,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].update",{"_index":1079,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartmeta[name].datamap(response",{"_index":1078,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartservice.createchart(this.lthnchart",{"_index":963,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartservice.destroysubscriptions(this.lthnchart",{"_index":977,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartsubscriptions[name",{"_index":1073,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartsubscriptions[name].unsubscribe",{"_index":1085,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.child.keyeventinput.subscribe((e",{"_index":1222,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.buffer.active.cursorx",{"_index":1240,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.write('\\b",{"_index":1241,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln",{"_index":1237,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(data[1",{"_index":1205,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(line.trim",{"_index":1212,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(parts[1].trim",{"_index":1210,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write",{"_index":1220,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write(e.key",{"_index":1244,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command",{"_index":1236,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.pop",{"_index":1239,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.push(e.key",{"_index":1243,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(walletcomponent",{"_index":1995,"title":{},"body":{"injectables/PluginsService.html":{}}}],["this.configureoptions",{"_index":793,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.connect().asobservable",{"_index":2936,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connect().complete",{"_index":2937,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.count",{"_index":2893,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.createchartelement(this.lthnchart",{"_index":962,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.createsalt(input",{"_index":1360,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.crypto",{"_index":476,"title":{},"body":{"injectables/AppService.html":{}}}],["this.cryptservice",{"_index":2393,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.createopenpgp(usernamehash",{"_index":2382,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.decryptpgpsingle(id",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.encryptpgpsingle",{"_index":2390,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.generatekey",{"_index":2392,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sha256salty(username",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.currentlanguage",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cutmiddle(content",{"_index":1602,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["this.destroysubscriptions(name",{"_index":1081,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.dialogref.close",{"_index":1438,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["this.disableconsole",{"_index":2170,"title":{},"body":{"components/RootComponent.html":{}}}],["this.downloadingcli",{"_index":2178,"title":{},"body":{"components/RootComponent.html":{}}}],["this.elmref.nativeelement",{"_index":970,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.error",{"_index":1654,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filesystem.exists(pathname",{"_index":1530,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.list(dirname",{"_index":1526,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.listfiles('/cli').then((dat",{"_index":2173,"title":{},"body":{"components/RootComponent.html":{}}}],["this.filesystem.listfiles('/users').then((dat",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["this.filesystem.mkdir(dirname",{"_index":1529,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.read(filename",{"_index":1527,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.readfile",{"_index":1379,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.filesystem.readfile(`users/${id}.lthn",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filesystem.write(filename",{"_index":1528,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.writefile",{"_index":2372,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.fs.listfiles('/cli').then((dat",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["this.fs.listfiles('/wallets').then((data",{"_index":2843,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getchild(activatedroute.firstchild",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getchild(this.activatedroute",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getwalletlist",{"_index":2849,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.hascli",{"_index":2174,"title":{},"body":{"components/RootComponent.html":{}}}],["this.heading",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http",{"_index":817,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1148,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.http.post(`https://localhost:36911/daemon/wallet/json_rpc",{"_index":2679,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.id",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ispollingactivestats",{"_index":2667,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.items",{"_index":2905,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.items[key",{"_index":2895,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.loadtransactions",{"_index":2459,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.menu",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.removetag(\"name='description",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.updatetag",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalconfig.onclose",{"_index":1717,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.ondismiss",{"_index":1720,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shouldclose",{"_index":1716,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shoulddismiss",{"_index":1719,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref",{"_index":1712,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.close(result",{"_index":1718,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.dismiss(result",{"_index":1721,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.result.then(resolve",{"_index":1714,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.open(this.modalcontent",{"_index":1713,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.name",{"_index":2864,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["this.networkhashratechart",{"_index":1019,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.notifierservice.notify('success",{"_index":1893,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.openedwallet",{"_index":2643,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.openpgp",{"_index":474,"title":{},"body":{"injectables/AppService.html":{}}}],["this.options",{"_index":795,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.options.plugins.tooltip.callbacks",{"_index":1823,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.options.scales.y.ticks.callback",{"_index":1820,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.password",{"_index":1847,"title":{},"body":{"components/NewComponent.html":{}}}],["this.password.value",{"_index":1652,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.password_confirm",{"_index":1848,"title":{},"body":{"components/NewComponent.html":{}}}],["this.password_confirm.value",{"_index":1849,"title":{},"body":{"components/NewComponent.html":{}}}],["this.passwordrepeat.value",{"_index":2367,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.processingform",{"_index":2365,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.recenttxs",{"_index":820,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.ref.detach",{"_index":1196,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.detectchanges",{"_index":1198,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.markforcheck",{"_index":1219,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.renderappview",{"_index":2171,"title":{},"body":{"components/RootComponent.html":{}}}],["this.renderer.appendchild(this.elmref.nativeelement",{"_index":975,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.createelement('canvas",{"_index":965,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.removechild",{"_index":976,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setattribute",{"_index":966,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle",{"_index":969,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle(this.elmref.nativeelement",{"_index":967,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderfirstrunview",{"_index":2172,"title":{},"body":{"components/RootComponent.html":{}}}],["this.restorewalletform",{"_index":2115,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.address",{"_index":2126,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.autosave_current",{"_index":2128,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.filename",{"_index":2125,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.password",{"_index":2129,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.restore_height",{"_index":2127,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.spendkey",{"_index":2131,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewkey",{"_index":2132,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewonly_wallet",{"_index":2130,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.router.events",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/login",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/user",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":1653,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.router.navigatebyurl('/chain",{"_index":2182,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.navigatebyurl('/user",{"_index":2177,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.routerstate.snapshot.url.replace('/p",{"_index":2021,"title":{},"body":{"components/PostComponent.html":{}}}],["this.rows",{"_index":2456,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.rpc.getbalance",{"_index":2842,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.gettransfers(opts).then((data",{"_index":2850,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.openwallet(req",{"_index":2841,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.restorewallet(req",{"_index":2840,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.startwallet",{"_index":2839,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(content",{"_index":1465,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["this.settargettabindex",{"_index":68,"title":{},"body":{"components/AddComponent.html":{}}}],["this.setupcallbacks",{"_index":794,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.sidenav.toggle",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["this.socket",{"_index":2933,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.closed",{"_index":2934,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.next(msg",{"_index":2938,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.store$.pipe",{"_index":1113,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.store.dispatch",{"_index":2682,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.store.dispatch(chainsetgetinfo({info",{"_index":823,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.store.dispatch(changelanguage({language",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(openwallet({address",{"_index":1889,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstartaction",{"_index":1072,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstopaction",{"_index":1084,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(togglehidenavigation",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(walletactions.switchwallet({address",{"_index":2649,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.dispatch(walletactions.walletstartpolling",{"_index":2644,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.dispatch(walletactions.walletstoppolling",{"_index":2647,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.pipe",{"_index":1070,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe(select(getchaininfo",{"_index":2176,"title":{},"body":{"components/RootComponent.html":{}}}],["this.store.pipe(select(selectlanguage)).subscribe((lang",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectmenuvisibility)).subscribe((opened",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectwallettransactions)).subscribe((data",{"_index":2454,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.store.pipe(select(walletactions.selectopenedwallet)).subscribe((wallet",{"_index":2641,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.pipe(select(walletactions.selectwallets)).subscribe((data",{"_index":2638,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.sub",{"_index":1215,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.subs",{"_index":2645,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.subs$['openedwallet",{"_index":2640,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.subs$['txn",{"_index":2453,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.subs$['wallets",{"_index":2637,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.targetaddform",{"_index":69,"title":{},"body":{"components/AddComponent.html":{}}}],["this.targettabindex",{"_index":70,"title":{},"body":{"components/AddComponent.html":{}}}],["this.titleservice.settitle(this.translate.instant(data.title",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.instant(data.description",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(req.language",{"_index":2268,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.txnselection[col",{"_index":2653,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.updatemeta",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.length",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username.value",{"_index":2366,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.wallet.getbalance().then((data",{"_index":2651,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.gettransfers(this.opts).then((data",{"_index":2460,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.wallet.getwalletlist",{"_index":1888,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.wallet.loadtransfers(this.txnselection",{"_index":2652,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.openwallet",{"_index":1892,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletEffects.html":{}}}],["this.wallet.restorewallet",{"_index":2124,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.wallet.startwallet",{"_index":2184,"title":{},"body":{"components/RootComponent.html":{}}}],["this.wallet.startwallet().then((data",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["this.wallet_name",{"_index":1845,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallet_name.value",{"_index":1852,"title":{},"body":{"components/NewComponent.html":{}}}],["this.walletrpc.createwallet",{"_index":1851,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallets",{"_index":1887,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["this.wallets.includes(dat",{"_index":2844,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.length",{"_index":2848,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.push(dat",{"_index":2847,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.ws.connect",{"_index":1216,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect().subscribe((data",{"_index":1199,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.sendmessage(channel",{"_index":1218,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["those",{"_index":739,"title":{},"body":{"interfaces/Balance.html":{}}}],["throw",{"_index":1046,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["tickmarklength",{"_index":1803,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ticks",{"_index":783,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["ticks.color",{"_index":1062,"title":{},"body":{"injectables/ChartService.html":{}}}],["time",{"_index":1782,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/TransactionsComponent.html":{}}}],["timeago",{"_index":2401,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{}}}],["timeagopipe",{"_index":1922,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TimeAgoPipe.html":{},"overview.html":{}}}],["timed",{"_index":1944,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["timer",{"_index":1124,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timer(0",{"_index":1120,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timeseries",{"_index":1783,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["timestamp",{"_index":2443,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["title",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["titleservice",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["tmi",{"_index":3062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toatomic",{"_index":550,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tocoin",{"_index":2425,"title":{},"body":{"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{}}}],["tocoinpipe",{"_index":1923,"title":{"pipes/ToCoinPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["todo",{"_index":1034,"title":{},"body":{"injectables/ChartService.html":{},"injectables/FileSystemService.html":{}}}],["toggle",{"_index":2609,"title":{},"body":{"components/WalletComponent.html":{}}}],["toggle(col",{"_index":2620,"title":{},"body":{"components/WalletComponent.html":{}}}],["togglehidenavigation",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["togglemenu",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["tolthn",{"_index":536,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tonumber",{"_index":537,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["toolbar",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":789,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top",{"_index":1780,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["top_block_hash",{"_index":923,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["topromise",{"_index":905,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["torrents",{"_index":2590,"title":{},"body":{"components/VpnComponent.html":{}}}],["tostring",{"_index":1361,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["tot",{"_index":1493,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["total",{"_index":734,"title":{},"body":{"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalelements",{"_index":1901,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalpages",{"_index":1902,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["trace",{"_index":3033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":2581,"title":{},"body":{"components/VpnComponent.html":{}}}],["transactin",{"_index":2754,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transaction",{"_index":578,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["transactions",{"_index":2347,"title":{},"body":{"interfaces/SweepAllIn.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["transactions'},{'name",{"_index":122,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["transactions.component.html",{"_index":2430,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":121,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["transfer",{"_index":1588,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfer(x",{"_index":2783,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfer_type",{"_index":1618,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["transferin",{"_index":2467,"title":{"interfaces/TransferIn.html":{}},"body":{"interfaces/TransferIn.html":{},"injectables/WalletRpcService.html":{}}}],["transferout",{"_index":2470,"title":{"interfaces/TransferOut.html":{}},"body":{"interfaces/TransferOut.html":{},"injectables/WalletRpcService.html":{}}}],["transfers",{"_index":1578,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"injectables/WalletEffects.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfersplit",{"_index":2734,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplit(x",{"_index":2785,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplitin",{"_index":554,"title":{"interfaces/TransferSplitIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transfersplitout",{"_index":2478,"title":{"interfaces/TransferSplitOut.html":{}},"body":{"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{}}}],["transform",{"_index":1447,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(content",{"_index":1461,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(value",{"_index":1448,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transforms",{"_index":1275,"title":{},"body":{"injectables/CryptService.html":{}}}],["translate",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["translate.setdefaultlang('en",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":313,"title":{"modules/TranslateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/TranslateModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["translation",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":26,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tries",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{}}}],["try",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["ts",{"_index":937,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["tslib",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tx",{"_index":1679,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx's",{"_index":1584,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["tx_blob_list",{"_index":2351,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_count",{"_index":924,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_description",{"_index":1672,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx_hash",{"_index":1624,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"interfaces/Payment.html":{},"interfaces/TransferOut.html":{}}}],["tx_hash_list",{"_index":2352,"title":{},"body":{"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/TransferSplitOut.html":{}}}],["tx_key",{"_index":2472,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["tx_key_list",{"_index":2353,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_pool_size",{"_index":925,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_size",{"_index":1625,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["txid",{"_index":2444,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{}}}],["txn",{"_index":1598,"title":{},"body":{"pipes/HashLinkPipe.html":{},"interfaces/TransferOut.html":{}}}],["txnselection",{"_index":2606,"title":{},"body":{"components/WalletComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":1608,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["types/address",{"_index":1673,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/SplitIntegratedAddressOut.html":{}}}],["types/destination",{"_index":542,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["types/payment",{"_index":1571,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["types/transfer",{"_index":1589,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["typescript",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1322,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/SettingsState.html":{}}}],["unavailable",{"_index":1620,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["undefined",{"_index":785,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"pipes/HashLinkPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["under",{"_index":1327,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["unified",{"_index":2283,"title":{},"body":{"modules/SettingsModule.html":{}}}],["unique",{"_index":2057,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["uniquenamesgenerator",{"_index":2049,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":1788,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["units",{"_index":1425,"title":{},"body":{"interfaces/Destination.html":{},"pipes/HashRatePipe.html":{},"interfaces/MakeUriIn.html":{}}}],["units[i]}h/s",{"_index":1614,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["unknown",{"_index":1272,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["unlock",{"_index":1880,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["unlock_time",{"_index":566,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["unlocked",{"_index":737,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlocked_balance",{"_index":733,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlockwallet",{"_index":1872,"title":{},"body":{"components/OpenComponent.html":{}}}],["unlockwallet(name",{"_index":1878,"title":{},"body":{"components/OpenComponent.html":{}}}],["unsigned",{"_index":557,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["up",{"_index":998,"title":{},"body":{"injectables/ChartService.html":{},"injectables/PluginsService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["update",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"components/ConsoleComponent.html":{}}}],["updatemeta",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["uri",{"_index":588,"title":{"interfaces/Uri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/Uri.html":{},"injectables/WalletRpcService.html":{}}}],["url",{"_index":1599,"title":{},"body":{"pipes/HashLinkPipe.html":{},"interfaces/Response.html":{},"injectables/WalletRpcService.html":{}}}],["urlencoded",{"_index":900,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["use",{"_index":583,"title":{},"body":{"classes/Atomic.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{}}}],["used",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ProfileState.html":{}}}],["usefactory",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":111,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user'},{'name",{"_index":124,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user.component",{"_index":2558,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":2360,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.component.scss",{"_index":2361,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.reducer",{"_index":509,"title":{},"body":{"interfaces/AppState.html":{}}}],["user.usersstate",{"_index":489,"title":{},"body":{"interfaces/AppState.html":{}}}],["usercomponent",{"_index":123,"title":{"components/UserComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["userform",{"_index":2362,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["userids",{"_index":1371,"title":{},"body":{"injectables/CryptService.html":{}}}],["usermeta",{"_index":2545,"title":{"interfaces/UserMeta.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usermodule",{"_index":2552,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usernamehash",{"_index":2378,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["useroptions",{"_index":2548,"title":{"interfaces/UserOptions.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userroutingmodule",{"_index":414,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["users/${id}.lthn.private.asc",{"_index":1389,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${id}.lthn.public.asc",{"_index":1380,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${usernamehash}.lthn",{"_index":2389,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.private.asc",{"_index":2386,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.public.asc",{"_index":2387,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.revoke.asc",{"_index":2388,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["usersstate",{"_index":2550,"title":{"interfaces/UsersState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userstate",{"_index":2551,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["uses",{"_index":1342,"title":{},"body":{"injectables/CryptService.html":{}}}],["using",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["valid",{"_index":1449,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["validatorfn",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1843,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["value.indexof",{"_index":2090,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.length",{"_index":1686,"title":{},"body":{"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.slice",{"_index":2092,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.substr(0",{"_index":2093,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.tostring",{"_index":2089,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["values",{"_index":1821,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["variable",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verified_user",{"_index":2328,"title":{},"body":{"components/StatusComponent.html":{}}}],["vertical",{"_index":848,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["vertically",{"_index":852,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["view",{"_index":1998,"title":{},"body":{"injectables/PluginsService.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["view.chain.description",{"_index":866,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.heading",{"_index":865,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.title",{"_index":864,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.dashboard.description",{"_index":2249,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.heading",{"_index":2248,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.title",{"_index":2247,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.wallets.description",{"_index":2713,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.heading",{"_index":2712,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.title",{"_index":2711,"title":{},"body":{"modules/WalletModule.html":{}}}],["viewchild",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('modal",{"_index":1704,"title":{},"body":{"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('sidenav",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('term",{"_index":1188,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation",{"_index":1192,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.none",{"_index":1164,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewkey",{"_index":2121,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["viewonly_wallet",{"_index":2122,"title":{},"body":{"components/RestoreComponent.html":{}}}],["viewport",{"_index":1247,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["visibility_off",{"_index":2327,"title":{},"body":{"components/StatusComponent.html":{}}}],["vm",{"_index":1044,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["vm.chartinstances[name",{"_index":1063,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name",{"_index":1045,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data",{"_index":1066,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.length",{"_index":1058,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.map((dataset",{"_index":1048,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options",{"_index":1067,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.colors[i",{"_index":1050,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales",{"_index":1060,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales[dataset.yaxisid",{"_index":1059,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].type",{"_index":1065,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.hashratepipe.transform(context.parsed.y",{"_index":1825,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.hashratepipe.transform(value",{"_index":1822,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.setupdatasubscription(name",{"_index":1068,"title":{},"body":{"injectables/ChartService.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["vpn",{"_index":2521,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn'},{'name",{"_index":126,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["vpn.component",{"_index":2597,"title":{},"body":{"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn.component.html",{"_index":2574,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpn.component.scss",{"_index":2573,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpncomponent",{"_index":125,"title":{"components/VpnComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["vpnmodule",{"_index":2593,"title":{"modules/VpnModule.html":{}},"body":{"modules/VpnModule.html":{},"modules.html":{},"overview.html":{}}}],["vpnroutingmodule",{"_index":2598,"title":{"modules/VpnRoutingModule.html":{}},"body":{"modules/VpnRoutingModule.html":{},"modules.html":{}}}],["wall",{"_index":1895,"title":{},"body":{"components/OpenComponent.html":{}}}],["wallet",{"_index":34,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/GetTransfersIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"dependencies.html":{}}}],["wallet's",{"_index":2141,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["wallet.component",{"_index":2701,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.component.html",{"_index":2602,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.component.scss",{"_index":2601,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.name",{"_index":2684,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.options.pollinginterval).pipe",{"_index":2677,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.reducer",{"_index":511,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.service",{"_index":1844,"title":{},"body":{"components/NewComponent.html":{}}}],["wallet.walleteffects",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walletsstate",{"_index":490,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet_name",{"_index":1833,"title":{},"body":{"components/NewComponent.html":{}}}],["walletactions",{"_index":2635,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["walletactions.walletbalance",{"_index":2683,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaddata",{"_index":2668,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaded",{"_index":2689,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletstoppedpolling",{"_index":2671,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.wallettransfers",{"_index":2687,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletcomponent",{"_index":127,"title":{"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["walleteffects",{"_index":2655,"title":{"injectables/WalletEffects.html":{}},"body":{"injectables/WalletEffects.html":{}}}],["walletlist",{"_index":2822,"title":{},"body":{"injectables/WalletService.html":{}}}],["walletloaddata",{"_index":2660,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletmodule",{"_index":2230,"title":{"modules/WalletModule.html":{}},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletroutingmodule",{"_index":415,"title":{"modules/WalletRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["walletrpc",{"_index":1836,"title":{},"body":{"components/NewComponent.html":{}}}],["walletrpcservice",{"_index":399,"title":{"injectables/WalletRpcService.html":{}},"body":{"modules/AppModule.html":{},"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["wallets",{"_index":484,"title":{},"body":{"interfaces/AppState.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletselectors",{"_index":2692,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletservice",{"_index":360,"title":{"injectables/WalletService.html":{}},"body":{"modules/AppModule.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["walletsstate",{"_index":2853,"title":{"interfaces/WalletsState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletstate",{"_index":2851,"title":{"classes/WalletState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["wallettransfers",{"_index":2695,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["want",{"_index":1304,"title":{},"body":{"injectables/CryptService.html":{}}}],["watcher",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["way",{"_index":1037,"title":{},"body":{"injectables/ChartService.html":{}}}],["ways",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{}}}],["web",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["web.service",{"_index":1522,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["web.service.ts",{"_index":1531,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:10",{"_index":1533,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:15",{"_index":1534,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:19",{"_index":1536,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:32",{"_index":1537,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:35",{"_index":1539,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:39",{"_index":1541,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:52",{"_index":1543,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["webfilesystem",{"_index":1523,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["websocket",{"_index":2931,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(\"ws://localhost:8081",{"_index":2939,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(ws_endpoint",{"_index":2935,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketservice",{"_index":1175,"title":{"injectables/WebsocketService.html":{}},"body":{"components/ConsoleComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketsubject",{"_index":2924,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["webstorageservice",{"_index":503,"title":{"injectables/WebStorageService.html":{}},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["welcome",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["well",{"_index":1313,"title":{},"body":{"injectables/CryptService.html":{}}}],["whatever",{"_index":2952,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["whenever",{"_index":2944,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["white",{"_index":1795,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["white_peerlist_size",{"_index":926,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["width",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{}}}],["width:80vw",{"_index":974,"title":{},"body":{"directives/ChartDirective.html":{}}}],["wire",{"_index":1993,"title":{},"body":{"injectables/PluginsService.html":{}}}],["wish",{"_index":2537,"title":{},"body":{"components/UserComponent.html":{}}}],["within",{"_index":2077,"title":{},"body":{"interfaces/ProfileState.html":{},"index.html":{}}}],["withlatestfrom",{"_index":1112,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(walletselectors.selectopenedwalletdata",{"_index":2675,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["without",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["withproperties",{"_index":1984,"title":{},"body":{"injectables/PluginsService.html":{}}}],["wizard",{"_index":2563,"title":{},"body":{"modules/UserModule.html":{}}}],["wont",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["word",{"_index":1336,"title":{},"body":{"injectables/CryptService.html":{}}}],["words.states.installing",{"_index":2197,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.installing_desc",{"_index":2198,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.not_installed",{"_index":2194,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.not_installed_desc",{"_index":2195,"title":{},"body":{"components/RootComponent.html":{}}}],["working",{"_index":1520,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["works",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":2956,"title":{},"body":{"contributing.html":{}}}],["worst",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrapper",{"_index":1521,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["write",{"_index":1472,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["write(filename",{"_index":1542,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["write(type",{"_index":1491,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["writefile",{"_index":1500,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["writefile(filename",{"_index":1516,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["ws",{"_index":1179,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ws://localhost:36909",{"_index":2930,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws_endpoint",{"_index":2929,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["www",{"_index":898,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["x",{"_index":782,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["xterm",{"_index":1246,"title":{},"body":{"components/ConsoleComponent.html":{},"dependencies.html":{}}}],["y",{"_index":786,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["years",{"_index":2419,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["yes",{"_index":1451,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletRpcService.html":{}}}],["yes/no",{"_index":2061,"title":{},"body":{"components/ProfileComponent.html":{}}}],["z",{"_index":1355,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["zerolinewidth",{"_index":1801,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["zone.js",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddAddressBook.html":{"url":"interfaces/AddAddressBook.html","title":"interface - AddAddressBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddAddressBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/addAddressBook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddAddressBook {\n\taddress: string;\n\tpayment_id?: string; // (optional) string, defaults to \"0000000000000000000000000000000000000000000000000000000000000000\";\n\tdescription?: string; // (optional) string, defaults to \"\";\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddComponent.html":{"url":"components/AddComponent.html","title":"component - AddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-add\n            \n\n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTargetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                targetAddForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/add.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        targetAddForm\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTargetTabIndex\n                        \n                    \n                \n            \n            \n                \nsetTargetTabIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetTabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/add.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-wallet-add',\n\ttemplateUrl: './add.component.html'\n})\nexport class AddComponent implements OnInit, OnChanges {\n\t@Input() targetAddForm: string = 'open';\n\ttargetTabIndex: number = 0;\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tthis.setTargetTabIndex();\n\t}\n\n\tsetTargetTabIndex(): void {\n\t\tif (this.targetAddForm === \"open\") {\n\t\t\tthis.targetTabIndex = 2;\n\t\t}else if (this.targetAddForm === \"restore\") {\n\t\t\tthis.targetTabIndex = 1;\n\t\t}else{\n\t\t\tthis.targetTabIndex = 0;\n\t\t}\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.setTargetTabIndex();\n\t}\n\n}\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\t\n\t\t\t\tadd_box\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tcloud_download\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tfile_open\n\t\t\t\n\t\t\n\t\t\n\t\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\tadd_box\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloud_download\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_open\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\taddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentFlag\n                            \n                            \n                                    Public\n                                currentLanguage\n                            \n                            \n                                    Public\n                                currentLanguage$\n                            \n                            \n                                    Public\n                                heading\n                            \n                            \n                                    Public\n                                menu\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getChild\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, metaService: Meta, translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChild\n                        \n                    \n                \n            \n            \n                \ngetChild(activatedRoute: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMeta\n                        \n                    \n                \n            \n            \n                \nupdateMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        heading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menu$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {select, Store} from '@ngrx/store';\nimport {changeLanguage, selectLanguage, selectMenuVisibility, toggleHideNavigation} from '@module/settings/data';\nimport {Subscription} from 'rxjs';\nimport {getChainInfo} from '@plugin/lthn/chain/data';\n\n@Component({\n\tselector: 'lthn-app',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\tpublic menu: boolean;\n\tpublic heading = '';\n\n\n\t@ViewChild('sidenav') public sidenav: MatSidenav;\n\tpublic currentFlag: any;\n\tpublic currentLanguage$: Subscription;\n\tpublic currentLanguage: string;\n\tprivate menu$: Subscription;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate translate: TranslateService,\n\t\tprivate store: Store\n\t) {\n\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\ttranslate.setDefaultLang('en');\n\t}\n\n\tngOnInit(): void {\n\t\t// setup language watcher\n\t\tthis.currentLanguage$ = this.store.pipe(select(selectLanguage)).subscribe((lang) => {\n\t\t\tthis.currentLanguage = lang;\n\t\t\tthis.translate.use(lang)\n\t\t})\n\n\t\tthis.updateMeta();\n\t}\n\n\tpublic ngAfterViewInit() {\n\t\tthis.menu$ = this.store.pipe(select(selectMenuVisibility)).subscribe((opened) => {\n\t\t\tthis.menu = opened\n\t\t\tthis.sidenav.toggle();\n\t\t})\n\n\n\t}\n\n\tchangeLanguage(lang: string){\n\t\tthis.store.dispatch(changeLanguage({language: lang}))\n\t}\n\n\ttoggleMenu() {\n\t\tthis.store.dispatch(toggleHideNavigation())\n\n\t}\n\n\tupdateMeta() {\n\t\tthis.router.events\n\t\t\t.pipe(filter((event) => event instanceof NavigationEnd))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst rt = this.getChild(this.activatedRoute);\n\t\t\t\trt.data.subscribe((data) => {\n\t\t\t\t\tthis.titleService.setTitle(this.translate.instant(data.title));\n\t\t\t\t\tthis.heading = data.heading;\n\t\t\t\t\tif (data.description) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tcontent: this.translate.instant(data.description)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.removeTag(\"name='description'\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!data.robots) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'nofollow,noindex'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'follow,index'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetChild(activatedRoute: ActivatedRoute) {\n\t\tif (activatedRoute.firstChild) {\n\t\t\treturn this.getChild(activatedRoute.firstChild);\n\t\t} else {\n\t\t\treturn activatedRoute;\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                menu\n            \n        \n\n        \n        \n            {{ 'menu.text.dashboard' | translate }}\n            {{ 'menu.text.blockchain' | translate }}\n            {{ 'menu.text.wallet' | translate }}\n            {{ 'menu.text.settings' | translate }}\n        \n        \n        \n    \n\n    \n        \n            \n\n                \n                    menu_open\n                \n                {{heading | translate}}\n                \n                \n                    \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.en' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.ru' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.zh' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.es' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.de' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.fr' | translate }}\n                            \n                        \n\n\n                    \n                \n\n                \n                    \n                \n            \n        \n        \n    \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  .main-container {\n    height: 100vh;\n    width: 100%;\n    min-height: calc(99vh - 54px);\n    overflow: hidden;\n    background: radial-gradient(circle, rgba(8, 242, 181, 1) 0%, rgba(21, 130, 151, 1) 100%);\n\n    mat-card {\n      mat-card-content {\n        img {\n          height: 30vh;\n        }\n      }\n    }\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 64px;\n  }\n\n  mat-sidenav {\n    width: 298px;\n\n    .logo {\n      border: 0;\n      padding: 9px;\n      width: 210px;\n    }\n  }\n\n  html.dark-theme .made-by {\n    --active-background-color: #242628;\n    color: #838488;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                menu                                                {{ \\'menu.text.dashboard\\' | translate }}            {{ \\'menu.text.blockchain\\' | translate }}            {{ \\'menu.text.wallet\\' | translate }}            {{ \\'menu.text.settings\\' | translate }}                                                                                        menu_open                                {{heading | translate}}                                                                                                                                          {{ \\'lang.en\\' | translate }}                                                                                                                                          {{ \\'lang.ru\\' | translate }}                                                                                                                                          {{ \\'lang.zh\\' | translate }}                                                                                                                                          {{ \\'lang.es\\' | translate }}                                                                                                                                          {{ \\'lang.de\\' | translate }}                                                                                                                                          {{ \\'lang.fr\\' | translate }}                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nPluginsModule\n\nPluginsModule\n\nAppModule -->\n\nPluginsModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            PluginsModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule, BrowserTransferStateModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {DataModule} from '@data/data.module';\nimport {StatusModule} from '@module/status/status.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexModule} from '@angular/flex-layout';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {PluginsModule} from '@plugin/plugins.module';\nimport {NotifierModule} from 'angular-notifier';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\treturn new TranslateHttpLoader(http);\n}\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule.withServerTransition({appId: 'lthn-data-sync'}),\n\t\tBrowserTransferStateModule,\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tTranslateModule.forRoot({\n\t\t\tdefaultLanguage: 'en',\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t}\n\t\t}),\n\t\tAppRoutingModule,\n\t\tCommonModule,\n\t\tDataModule,\n\t\tStatusModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatDividerModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatMenuModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tFlexModule,\n\t\tAuthModule,\n\t\tConsoleModule,\n\t\tPluginsModule,\n\t\tNotifierModule.withConfig({\n\t\t\t// Custom options in here\n\t\t}),\n\n\t],\n\tproviders: [],\n\texports: [\n\t],\n\tbootstrap: [AppComponent]\n})\n/**\n * Application shell/bootstrap\n */\nexport class AppModule {\n\n\t/**\n\t * Start blockchain & wallet service automatically on start\n\t *\n\t * @param fs\n\t * @param {BlockchainService} chain\n\t * @param {WalletRpcService} wallet\n\t */\n\tconstructor(private fs: FileSystemService, private chain: BlockchainService, private wallet: WalletService) {\n\t\tthis.fs.listFiles('/cli').then((dat: any) => {\n\t\t\tif(dat.length > 2){\n\t\t\t\tthis.chain.startDaemon().then((data) => {\n\t\t\t\t\tconsole.log(\"blockchain started\")\n\t\t\t\t\tthis.wallet.startWallet().then((data) => console.log('wallet started'))\n\t\t\t\t})\n\t\t\t}\n\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nPostRoutingModule\n\nPostRoutingModule\n\nAppRoutingModule -->\n\nPostRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nAppRoutingModule -->\n\nSettingsRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BlockchainRoutingModule\n                        \n                        \n                            PostRoutingModule\n                        \n                        \n                            RootRoutingModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                        \n                            UserRoutingModule\n                        \n                        \n                            WalletRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PostRoutingModule} from '@plugin/hive/post/post-routing.module';\nimport {BlockchainRoutingModule} from '@plugin/lthn/chain/blockchain-routing.module';\nimport {UserRoutingModule} from '@module/user/user-routing.module';\nimport {RootRoutingModule} from '@module/root-routing.module';\nimport {SettingsRoutingModule} from '@module/settings/settings-routing.module';\nimport {WalletRoutingModule} from '@plugin/lthn/wallet/wallet-routing.module';\nimport {LoginComponent} from '@module/auth/login.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'Login - Lethean (LTHN)',\n\t\t\theading: 'Login',\n\t\t\tdescription: 'Lethean (LTHN) Login',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, { relativeLinkResolution: 'legacy', initialNavigation: 'enabledBlocking' }),\n\t\tPostRoutingModule,\n\t\tBlockchainRoutingModule,\n\t\tUserRoutingModule,\n\t\tSettingsRoutingModule,\n\t\tWalletRoutingModule,\n\t\t// Make sure Root is the last in the list, it has a catch all\n\t\tRootRoutingModule\n\t],\n\texports: [RouterModule]\n})\n/**\n * Application routing bootstrap file, adds all routes as lazy loaded modules\n */\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\ncluster_AppServerModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crypto\n                            \n                            \n                                    Public\n                                letheanConfig\n                            \n                            \n                                openpgp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        letheanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigIniParser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openpgp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n\nimport {APP_CONFIG} from '@env/environment';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * @deprecated\n */\nexport class AppService {\n\n\tpublic letheanConfig: ConfigIniParser;\n\topenpgp: any;\n\tcrypto: any;\n\n\tconstructor() {\n\n\t\t\tthis.openpgp = require('openpgp');\n\t\t\tthis.crypto = require('crypto-js');\n\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chain\n                                        \n                                \n                                \n                                        \n                                            charts\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            settings\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chain:     Chain.ChainState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Chain.ChainState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charts:         Chart.ChartsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chart.ChartsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         Logs.LogsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Logs.LogsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         Settings.SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Settings.SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User.UsersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User.UsersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         Wallet.WalletsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wallet.WalletsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {APP_CONFIG} from '@env/environment';\nimport * as Settings from '../../modules/settings/data';\nimport * as User from '../../modules/user/data/user';\nimport {localStorageSync} from 'ngrx-store-localstorage';\nimport * as Chart from '../../modules/chart/data';\nimport * as Wallet from '../../plugins/lthn/wallet/data';\nimport * as Chain from '../../plugins/lthn/chain/data';\nimport * as Logs from '../logs';\nimport {WebStorageService} from '@service/web-storage.service';\n\nexport interface AppState {\n\tsettings: Settings.SettingsState;\n\tcharts: Chart.ChartsState;\n\tuser: User.UsersState;\n\tlogs: Logs.LogsState;\n\twallets: Wallet.WalletsState;\n\tchain: Chain.ChainState\n}\n\nexport const reducers: ActionReducerMap = {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer,\n\twallets: Wallet.reducer,\n\tchain: Chain.reducer\n};\n\nexport function localStorageSyncReducer(\n\treducer: ActionReducer\n): ActionReducer {\n\treturn localStorageSync({\n\t\tkeys: [\n\t\t\t'settings',\n\t\t\t'wallets',\n\t\t\t{\n\t\t\t\tuser: {\n\t\t\t\t\tencrypt: (state: string) => btoa(state), // placeholder\n\t\t\t\t\tdecrypt: (state: string) => atob(state) // placeholder\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\trehydrate: true,\n\t\tremoveOnUndefined: true,\n\t\t//storage:  new WebStorageService()\n\t})(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !APP_CONFIG.production\n\t? []\n\t: [localStorageSyncReducer];\n\nexport const effects = [Chart.ChartsEffects, Settings.SettingsEffects, Wallet.WalletEffects ];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Atomic.html":{"url":"classes/Atomic.html","title":"class - Atomic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Atomic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toLTHN\n                            \n                            \n                                toNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toLTHN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/auth/route.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/route.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/route.guard.ts:34\n                \n            \n\n\n            \n                \n                    Handles logged out access\nRun during routing to check if the user is logged in or not, we do this check if\ngetAuthStatus() returns true, the username variable is set, to logout simply clear the username\nIf the user is not authenticated this function acts in one of two ways\n\nif ~/Lethean/users is empty perform first run / welcome\nif users do exsist, take to the /login page\n\nif APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\nyou may or may not have to login to develop, for now at least\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\n\t/**\n\t * Handles logged out access\n\t * Run during routing to check if the user is logged in or not, we do this check if\n\t * getAuthStatus() returns true, the username variable is set, to logout simply clear the username\n\t *\n\t * If the user is not authenticated this function acts in one of two ways\n\t *\n\t * 1) if ~/Lethean/users is empty perform first run / welcome\n\t * 2) if users do exsist, take to the /login page\n\t *\n\t * if APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\n\t * you may or may not have to login to develop, for now at least\n\t *\n\t * @param {ActivatedRouteSnapshot} route\n\t * @param {RouterStateSnapshot} state\n\t * @returns {boolean | Promise}\n\t */\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): boolean | Promise {\n\t\tlet isAuthenticated = this.authService.getAuthStatus();\n\t\tif (!isAuthenticated) {\n\t\t\ttry {\n\t\t\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\t\t\tif (dat.length > 0) {\n\t\t\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.router.navigate(['/user']);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}catch (e) {\n\t\t\t\tisAuthenticated = false\n\t\t\t}\n\n\t\t}\n\t\treturn isAuthenticated;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [LoginComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule\n\t]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthStatus\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthStatus\n                        \n                    \n                \n            \n            \n                \ngetAuthStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n                    User auth check is (this.user.length > 0) we only need to store how to access the data.\nPlease do not add identifiable data or anything here, data like that should live in the users encrypted\njson profiles.\nIf extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\nnot because it would just be easier to code\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n                    Takes a username and password and tries to decrypt data files with a name id matching\nIt either works and that was the right password, or it does not and then it wont.\nWe are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\nso if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    Clear the user prop by setting to a empty string, making auth checks fail.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate user = '';\n\tprivate id = '';\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * User auth check is (this.user.length > 0) we only need to store how to access the data.\n\t *\n\t * Please do not add identifiable data or anything here, data like that should live in the users encrypted\n\t * json profiles.\n\t *\n\t * If extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\n\t * not because it would just be easier to code\n\t *\n\t * @returns {boolean}\n\t */\n\tgetAuthStatus() {\n\t\treturn this.user.length > 0;\n\t}\n\n\t/**\n\t * Takes a username and password and tries to decrypt data files with a name id matching\n\t *\n\t * It either works and that was the right password, or it does not and then it wont.\n\t *\n\t * We are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\n\t * so if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync login(username, password) {\n\t\tconst id = this.cryptService.sha256Salty(username);\n\t\tconst data = await this.fileSystem.readFile(`users/${id}.lthn`);\n\n\t\tconst decrypted = JSON.parse(\n\t\t\tawait this.cryptService.decryptPGPSingle(id, password, data)\n\t\t);\n\t\tthis.user = decrypted.username;\n\t\tthis.id = decrypted.id;\n\t}\n\n\t/**\n\t * Clear the user prop by setting to a empty string, making auth checks fail.\n\t */\n\tlogout() {\n\t\tthis.user = '';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackupComponent.html":{"url":"components/BackupComponent.html","title":"component - BackupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/backup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-backup\n            \n\n\n\n\n            \n                templateUrl\n                ./backup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-backup',\n\ttemplateUrl: './backup.component.html'\n})\nexport class BackupComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BackupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/balance.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            unlocked_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlocked_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlocked_balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Balance {\n\tbalance: number; // - unsigned int; The total balance of the current monero-wallet-rpc in session.\n\tunlocked_balance: number; // - unsigned int; Unlocked funds are those funds that are sufficiently deep enough in the Monero blockchain to be considered safe to spend.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseChartConfigService.html":{"url":"injectables/BaseChartConfigService.html","title":"injectable - BaseChartConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/base-chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOptions\n                            \n                            \n                                configureOptions\n                            \n                            \n                                setupCallbacks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: []\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class BaseChartConfigService {\n\tpublic key = '';\n\tpublic type = '';\n\tpublic data: any = {\n\t\tdatasets: []\n\t};\n\tpublic options = {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.configureOptions();\n\t\tthis.setupCallbacks();\n\t}\n\n\tsetupCallbacks() {}\n\n\tconfigureOptions() {}\n\n\taddOptions(overrides: object) {\n\t\tthis.options = { ...this.options, ...overrides };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainComponent.html":{"url":"components/BlockchainComponent.html","title":"component - BlockchainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/chain/blockchain.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ChartService\n                \n            \n\n\n            \n                selector\n                lthn-chain\n            \n\n            \n                styleUrls\n                ./blockchain.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./blockchain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildType\n                            \n                            \n                                    Public\n                                recentTxs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store, chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recentTxs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ChartService} from '@module/chart/chart.service';\nimport {APP_CONFIG} from '@env/environment';\nimport {rpcBody} from '@service/json-rpc';\nimport {ChainGetInfo} from '@plugin/lthn/chain/interfaces/props/get_info';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {Store} from '@ngrx/store';\nimport {ChainSetGetInfo} from '@plugin/lthn/chain/data';\n\n@Component({\n\tselector: 'lthn-chain',\n\ttemplateUrl: './blockchain.component.html',\n\tstyleUrls: ['./blockchain.component.scss'],\n\tproviders: [ChartService]\n})\nexport class BlockchainComponent implements OnInit, OnDestroy {\n\tpublic recentTxs: any;\n\tpublic buildType: string;\n\n\tconstructor(private http: HttpClient, private store: Store, private chain: BlockchainService) {\n\t}\n\n\n\tngOnInit(): void {\n\t\t// https://lethean.hashvault.pro/explorer/api/transactions\n\t\tthis.http\n\t\t\t.get('https://lethean.hashvault.pro/explorer/api/transactions')\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.recentTxs = data.data.blocks;\n\t\t\t});\n\t\tthis.chain.chainRpc('get_info', '').subscribe((data) => {\n\t\t\tthis.store.dispatch(ChainSetGetInfo({info: data.result}))\n\t\t\tconsole.log(data.result)\n\t\t})\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('BlockchainComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'charts.network-hashrate.title' | translate }}\n        \n          {{ 'charts.network-hashrate.subtitle' | translate }} HashVault\n         {{ 'names.mining-pool' | translate }}\n        \n        \n          \n        \n      \n\n    \n    \n    \n      \n        {{ 'plugin.lthn.chain.table.recent-blocks.title' | translate }}\n        \n          \n            \n            \n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.age' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.hash' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.height' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.time' | translate }}\n            \n            \n\n            \n            \n              {{block.age}}\n              \n                {{block.hash}}\n              \n              \n                {{block.height}}\n              {{block.timestamp * 1000 | date: 'dd/MM/yyyy @ HH:mm:ss'}}\n            \n            \n          \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./blockchain.component.scss\n                \n                :host {\n\n}\n\n@mixin vertical-fill {\n\tbox-sizing: border-box;\n\theight: 100%;\n}\n\n.vertically-filled-mat-card-container {\n\tmat-card {\n\t\t@include vertical-fill;\n\t}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'charts.network-hashrate.title\\' | translate }}                  {{ \\'charts.network-hashrate.subtitle\\' | translate }} HashVault         {{ \\'names.mining-pool\\' | translate }}                                                                  {{ \\'plugin.lthn.chain.table.recent-blocks.title\\' | translate }}                                                        {{ \\'plugin.lthn.chain.table.recent-blocks.headings.age\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.hash\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.height\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.time\\' | translate }}                                                              {{block.age}}                              {{block.hash}}                                            {{block.height}}              {{block.timestamp * 1000 | date: \\'dd/MM/yyyy @ HH:mm:ss\\'}}                                                      '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockchainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockchainComponent} from './blockchain.component';\nimport {ChartModule} from '@module/chart/chart.module';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {TranslateModule} from '@ngx-translate/core';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: BlockchainComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [BlockchainComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tChartModule,\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tTranslateModule\n\t],\n\texports: [RouterModule]\n})\nexport class BlockchainModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainRoutingModule.html":{"url":"modules/BlockchainRoutingModule.html","title":"module - BlockchainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'chain',\n\t\t//canActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./blockchain.module').then((m) => m.BlockchainModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class BlockchainRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chainRpc\n                            \n                            \n                                downloadCLI\n                            \n                            \n                                exportChain\n                            \n                            \n                                importChain\n                            \n                            \n                                startDaemon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chainRpc\n                        \n                    \n                \n            \n            \n                \nchainRpc(method: string, params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \ndownloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:76\n                \n            \n\n\n            \n                \n                    Download Lethean binaries to the users home dir\n~/Lethean/cli\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportChain\n                        \n                    \n                \n            \n            \n                \nexportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:32\n                \n            \n\n\n            \n                \n                    Export chain to a raw format\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importChain\n                        \n                    \n                \n            \n            \n                \nimportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:53\n                \n            \n\n\n            \n                \n                    Import raw chain data file\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDaemon\n                        \n                    \n                \n            \n            \n                \nstartDaemon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BlockchainService {\n\tconstructor(private http: HttpClient) {}\n\n\tstartDaemon() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/start`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Export chain to a raw format\n\t *\n\t */\n\texportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/export`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Import raw chain data file\n\t *\n\t */\n\timportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/import`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Download Lethean binaries to the users home dir\n\t * ~/Lethean/cli\n\t *\n\t * @returns {Promise}\n\t */\n\tdownloadCLI() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(`https://localhost:36911/update/cli`, {}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => dat);\n\t}\n\n\tchainRpc(method: string, params: any) {\n\t\treturn this.http\n\t\t\t.post('https://localhost:36911/daemon/chain/json_rpc', JSON.stringify(rpcBody(method)(params)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChainGetInfo.html":{"url":"interfaces/ChainGetInfo.html","title":"interface - ChainGetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChainGetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/interfaces/props/get_info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alt_blocks_count\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            grey_peerlist_size\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            incoming_connections_count\n                                        \n                                \n                                \n                                        \n                                            outgoing_connections_count\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            target_height\n                                        \n                                \n                                \n                                        \n                                            testnet\n                                        \n                                \n                                \n                                        \n                                            top_block_hash\n                                        \n                                \n                                \n                                        \n                                            tx_count\n                                        \n                                \n                                \n                                        \n                                            tx_pool_size\n                                        \n                                \n                                \n                                        \n                                            white_peerlist_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alt_blocks_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alt_blocks_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grey_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grey_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incoming_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incoming_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outgoing_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outgoing_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testnet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testnet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_block_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_block_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_pool_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_pool_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        white_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        white_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChainGetInfo {\n\talt_blocks_count: number;\n\tdifficulty: number;\n\tgrey_peerlist_size: number;\n\theight: number;\n\tincoming_connections_count: number;\n\toutgoing_connections_count: number;\n\tstatus: string;\n\ttarget: number;\n\ttarget_height: number;\n\ttestnet: boolean;\n\ttop_block_hash: string;\n\ttx_count: number;\n\ttx_pool_size: number;\n\twhite_peerlist_size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartConfigInterface.html":{"url":"interfaces/ChartConfigInterface.html","title":"interface - ChartConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dataMap\n                                    \n                                \n                                \n                                    \n                                        setupCallbacks\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartConfigInterface {\n\tkey: string;\n\ttype: string;\n\tdata: object;\n\toptions: object;\n\n\tsetupCallbacks(): void;\n\n\tdataMap(data: any, i: number): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDifficulty.html":{"url":"interfaces/ChartDifficulty.html","title":"interface - ChartDifficulty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartDifficulty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/interfaces/difficulty.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diff\n                                        \n                                \n                                \n                                        \n                                            ts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDifficultyState {\n\toptions: {\n\t\tpollingInterval: number;\n\t};\n\tdata: ChartDifficulty[];\n}\n\nexport class ChartDifficultyState implements ChartDifficultyState {\n\tdata: ChartDifficulty[] = [];\n\toptions: { pollingInterval: number } = { pollingInterval: 30000 };\n}\n\nexport interface ChartDifficulty {\n\tts: string;\n\tdiff: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChartDirective.html":{"url":"directives/ChartDirective.html","title":"directive - ChartDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ChartDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ChartService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [lthnChart]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChartElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lthnChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elmRef: ElementRef, chartService: ChartService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        ChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        lthnChart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chart/chart.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChartElement\n                        \n                    \n                \n            \n            \n                \ncreateChartElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, PLATFORM_ID, Renderer2} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {ChartService} from './chart.service';\n\n@Directive({\n\tselector: '[lthnChart]',\n\tproviders: [ChartService]\n})\nexport class ChartDirective implements AfterViewInit, OnDestroy {\n\t@Input() lthnChart: string;\n\tprivate chartElement: any;\n\n\tconstructor(\n\t\tprivate renderer: Renderer2,\n\t\tprivate elmRef: ElementRef,\n\t\tprivate chartService: ChartService,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.createChartElement(this.lthnChart);\n\t\t\tthis.chartService.createChart(this.lthnChart);\n\t\t}\n\t}\n\n\tcreateChartElement(name: string) {\n\t\tthis.chartElement = this.renderer.createElement('canvas');\n\t\tthis.renderer.setAttribute(\n\t\t\tthis.chartElement,\n\t\t\t'id',\n\t\t\t`lthn-chart-${name}`\n\t\t);\n\t\tthis.renderer.setStyle(this.elmRef.nativeElement, 'height', '25vh');\n\t\tthis.renderer.setStyle(\n\t\t\tthis.elmRef.nativeElement,\n\t\t\t'position',\n\t\t\t'relative'\n\t\t);\n\n\t\t// position: relative; height:40vh; width:80vw\n\t\tthis.renderer.appendChild(this.elmRef.nativeElement, this.chartElement);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.renderer.removeChild(\n\t\t\t\tthis.elmRef.nativeElement,\n\t\t\t\tthis.chartElement\n\t\t\t);\n\t\t}\n\t\tthis.chartService.destroySubscriptions(this.lthnChart);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_providers\n\n\n\ncluster_ChartModule_ChartDirective_providers\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nChartDirective\n\nChartDirective\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartService\n\nChartService\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDirective} from './chart.directive';\nimport {ChartService} from './chart.service';\n\n@NgModule({\n\tdeclarations: [ChartDirective],\n\timports: [CommonModule],\n\tproviders: [ChartService],\n\texports: [ChartDirective]\n})\nexport class ChartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData$\n                            \n                            \n                                    Private\n                                chartInstances\n                            \n                            \n                                    Private\n                                chartMeta\n                            \n                            \n                                    Private\n                                chartSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                destroySubscriptions\n                            \n                            \n                                setupDataSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, platformId: Object, NetworkHashrateChart: NetworkHashrateChart)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        NetworkHashrateChart\n                                                  \n                                                        \n                                                                        NetworkHashrateChart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:54\n                \n            \n\n\n            \n                \n                    Loads up a new chart instance,\napplies colour adjustments\ncreates data subscription\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroySubscriptions\n                        \n                    \n                \n            \n            \n                \ndestroySubscriptions(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDataSubscription\n                        \n                    \n                \n            \n            \n                \nsetupDataSubscription(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:98\n                \n            \n\n\n            \n                \n                    Gets the observable for the chart key from the datastore\ncreates the data subscription, the map function is provided by the\nchart config service as a function dataMap(data)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                        \n                    \n\n            \n                \n                    holds all the data observables for all charts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:19\n                        \n                    \n\n            \n                \n                    holds the chart.js instances\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:26\n                        \n                    \n\n            \n                \n                    holds the configurations for each chart type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {Chart, registerables} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport {select, Store} from '@ngrx/store';\nimport colorLib from '@kurkle/color';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {selectChartData} from './data';\nimport {NetworkHashrateChart} from '@plugin/hashvault/charts/network-hashrate.chart';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChartService {\n\t/**\n\t * holds the chart.js instances\n\t *\n\t * @private\n\t */\n\tprivate chartInstances: object = {};\n\tprivate chartSubscriptions: object = {};\n\t/**\n\t * holds the configurations for each chart type\n\t *\n\t * @private\n\t */\n\tprivate chartMeta = {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t};\n\t/**\n\t * holds all the data observables for all charts\n\t *\n\t * @private\n\t */\n\tprivate chartData$: object = {};\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t//@TODO try and find a better way than get DI to give us configs, so they can themselves use services\n\t\tprivate NetworkHashrateChart: NetworkHashrateChart\n\t) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tChart.register(...registerables);\n\t\t}\n\t}\n\n\t/**\n\t * Loads up a new chart instance,\n\t * applies colour adjustments\n\t * creates data subscription\n\t *\n\t * @param name\n\t */\n\tcreateChart(name: string) {\n\t\tconst vm = this;\n\t\tif (!vm.chartMeta[name]) {\n\t\t\tthrow new Error(`Chart Not Defined: ${name}`);\n\t\t}\n\n\t\tvm.chartMeta[name].data.datasets.map((dataset, i) => {\n\t\t\tdataset.backgroundColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t)\n\t\t\t\t.alpha(0.2)\n\t\t\t\t.rgbString();\n\t\t\tdataset.borderColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t).rgbString();\n\t\t\t// if we have more than one data point, change label colors to match data\n\t\t\tif (vm.chartMeta[name].data.datasets.length > 1) {\n\t\t\t\tif (\n\t\t\t\t\tvm.chartMeta[name].options.scales[dataset.yAxisID]\n\t\t\t\t\t\t.position === 'right'\n\t\t\t\t) {\n\t\t\t\t\tvm.chartMeta[name].options.scales[\n\t\t\t\t\t\tdataset.yAxisID\n\t\t\t\t\t\t].ticks.color = dataset.borderColor;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvm.chartInstances[name] = new Chart(`lthn-chart-${name}`, {\n\t\t\ttype: vm.chartMeta[name].type,\n\t\t\tdata: vm.chartMeta[name].data,\n\t\t\toptions: vm.chartMeta[name].options\n\t\t});\n\n\t\tvm.setupDataSubscription(name);\n\t}\n\n\t/**\n\t * Gets the observable for the chart key from the datastore\n\t * creates the data subscription, the map function is provided by the\n\t * chart config service as a function dataMap(data)\n\t *\n\t * @param name\n\t */\n\tsetupDataSubscription(name: string) {\n\t\t//let vm = this\n\t\tthis.chartData$[name] = this.store.pipe(\n\t\t\tselect(selectChartData(this.chartMeta[name].key))\n\t\t);\n\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStartAction);\n\n\t\tthis.chartSubscriptions[name] = this.chartData$[name].subscribe(\n\t\t\t(response) => {\n\t\t\t\tif (response != undefined) {\n\t\t\t\t\tthis.chartInstances[name].data.datasets.map((item, i) => {\n\t\t\t\t\t\tthis.chartInstances[name].data.datasets[i].data =\n\t\t\t\t\t\t\tthis.chartMeta[name].dataMap(response, i);\n\t\t\t\t\t});\n\t\t\t\t\tthis.chartInstances[name].update();\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.destroySubscriptions(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\t//console.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroySubscriptions(name: string): void {\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStopAction);\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.chartSubscriptions[name].unsubscribe();\n\t\t\tthis.chartInstances[name].destroy();\n\t\t\tthis.chartInstances[name] = void 0;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartsEffects.html":{"url":"injectables/ChartsEffects.html","title":"injectable - ChartsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChartNetworkDifficultyStartPolling$\n                            \n                            \n                                ChartNetworkDifficultyStopPolling$\n                            \n                            \n                                LoadRequestedChartDifficulty$\n                            \n                            \n                                    Private\n                                    Static\n                                pollingUntil$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store>, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/data/effects.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                    Store>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStartPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStopPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRequestedChartDifficulty$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pollingUntil$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tChartNetworkDifficulty$: new Subject()\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport * as ChartsActions from './actions';\nimport {of, Subject, timer} from 'rxjs';\nimport {select, State, Store} from '@ngrx/store';\nimport {HttpClient} from '@angular/common/http';\nimport {debug, RxJsLoggingLevel} from '@data/debug.rxjs';\nimport {ChartDifficulty} from './interfaces/difficulty.state';\nimport {selectChartOptions} from './selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\tprivate static pollingUntil$ = {\n\t\tChartNetworkDifficulty$: new Subject()\n\t};\n\t// LoadRequestedChartDifficulty$ = createEffect(() =>\n\t//     this.actions$.pipe(\n\t//         ofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t//         switchMap(() =>\n\t//             this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`)\n\t//                 .pipe(\n\t//                     map(\n\t//                         (networkDifficulty) => ChartsActions.chartNetworkDifficultyLoadSuccess({\n\t//                                 networkDifficulty,\n\t//                             }\n\t//                         ),\n\t//                         catchError((error) => {\n\t//                                 console.error(error);\n\t//                                 return of(ChartsActions.chartNetworkDifficultyLoadFailure({error}));\n\t//                             }\n\t//                         )\n\t//                     )\n\t//                 )\n\t//         )\n\t//     )\n\t// );\n\n\tLoadRequestedChartDifficulty$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tChartNetworkDifficultyStartPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t);\n\tChartNetworkDifficultyStopPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate store$: Store>,\n\t\tprivate http: HttpClient\n\t) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartsState.html":{"url":"interfaces/ChartsState.html","title":"interface - ChartsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            networkDifficulty\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        networkDifficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkDifficulty:         ChartDifficultyState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartDifficultyState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createReducer, on} from '@ngrx/store';\nimport * as ChartsActions from './actions';\nimport {ChartDifficultyState} from './interfaces/difficulty.state';\n\n// export const initialState = PoolStatsState;\nexport const initialState: ChartsState = {\n\tnetworkDifficulty: new ChartDifficultyState()\n};\n\nconst chartDifficultyReducer = createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n);\n\nexport function reducer(state, action) {\n\treturn chartDifficultyReducer(state, action);\n}\n\nexport interface ChartsState {\n\tnetworkDifficulty?: ChartDifficultyState;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/console/console.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-console\n            \n\n            \n                styleUrls\n                ./console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                child\n                            \n                            \n                                    Private\n                                command\n                            \n                            \n                                    Private\n                                sub$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStream\n                            \n                            \n                                getSub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ws: WebsocketService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/console/console.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        attach\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lethean-wallet-rpc'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/console/console.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStream\n                        \n                    \n                \n            \n            \n                \nchangeStream(channel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSub\n                        \n                    \n                \n            \n            \n                \ngetSub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        child\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgTerminal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('term', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub$\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NgTerminal} from 'ng-terminal';\nimport {WebsocketService} from '@service/websocket.service';\n\n\n@Component({\n\tselector: 'lthn-app-console',\n\ttemplateUrl: './console.component.html',\n\tstyleUrls: ['./console.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n\n\n})\nexport class ConsoleComponent implements OnInit, AfterViewInit {\n\t@ViewChild('term', { static: true }) child: NgTerminal;\n\n\t@Input() attach  = 'lethean-wallet-rpc';\n\tprivate command: string[] = []\n\tprivate sub$;\n\tconstructor(private ws: WebsocketService, private ref: ChangeDetectorRef) {\n\t\tthis.ref.detach()\n\t\tsetInterval(() => {\n\t\t\tthis.ref.detectChanges();\n\t\t}, 1000);\n\n\t}\n\n\tngOnInit(): void {\n\t\tlet that = this;\n\n\t\tthis.ref.detectChanges();\n\t\tthis.ws.connect().subscribe((data) => {\n\t\t\tif(this.attach === data[0]) {\n\t\t\t\tlet line  = atob(data[1]);\n\t\t\t\tif(data[0] === 'update-cli'){\n\t\t\t\t\tthis.child.underlying.writeln(data[1]);\n\t\t\t\t}else if(line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154\")){\n\t\t\t\t\tlet parts: string[] = line.split(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154\");\n\t\t\t\t\tif(parts.length > 0){\n\t\t\t\t\t\tthis.child.underlying.writeln(parts[1].trim());\n\t\t\t\t\t}\n\t\t\t\t}else if (line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:305\")){\n\n\t\t\t\t}else{\n\t\t\t\t\tthis.child.underlying.writeln(line.trim());\n\t\t\t\t}\n\n\t\t\t\tthat.ref.markForCheck()\n\t\t\t}\n\n\t\t})\n\n\t\t\tthis.changeStream(this.attach)\n    }\n\n\tgetSub(){\n\t\tthis.sub$ = this.ws.connect();\n\t}\n\n\tchangeStream(channel:string){\n\t\tthis.ws.sendMessage(channel)\n\t\tthis.ref.markForCheck()\n\t}\n\n\tngAfterViewInit() {\n\t\tconst that = this;\n\t\tthis.child.write('$ ');\n\t\tif(this.child.keyEventInput) {\n\n\t\t\tthis.child.keyEventInput.subscribe((e) => {\n\t\t\t\t//console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n\n\t\t\t\tconst ev = e.domEvent;\n\t\t\t\tconst printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n\t\t\t\tif (ev.keyCode === 13) {\n\n\t\t\t\t\t//console.log(`cmd:letheand:${this.command.join('')}`)\n\t\t\t\t\tthat.ws.sendMessage(`cmd:letheand:${this.command.join('')}\\n`)\n\t\t\t\t\tthis.command = []\n\t\t\t\t\tthis.child.underlying.writeln(\"$\");\n\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t} else if (ev.keyCode === 8) {\n\t\t\t\t\t this.command.pop()\n\t\t\t\t\tif (this.child.underlying.buffer.active.cursorX > 0) {\n\t\t\t\t\t\tthis.child.underlying.write('\\b \\b');\n\t\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tthis.command.push(e.key);\n\t\t\t\t\tthis.child.write(e.key);\n\t\t\t\t\t//this.ref.detectChanges();\n\t\t\t\t}\n\t\t\t\t//console.log(this.command.join(\"\"))\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./console.component.scss\n                \n                //.xterm-viewport {\n//\twidth: auto !important;\n//}\n//\n//.xterm-screen {\n//\twidth: auto !important;\n//\t> canvas {\n//\t\twidth: 100% !important;\n//\t}\n//}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleModule.html":{"url":"modules/ConsoleModule.html","title":"module - ConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\n\n\nConsoleModule\n\nConsoleModule\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleComponent } from './console.component';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NgTerminalModule} from 'ng-terminal';\nimport {FlexModule} from '@angular/flex-layout';\n\n\n@NgModule({\n\tdeclarations: [ConsoleComponent],\n\texports: [\n\t\tConsoleComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tNgTerminalModule,\n\t\tFlexModule\n\t]\n})\nexport class ConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateWallet.html":{"url":"interfaces/CreateWallet.html","title":"interface - CreateWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptService.html":{"url":"injectables/CryptService.html","title":"injectable - CryptService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOpenPGP\n                            \n                            \n                                createSalt\n                            \n                            \n                                    Async\n                                decryptPGPSingle\n                            \n                            \n                                    Async\n                                encryptPGPSingle\n                            \n                            \n                                generateKey\n                            \n                            \n                                sha256Salty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypt.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOpenPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOpenPGP(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:71\n                \n            \n\n\n            \n                \n                    Creates a Armoured OpenPGP key for the username protected with the password supplied\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalt\n                        \n                    \n                \n            \n            \n                \ncreateSalt(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:25\n                \n            \n\n\n            \n                \n                    Transforms the input string with a lite l337 conversion\nthis will always give you the same salt, im aware of the issues here\nPlease start a GitHub issue if you have a good idea for knowledge-less reproducible salts\nMaybe allow people to set a custom salter? something for later.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGPSingle(id: string, passphrase: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:121\n                \n            \n\n\n            \n                \n                    Requires the users password, for this reason, you might want to make or interact with profiles\nthey are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPGPSingle(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:92\n                \n            \n\n\n            \n                \n                    Using a Lethean user public key, encrypt the supplied data\nBigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\"quick for you\" it wont be on a Pi4 under load\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateKey\n                        \n                    \n                \n            \n            \n                \ngenerateKey(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:56\n                \n            \n\n\n            \n                \n                    Create a salted PBKDF2 key for encryption purposes using a random word array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Salty\n                        \n                    \n                \n            \n            \n                \nsha256Salty(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:44\n                \n            \n\n\n            \n                \n                    sha256 hash that uses itself converted as a reproducable salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AppService} from '../app.service';\nimport {FileSystemService} from './filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CryptService {\n\tconstructor(\n\t\tprivate appService: AppService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * Transforms the input string with a lite l337 conversion\n\t * this will always give you the same salt, im aware of the issues here\n\t * Please start a GitHub issue if you have a good idea for knowledge-less reproducible salts\n\t *\n\t * Maybe allow people to set a custom salter? something for later.\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSalt(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\t\treturn input\n\t\t\t.replace('o', '0')\n\t\t\t.replace(/l/gi, '1')\n\t\t\t.replace(/e/gi, '3')\n\t\t\t.replace(/a/gi, '4')\n\t\t\t.replace(/s/gi, 'z')\n\t\t\t.replace(/t/gi, '7');\n\t}\n\n\t/**\n\t * sha256 hash that uses itself converted as a reproducable salt\n\t *\n\t * @param input\n\t * @returns {string}\n\t */\n\tsha256Salty(input): string {\n\t\treturn this.appService.crypto\n\t\t\t.SHA256(input + this.createSalt(input))\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Create a salted PBKDF2 key for encryption purposes using a random word array\n\t *\n\t * @param input\n\t * @returns {any}\n\t */\n\tgenerateKey(input) {\n\t\tconst salt = this.appService.crypto.lib.WordArray.random(128 / 8);\n\t\treturn this.appService.crypto.PBKDF2(input, salt, {\n\t\t\tkeySize: 256 / 32\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a Armoured OpenPGP key for the username protected with the password supplied\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync createOpenPGP(username, password) {\n\t\treturn await this.appService.openpgp.generateKey({\n\t\t\ttype: 'rsa', // Type of the key, defaults to ECC\n\t\t\trsaBits: 4096,\n\t\t\tuserIDs: [{name: username}], // you can pass multiple user IDs\n\t\t\tpassphrase: password, // protects the private key\n\t\t\tformat: 'armored' // output key format, defaults to 'armored' (other options: 'binary' or 'object')\n\t\t});\n\t}\n\n\n\t/**\n\t * Using a Lethean user public key, encrypt the supplied data\n\t *\n\t * Bigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\t * \"quick for you\" it wont be on a Pi4 under load\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} data\n\t * @returns {Promise}\n\t */\n\tasync encryptPGPSingle(id: string, data: string) {\n\t\tconst encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.public.asc`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\tconst encrypted = await this.appService.openpgp.encrypt({\n\t\t\tmessage: await this.appService.openpgp.createMessage({\n\t\t\t\ttext: data\n\t\t\t}), // input as Message object\n\t\t\tencryptionKeys: await this.appService.openpgp.readKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t})\n\t\t});\n\n\t\treturn encrypted;\n\t}\n\n\t/**\n\t * Requires the users password, for this reason, you might want to make or interact with profiles\n\t * they are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} passphrase\n\t * @param {string} encrypted\n\t * @returns {Promise}\n\t */\n\tasync decryptPGPSingle(id: string, passphrase: string, encrypted: string) {\n\t\t/**\n\t\t * @type string OpenPGP Armoured private key\n\t\t */\n\t\tlet encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.private.asc`\n\t\t);\n\t\t// decrypt the private key\n\t\tlet privateKey = await this.appService.openpgp.decryptKey({\n\t\t\tprivateKey: await this.appService.openpgp.readPrivateKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t}),\n\t\t\tpassphrase\n\t\t});\n\n\t\tlet message = await this.appService.openpgp.readMessage({\n\t\t\tarmoredMessage: encrypted\n\t\t})\n\n\t\tconst {data: decrypted, signatures} =\n\t\t\tawait this.appService.openpgp.decrypt({\n\t\t\t\tmessage,\n\t\t\t\tdecryptionKeys: privateKey\n\t\t\t});\n\t\t// Leave nothing to chance\n\t\tprivateKey = null\n\t\tencryptionKey = ''\n\t\tmessage = null\n\n\t\treturn decrypted;\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {effects, metaReducers, reducers} from './reducers';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {APP_CONFIG} from '@env/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {EntityDataModule} from '@ngrx/data';\nimport {entityConfig} from './entity-metadata';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forRoot(reducers, {\n\t\t\tmetaReducers\n\t\t}),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25,\n\t\t\tlogOnly: APP_CONFIG.production,\n\t\t\tactionsBlocklist: ['@ngrx/router*']\n\t\t}),\n\t\tEffectsModule.forRoot([...effects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tEntityDataModule.forRoot(entityConfig)\n\t]\n})\nexport class DataModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/destination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface Destination {\n\tamount: number; // - unsigned int; Amount to send to each destination, in atomic units.\n\taddress: Address; // - string; Destination public address.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/status/dialog/no-daemon-running.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            animal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/profile/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects-1.html":{"url":"injectables/Effects-1.html","title":"injectable - Effects-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/user/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EffortPipe.html":{"url":"pipes/EffortPipe.html","title":"pipe - EffortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EffortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/effort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        effort\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/effort.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'effort', pure: false })\nexport class EffortPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tif (valid === false) {\n\t\t\treturn 'black';\n\t\t}\n\t\tconst mid = 100;\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tconst b = 0;\n\t\tif (value \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keepHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(content);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystemInterface.html":{"url":"interfaces/FileSystemInterface.html","title":"interface - FileSystemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileSystemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-system.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        mkdir\n                                    \n                                \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        write\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(type, pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:49\n                \n            \n\n\n            \n                \n                    check if a path.. dir or filename exsists in the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:33\n                \n            \n\n\n            \n                \n                    returns a json list of folder contents\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:41\n                \n            \n\n\n            \n                \n                    make a dir, return result as a boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:8\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:16\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(type, filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:25\n                \n            \n\n\n            \n                \n                    write the string value tot he request filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string value to save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileSystemInterface {\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tpath(type, filename);\n\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tread(type, filename);\n\n\t/**\n\t * write the string value tot he request filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t * @param data string value to save\n\t */\n\twrite(type, filename, data): void;\n\n\t/**\n\t * returns a json list of folder contents\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tlist(type, dirname): any;\n\n\t/**\n\t * make a dir, return result as a boolean\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tmkdir(type, dirname): void;\n\n\t/**\n\t * check if a path.. dir or filename exsists in the filesystem\n\t *\n\t * @param type\n\t * @param pathname full system path\n\t */\n\texists(type, pathname): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemService.html":{"url":"injectables/FileSystemService.html","title":"injectable - FileSystemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exists\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                mkDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileSystem\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appFilesystem: FileSystemWebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appFilesystem\n                                                  \n                                                        \n                                                                        FileSystemWebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:71\n                \n            \n\n\n            \n                \n                    check if a file or directory exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    listFiles(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:27\n                \n            \n\n\n            \n                \n                    List files in the directory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkDir\n                        \n                    \n                \n            \n            \n                \nmkDir(dirname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a directory on the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the string value of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Including system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filename: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:51\n                \n            \n\n\n            \n                \n                    write a file to the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileSystem\n                    \n                \n\n                \n                    \n                        getfileSystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filesystem/file-system.service.ts:17\n                                \n                            \n                    \n                        \n                                returns a working FS wrapper\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemWebService} from './file-system-web.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemService {\n\tpublic type: string;\n\n\tconstructor(private appFilesystem: FileSystemWebService) {\n\t}\n\n\t/**\n\t * returns a working FS wrapper\n\t * @todo add WebFileSystem API wrapper\n\t */\n\tget fileSystem() {\n\t\treturn this.appFilesystem;\n\t}\n\n\t/**\n\t * List files in the directory\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tasync listFiles(dirname) {\n\t\ttry {\n\t\t\treturn await this.fileSystem.list(dirname);\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the string value of a file\n\t *\n\t * @param filename Including system path\n\t */\n\tasync readFile(filename: string) {\n\t\treturn await this.fileSystem.read(filename);\n\t}\n\n\t/**\n\t * write a file to the filesystem\n\t *\n\t * @param filename\n\t * @param data\n\t */\n\twriteFile(filename: string, data: any) {\n\t\treturn this.fileSystem.write(filename, data);\n\t}\n\n\t/**\n\t * Create a directory on the filesystem\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tmkDir(dirname: string) {\n\t\treturn this.fileSystem.mkdir(dirname);\n\t}\n\n\t/**\n\t * check if a file or directory exists\n\t *\n\t * @param pathname\n\t * @returns\n\t */\n\texists(pathname: string) {\n\t\treturn this.fileSystem.exists(pathname);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemWebService.html":{"url":"injectables/FileSystemWebService.html","title":"injectable - FileSystemWebService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemWebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system-web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exists\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                            \n                                    Public\n                                mkdir\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mkdir\n                        \n                    \n                \n            \n            \n                \n                    \n                    mkdir(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        path\n                        \n                    \n                \n            \n            \n                \n                    \n                    path(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                    \n                    write(filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/filesystem'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileSystemInterface} from '@interface/file-system.interface';\nimport {atob, btoa} from 'bytebuffer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemWebService implements FileSystemInterface {\n\tprivate apiUrl = 'https://localhost:36911/filesystem';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic exists(pathname): boolean {\n\t\treturn false;\n\t}\n\n\tpublic async list(dirname) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/list`, {path: dirname}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat));\n\t}\n\n\tpublic mkdir(dirname): void {\n\t}\n\n\tpublic path(filename) {\n\t}\n\n\n\tpublic async read(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/read`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => atob(dat));\n\t}\n\n\tpublic async write(filename, data) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t})\n\t\t};\n\n\t\treturn await this.http\n\t\t\t.post(\n\t\t\t\t`${this.apiUrl}/write`,\n\t\t\t\t{path: filename, data: btoa(data)},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log('e'));\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAddressBookOut.html":{"url":"interfaces/GetAddressBookOut.html","title":"interface - GetAddressBookOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAddressBookOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getAddressBookOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetAddressBookOut {\n\tentries: {\n\t\taddress: string;\n\t\tdescription: string;\n\t\tindex: number;\n\t\tpayment_id: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsIn.html":{"url":"interfaces/GetBulkPaymentsIn.html","title":"interface - GetBulkPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            min_block_height\n                                        \n                                \n                                \n                                        \n                                            payment_ids\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        min_block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetBulkPaymentsIn {\n\tpayment_ids: string[]; // - array of: string\n\tmin_block_height: number; // - unsigned int; The block height at which to start looking for payments.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsOut.html":{"url":"interfaces/GetBulkPaymentsOut.html","title":"interface - GetBulkPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetBulkPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsIn.html":{"url":"interfaces/GetPaymentsIn.html","title":"interface - GetPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetPaymentsIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsOut.html":{"url":"interfaces/GetPaymentsOut.html","title":"interface - GetPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersIn.html":{"url":"interfaces/GetTransfersIn.html","title":"interface - GetTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersIn.ts\n        \n\n\n            \n                Description\n            \n            \n                Get wallet transfers request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter_by_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers FAILED\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter_by_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter_by_height:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter TX's\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers IN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    max height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    min height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers OUT\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers PENDING\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers POOL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GetTransfersIn {\n\t/** transfers IN */\n\tin?: boolean;\n\t/** transfers OUT */\n\tout?: boolean;\n\t/** transfers PENDING */\n\tpending?: boolean;\n\t/** transfers FAILED */\n\tfailed?: boolean;\n\t/** transfers POOL */\n\tpool?: boolean;\n\t/** Filter TX's */\n\tfilter_by_height?: boolean;\n\t/** min height */\n\tmin_height?: number;\n\t/** max height */\n\tmax_height?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersOut.html":{"url":"interfaces/GetTransfersOut.html","title":"interface - GetTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Transfer} from '../types/transfer';\nimport {Destination} from '../types/destination';\n\nexport interface GetTransfersOut {\n\tin?: Transfer[] & Destination[]; // - boolean;\n\tout?: Transfer[]; // - boolean;\n\tpending?: Transfer[]; // - boolean;\n\tfailed?: Transfer[]; // - boolean;\n\tpool?: Transfer[]; // - boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashLinkPipe.html":{"url":"pipes/HashLinkPipe.html","title":"pipe - HashLinkPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashLinkPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashLink.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashLink\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        cutMiddle\n                        \n                    \n                \n            \n            \n                \n                    \n                    cutMiddle(string, maxLength)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashLink.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashLink.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'txn'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: \"hashLink\", pure: false })\nexport class HashLinkPipe implements PipeTransform {\n  constructor() {}\n\n  transform(content, type: string = 'txn') {\n    let url = `/chain/explorer/${type}/${content}`;\n\n    return content === undefined\n      ? \"¯\\\\_(ツ)_/¯\"\n      : `${this.cutMiddle(content, 16)}`;\n  }\n\n  private cutMiddle(string, maxLength) {\n    if (!string) return string;\n    if (maxLength \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashRatePipe.html":{"url":"pipes/HashRatePipe.html","title":"pipe - HashRatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashRatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number | string, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashrate.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'hashrate', pure: false })\nexport class HashRatePipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content: number | string = 0, decorator?: boolean) {\n\t\tif (typeof content == 'string' || content === null) {\n\t\t\tcontent = 0;\n\t\t}\n\t\tlet i = 0;\n\t\tconst units = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z'];\n\t\twhile (content > 1000) {\n\t\t\tcontent /= 1000;\n\t\t\ti++;\n\t\t}\n\t\tif (decorator === false) {\n\t\t\treturn content.toFixed(2);\n\t\t} else {\n\t\t\treturn `${content.toFixed(2)} ${units[i]}H/s`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/height.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n\theight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersIn.html":{"url":"interfaces/IncomingTransfersIn.html","title":"interface - IncomingTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            transfer_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_type:     \"all\" | \"available\" | \"unavailable\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"all\" | \"available\" | \"unavailable\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersIn {\n\ttransfer_type: 'all' | 'available' | 'unavailable';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersOut.html":{"url":"interfaces/IncomingTransfersOut.html","title":"interface - IncomingTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            global_index\n                                        \n                                \n                                \n                                        \n                                            spent\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersOut {\n\tamount: number; // - unsigned int\n\tspent: boolean; // - boolean\n\tglobal_index: number; // - unsigned int; Mostly internal use, can be ignored by most users.\n\ttx_hash: string; // - string; Several incoming transfers may share the same hash if they were in the same transaction.\n\ttx_size: number; // - unsigned int\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntegratedAddress.html":{"url":"interfaces/IntegratedAddress.html","title":"interface - IntegratedAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IntegratedAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/integratedAddress.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            integrated_address\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface IntegratedAddress {\n\tintegrated_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LTHN.html":{"url":"classes/LTHN.html","title":"class - LTHN","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LTHN\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toAtomic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toAtomic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-login',\n\ttemplateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\terror = '';\n\n\tconstructor(private authService: AuthService, private router: Router) {\n\t}\n\n\tasync submit() {\n\t\tawait this.authService.login(this.username.value, this.password.value);\n\t\tif (this.authService.getAuthStatus()) {\n\t\t\tthis.router.navigateByUrl('/');\n\t\t} else {\n\t\t\tthis.error = 'Login Failed, try again.';\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        Login\n        \n             0\">{{error}}\n            \n                Username\n                \n            \n            \n                Password\n                \n            \n\n            Login\n\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                     0\">{{error}}                            Username                                                        Password                                        Login            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-logs\n            \n\n            \n                styleUrls\n                ./logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/logs/logs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/logs/logs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-logs',\n\ttemplateUrl: './logs.component.html',\n\tstyleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./logs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_declarations\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogsComponent} from './logs.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'logs',\n\t\tcomponent: LogsComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [LogsComponent],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule, LogsComponent]\n})\nexport class LogsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsState.html":{"url":"interfaces/LogsState.html","title":"interface - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeIntegratedAddressIn.html":{"url":"interfaces/MakeIntegratedAddressIn.html","title":"interface - MakeIntegratedAddressIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeIntegratedAddressIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MakeIntegratedAddressIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeUriIn.html":{"url":"interfaces/MakeUriIn.html","title":"interface - MakeUriIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeUriIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeUriIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipient_name\n                                        \n                                \n                                \n                                        \n                                            tx_description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface MakeUriIn {\n\taddress: Address;\n\tamount?: number; // (optional) - the integer amount to receive, in atomic units\n\tpayment_id?: string; // (optional) - 16 or 64 character hexadecimal payment id string\n\trecipient_name?: string; // (optional) - string name of the payment recipient\n\ttx_description: string; // (optional) - string describing the reason for the tx\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/markdown.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/markdown.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {marked} from 'marked';\n\n@Pipe({\n\tname: 'markdown'\n})\nexport class MarkdownPipe implements PipeTransform {\n\ttransform(value: any, args?: any[]): any {\n\t\tif (value && value.length > 0) {\n\t\t\treturn marked(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/services/ui/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalContent\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injectable, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\n\n@Component({\n\tselector: 'modal',\n\ttemplateUrl: './modal.component.html'\n})\n@Injectable({providedIn: 'root'})\nexport class ModalComponent implements OnInit {\n\n\t@Input() public modalConfig: ModalConfig\n\n\t@ViewChild('modal') private modalContent: TemplateRef\n\tprivate modalRef: NgbModalRef\n\n\tconstructor(private modalService: NgbModal) { }\n\n\tngOnInit(): void { }\n\n\topen(): Promise {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.modalRef = this.modalService.open(this.modalContent)\n\t\t\tthis.modalRef.result.then(resolve, resolve)\n\t\t})\n\t}\n\n\tasync close(): Promise {\n\t\tif (this.modalConfig.shouldClose === undefined || (await this.modalConfig.shouldClose())) {\n\t\t\tconst result = this.modalConfig.onClose === undefined || (await this.modalConfig.onClose())\n\t\t\tthis.modalRef.close(result)\n\t\t}\n\t}\n\n\tasync dismiss(): Promise {\n\t\tif (this.modalConfig.shouldDismiss === undefined || (await this.modalConfig.shouldDismiss())) {\n\t\t\tconst result = this.modalConfig.onDismiss === undefined || (await this.modalConfig.onDismiss())\n\t\t\tthis.modalRef.dismiss(result)\n\t\t}\n\t}\n}\n\n\n\n\n\n\n    \n\n    \n        \n    \n        {{ modalConfig.modalTitle }}\n    \n    \n        \n    \n    \n        \n            {{ modalConfig.dismissButtonLabel }}\n        \n        \n            {{ modalConfig.closeButtonLabel }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ modalConfig.modalTitle }}                                            {{ modalConfig.dismissButtonLabel }}                            {{ modalConfig.closeButtonLabel }}            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ui/modal/modalConfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closeButtonLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissButtonLabel\n                                        \n                                \n                                \n                                        \n                                            modalTitle\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        disableCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        disableDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onDismiss\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldDismiss\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableCloseButton\n                        \n                    \n                \n            \n            \n                \ndisableCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableDismissButton\n                        \n                    \n                \n            \n            \n                \ndisableDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideCloseButton\n                        \n                    \n                \n            \n            \n                \nhideCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideDismissButton\n                        \n                    \n                \n            \n            \n                \nhideDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onDismiss\n                        \n                    \n                \n            \n            \n                \nonDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldClose\n                        \n                    \n                \n            \n            \n                \nshouldClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldDismiss\n                        \n                    \n                \n            \n            \n                \nshouldDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modalTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modalTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalConfig {\n\tmodalTitle: string;\n\tdismissButtonLabel?: string;\n\tcloseButtonLabel?: string;\n\n\tshouldClose?(): Promise | boolean;\n\n\tshouldDismiss?(): Promise | boolean;\n\n\tonClose?(): Promise | boolean;\n\n\tonDismiss?(): Promise | boolean;\n\n\tdisableCloseButton?(): boolean;\n\n\tdisableDismissButton?(): boolean;\n\n\thideCloseButton?(): boolean;\n\n\thideDismissButton?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/ui/modal/modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n\n\n@NgModule({\n  declarations: [ModalComponent],\n  exports: [\n    ModalComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkHashrateChart.html":{"url":"injectables/NetworkHashrateChart.html","title":"injectable - NetworkHashrateChart","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkHashrateChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/hashvault/charts/network-hashrate.chart.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseChartConfigService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                pollingStartAction\n                            \n                            \n                                    Public\n                                pollingStopAction\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureOptions\n                            \n                            \n                                dataMap\n                            \n                            \n                                setupCallbacks\n                            \n                            \n                                addOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data, i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'networkDifficulty'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStartAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStartPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStopAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStopPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'line'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as ChartsActions from '@module/chart/data/actions';\nimport {BaseChartConfigService} from '@module/chart/base-chart-config.service';\nimport {ChartConfigInterface} from '@module/chart/chart-config.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class NetworkHashrateChart\n\textends BaseChartConfigService\n\timplements ChartConfigInterface {\n\tpublic pollingStartAction =\n\t\tChartsActions.chartNetworkDifficultyStartPolling();\n\tpublic pollingStopAction =\n\t\tChartsActions.chartNetworkDifficultyStopPolling();\n\tpublic key = 'networkDifficulty';\n\tpublic type = 'line';\n\tpublic data = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconfigureOptions() {\n\t\tthis.addOptions({\n\t\t\tparsing: false,\n\t\t\tspanGaps: true,\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tx: {\n\t\t\t\t\ttitle: 'time',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tday: 'D MMM'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunit: 'day'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsource: 'data',\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\tbounds: 'data',\n\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\toffsetGridLines: false,\n\t\t\t\t\t\ttickMarkLength: 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\ttitle: 'hashrate',\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: null,\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro',\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tmirror: true,\n\t\t\t\t\t\tpadding: 4\n\t\t\t\t\t},\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\ttickMarkLength: 0,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tposition: 'nearest',\n\t\t\t\t\tmode: 'index',\n\t\t\t\t\tintersect: false,\n\t\t\t\t\tcaretSize: 4,\n\t\t\t\t\tbackgroundColor: 'e2e2e2',\n\t\t\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t},\n\t\t\t\tdecimation: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\talgorithm: 'lttb',\n\t\t\t\t\tsamples: 50\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolors: ['#1c9ea3']\n\t\t});\n\t}\n\n\tsetupCallbacks() {\n\t\tconst vm = this;\n\t\t// this.options.scales.y.ticks.callback = function (value, index, values) {\n\t\t//     return vm.hashratePipe.transform(value);\n\t\t// };\n\t\t//\n\t\t// this.options.plugins.tooltip.callbacks = {\n\t\t//     label: context => `Hashrate: ${vm.hashratePipe.transform(context.parsed.y)}`\n\t\t// };\n\t}\n\n\tdataMap(data, i) {\n\t\tconst vm = this;\n\t\treturn data.map((n: any) => ({\n\t\t\tx: n.ts,\n\t\t\ty: Math.floor(n.diff / 120)\n\t\t}));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewComponent.html":{"url":"components/NewComponent.html","title":"component - NewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/new.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-new\n            \n\n\n\n\n            \n                templateUrl\n                ./new.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                password_confirm\n                            \n                            \n                                wallet_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWallet\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletRpc: WalletRpcService, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletRpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_confirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { WalletRpcService } from '@service/wallet.rpc.service';\n\nimport { nameNotTakenValidator } from '../validators'\nimport { WalletService } from '../wallet.service'\n\n@Component({\n\tselector: 'lthn-wallet-new',\n\ttemplateUrl: './new.component.html'\n})\nexport class NewComponent implements OnInit {\n\twallet_name: FormControl;\n\tpassword: FormControl;\n\tpassword_confirm: FormControl;\n\tconstructor(private walletRpc: WalletRpcService, private wallet: WalletService) {}\n\n\tngOnInit(): void {\n\t\tthis.wallet_name = new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]);\n\t\tthis.password = new FormControl('')\n\t\tthis.password_confirm = new FormControl('')\n\t}\n\n\tcreateWallet() {\n\t\tif (this.password.value === this.password_confirm.value) {\n\t\t\tconsole.log(\n\t\t\t\tthis.walletRpc.createWallet({\n\t\t\t\t\tfilename: this.wallet_name.value,\n\t\t\t\t\tpassword: this.password.value,\n\t\t\t\t\tlanguage: 'English'\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.new-wallet' | translate }}\n    \n\n        \n            {{ 'plugin.lthn.wallet.label.filename' | translate }}\n            \n\t\t\tWallet already exists\n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n            \n        \n        {{ 'plugin.lthn.wallet.button.create-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.new-wallet\\' | translate }}                        {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}            \t\t\tWallet already exists                            {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                            {{ \\'plugin.lthn.wallet.button.create-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoDaemonRunningDialog.html":{"url":"components/NoDaemonRunningDialog.html","title":"component - NoDaemonRunningDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoDaemonRunningDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/dialog/no-daemon-running.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status-no-daemon\n            \n\n\n\n\n            \n                templateUrl\n                no-daemon-running.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n    \n        \n  Please Download Our App\n  \n    The blockchain functionality requires extra software, please install our app to enable this feature.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Download Our App      The blockchain functionality requires extra software, please install our app to enable this feature.  '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoDaemonRunningDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-open\n            \n\n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlockWallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, store: Store, notifierService: NotifierService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifierService\n                                                  \n                                                        \n                                                                    NotifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:33\n                \n            \n\n\n            \n                \n                    get list of filesystem wallets\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockWallet\n                        \n                    \n                \n            \n            \n                \nunlockWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:42\n                \n            \n\n\n            \n                \n                    Unlock wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:23\n                        \n                    \n\n            \n                \n                    Lists the wallets known\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {NotifierService} from 'angular-notifier';\nimport {addWallet, openWallet} from '@plugin/lthn/wallet/data';\nimport {Store} from '@ngrx/store';\n\n@Component({\n\tselector: 'lthn-wallet-open',\n\ttemplateUrl: './open.component.html'\n})\nexport class OpenComponent implements OnInit {\n\t@Input() name?: string = '';\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\t/**\n\t * Lists the wallets known\n\t *\n\t * @type {string[]}\n\t */\n\tpublic wallets: string[];\n\n\n\tconstructor(private wallet: WalletService, private store: Store, private notifierService: NotifierService) {\n\n\t}\n\n\t/**\n\t * get list of filesystem wallets\n\t */\n\tngOnInit(): void {\n\t\tthis.wallets = this.wallet.getWalletList()\n\t}\n\n\t/**\n\t * Unlock wallet\n\t *\n\t * @returns {Promise>}\n\t */\n\tunlockWallet(name: string) {\n\t\tthis.store.dispatch(openWallet({address: name, password: (document.getElementById(name + '-pass')).value}))\n//\t\treturn this.wallet.openWallet({\n//\t\t\tfilename: name,\n//\t\t\tpassword:\n//\t\t}).then(() => this.notifierService.notify('success', 'Loaded Wallet: ' + name));\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.unlock-wallet' | translate }}\n    \n        \n            \n            \n                {{wall}}\n                \n                    \n                        {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                        \n                    \n                    {{ 'plugin.lthn.wallet.button.unlock-wallet' | translate }}\n\n                \n            \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.unlock-wallet\\' | translate }}                                                    {{wall}}                                                            {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                {{ \\'plugin.lthn.wallet.button.unlock-wallet\\' | translate }}                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenWallet.html":{"url":"interfaces/OpenWallet.html","title":"interface - OpenWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptions.html":{"url":"classes/PaginatorOptions.html","title":"class - PaginatorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PaginatorOptionsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptionsInterface.html":{"url":"classes/PaginatorOptionsInterface.html","title":"class - PaginatorOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParseUri.html":{"url":"interfaces/ParseUri.html","title":"interface - ParseUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParseUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         MakeUriIn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MakeUriIn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Payment {\n\tamount: number;\n\tblock_height: number;\n\tpayment_id: string;\n\ttx_hash: string;\n\tunlock_time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HashRatePipe} from './crypto/hashrate.pipe';\nimport {TimeAgoPipe} from './date/timeAgo.pipe';\nimport {EscapeHtmlPipe} from './content/html.pipe';\nimport {ShruggiePipe} from './content/shruggie.pipe';\nimport {RemoveTrailingZerosPipe} from './math/removeTrailingZeros.pipe';\nimport {MarkdownPipe} from './content/markdown.pipe';\nimport {EffortPipe} from './crypto/effort.pipe';\nimport {ToCoinPipe} from 'app/pipes/crypto/toCoin.pipe';\nimport {HashLinkPipe} from 'app/pipes/crypto/hashLink.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe,\n\t\tToCoinPipe,\n\t\tHashLinkPipe\n\t],\n\texports: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe,\n\t\tToCoinPipe,\n\t\tHashLinkPipe\n\t],\n\timports: [CommonModule]\n})\nexport class PipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginDefinition.html":{"url":"interfaces/PluginDefinition.html","title":"interface - PluginDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluginDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description_short\n                                        \n                                \n                                \n                                        \n                                            git_repo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            readme_list\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description_short\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_short:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git_repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        git_repo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readme_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readme_list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PluginStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plugins.html":{"url":"interfaces/Plugins.html","title":"interface - Plugins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plugins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_update_check\n                                        \n                                \n                                \n                                        \n                                            loaded_keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_update_check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_update_check:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_keys:         PluginDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PluginsComponent.html":{"url":"components/PluginsComponent.html","title":"component - PluginsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PluginsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/plugins.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-plugins\n            \n\n            \n                styleUrls\n                ./plugins.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./plugins.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, wallet: PluginsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/plugins.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        PluginsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluginsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/plugins.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {PluginsService} from '@plugin/plugins.service';\nimport {createCustomElement} from '@angular/elements';\nimport {WalletComponent} from '@plugin/lthn/wallet/wallet.component';\n\n@Component({\n  selector: 'lthn-app-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrls: ['./plugins.component.scss']\n})\nexport class PluginsComponent implements OnInit {\n\n  constructor(injector: Injector, public wallet: PluginsService) {\n    // Convert `PopupComponent` to a custom element.\n    const PopupElement = createCustomElement(WalletComponent, {injector});\n    // Register the custom element with the browser.\n    customElements.define('lthn-app-wallet', PopupElement);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \nShow as component\nShow as element\n\n    \n\n    \n                \n                    ./plugins.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Show as componentShow as element'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PluginsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginsModule.html":{"url":"modules/PluginsModule.html","title":"module - PluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PluginsModule\n\n\n\ncluster_PluginsModule_declarations\n\n\n\ncluster_PluginsModule_exports\n\n\n\ncluster_PluginsModule_providers\n\n\n\n\nPluginsComponent\n\nPluginsComponent\n\n\n\nPluginsModule\n\nPluginsModule\n\nPluginsModule -->\n\nPluginsComponent->PluginsModule\n\n\n\n\n\nPluginsComponent \n\nPluginsComponent \n\nPluginsComponent  -->\n\nPluginsModule->PluginsComponent \n\n\n\n\n\nPluginsService\n\nPluginsService\n\nPluginsModule -->\n\nPluginsService->PluginsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/plugins.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PluginsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PluginsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PluginsComponent } from 'app/plugins/plugins.component';\nimport {PluginsService} from '@plugin/plugins.service';\n\n\n\n@NgModule({\n  declarations: [\n    PluginsComponent\n  ],\n  exports: [\n    PluginsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    PluginsService\n  ]\n})\nexport class PluginsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginsService.html":{"url":"injectables/PluginsService.html","title":"injectable - PluginsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/plugins.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsComponent\n                            \n                            \n                                showAsElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, applicationRef: ApplicationRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/plugins.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showAsComponent\n                        \n                    \n                \n            \n            \n                \nshowAsComponent(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAsElement\n                        \n                    \n                \n            \n            \n                \nshowAsElement(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ApplicationRef, ComponentFactoryResolver, Injectable, Injector} from '@angular/core';\nimport {WalletComponent} from '@plugin/lthn/wallet/wallet.component';\nimport {NgElement, WithProperties} from '@angular/elements';\n\n\n@Injectable()\nexport class PluginsService {\n\n  constructor(\n      private injector: Injector,\n      private applicationRef: ApplicationRef,\n      private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  showAsElement(message: string) {\n    // Create element\n    const popupEl: NgElement & WithProperties = document.createElement('lthn-app-wallet') as any;\n\n    // Listen to the close event\n   // popupEl.addEventListener('closed', () => document.body.removeChild(popupEl));\n\n    // Set the message\n   // popupEl.message = message;\n\n    // Add to the DOM\n    document.body.appendChild(popupEl);\n  }\n\n  showAsComponent(message: string) {\n    // Create element\n    const popup = document.createElement('lthn-app-wallet');\n\n    // Create the component and wire it up with the element\n    const factory = this.componentFactoryResolver.resolveComponentFactory(WalletComponent);\n    const popupComponentRef = factory.create(this.injector, [], popup);\n\n    // Attach to the view so that the change detector knows to run\n    this.applicationRef.attachView(popupComponentRef.hostView);\n\n    // Listen to the close even\n    // Add to the DOM\n    document.body.appendChild(popup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/hive/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hive/post/post.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client } from '@hiveio/dhive';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'lthn-app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\tpublic post = {};\n\tpublic title = '';\n\tpublic content = '';\n\tpublic author = '';\n\tprivate subs: any = {};\n\n\tconstructor(private router: Router) {}\n\n\tngOnInit(): void {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst slug = this.router.routerState.snapshot.url.replace('/p/', '');\n\t\tconst that = this;\n\t\tconsole.log(this.router.routerState.snapshot.url);\n\n\t\tclient.database.getState(`/hive-179211/@${slug}`).then(function (post) {\n\t\t\tthat.post = post;\n\n\t\t\tthat.content = post.content[slug].body;\n\t\t\tthat.title = post.content[slug].title;\n\t\t\tthat.author = post.content[slug].author;\n\t\t\tconsole.log(post);\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      {{title}}\n      {{author}}\n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                {{title}}      {{author}}                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PostComponent} from './post.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {PipesModule} from '../../../pipes/pipes.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: PostComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: PostComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [PostComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tPipesModule\n\t]\n})\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostRoutingModule.html":{"url":"modules/PostRoutingModule.html","title":"module - PostRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'p',\n\t\tloadChildren: () => \"import('./post.module').then((m) => m.PostModule)\"\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class PostRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                randomAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/profile.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        randomAlias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n\tcolors,\n\tnames,\n\tstarWars,\n\tuniqueNamesGenerator\n} from 'unique-names-generator';\n\n@Component({\n\tselector: 'lthn-user-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\tpublic randomAlias: string = uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t});\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Profiles\n            \n              Profile 1\n              -->\n              \n              -->\n            \n          \n\n          \n          \n            \n              person_add\n            \n          \n          \n            engineering\n          \n        \n      \n\n\n    \n    \n    \n      \n        Profile\n        \n          \n            Name\n          \n        \n      \n      \n        Blockchain Settings\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n      \n        Wallets\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Profiles                          Profile 1              -->                            -->                                                                    person_add                                            engineering                                                  Profile                              Name                                      Blockchain Settings                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                            Wallets                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            dkey\n                                        \n                                \n                                \n                                        \n                                            ekey\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ekey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ekey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileState {\n\t// Friendly name for the profile\n\talias: string;\n\t// auto generated image from the friendly name\n\tavatar: string;\n\t// id's to attached wallets\n\twallets: any;\n\t// application prefrences etc\n\toptions: any;\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: string;\n\t// Encryption Key, to save data\n\tekey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyIn.html":{"url":"interfaces/QueryKeyIn.html","title":"interface - QueryKeyIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyIn {\n\tkey_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyOut.html":{"url":"interfaces/QueryKeyOut.html","title":"interface - QueryKeyOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyOut {\n\tkey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RemoveTrailingZerosPipe.html":{"url":"pipes/RemoveTrailingZerosPipe.html","title":"pipe - RemoveTrailingZerosPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RemoveTrailingZerosPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/math/removeTrailingZeros.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        removeTrailingZero\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/math/removeTrailingZeros.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'removeTrailingZero', pure: true })\nexport class RemoveTrailingZerosPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tvalue = value.toString();\n\t\tif (value.indexOf('.') === -1) {\n\t\t\treturn parseInt(value);\n\t\t}\n\t\twhile (\n\t\t\t(value.slice(-1) === '0' || value.slice(-1) === '.') &&\n\t\t\tvalue.indexOf('.') !== -1\n\t\t) {\n\t\t\tvalue = value.substr(0, value.length - 1);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-rpc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            jsonrpc\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonrpc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonrpc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const rpcBody = (method) => (params) => ({\n\tjsonrpc: '2.0',\n\tid: '0',\n\tmethod: method,\n\tparams: params\n});\nconst axios = require('axios').default;\nexport const request =\n\t(url) =>\n\t (method, params = {}) =>\n\t\t axios.post(url, JSON.stringify(rpcBody(method)(params))).then((data) => {\n\t\t\t console.log(data)\n\t\t\t if(data['data'].error){\n\t\t\t\treturn data['data']\n\t\t\t } else if(data['data']) {\n\t\t\t\t return data['data'].result\n\t\t\t }else{\n\t\t\t\t return data\n\t\t\t }\n\t\t });\n\ninterface Response {\n\tid: string;\n\tjsonrpc: string;\n\tresult: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreComponent.html":{"url":"components/RestoreComponent.html","title":"component - RestoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/restore.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-restore\n            \n\n\n\n\n            \n                templateUrl\n                ./restore.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restoreWalletForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                restoreWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWalletForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {nameNotTakenValidator} from '../validators'\n\n@Component({\n\tselector: 'lthn-wallet-restore',\n\ttemplateUrl: './restore.component.html'\n})\n\nexport class RestoreComponent implements OnInit {\n\trestoreWalletForm : FormGroup;\n\n\tconstructor(private wallet: WalletService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.restoreWalletForm = new FormGroup({\n\t\t\tfilename: new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]),\n\t\t\taddress: new FormControl(''),\n\t\t\trestore_height: new FormControl('0'),\n\t\t\tautosave_current: new FormControl(true),\n\t\t\tpassword: new FormControl(''),\n\t\t\tpassword_confirm: new FormControl(''),\n\t\t\tspendkey: new FormControl(''),\n\t\t\tviewkey: new FormControl(''),\n\t\t\tviewonly_wallet: new FormControl(false),\n\t\t});\n\t}\n\n\trestoreWallet() {\n\n\t\tthis.wallet.restoreWallet({\n\t\t\tfilename: this.restoreWalletForm.value.filename,\n\t\t\taddress: this.restoreWalletForm.value.address,\n\t\t\trestore_height: this.restoreWalletForm.value.restore_height,\n\t\t\tautosave_current: this.restoreWalletForm.value.autosave_current,\n\t\t\tpassword: this.restoreWalletForm.value.password,\n\t\t\tspendkey:\n\t\t\t(\n\t\t\t\tthis.restoreWalletForm.value.viewonly_wallet ?\n\t\t\t\t\t'' : this.restoreWalletForm.value.spendkey\n\t\t\t)\n\t\t\t,\n\t\t\tviewkey: this.restoreWalletForm.value.viewkey\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.restore-seed' | translate }}\n    \n        \n            \n                \n                    {{ 'plugin.lthn.wallet.label.filename' | translate }}\n                    \n\t\t\t\t\tWallet already exists\n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                    \n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n                    \n                \n            \n\n            \n                \n                    {{ 'plugin.lthn.wallet.label.address' | translate }}\n                    \n                \n            \n\n\n\n            \n                {{ 'plugin.lthn.wallet.label.spend-key' | translate }}\n                \n            \n\n            \n                {{ 'plugin.lthn.wallet.label.view-key' | translate }}\n                \n            \n\n            \n\n                \n                    \n                        Optional parameters\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.restore-height' | translate }}\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.autosave' | translate }}\n                \n\n                \n                    View only wallet\n                \n\n            \n\n            \n                {{ 'plugin.lthn.wallet.button.restore-wallet' | translate }}\n            \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.restore-seed\\' | translate }}                                                            {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}                    \t\t\t\t\tWallet already exists                                                    {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                                                                                                {{ \\'plugin.lthn.wallet.label.address\\' | translate }}                                                                            {{ \\'plugin.lthn.wallet.label.spend-key\\' | translate }}                                                        {{ \\'plugin.lthn.wallet.label.view-key\\' | translate }}                                                                                                    Optional parameters                                                                        {{ \\'plugin.lthn.wallet.label.restore-height\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.autosave\\' | translate }}                                                    View only wallet                                                        {{ \\'plugin.lthn.wallet.button.restore-wallet\\' | translate }}                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestoreWallet.html":{"url":"interfaces/RestoreWallet.html","title":"interface - RestoreWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestoreWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/requests/restoreWallet.ts\n        \n\n\n            \n                Description\n            \n            \n                Restore Wallet request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            autosave_current\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            restore_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendkey\n                                        \n                                \n                                \n                                        \n                                            viewkey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's primary address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosave_current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosave_current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Defaults to true) If true, save the current wallet before generating the new wallet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's file name on the RPC server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restore_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restore_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; defaults to 0) The block height to restore the wallet from.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's private view key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RestoreWallet {\n\n\t/**\n\t * The wallet's file name on the RPC server.\n\t */\n\tfilename: string;\n\n\t/**\n\t * (Optional; defaults to 0) The block height to restore the wallet from.\n\t */\n\trestore_height?: number;\n\n\t/**\n\t * The wallet's primary address.\n\t */\n\taddress: string;\n\n\t/**\n\t * (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\t */\n\tspendkey?: string;\n\n\t/**\n\t * The wallet's private view key.\n\t */\n\tviewkey: string;\n\n\t/**\n\t * The wallet's password.\n\t */\n\tpassword: string;\n\n\t/**\n\t * (Defaults to true) If true, save the current wallet before generating the new wallet.\n\t */\n\tautosave_current?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RootComponent.html":{"url":"components/RootComponent.html","title":"component - RootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/root.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-root\n            \n\n\n\n\n            \n                templateUrl\n                ./root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chainInfo\n                            \n                            \n                                    Public\n                                disableConsole\n                            \n                            \n                                    Public\n                                downloadingCLI\n                            \n                            \n                                    Public\n                                hasCLI\n                            \n                            \n                                platformId\n                            \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadCLI\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                renderAppView\n                            \n                            \n                                renderFirstRunView\n                            \n                            \n                                renderWebView\n                            \n                            \n                                startBlockchain\n                            \n                            \n                                startWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, fileSystem: FileSystemService, chain: BlockchainService, wallet: WalletService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/root.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderAppView\n                        \n                    \n                \n            \n            \n                \nrenderAppView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderFirstRunView\n                        \n                    \n                \n            \n            \n                \nrenderFirstRunView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderWebView\n                        \n                    \n                \n            \n            \n                \nrenderWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startBlockchain\n                        \n                    \n                \n            \n            \n                \nstartBlockchain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disableConsole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadingCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(PLATFORM_ID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit, PLATFORM_ID} from '@angular/core';\nimport {Client} from '@hiveio/dhive';\nimport {Router} from '@angular/router';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport { isPlatformServer} from '@angular/common';\nimport {select, Store} from '@ngrx/store';\nimport {ChainSetGetInfo, getChainInfo} from '@plugin/lthn/chain/data';\nimport {ChainGetInfo} from '@plugin/lthn/chain/interfaces/props/get_info';\nimport {Observable} from 'rxjs';\n\n@Component({\n\tselector: 'lthn-root',\n\ttemplateUrl: './root.component.html'\n})\nexport class RootComponent implements OnInit {\n\tpublic posts: any = [];\n\n\tpublic hasCLI: boolean;\n\tpublic downloadingCLI: boolean;\n\t@Inject(PLATFORM_ID) platformId: Object\n\tpublic disableConsole = true\n\tpublic chainInfo: Observable;\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate chain: BlockchainService,\n\t\tprivate wallet: WalletService,\n\t\tprivate store: Store\n\t) {\n\t\tthis.disableConsole = isPlatformServer(this.platformId)\n\t}\n\n\tasync ngOnInit() {\n\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\tif (dat.length > 0) {\n\t\t\t\tthis.renderAppView();\n\t\t\t} else {\n\t\t\t\tthis.renderFirstRunView();\n\t\t\t}\n\t\t});\n\t\tthis.fileSystem.listFiles('/cli').then((dat: any) => {\n\t\t\tthis.hasCLI = dat.length > 0;\n\t\t\tthis.chain.chainRpc('get_info', '').subscribe((data) => {\n\t\t\t\tthis.store.dispatch(ChainSetGetInfo({info: data.result}))\n\t\t\t})\n\t\t});\n\t}\n\n\trenderAppView() {\n\n\t\tthis.chainInfo = this.store.pipe(select(getChainInfo))\n\t}\n\n\trenderFirstRunView() {\n\t\tthis.router.navigateByUrl('/user');\n\t}\n\n\tasync downloadCLI() {\n\t\tthis.downloadingCLI = true\n\t\tawait new Promise(f => setTimeout(f, 1000));\n\t\tthis.chain.downloadCLI().then((data) => {\n\t\t\tthis.downloadingCLI = false;\n\t\t\tthis.router.navigateByUrl('/chain')\n\t\t});\n\t}\n\n\tstartBlockchain() {\n\t\treturn this.chain.startDaemon();\n\t}\n\n\tstartWallet() {\n\t\treturn this.wallet.startWallet();\n\t}\n\n\trenderWebView() {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst that = this;\n\t\tclient.database\n\t\t\t.getDiscussions('trending', {tag: 'dvpn', limit: 5})\n\t\t\t.then(function (discussions) {\n\t\t\t\tthat.posts = discussions;\n\t\t\t});\n\t}\n}\n\n    \n\n    \n        \n    \n    \n        {{ 'words.states.not_installed' | translate }}\n        \n            {{ 'words.states.not_installed_desc' | translate }}\n            {{ 'button.install-blockchain' | translate }}\n            \n                \n            \n        \n    \n    \n\n\n\n    \n        \n\n            \n                {{ 'words.states.not_installed' | translate }}\n                {{ 'words.states.installing' | translate }}\n                \n                    {{ 'words.states.not_installed_desc' | translate }}\n                    {{ 'words.states.installing_desc' | translate }}\n                    {{ 'button.install-blockchain' | translate }}\n                    \n\n\n                \n            \n            \n                Lethean Blockchain\n                \n                    \n                        \n                            {{'plugin.lthn.chain.words.height' | translate }}\n                             {{info.height | number }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.tx_pool' | translate }}\n                             {{info.tx_pool_size }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.alt_blocks' | translate }}\n                             {{info.alt_blocks_count }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.difficulty' | translate }}\n                             {{info.difficulty | number }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.grey_peerlist_size' | translate }}\n                             {{info.grey_peerlist_size }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.incoming_connections_count' | translate }}\n                             {{info.incoming_connections_count }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.outgoing_connections_count' | translate }}\n                             {{info.outgoing_connections_count }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.status' | translate }}\n                             {{info.status }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.target' | translate }}\n                             {{info.target }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.target_height' | translate }}\n                             {{info.target_height | number}} \n                        \n                        \n                            {{'plugin.lthn.chain.words.testnet' | translate }}\n                             {{info.testnet }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.top_block_hash' | translate }}\n                             \n                        \n                        \n                            {{'plugin.lthn.chain.words.tx_count' | translate }}\n                             {{info.tx_count | number }} \n                        \n                        \n                            {{'plugin.lthn.chain.words.white_peerlist_size' | translate }}\n                             {{info.white_peerlist_size }} \n                        \n                    \n\n\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ \\'words.states.not_installed\\' | translate }}                    {{ \\'words.states.not_installed_desc\\' | translate }}            {{ \\'button.install-blockchain\\' | translate }}                                                                                                {{ \\'words.states.not_installed\\' | translate }}                {{ \\'words.states.installing\\' | translate }}                                    {{ \\'words.states.not_installed_desc\\' | translate }}                    {{ \\'words.states.installing_desc\\' | translate }}                    {{ \\'button.install-blockchain\\' | translate }}                                                                            Lethean Blockchain                                                                                        {{\\'plugin.lthn.chain.words.height\\' | translate }}                             {{info.height | number }}                                                                             {{\\'plugin.lthn.chain.words.tx_pool\\' | translate }}                             {{info.tx_pool_size }}                                                                             {{\\'plugin.lthn.chain.words.alt_blocks\\' | translate }}                             {{info.alt_blocks_count }}                                                                             {{\\'plugin.lthn.chain.words.difficulty\\' | translate }}                             {{info.difficulty | number }}                                                                             {{\\'plugin.lthn.chain.words.grey_peerlist_size\\' | translate }}                             {{info.grey_peerlist_size }}                                                                             {{\\'plugin.lthn.chain.words.incoming_connections_count\\' | translate }}                             {{info.incoming_connections_count }}                                                                             {{\\'plugin.lthn.chain.words.outgoing_connections_count\\' | translate }}                             {{info.outgoing_connections_count }}                                                                             {{\\'plugin.lthn.chain.words.status\\' | translate }}                             {{info.status }}                                                                             {{\\'plugin.lthn.chain.words.target\\' | translate }}                             {{info.target }}                                                                             {{\\'plugin.lthn.chain.words.target_height\\' | translate }}                             {{info.target_height | number}}                                                                             {{\\'plugin.lthn.chain.words.testnet\\' | translate }}                             {{info.testnet }}                                                                             {{\\'plugin.lthn.chain.words.top_block_hash\\' | translate }}                                                                                                         {{\\'plugin.lthn.chain.words.tx_count\\' | translate }}                             {{info.tx_count | number }}                                                                             {{\\'plugin.lthn.chain.words.white_peerlist_size\\' | translate }}                             {{info.white_peerlist_size }}                                                                                     '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConsoleModule\n                        \n                        \n                            TranslateModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RootComponent} from './root.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {WalletModule} from '@plugin/lthn/wallet/wallet.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {PipesModule} from 'app/pipes/pipes.module';\n\n@NgModule({\n\tdeclarations: [RootComponent],\n\texports: [\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tMatTabsModule,\n\t\tWalletModule,\n\t\tTranslateModule,\n\t\tMatDividerModule,\n\t\tConsoleModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatListModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule\n\t]\n})\nexport class RootModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootRoutingModule.html":{"url":"modules/RootRoutingModule.html","title":"module - RootRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RootRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootRoutingModule\n\n\n\ncluster_RootRoutingModule_imports\n\n\n\n\nRootModule\n\nRootModule\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RootModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from '@module/root.component';\nimport {AuthGuard} from '@module/auth/route.guard';\nimport {RootModule} from '@module/root.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: RootComponent,\n\t\t//canActivate: [AuthGuard],\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.dashboard.title',\n\t\t\theading: 'view.dashboard.heading',\n\t\t\tdescription: 'view.dashboard.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule,\n\t\tRootModule,\n\t\tRouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class RootRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                setting_tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        setting_tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'general'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\tsetting_tab = 'general';\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tconsole.log('SettingsComponent INIT');\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('SettingsComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent-1.html":{"url":"components/SettingsComponent-1.html","title":"component - SettingsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-settings',\n\ttemplateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settings.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/data/settings.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/data/settings.effects.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { switchMap } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class SettingsEffects {\n\tchangeLanguage$ = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(private actions$: Actions, private translate: TranslateService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LogsModule} from './logs/logs.module';\nimport {SettingsComponent} from './settings.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: SettingsComponent,\n\t\tdata: {\n\t\t\ttitle: 'Settings',\n\t\t\theading: 'Unified Settings Panel',\n\t\t\tdescription: 'Lethean (LTHN) Blockchain Stats',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'logs',\n\t\tloadChildren: () =>\n\t\t\t\"import('./logs/logs.module').then((m) => m.LogsModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [SettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tFlexModule,\n\t\tMatToolbarModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatTabsModule,\n\t\tLogsModule\n\t],\n\texports: [RouterModule]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./settings.module').then(\\\n\t\t\t\t(m) => m.SettingsModule\\\n\t\t\t)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settingsState.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            biggerContentFont\n                                        \n                                \n                                \n                                        \n                                            daltonism\n                                        \n                                \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                                \n                                        \n                                            globalFontSize\n                                        \n                                \n                                \n                                        \n                                            hideNavigation\n                                        \n                                \n                                \n                                        \n                                            highContrastText\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            rtl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        biggerContentFont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biggerContentFont:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daltonism\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daltonism:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globalFontSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        globalFontSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideNavigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrastText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highContrastText:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rtl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rtl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState {\n\thideNavigation: boolean;\n\t// accessibility\n\tbiggerContentFont: boolean;\n\thighContrastText: boolean;\n\tdaltonism: boolean;\n\trtl: boolean;\n\t// global font size\n\tglobalFontSize: string;\n\t// UI Language\n\tlanguage: string;\n\t// UI mode\n\tdarkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShruggiePipe.html":{"url":"pipes/ShruggiePipe.html","title":"pipe - ShruggiePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShruggiePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/shruggie.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shrug\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/shruggie.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'shrug', pure: false })\nexport class ShruggiePipe implements PipeTransform {\n\ttransform(content, decorator?: boolean) {\n\t\tif (content === null || content === '') {\n\t\t\treturn '¯\\\\_(ツ)_/¯';\n\t\t}\n\t\treturn content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SplitIntegratedAddressOut.html":{"url":"interfaces/SplitIntegratedAddressOut.html","title":"interface - SplitIntegratedAddressOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SplitIntegratedAddressOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            standard_address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standard_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        standard_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface SplitIntegratedAddressOut {\n\tstandard_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/status.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status\n            \n\n            \n                styleUrls\n                ./status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                status_annon\n                            \n                            \n                                status_daemon\n                            \n                            \n                                status_private\n                            \n                            \n                                status_secure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/status.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_annon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_secure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n\tselector: 'lthn-app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent {\n\tstatus_daemon: any;\n\tstatus_secure: any;\n\tstatus_private: any;\n\tstatus_annon: any;\n\n\tconstructor(public dialog: MatDialog) {}\n}\n\n    \n\n    \n        \n    \n        \n            \n                cloud\n            \n            \n                cloud_off\n            \n            \n                lock\n            \n            \n                lock_open\n            \n            \n                visibility_off\n            \n            \n                visibility_off\n            \n            \n                verified_user\n            \n            \n                verified_user\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./status.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cloud                                        cloud_off                                        lock                                        lock_open                                        visibility_off                                        visibility_off                                        verified_user                                        verified_user                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_declarations\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/status/status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NoDaemonRunningDialog\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {NoDaemonRunningDialog} from './dialog/no-daemon-running.component';\n\n@NgModule({\n\tdeclarations: [StatusComponent, NoDaemonRunningDialog],\n\texports: [StatusComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatDialogModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule\n\t]\n})\nexport class StatusModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreOut.html":{"url":"interfaces/StoreOut.html","title":"interface - StoreOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/storeOut.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface StoreOut {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllIn.html":{"url":"interfaces/SweepAllIn.html","title":"interface - SweepAllIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllIn.ts\n        \n\n\n            \n                Description\n            \n            \n                SweepAll request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            below_amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            do_not_relay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_keys\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination public address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        below_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        below_amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        do_not_relay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        do_not_relay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_hex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) return the transactions as hex encoded string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_keys:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Return the transaction keys after sending.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of outpouts from the blockchain to mix with (0 means no mixing).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllIn {\n\n\t/** Destination public address */\n\taddress: string;\n\n\t/** (Optional) */\n\tpriority?: number;\n\n\t/** Number of outpouts from the blockchain to mix with (0 means no mixing). */\n\tmixin: number;\n\n\t/** unsigned int; Number of blocks before the monero can be spent (0 to not add a lock). */\n\tunlock_time: number;\n\n\t/** (Optional) Random 32-byte/64-character hex string to identify a transaction. */\n\tpayment_id?: string;\n\n\t/** (Optional) Return the transaction keys after sending. */\n\tget_tx_keys?: boolean;\n\n\t/** (Optional) */\n\tbelow_amount?: number;\n\n\t/** (Optional)  */\n\tdo_not_relay?: boolean;\n\n\t/** (Optional) return the transactions as hex encoded string. */\n\tget_tx_hex?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllOut.html":{"url":"interfaces/SweepAllOut.html","title":"interface - SweepAllOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_blob_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                                \n                                        \n                                            tx_key_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_blob_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_blob_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllOut {\n\ttx_hash_list: string[];\n\ttx_key_list: string[];\n\ttx_blob_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepDustOut.html":{"url":"interfaces/SweepDustOut.html","title":"interface - SweepDustOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepDustOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepDustOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepDustOut {\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/date/timeAgo.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/date/timeAgo.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'timeAgo',\n\tpure: false\n})\nexport class TimeAgoPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value: number) {\n\t\tconst d = new Date(value * 1000);\n\t\tconst now = new Date();\n\t\tconst seconds = Math.round(\n\t\t\tMath.abs((now.getTime() - d.getTime()) / 1000)\n\t\t);\n\t\tconst minutes = Math.round(Math.abs(seconds / 60));\n\t\tconst hours = Math.round(Math.abs(minutes / 60));\n\t\tconst days = Math.round(Math.abs(hours / 24));\n\t\tconst months = Math.round(Math.abs(days / 30.416));\n\t\tconst years = Math.round(Math.abs(days / 365));\n\t\tif (Number.isNaN(seconds)) {\n\t\t\treturn '';\n\t\t} else if (seconds  545)\n\t\t\treturn years + ' years ago';\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToCoinPipe.html":{"url":"pipes/ToCoinPipe.html","title":"pipe - ToCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/toCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number, symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/toCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    symbol\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'toCoin', pure: false })\nexport class ToCoinPipe implements PipeTransform {\n\n\n  transform (content: number, symbol = false) {\n    return (content / 100000000).toFixed((8))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/transactions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                rows\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadTransactions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                opts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opts\n                    \n                \n                \n                    \n                        Type :         GetTransfersIn\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t}\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetTransfersOut[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Observable, Subscription} from 'rxjs';\nimport {GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {select, Store} from '@ngrx/store';\nimport {selectWalletTransactions} from '@plugin/lthn/wallet/data';\n\n@Component({\n\tselector: 'lthn-wallet-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class TransactionsComponent implements OnInit {\n\t@Input() name?: string = '';\n\t@Input() opts: GetTransfersIn = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t};\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\trows: GetTransfersOut[];\n\n\n\n\tcolumns = [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}];\n\n\tColumnMode = ColumnMode;\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletRpcService, private store: Store) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.subs$['txn'] = this.store.pipe(select(selectWalletTransactions)).subscribe((data) => {\n\t\t\tif(data) {\n\t\t\t\tthis.rows = [...data['in'], ...data['out']]\n\t\t\t}\n\t\t})\n\t\t//this.loadTransactions();\n\t}\n\n\tasync loadTransactions() {\n\n\t\tthis.rows = await this.wallet.getTransfers(this.opts).then((data) => Object.values(data).flat());\n\t\tconsole.log(this.rows);\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.wallet-transactions' | translate }}\n    \n\n            \n                \n                \n                    \n                        \n                    \n                \n                \n                    \n                       {{ value | toCoin | number:'1.0-8'}}\n                    \n                \n                \n                    \n                        {{ value | timeAgo }}\n                    \n                \n            \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.wallet-transactions\\' | translate }}                                                                                                                                                                                           {{ value | toCoin | number:\\'1.0-8\\'}}                                                                                                {{ value | timeAgo }}                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/transfer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            txid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transfer {\n\tamount: number;\n\tfee: number;\n\theight: number;\n\tnote: string;\n\tpayment_id: string;\n\ttimestamp: number;\n\ttxid: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferIn.html":{"url":"interfaces/TransferIn.html","title":"interface - TransferIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from '../types/destination';\n\nexport interface TransferIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. Outputs:\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOut.html":{"url":"interfaces/TransferOut.html","title":"interface - TransferOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferOut {\n\tfee: number; // - Integer value of the fee charged for the txn.\n\ttx_hash: string; // - String for the publically searchable transaction hash\n\ttx_key: string; // - String for the transaction key if get_tx_key is true, otherwise, blank string.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitIn.html":{"url":"interfaces/TransferSplitIn.html","title":"interface - TransferSplitIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            new_algorithm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        new_algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        new_algorithm:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitOut.html":{"url":"interfaces/TransferSplitOut.html","title":"interface - TransferSplitOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferSplitOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee_list:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferSplitOut {\n\tfee_list: number[];\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/i18n/translate/translate.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n  ]\n})\nexport class TranslateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Uri.html":{"url":"interfaces/Uri.html","title":"interface - Uri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Uri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/uri.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Uri {\n\turi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                processingForm\n                            \n                            \n                                task\n                            \n                            \n                                userForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/user.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Welcome To Lethean\n                    \n                        Protecting Privacy &amp; Confidentially since 2017\n                    \n                \n\n            \n        \n        \n        \n\n            \n                New User\n                \n                    \n                        \n                            Username\n                            \n                        \n                        \n                            Password\n                            \n                        \n                        \n                            Password (Confirm)\n                            \n                        \n\n                    \n                    Create User\n                \n            \n\n            \n                Data Handling Declaration\n                \n                    \n                        Lethean's designed to protect your digital security; We encrypt as much as we can.\n                    \n                    \n                        Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you\n                        use your\n                        software and never will.\n                    \n                    \n                        Below is a highlight of some of the steps we take to protect you.\n                    \n                    Data Confidentiality\n                    \n                        User accounts don't hold cleartext data.\n                        Application data is encrypted & meaningless without User authentication.\n                        Transactions on our network are Encrypted, with a secret decryption key per transaction;\n                            confidentiality\n                            is standard.\n                        \n                        There is no method to expose VPN purchase history to anyone but you.\n                        There is no magic key; we can not under any circumstances decrypt or recover your data; it's\n                            just not\n                            possible, dont forget your login details.\n                        \n                    \n                    Data Privacy\n                    \n                        Application data is locked to user accounts with military-grade encryption.\n                        You will be informed when you wish to perform an action that will expose data.\n                    \n                \n            \n        \n        \n            \n                Building Your Encryption Keys\n                \n                    You will be redirected to the profile creation page soon.\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Welcome To Lethean                                            Protecting Privacy & Confidentially since 2017                                                                                                    New User                                                                                        Username                                                                                                        Password                                                                                                        Password (Confirm)                                                                                            Create User                                                        Data Handling Declaration                                                            Lethean\\'s designed to protect your digital security; We encrypt as much as we can.                                                                Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you                        use your                        software and never will.                                                                Below is a highlight of some of the steps we take to protect you.                                        Data Confidentiality                                            User accounts don\\'t hold cleartext data.                        Application data is encrypted & meaningless without User authentication.                        Transactions on our network are Encrypted, with a secret decryption key per transaction;                            confidentiality                            is standard.                                                There is no method to expose VPN purchase history to anyone but you.                        There is no magic key; we can not under any circumstances decrypt or recover your data; it\\'s                            just not                            possible, dont forget your login details.                                                                Data Privacy                                            Application data is locked to user accounts with military-grade encryption.                        You will be informed when you wish to perform an action that will expose data.                                                                                            Building Your Encryption Keys                                    You will be redirected to the profile creation page soon.                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMeta.html":{"url":"interfaces/UserMeta.html","title":"interface - UserMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decryptionKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decryptionKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decryptionKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {UserComponent} from './user.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: UserComponent,\n\t\tdata: {\n\t\t\ttitle: 'New User - Lethean (LTHN)',\n\t\t\theading: 'New User Wizard',\n\t\t\tdescription: 'Lethean (LTHN) New User Panel',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [UserComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatOptionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatDividerModule,\n\t\tMatCardModule,\n\t\tMatInputModule,\n\t\tFlexModule,\n\t\tMatCheckboxModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressBarModule\n\t]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOptions.html":{"url":"interfaces/UserOptions.html","title":"interface - UserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/interfaces/user.options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginMethod\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginMethod:         LoginMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOptions {\n\tloginMethod: LoginMethods;\n}\n\nexport enum LoginMethods {\n\tPASSWORD = 1,\n\tSSH_PEM\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '../auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'user',\n\t\tloadChildren: () =>\n\t\t\t\"import('./user.module').then((m) => m.UserModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         UserMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMeta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         UserOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersState.html":{"url":"interfaces/UsersState.html","title":"interface - UsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VpnComponent.html":{"url":"components/VpnComponent.html","title":"component - VpnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VpnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/vpn/vpn.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-vpn\n            \n\n            \n                styleUrls\n                ./vpn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vpn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/vpn/vpn.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/vpn/vpn.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-vpn',\n\ttemplateUrl: './vpn.component.html',\n\tstyleUrls: ['./vpn.component.scss']\n})\nexport class VpnComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      VPN Marketplace\n      All nodes are community run, browse and keep track of your favourites here.\n      \n        New Provider\n        List Services\n        Deploy ExitNode\n\n      \n    \n    \n      \n        \n          local Blockchain\n          This helps the community the most, and makes you a member of the network. Exactly the same\n            as Torrents, but just our blockchain.\n          \n          \n            \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n            \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./vpn.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            VPN Marketplace      All nodes are community run, browse and keep track of your favourites here.              New Provider        List Services        Deploy ExitNode                                      local Blockchain          This helps the community the most, and makes you a member of the network. Exactly the same            as Torrents, but just our blockchain.                                                                            Region                Provider                Service                Cost                                                                        Region                Provider                Service                Cost                                                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'VpnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnModule.html":{"url":"modules/VpnModule.html","title":"module - VpnModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VpnComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VpnComponent } from './vpn.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [VpnComponent],\n\timports: [CommonModule, MatCardModule, FlexModule, MatButtonModule]\n})\nexport class VpnModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnRoutingModule.html":{"url":"modules/VpnRoutingModule.html","title":"module - VpnRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VpnComponent } from './vpn.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'vpn',\n\t\tcomponent: VpnComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class VpnRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletComponent.html":{"url":"components/WalletComponent.html","title":"component - WalletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/wallet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-wallet\n            \n\n            \n                styleUrls\n                ./wallet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wallet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Private\n                                modalComponent\n                            \n                            \n                                    Public\n                                openedWallet\n                            \n                            \n                                    Public\n                                pluginConfig\n                            \n                            \n                                    Public\n                                showtx\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Public\n                                txnSelection\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Public\n                                isChecked\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWallet\n                            \n                            \n                                    Public\n                                    Async\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isChecked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isChecked(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance | Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openedWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pluginConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluginDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdescription_short: 'test',\n\t\tgit_repo: 'https://github.com/Snider/plugin-bootstrap.git',\n\t\tname: 'test',\n\t\treadme_list: 'https://github.com/Snider/plugin-bootstrap#readme',\n\t\tstatus: PluginStatus.ACTIVE\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        txnSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\nimport {Balance} from '@plugin/lthn/wallet/interfaces';\nimport {PluginDefinition, PluginStatus} from '@data/plugins';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from '@plugin/lthn/wallet/data';\nimport {Subscription} from 'rxjs';\nimport {getWalletData} from '@plugin/lthn/wallet/data';\n\n@Component({\n\tselector: 'lthn-app-wallet',\n\ttemplateUrl: './wallet.component.html',\n\tstyleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit, OnDestroy, AfterViewInit {\n\tpublic pluginConfig: PluginDefinition = {\n\t\tdescription_short: 'test',\n\t\tgit_repo: 'https://github.com/Snider/plugin-bootstrap.git',\n\t\tname: 'test',\n\t\treadme_list: 'https://github.com/Snider/plugin-bootstrap#readme',\n\t\tstatus: PluginStatus.ACTIVE\n\t}\n\tpublic balance:  Balance | Promise;\n\n\tpublic wallets: string[] = [];\n\n\t@ViewChild('modal') private modalComponent: ModalComponent\n\tpublic openedWallet: string = '';\n\tpublic showtx: boolean = false;\n\tpublic txnSelection: any = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t};\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletService, private store: Store) {}\n\n\tngOnInit() {\n\n\t\tthis.subs$['wallets'] = this.store.pipe(select(WalletActions.selectWallets)).subscribe((data) => {\n\t\t\tif(data && data.length > 0) {\n\t\t\t\tthis.wallets = data\n\t\t\t\tthis.subs$['openedWallet'] = this.store.pipe(select(WalletActions.selectOpenedWallet)).subscribe((wallet) => {\n\t\t\t\t\tif(wallet) {\n\t\t\t\t\t\tthis.openedWallet = wallet\n\t\t\t\t\t\tthis.store.dispatch(WalletActions.WalletStartPolling())\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t}\n\t\t})\n\n\t }\n\n\tpublic ngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tfor (let sub of this.subs$){\n\t\t\tsub.unsubscribe();\n\t\t}\n\t\tthis.store.dispatch(WalletActions.WalletStopPolling())\n\t\tconsole.log('WalletComponent DESTROY');\n\t}\n\n\topenWallet(key: string){\n\t\tthis.store.dispatch(WalletActions.switchWallet({address: key}))\n\t}\n\n\tasync getBalance() {\n\t\tthis.balance = await this.wallet.getBalance().then((data) => data)\n\t}\n\n\tpublic async toggle(col) {\n\t\tawait this.wallet.loadTransfers(this.txnSelection);\n\t\tthis.txnSelection[col] = !!this.txnSelection[col]\n\t}\n\n\tpublic isChecked(col) {\n\t\treturn this.txnSelection[col]\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Wallet Manager\n                \n                \n                    account_balance_wallet\n                \n                \n                    cloud_download\n                \n                \n                    cloud_upload\n                \n                \n                    settings\n                \n            \n        \n        \n            \n                \n                    Wallets\n                    \n                        \n                            {{wallet}}\n                        \n                        \n                        Available Columns\n                        \n                            \n                                \n                                Incoming\n                            \n\n                            \n                                \n                                Sent\n                            \n\n                            \n                                \n                                Pending\n                            \n\n                            \n                                \n                                Failed\n                            \n\n                            \n                                \n                                Pool\n                            \n                        \n                    \n                \n            \n            \n                 1\">\n                    \n                \n                \n\n                        \n                        \n\n                \n\n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./wallet.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Wallet Manager                                                    account_balance_wallet                                                    cloud_download                                                    cloud_upload                                                    settings                                                                                            Wallets                                                                        {{wallet}}                                                                        Available Columns                                                                                                                    Incoming                                                                                                                        Sent                                                                                                                        Pending                                                                                                                        Failed                                                                                                                        Pool                                                                                                                                 1\">                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletEffects.html":{"url":"injectables/WalletEffects.html","title":"injectable - WalletEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isPollingActiveStats\n                            \n                            \n                                openWallet\n                            \n                            \n                                StartPollingWallet$\n                            \n                            \n                                StopPollingWallet$\n                            \n                            \n                                WalletLoadData$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, http: HttpClient, translate: TranslateService, store: Store, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:103\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isPollingActiveStats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StopPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WalletLoadData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeWhile, withLatestFrom} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from './actions';\nimport * as WalletSelectors from './selectors';\nimport {merge, of, timer} from 'rxjs';\nimport {selectOpenedWalletData, selectWalletData} from './selectors';\nimport {HttpClient} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {Balance, GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {WalletTransfers} from './actions';\nimport {debug} from '@data/debug.rxjs';\n\n@Injectable()\nexport class WalletEffects {\n\topenWallet = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t);\n\n\tWalletLoadData$ =\n\t\tcreateEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\tStartPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t));\n\tStopPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t));\n\n\tprivate isPollingActiveStats = false;\n\n\tconstructor(private actions$: Actions, private http: HttpClient, private translate: TranslateService, private store: Store, private wallet: WalletService) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_exports\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_imports\n\n\n\n\nAddComponent\n\nAddComponent\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nAddComponent \n\nAddComponent \n\nAddComponent  -->\n\nWalletModule->AddComponent \n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nModalModule\n\nModalModule\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddComponent\n                        \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            WalletComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ModalModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddComponent\n                        \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WalletComponent } from './wallet.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NewComponent } from './components/new.component';\nimport { RestoreComponent } from './components/restore.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {OpenComponent} from '@plugin/lthn/wallet/components/open.component';\nimport {ModalModule} from '@service/ui/modal/modal.module';\nimport {TransactionsComponent} from '@plugin/lthn/wallet/components/transactions.component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatSelectModule} from '@angular/material/select';\nimport {AddComponent} from './components/add.component'\nimport {PipesModule} from 'app/pipes/pipes.module';\n\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallets',\n\t\tcomponent: WalletComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.title',\n\t\t\theading: 'view.wallets.heading',\n\t\t\tdescription: 'view.wallets.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [\n\t\tWalletComponent,\n\t\tNewComponent,\n\t\tRestoreComponent,\n\t\tOpenComponent,\n\t\tTransactionsComponent,\n\t\tAddComponent\n\t],\n\texports: [\n\t\tNewComponent,RestoreComponent,TransactionsComponent,OpenComponent,RouterModule,AddComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tFlexModule,\n\t\tReactiveFormsModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatCheckboxModule,\n\t\tMatExpansionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatTooltipModule,\n\t\tMatInputModule,\n\t\tTranslateModule,\n\t\tModalModule,\n\t\tNgxDatatableModule,\n\t\tMatSelectModule,\n\t\tMatTabsModule,\n\t\tPipesModule\n\t]\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletRoutingModule.html":{"url":"modules/WalletRoutingModule.html","title":"module - WalletRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallet',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./wallet.module').then((m) => m.WalletModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class WalletRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletRpcService.html":{"url":"injectables/WalletRpcService.html","title":"injectable - WalletRpcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletRpcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.rpc.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddressBook\n                            \n                            \n                                createWallet\n                            \n                            \n                                deleteAddressBook\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressBook\n                            \n                            \n                                getBalance\n                            \n                            \n                                getBulkPayments\n                            \n                            \n                                getHeight\n                            \n                            \n                                getPayments\n                            \n                            \n                                getTransferByTxid\n                            \n                            \n                                getTransfers\n                            \n                            \n                                incomingTransfers\n                            \n                            \n                                makeIntegratedAddress\n                            \n                            \n                                makeUri\n                            \n                            \n                                openWallet\n                            \n                            \n                                other\n                            \n                            \n                                parseUri\n                            \n                            \n                                queryKey\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                splitIntegratedAddress\n                            \n                            \n                                startWallet\n                            \n                            \n                                stopWallet\n                            \n                            \n                                store\n                            \n                            \n                                sweepAll\n                            \n                            \n                                sweepDust\n                            \n                            \n                                transfer\n                            \n                            \n                                transferSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddressBook\n                        \n                    \n                \n            \n            \n                \naddAddressBook(x: AddAddressBook)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                AddAddressBook\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet(x: CreateWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                CreateWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddressBook\n                        \n                    \n                \n            \n            \n                \ndeleteAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:62\n                \n            \n\n\n            \n                \n                    Get the address of the opened wallet\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressBook\n                        \n                    \n                \n            \n            \n                \ngetAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:53\n                \n            \n\n\n            \n                \n                    Get openned wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBulkPayments\n                        \n                    \n                \n            \n            \n                \ngetBulkPayments(x: GetBulkPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetBulkPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:71\n                \n            \n\n\n            \n                \n                    Get chain height\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPayments\n                        \n                    \n                \n            \n            \n                \ngetPayments(x: GetPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransferByTxid\n                        \n                    \n                \n            \n            \n                \ngetTransferByTxid(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:152\n                \n            \n\n\n            \n                \n                    Get transfer by Transactin ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransfers\n                        \n                    \n                \n            \n            \n                \ngetTransfers(x: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incomingTransfers\n                        \n                    \n                \n            \n            \n                \nincomingTransfers(x: IncomingTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IncomingTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nmakeIntegratedAddress(x: MakeIntegratedAddressIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeIntegratedAddressIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeUri\n                        \n                    \n                \n            \n            \n                \nmakeUri(x: MakeUriIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeUriIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(x: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n            \n                \nother(method: string, arg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUri\n                        \n                    \n                \n            \n            \n                \nparseUri(x: Uri)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                Uri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKey\n                        \n                    \n                \n            \n            \n                \nqueryKey(x: QueryKeyIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                QueryKeyIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(x: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nsplitIntegratedAddress(x: IntegratedAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IntegratedAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:28\n                \n            \n\n\n            \n                \n                    Send Wallet Service start POST req\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopWallet\n                        \n                    \n                \n            \n            \n                \nstopWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepAll\n                        \n                    \n                \n            \n            \n                \nsweepAll(x: SweepAllIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:107\n                \n            \n\n\n            \n                \n                    Send all funds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                SweepAllIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepDust\n                        \n                    \n                \n            \n            \n                \nsweepDust()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n            \n                \ntransfer(x: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:81\n                \n            \n\n\n            \n                \n                    Send a transaction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferSplit\n                        \n                    \n                \n            \n            \n                \ntransferSplit(x: TransferSplitIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferSplitIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/daemon/wallet/json_rpc'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {request} from '@service/json-rpc';\nimport {AddAddressBook, Address, Balance, CreateWallet, GetAddressBookOut, GetBulkPaymentsIn,\n\tGetBulkPaymentsOut, GetPaymentsIn, GetPaymentsOut, GetTransfersIn, GetTransfersOut, Height, IncomingTransfersIn,\n\tIncomingTransfersOut, IntegratedAddress, MakeIntegratedAddressIn, MakeUriIn, OpenWallet, QueryKeyIn, QueryKeyOut,\n\tSplitIntegratedAddressOut, StoreOut, SweepAllIn, SweepAllOut, Transfer, TransferIn, TransferOut, TransferSplitIn,\n\tTransferSplitOut, Uri} from '@plugin/lthn/wallet/interfaces';\nimport {RestoreWallet} from '@plugin/lthn/wallet/interfaces/requests/restoreWallet';\nimport {Observable} from 'rxjs';\nimport { from } from 'rxjs';\nconst axios = require('axios').default;\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletRpcService {\n\tprivate url = 'https://localhost:36911/daemon/wallet/json_rpc';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\t/**\n\t * Send Wallet Service start POST req\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\n\t\tconst request = {rpcBindPort: '36963', disableRpcLogin: false};\n\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/wallet/rpc`,\n\t\t\t\trequest,\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Get openned wallet balance\n\t *\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn request(this.url)('getbalance');\n\t}\n\n\t/**\n\t * Get the address of the opened wallet\n\t *\n\t * @returns {Promise}\n\t */\n\tgetAddress(): Promise {\n\t\treturn request(this.url)('getaddress');\n\t}\n\n\t/**\n\t * Get chain height\n\t *\n\t * @returns {Promise}\n\t */\n\tgetHeight(): Promise {\n\t\treturn request(this.url)('getheight');\n\t}\n\n\t/**\n\t * Send a transaction\n\t *\n\t * @param {TransferIn} x\n\t * @returns {Promise}\n\t */\n\ttransfer(x: TransferIn): Promise {\n\t\treturn request(this.url)('transfer', x);\n\t}\n\n\t/**\n\t *\n\t * @param {TransferSplitIn} x\n\t * @returns {Promise}\n\t */\n\ttransferSplit(x: TransferSplitIn): Promise {\n\t\treturn request(this.url)('transfer_split', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tsweepDust() {\n\t\treturn request(this.url)('sweep_dust');\n\t}\n\n\t/**\n\t * Send all funds\n\t * @param {SweepAllIn} x\n\t * @returns {Promise}\n\t */\n\tsweepAll(x: SweepAllIn): Promise {\n\t\treturn request(this.url)('sweep_all');\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tstore(): Promise {\n\t\treturn request(this.url)('store');\n\t}\n\n\t/**\n\t *\n\t * @param {GetPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetPayments(x: GetPaymentsIn): Promise {\n\t\treturn request(this.url)('get_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetBulkPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetBulkPayments(x: GetBulkPaymentsIn): Promise {\n\t\treturn request(this.url)('get_bulk_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tgetTransfers(x: GetTransfersIn): Promise {\n\t\treturn request(this.url)('get_transfers', x);\n\t}\n\n\t/**\n\t * Get transfer by Transactin ID\n\t *\n\t * @param {{txid: string}} x\n\t * @returns {Promise}\n\t */\n\tgetTransferByTxid(x: { txid: string }): Promise {\n\t\treturn request(this.url)('get_transfer_by_txid', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IncomingTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tincomingTransfers(\n\t\tx: IncomingTransfersIn\n\t): Promise {\n\t\treturn request(this.url)('incoming_transfers', x);\n\t}\n\n\t/**\n\t *\n\t * @param {QueryKeyIn} x\n\t * @returns {Promise}\n\t */\n\tqueryKey(x: QueryKeyIn): Promise {\n\t\treturn request(this.url)('query_key', x);\n\t}\n\n\t/**\n\t *\n\t * @param {MakeIntegratedAddressIn} x\n\t * @returns {Promise}\n\t */\n\tmakeIntegratedAddress(\n\t\tx: MakeIntegratedAddressIn\n\t): Promise {\n\t\treturn request(this.url)('make_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IntegratedAddress} x\n\t * @returns {Promise}\n\t */\n\tsplitIntegratedAddress(\n\t\tx: IntegratedAddress\n\t): Promise {\n\t\treturn request(this.url)('split_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tstopWallet() {\n\t\treturn request(this.url)('stop_wallet');\n\t}\n\n\t/**\n\t *\n\t * @param {MakeUriIn} x\n\t * @returns {Promise}\n\t */\n\tmakeUri(x: MakeUriIn): Promise {\n\t\treturn request(this.url)('make_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {Uri} x\n\t * @returns {Promise}\n\t */\n\tparseUri(x: Uri): Promise {\n\t\treturn request(this.url)('parse_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{entries: number[]}} x\n\t * @returns {Promise}\n\t */\n\tgetAddressBook(x: { entries: number[] }): Promise {\n\t\treturn request(this.url)('get_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {AddAddressBook} x\n\t * @returns {Promise}\n\t */\n\taddAddressBook(x: AddAddressBook): Promise {\n\t\treturn request(this.url)('add_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{index: number}} x\n\t * @returns {Promise>}\n\t */\n\tdeleteAddressBook(x: { index: number }) {\n\t\treturn request(this.url)('delete_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {OpenWallet} x\n\t * @returns {Promise>}\n\t */\n\topenWallet(x: OpenWallet) {\n\t\treturn request(this.url)('open_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {CreateWallet} x\n\t * @returns {Promise>}\n\t */\n\tcreateWallet(x: CreateWallet) {\n\t\treturn request(this.url)('create_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {RestoreWallet} x\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(x: RestoreWallet) {\n\t\treturn request(this.url)('generate_from_keys', x);\n\t}\n\n\t/**\n\t *\n\t * @param {string} method\n\t * @param arg\n\t * @returns {Promise}\n\t */\n\tother(method: string, arg?: any): Promise {\n\t\treturn request(this.url)(method, arg);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBalance\n                            \n                            \n                                getWalletList\n                            \n                            \n                                loadTransfers\n                            \n                            \n                                openWallet\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                startWallet\n                            \n                            \n                                walletList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService, rpc: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:54\n                \n            \n\n\n            \n                \n                    Get wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWalletList\n                        \n                    \n                \n            \n            \n                \ngetWalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:60\n                \n            \n\n\n            \n                \n                    Gets the list of known wallets from the file system\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTransfers\n                        \n                    \n                \n            \n            \n                \nloadTransfers(opts: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(req: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:44\n                \n            \n\n\n            \n                \n                    Open a known wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(req: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:34\n                \n            \n\n\n            \n                \n                    Restore wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:24\n                \n            \n\n\n            \n                \n                    Start wallet service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletList\n                        \n                    \n                \n            \n            \n                \nwalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:78\n                \n            \n\n\n            \n                \n                    Returns the wallets we know about\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Balance, GetTransfersIn, OpenWallet, RestoreWallet} from '@plugin/lthn/wallet/interfaces';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * Orchestrates dealing with wallets, to add a new wallet type, implement this class\n */\nexport class WalletService {\n\tprivate wallets: string[] = [];\n\n\tconstructor(private fs: FileSystemService, private rpc: WalletRpcService) {\n\t}\n\n\t/**\n\t * Start wallet service\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\treturn this.rpc.startWallet();\n\t}\n\n\t/**\n\t * Restore wallet\n\t *\n\t * @param {RestoreWallet} req\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(req: RestoreWallet) {\n\t\treturn this.rpc.restoreWallet(req);\n\t}\n\n\t/**\n\t * Open a known wallet\n\t *\n\t * @param {OpenWallet} req\n\t * @returns {Promise>}\n\t */\n\topenWallet(req: OpenWallet) {\n\t\treturn this.rpc.openWallet(req);\n\t}\n\n\t/**\n\t * Get wallet balance\n\t *\n\t * @param {Balance} req\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn this.rpc.getBalance()\n\t}\n\t/**\n\t * Gets the list of known wallets from the file system\n\t */\n\tgetWalletList() {\n\t\tthis.fs.listFiles('/wallets').then((data) => {\n\t\t\tif (data.length > 0) {\n\t\t\t\tfor (let dat of data) {\n\t\t\t\t\tif (!this.wallets.includes(dat) && !dat.endsWith('.keys') && !dat.endsWith('.txt')) {\n\t\t\t\t\t\tthis.wallets.push(dat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this.wallets\n\t}\n\n\t/**\n\t * Returns the wallets we know about\n\t *\n\t * @returns {string[]}\n\t */\n\twalletList() {\n\t\tif (this.wallets.length === 0) {\n\t\t\tthis.getWalletList();\n\t\t}\n\t\treturn this.wallets;\n\t}\n\n\tloadTransfers(opts: GetTransfersIn){\n\t\treturn this.rpc.getTransfers(opts).then((data) => Object.values(data).flat());\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletState.html":{"url":"classes/WalletState.html","title":"class - WalletState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/state.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            WalletsState\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                known_wallets\n                            \n                            \n                                loaded_wallet\n                            \n                            \n                                wallets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        known_wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded_wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut, Transfer} from '@plugin/lthn/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletsState.html":{"url":"interfaces/WalletsState.html","title":"interface - WalletsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            known_wallets\n                                        \n                                \n                                \n                                        \n                                            loaded_wallet\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        known_wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known_wallets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_wallet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_wallet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut, Transfer} from '@plugin/lthn/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebStorageService.html":{"url":"injectables/WebStorageService.html","title":"injectable - WebStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/web-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                count\n                            \n                            \n                                    Private\n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backend\n                            \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        backend\n                        \n                    \n                \n            \n            \n                \n                    \n                    backend(cmd: string, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:64\n                \n            \n\n\n            \n                \n                    Performs call to backend object store\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(key: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/object'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/web-storage.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {atob, btoa} from 'bytebuffer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebStorageService implements Storage {\n\n\tprivate items = {};\n\tprivate count = 0\n\tprivate apiUrl = 'https://localhost:36911/object';\n\n\tget length() {\n\t\treturn this.count;\n\t}\n\n\tkey(key:number): string | null {\n\t\treturn this.items[key]\n\t}\n\n\tgetItem(key): string | null {\n\t\ttry {\n\t\t\tconst ret = this.backend('get', {object: key});\n\t\t\tif(ret){\n\t\t\t\treturn JSON.parse(ret)\n\t\t\t}\n\t\t}catch (e){\n\t\t\tconsole.log('getItem Error')\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetItem(key: string, value: string) {\n\t\ttry {\n\t\t\tthis.count++\n\t\t\treturn this.backend('set', {object: key, data: value});\n\t\t}catch (e){\n\t\t\tconsole.log('setItem Error')\n\t\t}\n\t\treturn null;\n\n\t}\n\n\tremoveItem(key) {\n\t\tdelete this.items[key]\n\t\tthis.count--\n\t\tthis.backend('remove', {object: key});\n\t}\n\n\tclear() {\n\t\tthis.items ={}\n\t\tthis.count = 0\n\t\tthis.backend('clear', {});\n\t}\n\n\t/**\n\t * Performs call to backend object store\n\t *\n\t * @param {string} cmd\n\t * @param payload\n\t * @returns {string | null}\n\t * @private\n\t */\n\tprivate backend(cmd:string, payload: any):string|null {\n\t\tconst axios = require('axios').default;\n\t\ttry {\n\t\t\tconst ret = axios.post(`${this.apiUrl}/${cmd}`, {group: 'lthn-app', ...payload}).then((data) => data.data)\n\t\t\treturn ret.data;\n\t\t}catch (NetworkError) {\n\t\t\tconsole.log('HTTP Error')\n\t\t}\n\t\treturn null\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeConnection\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                dataUpdates$\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeConnection\n                        \n                    \n                \n            \n            \n                \ncloseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     WebSocketSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataUpdates$\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataUpdates$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/websocket.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nexport const WS_ENDPOINT = 'ws://localhost:36909';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$: WebSocketSubject;\n\n\tconstructor() {}\n\n\tpublic connect(): WebSocketSubject {\n\t\tif (!this.socket$ || this.socket$.closed) {\n\t\t\tthis.socket$ = webSocket(WS_ENDPOINT);\n\t\t}\n\t\treturn this.socket$;\n\t}\n\n\tpublic dataUpdates$() {\n\t\treturn this.connect().asObservable();\n\t}\n\n\tcloseConnection() {\n\t\tthis.connect().complete();\n\t}\n\n\tsendMessage(msg: string) {\n\t\tthis.socket$.next(msg);\n\t}\n\n\n\t/**\n\timport { webSocket } from \"rxjs/webSocket\";\nconst subject = webSocket(\"ws://localhost:8081\");\n\nsubject.subscribe(\n   msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n   err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n   () => console.log('complete') // Called when connection is closed (for whatever reason).\n );\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nDont be scared, the world was created by people no smarter than you.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.0\n        \n            @angular/cdk : ~13.0.1\n        \n            @angular/common : ~13.0.0\n        \n            @angular/compiler : ~13.0.0\n        \n            @angular/core : ~13.0.0\n        \n            @angular/elements : ^13.0.3\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~13.0.0\n        \n            @angular/localize : ~13.0.0\n        \n            @angular/material : ^13.0.1\n        \n            @angular/platform-browser : ~13.0.0\n        \n            @angular/platform-browser-dynamic : ~13.0.0\n        \n            @angular/platform-server : ~13.0.0\n        \n            @angular/router : ~13.0.0\n        \n            @hiveio/dhive : ^1.1.1\n        \n            @kurkle/color : ^0.1.9\n        \n            @lthn/rxjs-wallet-rpc : ^1.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.1\n        \n            @ngrx/data : ^13.0.1\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @nguniversal/express-engine : ^13.0.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            angular-notifier : ^9.1.0\n        \n            assert : ^2.0.0\n        \n            axios : ^0.24.0\n        \n            big.js : ^6.1.1\n        \n            bootstrap : ^4.5.0\n        \n            chart.js : ^3.6.0\n        \n            chartjs-adapter-moment : ^1.0.0\n        \n            config-ini-parser : ^1.5.9\n        \n            crypto-js : ^4.1.1\n        \n            express : ^4.15.2\n        \n            jszmq : ^0.1.2\n        \n            localstorage-polyfill : ^1.0.1\n        \n            marked : ^3.0.8\n        \n            moment : ^2.29.1\n        \n            ng-socket-io : ^0.2.4\n        \n            ng-terminal : ^3.2.0\n        \n            ngrx-store-localstorage : ^12.0.1\n        \n            ngx-socket-io : ^4.1.0\n        \n            openpgp : ^5.0.0\n        \n            random-js : ^2.1.0\n        \n            rxjs : ~7.4.0\n        \n            stream-browserify : ^3.0.0\n        \n            strip-ansi : ^7.0.1\n        \n            tslib : ^2.3.1\n        \n            typescript : ^4.4.4\n        \n            unique-names-generator : ^4.6.0\n        \n            web-animations-js : ^2.3.2\n        \n            xterm-addon-web-links : ^0.4.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginMethods   (src/.../user.options.ts)\n                        \n                        \n                            PluginStatus   (src/.../state.ts)\n                        \n                        \n                            RxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/data/user/interfaces/user.options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginMethods\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SSH_PEM\n                            \n                        \n            \n        \n\n    src/app/data/plugins/state.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginStatus\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TIMED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 OUTDATED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/data/debug.rxjs.ts\n    \n        \n            \n                \n                    \n                        \n                        RxJsLoggingLevel\n                    \n                \n                    \n                        \n                            Observable logging levels\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            nameNotTakenValidator   (src/.../validators.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            setRxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/wallet/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nameNotTakenValidator\n                        \n                    \n                \n            \n            \n                \nnameNotTakenValidator(nameList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/plugins/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: ProfileState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/chain/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/wallet/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setRxJsLoggingLevel\n                        \n                    \n                \n            \n            \n                \nsetRxJsLoggingLevel(level: RxJsLoggingLevel)\n                \n            \n\n\n\n\n            \n                \n                    Adjust the logging level during runtime\nsetRxJsLoggingLevel(4) = off\nsetRxJsLoggingLevel(0) - tmi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                RxJsLoggingLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLethean Desktop Interface\n\n\nThis is the application that is run within the lethean desktop, the API refrence for the HTTPS endpoints is here:\nDevelopment Build\nnpm install\nnpm run dev:setup\nnpm run devProduction Build\nnpm install\nnpm run buildDocumentation\nnpm install\nnpm run doc\nnpm run doc:serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PluginsModule\n\n\n\ncluster_PluginsModule_declarations\n\n\n\ncluster_PluginsModule_exports\n\n\n\ncluster_PluginsModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nPluginsModule\n\nPluginsModule\n\nAppModule -->\n\nPluginsModule->AppModule\n\n\n\n\n\nPluginsComponent \n\nPluginsComponent \n\nPluginsComponent  -->\n\nPluginsModule->PluginsComponent \n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nPostRoutingModule\n\nPostRoutingModule\n\nAppRoutingModule -->\n\nPostRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nAppRoutingModule -->\n\nSettingsRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\nChartDirective\n\nChartDirective\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\nPluginsComponent\n\nPluginsComponent\n\nPluginsModule -->\n\nPluginsComponent->PluginsModule\n\n\n\n\n\nPluginsService\n\nPluginsService\n\nPluginsModule -->\n\nPluginsService->PluginsModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\nAddComponent \n\nAddComponent \n\nAddComponent  -->\n\nWalletModule->AddComponent \n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\nAddComponent\n\nAddComponent\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        27 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    56 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
