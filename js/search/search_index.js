var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddAddressBook.html",[0,0.21,1,3.444]],["body/interfaces/AddAddressBook.html",[0,0.287,1,5.793,2,1.292,3,0.089,4,0.089,5,0.089,6,5.533,7,0.489,8,0.829,9,4.43,10,1.656,11,4.165,12,3.932,13,1.285,14,0.631,15,0.008,16,0.1,17,4.523,18,6.241,19,0.006,20,0.006]],["title/interfaces/Address.html",[0,0.21,9,2.334]],["body/interfaces/Address.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,9,4.737,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,21,6.117]],["title/components/AppComponent.html",[22,0.924,23,1.691]],["body/components/AppComponent.html",[3,0.03,4,0.03,5,0.03,7,0.162,8,0.37,10,0.802,11,0.994,13,0.828,14,0.547,15,0.008,16,0.033,19,0.003,20,0.003,22,0.887,23,1.887,24,1.364,25,0.845,26,1.131,27,0.845,28,0.845,29,1.83,30,1.133,31,1.989,32,3.55,33,0.684,34,3.255,35,2.416,36,2.547,37,1.809,38,4.372,39,1.331,40,3.416,41,3.524,42,4.372,43,6.068,44,3.62,45,6.72,46,2.715,47,5.082,48,0.83,49,3.306,50,3.416,51,4.127,52,2.312,53,5.082,54,5.082,55,0.864,56,1.561,57,3.901,58,7.529,59,4.372,60,3.001,61,4.372,62,3.843,63,5.294,64,4.506,65,3.651,66,1.647,67,3.416,68,1.084,69,1.358,70,3.416,71,2.064,72,4.372,73,1.416,74,1.969,75,3.416,76,2.064,77,2.064,78,2.064,79,2.064,80,2.064,81,2.064,82,2.064,83,4.993,84,2.064,85,0.732,86,0.615,87,2.064,88,1.185,89,2.064,90,4.372,91,1.469,92,3.416,93,2.064,94,0.579,95,1.561,96,0.269,97,1.83,98,3.416,99,0.804,100,1.392,101,1.327,102,1.83,103,1.676,104,1.327,105,1.327,106,1.676,107,1.327,108,1.676,109,1.676,110,1.676,111,2.064,112,1.392,113,0.218,114,2.396,115,1.561,116,2.064,117,2.064,118,2.064,119,2.064,120,1.469,121,2.064,122,2.064,123,2.064,124,3.416,125,2.064,126,2.064,127,2.064,128,3.416,129,2.064,130,1.83,131,2.064,132,2.064,133,2.064,134,2.064,135,2.064,136,1.83,137,2.064,138,2.064,139,0.522,140,2.064,141,2.064,142,2.064,143,2.064,144,2.064,145,2.064,146,2.064,147,4.372,148,3.001,149,2.064,150,2.064,151,2.064,152,2.196,153,2.064,154,2.064,155,2.064,156,0.9,157,2.064,158,3.416,159,3.416,160,3.416,161,3.416,162,3.416,163,6.068,164,3.416,165,3.416,166,3.416,167,3.416,168,3.416,169,3.416,170,1.676,171,1.83,172,1.83,173,2.604,174,2.064,175,3.876,176,2.432,177,1.676,178,2.064,179,2.064,180,2.064,181,2.064,182,3.416,183,2.064,184,2.064,185,2.064,186,2.064,187,2.064,188,1.646,189,1.212,190,2.064,191,2.064,192,2.064,193,4.993,194,3.029,195,2.064,196,2.064,197,3.416,198,3.416,199,2.064,200,2.064,201,2.064,202,2.064,203,1.83,204,1.83,205,2.064,206,2.064,207,2.064,208,2.064,209,2.064,210,2.064,211,3.029,212,2.064,213,2.064,214,0.804,215,1.398,216,1.398,217,0.766,218,2.08,219,0.845,220,0.845,221,0.804,222,0.845,223,0.766,224,0.845,225,0.766,226,0.845,227,0.749,228,0.845,229,0.766,230,0.845,231,0.732,232,0.845,233,0.766,234,1.909,235,0.845,236,0.749,237,0.804,238,0.845,239,0.766,240,0.845,241,0.766,242,0.845,243,0.804,244,0.7,245,0.845,246,0.766,247,0.845,248,0.749,249,0.845,250,1.24,251,1.398,252,0.766,253,0.845,254,0.766,255,0.845,256,0.749,257,0.845,258,0.749,259,0.845,260,0.766,261,0.824,262,0.749,263,0.824,264,0.845]],["title/modules/AppModule.html",[265,1.653,266,3.444]],["body/modules/AppModule.html",[3,0.055,4,0.055,5,0.055,15,0.008,16,0.089,19,0.005,20,0.005,23,3.251,35,1.093,36,1.356,46,1.49,94,0.775,96,0.499,97,3.391,100,3.724,101,2.459,104,3.549,105,2.459,113,0.404,156,1.007,231,1.356,234,2.196,266,6.919,267,1.326,268,2.259,269,3.391,270,3.391,271,3.391,272,3.391,273,5.577,274,5.577,275,5.286,276,5.577,277,5.577,278,4.626,279,2.443,280,1.693,281,1.49,282,3.105,283,2.15,284,2.003,285,4.174,286,2.05,287,2.15,288,1.388,289,3.391,290,5.52,291,5.52,292,3.824,293,4.164,294,5.52,295,2.58,296,3.824,297,3.824,298,5.52,299,3.928,300,2.722,301,4.482,302,3.105,303,4.174,304,2.892,305,4.174,306,2.892,307,5.52,308,3.824,309,3.137,310,2.173,311,4.482,312,3.105,313,3.549,314,2.352,315,2.173,316,3.824,317,3.391,318,3.824,319,3.391,320,4.61,321,3.391,322,5.52,323,3.824,324,3.391,325,4.894,326,3.549,327,2.892,328,2.892,329,2.459,330,3.391,331,1.189,332,3.824,333,3.824,334,1.297,335,3.105,336,3.824,337,3.824,338,3.391,339,3.391,340,3.824,341,3.105,342,3.391,343,2.352,344,1.648,345,2.459,346,3.824,347,3.549,348,1.74,349,2.722,350,2.352,351,3.259,352,3.549,353,2.258,354,1.526,355,3.824,356,3.824,357,4.894,358,3.824,359,3.824]],["title/modules/AppRoutingModule.html",[265,1.653,273,3.241]],["body/modules/AppRoutingModule.html",[3,0.068,4,0.068,5,0.092,11,2.275,15,0.008,16,0.076,19,0.005,20,0.005,22,0.958,35,1.828,44,3.035,60,2.788,94,0.735,96,0.616,99,1.839,113,0.498,139,1.194,152,3.035,227,2.321,267,2.218,268,2.618,273,6.603,279,2.831,280,2.089,281,1.839,284,2.321,285,3.57,286,2.376,317,7.429,334,1.601,344,2.034,345,3.035,360,4.186,361,4.186,362,5.964,363,5.964,364,5.964,365,5.964,366,5.964,367,5.964,368,4.721,369,2.904,370,3.082,371,3.442,372,4.721,373,4.721,374,4.721,375,4.721,376,4.721,377,4.721,378,4.721,379,2.089,380,5.535,381,4.186,382,3.833,383,3.777,384,1.753,385,4.721,386,4.721,387,4.721,388,3.57,389,4.721,390,2.345,391,4.721,392,3.185,393,3.57,394,4.186,395,4.721,396,4.721,397,4.186]],["title/injectables/AppService.html",[398,1.302,399,3.444]],["body/injectables/AppService.html",[3,0.048,4,0.048,5,0.048,7,0.265,8,0.545,10,0.619,14,0.591,15,0.008,16,0.054,19,0.004,20,0.004,36,1.786,41,2.529,48,1.223,55,0.853,66,1.754,68,0.836,69,0.658,73,1.863,74,1.095,88,2.316,94,0.623,96,0.441,113,0.356,115,2.552,139,0.853,156,1.586,171,2.992,188,1.626,265,1.224,268,2.465,284,1.224,331,1.049,342,2.992,345,4.294,354,1.347,379,2.666,384,2.783,388,2.552,390,3.317,393,3.808,397,4.464,398,1.439,399,3.808,400,1.493,401,2.992,402,5.341,403,4.891,404,6.023,405,6.023,406,4.064,407,6.679,408,3.808,409,6.023,410,5.341,411,3.374,412,3.66,413,5.035,414,2.973,415,3.374,416,3.374,417,3.374,418,4.891,419,3.374,420,3.374,421,3.374,422,3.374,423,3.374,424,4.464,425,4.753,426,2.992,427,3.374,428,4.464,429,5.035,430,2.076,431,2.276,432,2.401,433,2.552,434,2.552,435,2.401,436,2.076,437,1.729,438,3.374,439,3.374,440,5.035,441,2.276,442,3.374,443,5.035,444,5.035,445,5.035,446,5.035,447,5.035,448,3.374,449,6.023,450,5.922,451,3.374,452,3.374,453,2.401,454,5.035,455,5.341,456,6.679,457,3.374,458,2.74,459,5.035,460,2.992,461,3.374,462,5.035,463,2.74,464,2.992,465,3.374,466,2.992,467,3.374,468,3.374,469,3.374,470,4.464,471,2.76,472,3.374,473,3.374,474,3.374,475,3.374,476,3.374,477,3.374,478,2.992,479,1.849,480,2.552,481,2.552,482,3.374,483,3.374,484,3.374,485,3.374,486,3.374,487,3.374,488,3.374,489,3.374,490,2.992,491,3.397,492,3.374,493,1.253,494,4.555,495,3.374,496,4.464,497,2.276,498,2.74,499,3.374,500,3.374,501,3.374,502,2.74,503,3.374,504,2.74,505,2.74,506,2.74,507,3.374]],["title/interfaces/AppState.html",[0,0.21,508,3.698]],["body/interfaces/AppState.html",[0,0.223,2,1.002,3,0.069,4,0.069,5,0.069,7,0.38,8,0.704,13,0.888,14,0.598,15,0.008,16,0.132,19,0.005,20,0.005,65,2.751,94,0.729,107,3.112,139,1.858,156,1.275,244,2.924,329,3.112,331,1.505,384,2.416,430,2.978,431,3.266,508,5.283,509,3.661,510,6.656,511,5.545,512,5.092,513,7.348,514,7.348,515,7.348,516,7.348,517,6.515,518,5.768,519,5.768,520,4.841,521,4.841,522,6.506,523,4.292,524,4.292,525,3.112,526,4.841,527,4.92,528,4.841,529,4.841,530,3.661,531,4.292,532,4.292,533,4.292,534,4.292,535,5.557,536,5.283,537,3.661,538,3.931,539,4.389,540,4.841,541,3.661,542,4.841,543,4.841,544,4.841,545,4.292,546,3.661,547,3.445,548,2.978,549,4.292,550,4.292]],["title/classes/Atomic.html",[113,0.481,551,2.588]],["body/classes/Atomic.html",[0,0.349,3,0.063,4,0.063,5,0.063,7,0.348,8,0.663,10,1.123,12,2.016,13,1.172,15,0.008,16,0.135,17,2.616,19,0.005,20,0.005,35,1.751,66,1.294,85,2.172,86,1.825,88,2.626,94,0.584,113,0.647,114,3.357,139,1.121,156,1.167,189,2.172,331,2.182,348,2.016,350,2.726,384,1.646,471,2.429,493,1.646,551,3.989,552,3.598,553,2.726,554,4.513,555,5.109,556,4.736,557,4.736,558,4.431,559,4.431,560,2.849,561,3.244,562,2.726,563,3.481,564,2.99,565,2.726,566,3.768,567,2.726,568,2.726,569,2.849,570,2.99,571,2.99,572,2.99,573,2.915,574,2.99,575,2.616,576,2.849,577,2.518,578,3.717,579,3.717,580,3.768,581,2.849,582,2.616,583,2.726,584,2.726,585,2.726,586,2.726,587,2.616,588,2.726,589,2.616,590,2.616,591,2.616,592,2.347,593,2.616,594,2.518,595,2.616,596,2.726,597,2.616,598,2.726,599,2.726,600,3.717,601,2.726,602,1.726,603,2.726,604,2.99,605,2.99,606,2.849,607,2.616,608,2.518,609,2.429,610,3.042,611,2.711,612,2.518,613,2.201,614,2.849]],["title/guards/AuthGuard.html",[615,3.698,616,2.689]],["body/guards/AuthGuard.html",[3,0.054,4,0.054,5,0.054,7,0.297,10,1.004,14,0.417,15,0.008,16,0.061,19,0.004,20,0.004,30,1.255,36,1.341,46,2.507,48,1.33,55,1.385,56,2.861,57,5.019,66,1.156,68,1.357,69,1.067,73,1.647,88,2.232,94,0.622,96,0.494,99,1.473,113,0.399,156,0.996,188,1.823,189,1.341,244,2.392,281,2.133,329,3.521,351,3.234,380,5.556,384,2.391,394,4.856,398,1.565,412,3.867,414,3.801,424,4.856,425,5.022,430,2.327,431,2.552,435,2.692,436,2.327,463,4.447,481,4.141,491,2.552,493,2.034,539,4.76,547,4.581,616,3.234,617,3.783,618,3.354,619,5.329,620,5.176,621,3.783,622,3.783,623,7.488,624,7.488,625,3.783,626,5.476,627,7.056,628,4.856,629,5.904,630,4.856,631,4.166,632,5.707,633,4.856,634,5.476,635,4.447,636,5.476,637,5.476,638,4.856,639,5.476,640,5.476,641,5.476,642,4.856,643,4.856,644,4.856,645,3.234,646,5.476,647,4.447,648,4.856,649,4.856,650,5.476,651,4.856,652,4.141,653,5.476,654,5.476,655,5.476,656,4.856,657,6.437,658,3.801,659,3.354,660,3.072,661,7.056,662,3.354,663,3.072,664,3.783,665,3.783,666,3.354,667,3.354,668,3.783,669,3.783]],["title/modules/AuthModule.html",[265,1.653,274,3.241]],["body/modules/AuthModule.html",[3,0.088,4,0.088,5,0.088,15,0.008,16,0.098,19,0.006,20,0.006,94,0.757,96,0.798,113,0.645,227,3.26,267,2.12,268,3.095,274,6.394,279,3.348,280,2.706,281,2.381,283,2.946,284,2.218,286,2.809,287,2.946,288,2.218,309,4.298,310,3.474,670,5.42,671,5.42,672,6.113,673,6.113,674,4.298,675,3.474,676,6.142,677,3.35,678,6.142,679,4.964]],["title/injectables/AuthService.html",[398,1.302,620,2.928]],["body/injectables/AuthService.html",[3,0.046,4,0.046,5,0.084,7,0.254,8,0.528,10,0.895,13,0.893,14,0.447,15,0.008,16,0.052,19,0.004,20,0.005,41,2.05,46,3.202,48,1.186,55,1.235,65,2.774,66,1.558,68,1.21,69,1.275,73,1.639,74,1.051,85,1.732,86,1.455,88,1.693,94,0.544,96,0.423,113,0.342,120,3.475,139,1.486,156,1.286,177,3.965,189,2.084,244,2.735,334,2.869,351,2.883,380,3.475,384,1.203,390,1.608,398,1.396,400,1.433,406,3.294,412,3.586,414,3.47,428,4.329,430,1.992,431,2.185,435,2.305,436,1.992,437,1.66,453,4.657,466,4.329,480,3.692,541,5.581,547,2.305,592,2.586,602,2.875,611,3.696,620,3.139,628,4.329,629,3.692,630,5.801,631,3.863,633,5.801,635,3.965,642,4.329,645,2.883,649,5.801,658,1.912,680,2.871,681,3.782,682,3.221,683,2.871,684,4.979,685,4.882,686,3.238,687,5.877,688,4.882,689,4.882,690,4.882,691,3.475,692,3.475,693,3.965,694,4.329,695,4.882,696,4.882,697,4.329,698,4.882,699,4.882,700,4.882,701,4.882,702,3.238,703,4.882,704,4.882,705,4.329,706,4.882,707,3.965,708,4.329,709,6.543,710,4.882,711,4.329,712,4.882,713,4.882,714,4.882,715,4.882,716,4.882,717,4.882,718,3.238,719,4.882,720,4.882,721,4.882,722,4.882,723,4.882,724,4.882,725,4.882,726,3.238,727,3.238,728,2.63,729,2.774,730,3.238,731,2.871,732,3.238,733,3.238,734,4.882,735,3.238,736,3.238,737,3.238]],["title/components/BackupComponent.html",[22,0.924,221,1.774]],["body/components/BackupComponent.html",[3,0.062,4,0.062,5,0.062,7,0.339,15,0.007,16,0.069,19,0.005,20,0.005,22,1.405,23,1.605,24,2.403,25,1.769,27,1.769,28,1.769,30,1.996,31,3.151,33,1.433,34,3.578,35,2.677,36,3.114,39,2.345,48,1.462,52,3.408,55,1.752,66,1.271,69,1.35,73,1.009,74,1.953,94,0.359,96,0.564,113,0.456,214,1.683,215,2.463,216,2.463,217,1.605,218,3.066,219,1.769,220,1.769,221,2.918,222,1.769,223,1.605,224,1.769,225,1.605,226,1.769,227,1.568,228,1.769,229,1.605,230,1.769,231,1.533,232,1.769,233,1.605,234,2.837,235,1.769,236,1.568,237,1.683,238,1.769,239,1.605,240,1.769,241,1.605,242,1.769,243,1.683,244,1.465,245,1.769,246,1.605,247,1.769,248,1.568,249,1.769,250,2.184,251,2.463,252,1.605,253,1.769,254,1.605,255,1.769,256,1.568,257,1.769,258,1.568,259,1.769,260,1.605,261,1.725,262,1.568,263,1.725,264,1.769,512,3.554,613,2.99,711,5.337,738,3.832,739,6.019,740,4.321,741,4.321,742,4.888,743,4.888,744,4.888,745,4.888,746,5.337,747,3.832,748,2.738,749,3.832]],["title/interfaces/Balance.html",[0,0.21,750,3.073]],["body/interfaces/Balance.html",[0,0.286,2,1.284,3,0.089,4,0.089,5,0.089,7,0.487,8,0.826,14,0.581,15,0.008,16,0.1,19,0.006,20,0.006,120,4.415,234,2.103,348,2.822,573,3.198,578,4.042,579,4.042,590,4.507,750,6.163,751,5.501,752,8.625,753,6.204,754,4.185,755,6.204,756,6.204,757,6.767,758,6.204,759,6.204,760,6.204,761,6.204,762,6.204,763,6.204,764,5.501]],["title/injectables/BaseChartConfigService.html",[398,1.302,765,3.444]],["body/injectables/BaseChartConfigService.html",[3,0.051,4,0.051,5,0.051,7,0.28,8,0.568,10,0.655,13,0.717,14,0.618,15,0.008,16,0.057,19,0.004,20,0.004,41,3.626,48,1.275,55,1.575,66,1.713,68,0.885,69,0.696,73,1.453,74,2.021,85,2.435,86,2.046,94,0.297,96,0.466,113,0.377,189,2.877,214,2.045,334,2.111,384,2.55,398,1.501,400,1.58,437,1.83,441,4.631,479,3.763,493,2.55,525,5.324,602,2.425,748,2.833,765,3.97,766,7.342,767,3.165,768,4.655,769,6.087,770,5.574,771,3.57,772,4.655,773,3.57,774,4.655,775,3.57,776,3.57,777,4.655,778,3.57,779,3.57,780,4.655,781,4.655,782,3.97,783,4.655,784,4.655,785,4.655,786,4.655,787,4.655,788,4.263,789,4.655,790,4.655,791,4.655,792,4.655,793,3.97,794,4.655,795,4.655,796,4.655,797,4.655,798,4.655,799,4.655,800,4.263,801,6.087,802,6.087,803,4.655,804,4.655,805,4.655,806,4.655,807,4.655,808,3.57,809,3.57,810,3.57,811,3.57,812,5.25]],["title/components/BlockchainComponent.html",[22,0.924,223,1.691]],["body/components/BlockchainComponent.html",[3,0.041,4,0.041,5,0.041,7,0.226,8,0.484,10,0.529,13,0.61,14,0.417,15,0.008,16,0.046,19,0.004,20,0.004,22,1.11,23,1.072,24,1.785,25,1.181,26,1.582,27,1.181,28,1.181,30,1.483,31,2.489,33,0.957,34,3.423,35,2.552,36,2.768,37,2.368,39,1.741,41,3.191,48,1.086,52,2.804,55,0.73,63,5.294,66,1.553,68,0.715,69,1.201,73,1.043,74,2,94,0.512,96,0.377,113,0.305,156,1.177,170,2.343,172,2.559,173,1.479,176,2.054,193,3.964,194,3.964,203,2.559,214,1.124,215,1.83,216,1.83,217,1.072,218,2.522,219,1.181,220,1.181,221,1.124,222,1.181,223,2.289,224,1.181,225,1.072,226,1.181,227,1.047,228,1.181,229,1.072,230,1.181,231,1.023,232,1.181,233,1.072,234,2.261,235,1.181,236,1.047,237,1.124,238,1.181,239,1.072,240,1.181,241,1.072,242,1.181,243,1.124,244,0.978,245,1.181,246,1.072,247,1.181,248,1.047,249,1.181,250,1.622,251,1.83,252,1.072,253,1.181,254,1.072,255,1.181,256,1.047,257,1.181,258,1.047,259,1.181,260,1.072,261,1.152,262,1.047,263,1.152,264,1.181,293,3.962,295,1.947,343,2.75,352,2.874,354,1.152,408,3.381,410,4.852,426,2.559,430,1.775,431,1.947,496,4.852,498,2.343,582,1.704,813,2.559,814,4.138,815,3.366,816,5.472,817,4.471,818,5.472,819,5.472,820,4.661,821,5.472,822,2.182,823,4.471,824,3.016,825,2.886,826,2.886,827,2.886,828,2.886,829,2.886,830,2.886,831,2.886,832,2.559,833,2.886,834,2.054,835,2.886,836,2.886,837,2.886,838,2.886,839,2.886,840,2.343,841,6.163,842,4.471,843,4.471,844,4.471,845,4.471,846,3.182,847,7.973,848,4.471,849,4.471,850,4.471,851,4.471,852,4.471,853,4.471,854,4.471,855,4.471,856,4.471,857,3.381,858,3.964,859,4.471,860,4.471,861,4.471,862,3.964,863,4.471,864,2.886,865,2.886,866,2.886,867,2.886]],["title/modules/BlockchainModule.html",[265,1.653,868,3.444]],["body/modules/BlockchainModule.html",[3,0.074,4,0.074,5,0.074,11,2.488,15,0.008,16,0.083,19,0.006,20,0.006,22,1.048,44,3.32,60,3.049,94,0.755,96,0.674,99,2.011,104,3.32,105,3.32,113,0.545,139,1.306,152,3.32,223,3.341,267,1.79,268,2.779,278,5.288,279,3.006,280,2.285,281,2.011,283,2.645,284,2.464,286,2.522,287,2.645,288,1.874,303,5.135,304,3.905,309,3.859,310,2.934,313,4.366,314,3.176,315,2.934,334,1.751,344,2.225,370,3.272,371,3.358,379,2.285,493,1.918,674,3.859,675,2.934,815,4.668,868,6.867,869,4.578,870,4.578,871,4.578,872,4.578,873,6.119,874,5.163,875,5.163,876,5.163,877,5.163,878,5.163,879,5.163,880,2.646]],["title/modules/BlockchainRoutingModule.html",[265,1.653,362,3.241]],["body/modules/BlockchainRoutingModule.html",[3,0.09,4,0.09,5,0.09,15,0.008,16,0.101,19,0.006,20,0.006,94,0.719,96,0.817,99,2.438,113,0.661,139,1.583,267,2.17,283,2.438,284,2.271,286,2.85,287,2.989,288,2.271,343,3.85,344,2.697,352,4.024,362,5.462,369,3.85,370,3.698,371,3.673,379,2.77,616,4.901,619,4.455,880,3.208,881,6.259,882,4.734,883,4.223,884,6.259,885,6.259]],["title/injectables/BlockchainService.html",[320,3.241,398,1.302]],["body/injectables/BlockchainService.html",[3,0.057,4,0.057,5,0.095,7,0.311,10,0.728,14,0.581,15,0.008,16,0.106,19,0.005,20,0.005,48,1.377,55,1.004,66,1.611,68,0.984,69,0.774,73,1.781,94,0.6,96,0.518,113,0.419,139,1.824,148,4.26,156,1.9,293,4.638,295,2.678,320,4.035,331,2.242,334,1.922,352,4.638,354,1.584,383,3.347,390,1.971,398,1.62,400,1.757,437,2.034,645,3.347,658,2.344,692,5.134,748,3.799,822,3.002,824,3.825,834,5.134,886,3.519,887,6.396,888,7.214,889,7.214,890,7.214,891,3.969,892,3.969,893,5.026,894,5.669,895,5.669,896,5.026,897,5.669,898,3.969,899,7.214,900,5.026,901,3.969,902,3.969,903,6.195,904,5.858,905,5.858,906,5.858,907,5.858,908,5.858,909,5.858,910,5.134,911,5.001,912,3.969,913,5.858,914,5.858,915,6.396,916,3.969,917,3.969,918,3.969]],["title/interfaces/ChartConfigInterface.html",[0,0.21,919,3.444]],["body/interfaces/ChartConfigInterface.html",[0,0.266,2,1.196,3,0.083,4,0.083,5,0.083,7,0.453,8,0.79,10,1.059,13,1.209,14,0.699,15,0.008,16,0.093,19,0.006,20,0.006,48,1.773,66,1.542,68,1.432,69,1.126,73,1.704,74,2.369,334,2.941,479,4.855,573,2.838,602,3.275,748,3.825,770,6.828,919,5.52,920,7.096,921,5.121,922,6.472,923,5.927,924,5.776,925,5.776]],["title/interfaces/ChartDifficulty.html",[0,0.21,926,3.241]],["body/interfaces/ChartDifficulty.html",[0,0.347,2,1.254,3,0.087,4,0.087,5,0.087,7,0.475,8,0.814,13,1.224,14,0.573,15,0.008,16,0.131,19,0.006,20,0.006,30,2.01,113,0.64,334,2.551,460,7.585,573,2.668,748,3.422,926,6.089,927,5.373,928,7.585,929,6.643,930,8.181,931,6.06]],["title/directives/ChartDirective.html",[217,1.691,262,1.653]],["body/directives/ChartDirective.html",[3,0.063,4,0.063,5,0.063,7,0.347,8,0.662,10,1.122,13,1.084,14,0.576,15,0.008,16,0.071,19,0.005,20,0.005,30,2.029,32,5.694,33,1.467,34,2.326,35,1.264,46,3.28,48,1.486,51,6.143,55,1.547,66,1.735,68,1.516,69,1.474,73,1.636,74,2.455,94,0.583,96,0.577,113,0.467,173,2.266,217,2.272,261,1.765,262,2.219,263,3.17,288,1.604,343,3.762,455,5.423,479,3.843,525,2.843,681,2.266,814,5.303,815,5.36,820,5.722,932,3.921,933,7.012,934,6.116,935,4.625,936,4.422,937,7.566,938,7.012,939,7.566,940,6.217,941,6.116,942,4.422,943,6.116,944,4.422,945,4.422,946,4.422,947,3.344,948,4.126,949,3.921,950,3.921,951,3.921,952,3.921,953,5.423,954,4.422,955,4.422,956,7.566,957,4.422,958,4.422,959,4.422,960,4.422,961,4.422,962,6.116,963,4.966,964,6.116,965,4.422,966,4.422,967,4.422,968,4.422,969,4.422]],["title/modules/ChartModule.html",[265,1.653,873,3.241]],["body/modules/ChartModule.html",[3,0.085,4,0.085,5,0.085,15,0.008,16,0.095,19,0.006,20,0.006,94,0.706,96,0.776,113,0.627,262,3.434,267,2.059,268,3.04,279,3.288,280,2.629,281,2.314,283,2.894,284,2.155,286,2.759,287,2.894,288,2.155,343,4.57,344,3.201,815,5.567,873,6.569,951,5.266,970,5.266,971,5.94,972,5.266,973,5.94,974,5.94]],["title/injectables/ChartService.html",[398,1.302,815,2.802]],["body/injectables/ChartService.html",[3,0.04,4,0.04,5,0.04,7,0.219,8,0.471,10,1.11,13,1.055,14,0.613,15,0.008,16,0.045,19,0.004,20,0.004,46,3.382,48,1.058,55,1.101,65,3.952,66,1.631,68,1.5,69,1.568,73,1.25,74,2.13,83,5.365,85,2.146,86,1.803,94,0.625,96,0.364,106,2.265,107,1.794,113,0.295,139,0.706,188,1.344,189,0.989,288,1.012,329,3.891,331,1.881,334,2.678,349,3.099,351,2.571,390,1.385,398,1.245,400,1.235,432,3.099,437,1.43,441,1.882,471,1.529,479,4.329,491,1.882,510,3.536,525,5.078,602,1.696,638,2.474,663,2.265,707,2.265,748,1.269,782,2.11,793,2.11,815,2.679,923,3.536,940,4.749,947,2.11,949,2.474,950,2.474,952,2.474,953,3.861,963,2.265,975,2.474,976,5.356,977,5.356,978,5.356,979,5.356,980,4.354,981,4.354,982,4.354,983,2.79,984,5.356,985,4.576,986,4.354,987,4.354,988,2.79,989,4.354,990,3.536,991,4.354,992,4.354,993,4.354,994,4.354,995,5.365,996,4.354,997,2.79,998,4.354,999,2.79,1000,3.861,1001,2.938,1002,4.354,1003,3.861,1004,4.354,1005,6.955,1006,4.354,1007,2.79,1008,4.749,1009,4.354,1010,3.099,1011,4.354,1012,2.79,1013,4.354,1014,3.861,1015,2.79,1016,2.79,1017,2.474,1018,2.474,1019,2.474,1020,5.356,1021,2.474,1022,2.79,1023,2.265,1024,2.79,1025,2.79,1026,2.79,1027,2.79,1028,2.79,1029,2.79,1030,2.474,1031,2.79,1032,2.79,1033,2.474,1034,2.79,1035,3.861,1036,2.79,1037,2.474,1038,2.79,1039,2.79,1040,2.79,1041,4.354,1042,2.79,1043,4.354,1044,4.354,1045,2.79,1046,2.265,1047,2.474,1048,2.79,1049,2.79,1050,2.79,1051,2.79,1052,2.79,1053,2.79,1054,2.79,1055,2.79,1056,2.79,1057,2.79,1058,2.79,1059,2.79,1060,2.79,1061,2.79,1062,2.79,1063,2.79,1064,2.79,1065,2.79,1066,3.099,1067,2.79,1068,2.79,1069,2.79,1070,2.79,1071,2.79,1072,2.79,1073,1.794,1074,2.79,1075,2.79,1076,2.79,1077,2.79,1078,2.79]],["title/injectables/ChartsEffects.html",[398,1.302,1079,3.698]],["body/injectables/ChartsEffects.html",[3,0.043,4,0.043,5,0.043,7,0.233,8,0.495,10,0.546,14,0.349,15,0.008,16,0.048,19,0.004,20,0.004,46,2.781,55,1.158,65,4.227,66,1.428,68,0.738,69,0.58,85,2.222,86,1.867,94,0.668,96,0.389,103,2.417,106,2.417,107,1.913,112,5.52,113,0.314,156,1.781,293,4.027,295,2.008,331,1.423,347,2.943,398,1.309,400,1.317,479,1.631,539,2.008,748,2.083,824,4.562,834,3.258,926,2.118,1003,6.808,1010,4.458,1066,3.258,1073,2.943,1079,3.717,1080,2.639,1081,5.491,1082,5.491,1083,6.264,1084,4.947,1085,5.579,1086,2.251,1087,5.294,1088,2.976,1089,6.808,1090,6.595,1091,4.578,1092,6.358,1093,7.129,1094,5.082,1095,6.264,1096,4.578,1097,2.976,1098,4.578,1099,4.578,1100,2.976,1101,5.579,1102,5.087,1103,5.579,1104,4.578,1105,4.578,1106,4.059,1107,4.578,1108,4.578,1109,4.578,1110,4.059,1111,4.578,1112,4.578,1113,5.579,1114,4.578,1115,5.579,1116,5.554,1117,4.578,1118,2.538,1119,4.578,1120,4.578,1121,4.458,1122,4.53,1123,5.579,1124,5.579,1125,4.578,1126,2.976,1127,4.578,1128,4.53,1129,2.976,1130,2.639,1131,2.008,1132,2.976,1133,2.417,1134,2.417,1135,2.976,1136,2.639,1137,2.417,1138,2.976,1139,2.976,1140,2.976]],["title/interfaces/ChartsState.html",[0,0.21,1141,3.444]],["body/interfaces/ChartsState.html",[0,0.262,2,1.176,3,0.081,4,0.081,5,0.081,7,0.446,8,0.782,10,1.325,14,0.433,15,0.008,16,0.134,19,0.006,20,0.006,94,0.66,107,3.653,139,2.009,156,1.496,329,3.653,331,1.766,334,1.927,384,2.11,539,5.639,929,7.007,1010,6.456,1073,3.653,1087,4.044,1094,5.142,1122,4.614,1133,4.614,1136,5.038,1141,6.007,1142,4.297,1143,6.405,1144,6.45,1145,5.682,1146,4.614,1147,5.038,1148,5.038,1149,5.038,1150,5.682]],["title/components/ConsoleComponent.html",[22,0.924,225,1.691]],["body/components/ConsoleComponent.html",[3,0.041,4,0.041,5,0.041,7,0.224,8,0.481,10,0.815,13,0.907,14,0.506,15,0.008,16,0.046,19,0.004,20,0.004,22,1.104,23,1.063,24,1.773,25,1.171,26,1.569,27,1.171,28,1.171,30,1.473,31,2.477,32,4.42,33,0.949,34,3.42,35,2.549,36,2.821,37,2.352,39,1.73,46,2.857,48,1.079,51,4.982,52,2.791,55,0.724,66,1.644,68,1.101,69,1.294,73,1.432,74,2.155,85,1.575,86,1.324,91,2.037,94,0.453,95,2.164,96,0.374,113,0.302,136,2.538,139,1.377,175,4.827,176,2.037,189,1.015,214,1.115,215,1.818,216,1.818,217,1.063,218,2.511,219,1.171,220,1.171,221,1.115,222,1.171,223,1.063,224,1.171,225,2.279,226,1.171,227,1.039,228,1.171,229,1.063,230,1.171,231,1.015,232,1.171,233,1.063,234,2.487,235,1.171,236,1.039,237,1.115,238,1.171,239,1.063,240,1.171,241,1.063,242,1.171,243,1.115,244,0.97,245,1.171,246,1.063,247,1.171,248,1.039,249,1.171,250,1.612,251,1.818,252,1.063,253,1.171,254,1.063,255,1.171,256,1.039,257,1.171,258,1.039,259,1.171,260,1.063,261,1.142,262,1.039,263,1.142,264,1.171,354,1.142,383,2.623,384,1.65,754,2.997,857,2.164,935,3.359,948,2.997,1084,3.939,1151,2.538,1152,4.442,1153,4.442,1154,4.442,1155,4.442,1156,3.939,1157,5.444,1158,4.442,1159,5.444,1160,5.444,1161,4.827,1162,4.442,1163,6.136,1164,5.444,1165,2.862,1166,4.64,1167,5.444,1168,6.136,1169,4.442,1170,4.442,1171,2.862,1172,2.862,1173,2.862,1174,2.862,1175,2.862,1176,2.862,1177,2.862,1178,5.444,1179,4.442,1180,2.862,1181,2.862,1182,2.862,1183,2.862,1184,2.164,1185,2.324,1186,2.862,1187,2.862,1188,2.862,1189,6.642,1190,2.862,1191,2.862,1192,2.862,1193,2.862,1194,2.862,1195,2.862,1196,2.862,1197,2.862,1198,2.862,1199,2.862,1200,2.862,1201,2.862,1202,2.862,1203,2.862,1204,2.862,1205,2.862,1206,2.862,1207,2.862,1208,2.862,1209,2.862,1210,4.442,1211,2.862,1212,2.862,1213,2.862,1214,4.442,1215,2.862,1216,2.862,1217,2.862,1218,2.862,1219,2.862,1220,2.538,1221,2.862,1222,2.862,1223,2.862,1224,2.538,1225,2.862,1226,2.862,1227,2.862,1228,4.442,1229,2.862,1230,3.607,1231,5.444,1232,2.862,1233,2.862]],["title/modules/ConsoleModule.html",[265,1.653,275,3.073]],["body/modules/ConsoleModule.html",[3,0.083,4,0.083,5,0.083,15,0.008,16,0.093,19,0.006,20,0.006,94,0.737,96,0.756,113,0.612,225,3.476,267,2.008,268,2.993,275,6.072,279,3.236,280,2.563,281,2.256,283,2.848,284,2.102,286,2.716,287,2.848,288,2.102,309,4.155,310,3.291,344,3.151,674,4.155,675,3.291,1184,4.38,1185,4.703,1234,5.135,1235,5.135,1236,5.135,1237,5.792,1238,5.792,1239,7.312]],["title/interfaces/CreateWallet.html",[0,0.21,612,2.588]],["body/interfaces/CreateWallet.html",[0,0.349,2,0.919,3,0.064,4,0.064,5,0.064,7,0.348,8,0.664,10,1.125,12,2.02,13,1.244,14,0.535,15,0.008,16,0.135,17,2.622,19,0.005,20,0.005,35,1.753,88,2.628,94,0.584,113,0.648,114,4.36,139,1.123,156,1.169,189,2.175,331,2.185,348,2.02,350,2.732,384,1.649,471,2.434,493,1.649,551,3.486,553,2.732,554,3.944,555,4.741,556,2.996,557,2.996,560,2.855,561,3.248,562,2.732,563,3.486,564,2.996,565,2.732,566,3.773,567,2.732,568,2.732,569,2.855,570,2.996,571,2.996,572,2.996,573,2.917,574,2.996,575,2.622,576,2.855,577,2.523,578,3.722,579,3.722,580,3.773,581,2.855,582,2.622,583,2.732,584,2.732,585,2.732,586,2.732,587,2.622,588,2.732,589,2.622,590,2.622,591,2.622,592,2.352,593,2.622,594,2.523,595,2.622,596,2.732,597,2.622,598,2.732,599,2.732,600,3.722,601,2.732,602,1.73,603,2.732,604,2.996,605,2.996,606,2.855,607,2.622,608,2.523,609,2.434,610,3.95,611,3.521,612,3.486,613,2.205,614,2.855]],["title/injectables/CryptService.html",[398,1.302,684,3.073]],["body/injectables/CryptService.html",[3,0.032,4,0.032,5,0.032,7,0.173,10,1.213,11,1.74,13,1.231,14,0.504,15,0.008,16,0.035,17,2.132,19,0.003,20,0.003,41,1.516,46,2.274,48,0.877,55,0.913,66,1.397,68,1.64,69,1.345,73,1.793,94,0.381,96,0.288,113,0.233,139,1.339,156,1.742,188,1.064,189,1.281,244,1.554,331,0.686,334,2.34,339,3.202,347,2.321,351,4.34,383,2.132,388,2.731,390,1.096,398,1.032,399,4.74,400,0.977,406,3.091,412,2.901,414,2.706,436,1.358,437,1.131,453,2.57,470,3.202,479,1.979,480,4.004,481,2.731,538,2.932,541,1.669,594,2.052,595,1.303,602,2.992,611,3.162,631,3.447,645,2.132,647,2.932,658,2.706,681,3.212,682,3.915,684,2.436,691,4.708,693,2.932,708,3.202,709,4.694,729,4.176,731,3.202,748,1.004,900,3.202,910,1.571,948,5.078,995,3.202,1030,3.202,1037,1.957,1161,3.202,1220,1.957,1240,1.957,1241,3.611,1242,3.611,1243,3.611,1244,3.611,1245,3.611,1246,3.611,1247,2.207,1248,2.207,1249,3.611,1250,2.207,1251,4.582,1252,3.611,1253,5.294,1254,3.465,1255,3.611,1256,2.207,1257,3.611,1258,3.611,1259,3.611,1260,3.611,1261,3.611,1262,2.932,1263,6.268,1264,3.611,1265,3.611,1266,3.611,1267,3.611,1268,3.611,1269,3.611,1270,3.611,1271,3.611,1272,3.611,1273,3.611,1274,3.611,1275,3.611,1276,3.611,1277,3.611,1278,3.611,1279,3.611,1280,3.611,1281,3.611,1282,3.611,1283,6.268,1284,2.207,1285,3.202,1286,2.932,1287,3.611,1288,3.202,1289,4.582,1290,3.611,1291,3.611,1292,3.611,1293,3.611,1294,3.611,1295,3.611,1296,5.294,1297,3.611,1298,2.207,1299,3.202,1300,3.611,1301,3.611,1302,3.611,1303,3.611,1304,2.932,1305,3.611,1306,3.611,1307,3.611,1308,3.611,1309,3.202,1310,4.063,1311,3.611,1312,2.207,1313,2.731,1314,3.611,1315,3.611,1316,3.465,1317,3.611,1318,3.611,1319,3.202,1320,3.611,1321,2.207,1322,3.611,1323,2.932,1324,3.611,1325,3.611,1326,3.611,1327,3.611,1328,2.207,1329,2.207,1330,2.207,1331,2.207,1332,2.207,1333,2.207,1334,2.207,1335,1.792,1336,2.207,1337,1.957,1338,2.207,1339,1.957,1340,2.207,1341,2.207,1342,2.207,1343,1.792,1344,2.207,1345,2.207,1346,2.207,1347,2.207,1348,2.207,1349,2.207,1350,2.207,1351,2.207,1352,2.207,1353,2.207,1354,2.207,1355,2.207,1356,2.207,1357,3.611,1358,2.207,1359,2.207,1360,5.838,1361,3.611,1362,2.207,1363,2.207,1364,2.207,1365,2.207,1366,4.741,1367,2.207,1368,2.207,1369,2.207,1370,3.611,1371,2.207,1372,4.299,1373,2.207,1374,2.207,1375,2.207,1376,2.207,1377,2.207,1378,2.207,1379,2.207,1380,2.207,1381,2.207,1382,2.207,1383,2.946]],["title/modules/DataModule.html",[265,1.653,276,3.241]],["body/modules/DataModule.html",[3,0.087,4,0.087,5,0.087,15,0.008,16,0.097,19,0.006,20,0.006,33,2.01,65,3.444,94,0.77,96,0.791,107,4.836,113,0.64,267,2.101,276,5.354,283,2.361,284,2.199,286,2.794,430,3.728,431,4.088,530,5.689,546,5.689,547,4.313,548,3.728,1131,4.088,1384,6.06,1385,6.06,1386,6.06,1387,6.06,1388,6.06,1389,6.06,1390,6.67,1391,6.06,1392,5.373,1393,4.921,1394,6.06,1395,6.06,1396,6.06,1397,6.06,1398,5.373,1399,6.06,1400,6.06,1401,6.06,1402,6.06,1403,6.06]],["title/interfaces/Destination.html",[0,0.21,561,2.412]],["body/interfaces/Destination.html",[0,0.293,2,1.315,3,0.091,4,0.091,5,0.091,7,0.498,8,0.838,9,4.812,13,0.868,14,0.59,15,0.008,16,0.102,19,0.006,20,0.006,41,2.668,94,0.528,551,3.611,561,4.606,573,2.963,578,3.365,579,3.365,1014,5.634,1404,5.634,1405,6.016,1406,5.634,1407,5.16]],["title/interfaces/DialogData.html",[0,0.21,1408,3.444]],["body/interfaces/DialogData.html",[0,0.271,2,1.216,3,0.084,4,0.084,5,0.084,7,0.461,8,0.798,13,1.214,14,0.562,15,0.008,16,0.119,19,0.006,20,0.006,22,1.497,34,2.233,35,1.679,36,2.083,39,2.288,41,3.097,55,1.485,69,1.649,74,1.906,94,0.613,96,0.767,113,0.62,236,2.131,237,2.288,334,1.991,947,4.441,1408,6.099,1409,4.769,1410,5.74,1411,4.769,1412,7.501,1413,5.207,1414,6.541,1415,4.441,1416,5.207,1417,5.207,1418,5.207,1419,5.207,1420,5.207]],["title/injectables/Effects.html",[398,1.302,548,2.802]],["body/injectables/Effects.html",[3,0.094,4,0.094,5,0.094,10,1.206,14,0.5,15,0.008,16,0.106,19,0.006,20,0.006,55,1.663,66,1.388,68,1.629,69,1.281,94,0.657,96,0.858,113,0.694,354,2.624,398,2.26,400,2.91,548,4.863,1086,4.971,1087,6.506,1131,4.435,1421,5.829,1422,6.574]],["title/injectables/Effects-1.html",[188,1.827,398,1.083,548,2.332]],["body/injectables/Effects-1.html",[3,0.094,4,0.094,5,0.094,10,1.206,14,0.5,15,0.008,16,0.106,19,0.006,20,0.006,55,1.663,66,1.388,68,1.629,69,1.281,94,0.657,96,0.858,113,0.694,354,2.624,398,2.26,400,2.91,548,4.863,1086,4.971,1087,6.506,1131,4.435,1423,5.829,1424,6.574]],["title/pipes/EffortPipe.html",[1118,2.072,1425,3.241]],["body/pipes/EffortPipe.html",[3,0.085,4,0.085,5,0.085,10,1.083,13,0.806,14,0.45,15,0.008,16,0.095,19,0.006,20,0.006,30,1.959,33,1.959,48,1.435,55,1.494,66,1.247,68,1.464,69,1.576,73,1.378,86,2.206,88,2.804,94,0.491,96,0.771,113,0.624,139,1.872,156,1.555,176,4.204,189,2.868,493,2.749,1118,3.368,1224,5.237,1425,5.269,1426,3.633,1427,5.237,1428,7.403,1429,3.797,1430,5.598,1431,7.516,1432,5.906,1433,3.985,1434,4.759,1435,3.985,1436,5.906,1437,5.906,1438,5.906,1439,5.237]],["title/pipes/EscapeHtmlPipe.html",[1118,2.072,1440,3.241]],["body/pipes/EscapeHtmlPipe.html",[3,0.089,4,0.089,5,0.089,10,1.145,15,0.008,16,0.1,19,0.006,20,0.006,30,2.07,33,2.07,48,1.516,66,1.318,68,1.547,69,1.615,73,1.456,94,0.637,96,0.815,100,4.21,101,4.012,113,0.659,148,3.685,156,1.643,354,2.491,493,2.318,1118,3.485,1426,3.839,1429,4.012,1434,4.925,1435,4.21,1440,5.452,1441,5.533,1442,7.66,1443,6.22,1444,6.241,1445,6.792,1446,5.533,1447,6.241]],["title/interfaces/FileSystemInterface.html",[0,0.21,1448,3.444]],["body/interfaces/FileSystemInterface.html",[0,0.166,2,0.745,3,0.052,4,0.052,5,0.052,7,0.282,10,1.407,11,3.697,13,1.11,14,0.659,15,0.008,16,0.058,19,0.004,20,0.004,48,1.283,66,1.62,68,1.902,69,1.495,73,1.898,74,2.237,86,2.054,88,2.39,156,2.021,334,2.758,351,5.159,379,3.955,382,7.025,388,3.995,392,4.651,414,3.119,450,4.684,610,4.528,629,3.995,692,3.76,896,6.112,1448,3.995,1449,7.03,1450,3.192,1451,4.29,1452,4.29,1453,4.684,1454,5.597,1455,5.283,1456,5.597,1457,3.6,1458,5.283,1459,6.157,1460,5.283,1461,6.604,1462,3.6,1463,5.283,1464,5.283,1465,3.6,1466,4.29,1467,5.283,1468,3.6,1469,6.112,1470,5.283,1471,3.6,1472,5.283,1473,3.6,1474,5.283,1475,3.25,1476,3.995]],["title/injectables/FileSystemService.html",[398,1.302,412,2.496]],["body/injectables/FileSystemService.html",[3,0.052,4,0.052,5,0.117,7,0.285,8,0.576,10,1.412,11,1.753,13,1.222,14,0.633,15,0.008,16,0.058,19,0.004,20,0.004,41,2.643,48,1.293,55,0.92,66,1.723,68,1.909,69,1.501,73,2.023,86,1.586,94,0.443,96,0.475,113,0.384,156,2.028,334,2.5,351,4.547,354,1.452,379,2.356,390,1.807,392,3.591,398,1.522,400,1.61,403,4.322,408,4.026,412,2.917,414,4.697,437,1.864,592,1.927,610,3.44,629,4.026,663,2.954,682,4.221,705,4.72,729,3.025,1254,4.026,1313,4.026,1451,5.625,1452,4.322,1454,4.322,1456,4.322,1459,4.48,1461,5.625,1477,6.756,1478,3.226,1479,5.323,1480,5.323,1481,5.323,1482,3.638,1483,5.239,1484,5.323,1485,5.323,1486,4.72,1487,3.638,1488,7.701,1489,5.323,1490,3.638,1491,4.72,1492,3.638,1493,5.323,1494,3.638,1495,5.323,1496,5.323,1497,3.638,1498,3.638,1499,3.638,1500,5.323,1501,6.295,1502,3.638,1503,3.638,1504,2.954,1505,3.638,1506,3.638,1507,3.638,1508,3.638,1509,3.638,1510,3.638]],["title/injectables/FileSystemWebService.html",[398,1.302,1483,3.444]],["body/injectables/FileSystemWebService.html",[3,0.051,4,0.051,5,0.051,7,0.281,8,0.57,10,1.453,13,0.49,14,0.558,15,0.008,16,0.058,19,0.004,20,0.004,30,1.19,41,3.791,46,2.433,48,1.28,55,0.907,66,1.716,68,1.963,69,1.544,73,1.789,74,2.027,85,1.273,86,1.069,88,1.827,94,0.519,96,0.469,113,0.379,139,1.579,148,3.687,156,1.812,293,4.424,295,2.421,331,1.941,334,2.486,354,1.432,379,3.244,390,1.782,392,3.555,398,1.506,400,1.588,437,1.839,493,1.333,610,3.641,682,4.544,692,3.75,729,3.549,748,3.486,822,2.714,824,3.555,834,4.445,903,5.588,904,5.071,905,5.071,906,5.071,907,5.071,908,5.071,909,4.279,910,3.75,911,2.714,913,5.071,914,5.071,1254,4.723,1448,3.985,1451,4.279,1452,4.279,1453,4.672,1454,4.279,1456,2.914,1459,5.901,1461,5.071,1477,6.733,1483,3.985,1486,4.672,1491,4.672,1511,3.181,1512,5.537,1513,5.269,1514,3.588,1515,5.269,1516,3.588,1517,3.588,1518,5.269,1519,3.588,1520,5.269,1521,3.588,1522,5.269,1523,3.588,1524,5.269,1525,3.588,1526,3.588,1527,3.588,1528,3.588,1529,3.588,1530,3.181,1531,3.588,1532,3.588]],["title/interfaces/GetAddressBookOut.html",[0,0.21,1533,3.444]],["body/interfaces/GetAddressBookOut.html",[0,0.307,2,1.378,3,0.095,4,0.095,5,0.095,7,0.625,8,0.862,9,3.412,11,3.208,12,3.029,13,1.164,14,0.649,15,0.008,16,0.107,19,0.007,20,0.007,573,2.361,1533,6.025,1534,5.903,1535,7.833,1536,6.469]],["title/interfaces/GetBulkPaymentsIn.html",[0,0.21,1537,3.444]],["body/interfaces/GetBulkPaymentsIn.html",[0,0.298,2,1.34,3,0.093,4,0.093,5,0.093,7,0.508,8,0.848,13,1.195,14,0.596,15,0.008,16,0.104,19,0.006,20,0.006,173,3.317,347,4.161,573,2.987,578,3.428,579,3.428,1319,5.739,1537,5.923,1538,5.739,1539,8.752,1540,8.752,1541,5.739,1542,6.472,1543,5.255]],["title/interfaces/GetBulkPaymentsOut.html",[0,0.21,1544,3.444]],["body/interfaces/GetBulkPaymentsOut.html",[0,0.315,2,1.414,3,0.098,4,0.098,5,0.098,7,0.536,8,0.876,14,0.52,15,0.007,16,0.11,19,0.007,20,0.007,94,0.568,1543,7.235,1544,6.118,1545,6.057,1546,5.728,1547,6.057]],["title/interfaces/GetPaymentsIn.html",[0,0.21,1548,3.444]],["body/interfaces/GetPaymentsIn.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,12,4.066,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,1548,6.153,1549,6.117]],["title/interfaces/GetPaymentsOut.html",[0,0.21,1550,3.444]],["body/interfaces/GetPaymentsOut.html",[0,0.315,2,1.414,3,0.098,4,0.098,5,0.098,7,0.536,8,0.876,14,0.52,15,0.007,16,0.11,19,0.007,20,0.007,94,0.568,1543,7.235,1546,5.728,1547,6.057,1550,6.118,1551,6.057]],["title/interfaces/GetTransfersIn.html",[0,0.21,1552,3.073]],["body/interfaces/GetTransfersIn.html",[0,0.225,2,1.009,3,0.07,4,0.07,5,0.07,7,0.382,8,0.707,10,1.708,11,2.349,14,0.668,15,0.008,16,0.078,19,0.005,20,0.005,88,3.251,102,5.795,173,4.038,177,5.307,234,1.653,281,3.295,573,3,846,6.02,1121,3.469,1475,2.999,1552,4.41,1553,4.322,1554,8.036,1555,6.02,1556,6.986,1557,6.986,1558,6.986,1559,6.396,1560,6.536,1561,6.536]],["title/interfaces/GetTransfersOut.html",[0,0.21,1562,3.241]],["body/interfaces/GetTransfersOut.html",[0,0.268,2,1.206,3,0.083,4,0.083,5,0.083,7,0.457,8,0.794,10,1.699,14,0.642,15,0.008,16,0.094,19,0.006,20,0.006,88,3.014,94,0.61,281,3.285,561,3.886,562,3.583,846,6.003,1555,6.003,1559,6.379,1562,5.223,1563,5.164,1564,6.72,1565,5.824]],["title/pipes/HashRatePipe.html",[1118,2.072,1566,3.241]],["body/pipes/HashRatePipe.html",[3,0.075,4,0.075,5,0.075,10,0.956,13,1.105,14,0.397,15,0.008,16,0.084,19,0.006,20,0.006,30,1.73,33,1.73,48,1.267,66,1.101,68,1.293,69,1.486,73,1.217,85,1.849,86,1.554,88,2.644,94,0.568,96,0.681,100,3.518,101,3.353,113,0.551,139,1.319,148,5.09,156,1.8,189,2.87,354,2.082,493,2.539,494,3.944,573,2.704,857,5.169,1118,3.109,1337,4.624,1383,3.353,1407,4.234,1426,3.208,1429,3.353,1433,3.518,1434,4.394,1435,3.518,1439,4.624,1443,5.55,1445,6.06,1446,4.624,1566,4.865,1567,4.624,1568,5.55,1569,7.175,1570,5.215,1571,5.215,1572,5.215,1573,4.624,1574,5.215,1575,3.944,1576,6.835,1577,5.215]],["title/interfaces/Height.html",[0,0.21,173,2.334]],["body/interfaces/Height.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,173,4.737,573,3.069,1578,6.117]],["title/interfaces/IncomingTransfersIn.html",[0,0.21,1579,3.444]],["body/interfaces/IncomingTransfersIn.html",[0,0.309,2,1.387,3,0.096,4,0.096,5,0.096,7,0.526,8,0.865,14,0.51,15,0.008,16,0.108,19,0.007,20,0.007,1579,6.048,1580,5.941,1581,8.853,1582,6.941,1583,8.548]],["title/interfaces/IncomingTransfersOut.html",[0,0.21,1584,3.444]],["body/interfaces/IncomingTransfersOut.html",[0,0.264,2,1.186,3,0.082,4,0.082,5,0.082,7,0.449,8,0.786,13,1.145,14,0.659,15,0.008,16,0.092,19,0.006,20,0.006,88,2.907,471,3.14,573,3.252,578,4.222,579,4.222,580,3.524,591,4.95,600,3.034,645,3.382,1262,5.897,1323,4.652,1405,5.656,1554,5.079,1584,5.492,1585,5.079,1586,8.384,1587,6.808,1588,8.384,1589,5.728,1590,5.728,1591,5.728,1592,5.079,1593,5.728]],["title/interfaces/IntegratedAddress.html",[0,0.21,1594,3.444]],["body/interfaces/IntegratedAddress.html",[0,0.306,2,1.374,3,0.095,4,0.095,5,0.095,7,0.521,8,0.861,9,4.625,12,4.015,13,1.162,14,0.605,15,0.007,16,0.107,19,0.006,20,0.006,94,0.552,1594,6.013,1595,5.884,1596,8.825]],["title/classes/LTHN.html",[35,1.302,113,0.481]],["body/classes/LTHN.html",[0,0.352,3,0.065,4,0.065,5,0.065,7,0.355,8,0.673,10,1.14,12,2.059,13,1.178,15,0.008,16,0.136,17,2.673,19,0.005,20,0.005,35,2.029,66,0.956,85,1.605,86,1.349,88,2.65,94,0.59,113,0.656,114,3.407,139,1.145,156,1.192,189,2.204,331,2.207,348,2.059,350,2.785,384,1.681,471,2.481,493,1.681,551,3.532,552,3.676,553,2.785,554,4.564,555,5.156,556,3.054,557,3.054,560,2.91,561,3.292,562,2.785,563,3.532,564,3.054,565,2.785,566,3.824,567,2.785,568,2.785,569,2.91,570,4.789,571,3.054,572,3.054,573,2.934,574,3.054,575,2.673,576,2.91,577,2.572,578,3.759,579,3.759,580,3.824,581,2.91,582,2.673,583,2.785,584,2.785,585,2.785,586,2.785,587,2.673,588,2.785,589,2.673,590,2.673,591,2.673,592,2.397,593,2.673,594,2.572,595,2.673,596,2.785,597,2.673,598,2.785,599,2.785,600,3.759,601,2.785,602,1.763,603,2.785,604,3.054,605,3.054,606,2.91,607,2.673,608,2.572,609,2.481,610,3.087,611,2.751,612,2.572,613,2.248,614,2.91,1597,4.527]],["title/interfaces/LogEntry.html",[0,0.21,1598,3.444]],["body/interfaces/LogEntry.html",[0,0.364,2,1.356,3,0.094,4,0.094,5,0.094,7,0.514,8,0.854,13,1.261,14,0.601,15,0.008,16,0.127,19,0.006,20,0.006,511,4.213,1598,5.968,1599,5.321,1600,7.136,1601,6.646,1602,4.664]],["title/components/LoginComponent.html",[22,0.924,227,1.653]],["body/components/LoginComponent.html",[3,0.053,4,0.053,5,0.053,7,0.291,8,0.584,10,0.68,13,0.506,14,0.411,15,0.008,16,0.06,19,0.004,20,0.004,22,1.291,23,1.377,24,2.155,25,1.518,27,1.518,28,1.518,33,1.23,34,3.525,35,2.634,36,2.908,39,2.103,46,1.445,48,1.311,55,0.938,57,5.145,66,1.637,68,0.919,69,1.362,73,0.866,85,2.479,86,2.083,94,0.581,96,0.484,99,1.445,113,0.392,214,1.445,215,2.209,216,2.209,217,1.377,218,2.861,219,1.518,220,1.518,221,1.445,222,1.518,223,1.377,224,1.518,225,1.377,226,1.518,227,2.537,228,1.518,229,1.377,230,1.518,231,1.315,232,1.518,233,1.377,234,2.519,235,1.518,236,1.346,237,1.445,238,1.518,239,1.377,240,1.518,241,1.377,242,1.518,243,1.445,244,1.258,245,1.518,246,1.377,247,1.518,248,1.346,249,1.518,250,1.959,251,2.209,252,1.377,253,1.518,254,1.377,255,1.518,256,1.346,257,1.518,258,1.346,259,1.518,260,1.377,261,1.48,262,1.346,263,1.48,264,1.518,331,2.41,354,1.48,380,5.696,491,2.502,611,3.288,620,4.985,631,4.387,659,3.289,662,3.289,677,2.033,682,3.489,729,2.108,1073,4.092,1555,2.64,1603,3.289,1604,5.399,1605,5.169,1606,6.991,1607,3.709,1608,5.399,1609,3.709,1610,5.145,1611,3.709,1612,3.709,1613,3.709,1614,3.709,1615,2.64,1616,3.012,1617,3.709,1618,3.709,1619,5.399]],["title/components/LogsComponent.html",[22,0.924,229,1.691]],["body/components/LogsComponent.html",[3,0.064,4,0.064,5,0.064,7,0.35,15,0.007,16,0.072,19,0.005,20,0.005,22,1.429,23,1.656,24,2.456,25,1.825,26,2.444,27,1.825,28,1.825,30,2.04,31,3.204,33,1.479,34,3.588,35,2.685,36,3.133,37,3.258,39,2.396,48,1.495,52,3.454,55,1.781,66,1.299,69,1.373,73,1.041,74,1.996,94,0.371,96,0.582,113,0.471,214,1.737,215,2.518,216,2.518,217,1.656,218,3.108,219,1.825,220,1.825,221,1.737,222,1.825,223,1.656,224,1.825,225,1.656,226,1.825,227,1.618,228,1.825,229,2.82,230,1.825,231,1.582,232,1.825,233,1.656,234,2.701,235,1.825,236,1.618,237,1.737,238,1.825,239,1.656,240,1.825,241,1.656,242,1.825,243,1.737,244,1.512,245,1.825,246,1.656,247,1.825,248,1.618,249,1.825,250,2.232,251,2.518,252,1.656,253,1.825,254,1.656,255,1.825,256,1.618,257,1.825,258,1.618,259,1.825,260,1.656,261,1.78,262,1.618,263,1.78,264,1.825,511,3.955,1620,3.954,1621,7.043,1622,6.152,1623,4.459,1624,4.459]],["title/modules/LogsModule.html",[265,1.653,1625,3.241]],["body/modules/LogsModule.html",[3,0.085,4,0.085,5,0.085,15,0.008,16,0.095,19,0.006,20,0.006,22,1.202,94,0.705,96,0.773,99,2.307,113,0.625,139,1.498,229,3.501,267,2.054,268,3.035,279,3.282,280,2.621,281,2.307,283,2.889,284,2.149,286,2.754,287,2.889,288,2.149,344,3.196,370,3.573,371,3.583,379,2.621,511,3.808,880,3.035,1625,6.437,1626,5.252,1627,5.252,1628,5.252,1629,5.923,1630,5.923]],["title/interfaces/LogsState.html",[0,0.21,1602,3.241]],["body/interfaces/LogsState.html",[0,0.368,2,1.387,3,0.096,4,0.096,5,0.096,7,0.526,8,0.865,13,1.235,14,0.51,15,0.008,16,0.128,19,0.007,20,0.007,511,5.692,1598,5.067,1599,5.44,1600,5.44,1601,5.067,1602,5.691]],["title/interfaces/MakeIntegratedAddressIn.html",[0,0.21,1631,3.444]],["body/interfaces/MakeIntegratedAddressIn.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,12,4.066,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,1631,6.153,1632,6.117]],["title/interfaces/MakeUriIn.html",[0,0.21,563,2.588]],["body/interfaces/MakeUriIn.html",[0,0.256,2,1.151,3,0.08,4,0.08,5,0.08,7,0.436,8,0.771,9,4.629,10,1.687,12,3.772,13,1.271,14,0.653,15,0.008,16,0.089,19,0.006,20,0.006,69,1.084,94,0.462,551,3.16,563,4.049,567,3.421,568,3.421,573,2.789,597,3.284,681,2.85,1286,4.516,1405,5.784,1407,4.516,1546,4.581,1633,4.931,1634,8.292,1635,8.292,1636,4.931,1637,4.931,1638,5.561,1639,5.561,1640,5.561,1641,5.561,1642,5.561]],["title/pipes/MarkdownPipe.html",[1118,2.072,1643,3.241]],["body/pipes/MarkdownPipe.html",[3,0.088,4,0.088,5,0.088,10,1.128,14,0.468,15,0.008,16,0.099,19,0.006,20,0.006,30,2.039,33,2.039,48,1.494,66,1.299,68,1.524,69,1.605,73,1.435,86,2.454,94,0.631,96,0.803,113,0.649,156,1.999,189,2.181,1118,3.453,1426,3.783,1429,3.953,1430,5.741,1433,4.149,1434,4.88,1643,5.403,1644,5.452,1645,7.591,1646,8.234,1647,6.149,1648,6.73,1649,5.452,1650,6.149]],["title/components/ModalComponent.html",[22,0.924,231,1.615]],["body/components/ModalComponent.html",[3,0.048,4,0.048,5,0.048,7,0.262,8,0.541,10,0.613,14,0.456,15,0.008,16,0.054,19,0.004,20,0.004,22,1.215,23,1.241,24,1.995,25,1.368,27,1.368,28,1.368,30,1.658,31,2.724,33,1.108,34,3.485,35,2.58,36,2.823,39,1.947,41,1.403,46,2.909,48,1.214,52,3.024,55,0.845,66,1.635,68,0.828,69,1.295,73,1.551,74,1.622,91,2.378,94,0.498,95,2.527,96,0.436,113,0.353,139,1.264,156,0.88,214,1.302,215,2.046,216,2.046,217,1.241,218,2.72,219,1.368,220,1.368,221,1.302,222,1.368,223,1.241,224,1.368,225,1.241,226,1.368,227,1.213,228,1.368,229,1.241,230,1.368,231,2.357,232,1.368,233,1.241,234,2.413,235,1.368,236,1.213,237,1.302,238,1.368,239,1.241,240,1.368,241,1.241,242,1.368,243,1.302,244,1.133,245,1.368,246,1.241,247,1.368,248,1.213,249,1.368,250,1.814,251,2.046,252,1.241,253,1.368,254,1.241,255,1.368,256,1.213,257,1.368,258,1.213,259,1.368,260,1.241,261,1.334,262,1.213,263,1.334,264,1.368,285,2.527,331,1.039,354,1.334,390,1.66,398,0.955,441,4.484,658,4.409,682,4.093,729,3.777,948,3.373,1184,2.527,1466,4.059,1651,2.963,1652,4.999,1653,4.999,1654,5.989,1655,5.989,1656,6.647,1657,6.647,1658,5.027,1659,3.342,1660,6.647,1661,4.999,1662,4.999,1663,3.342,1664,3.342,1665,3.342,1666,3.342,1667,5.989,1668,4.432,1669,3.342,1670,5.989,1671,2.963,1672,4.262,1673,2.963,1674,3.342,1675,3.342,1676,3.342,1677,3.342,1678,3.342,1679,3.342,1680,4.999,1681,4.999,1682,3.342,1683,4.999,1684,4.999,1685,3.342,1686,4.999,1687,4.999,1688,4.999]],["title/interfaces/ModalConfig.html",[0,0.21,1672,3.241]],["body/interfaces/ModalConfig.html",[0,0.219,2,0.986,3,0.068,4,0.068,5,0.068,7,0.374,8,0.697,10,1.725,13,1.209,14,0.555,15,0.008,16,0.077,19,0.005,20,0.005,48,1.563,66,1.845,73,2.039,88,3.22,658,5.158,1672,4.581,1689,4.224,1690,7.805,1691,7.805,1692,6.921,1693,7.805,1694,7.805,1695,7.805,1696,7.805,1697,7.805,1698,7.805,1699,7.805,1700,7.805,1701,4.764,1702,4.764,1703,4.764,1704,4.764,1705,4.764,1706,4.764,1707,4.764,1708,4.764]],["title/modules/ModalModule.html",[265,1.653,1709,3.241]],["body/modules/ModalModule.html",[3,0.087,4,0.087,5,0.087,15,0.008,16,0.098,19,0.006,20,0.006,94,0.682,96,0.796,113,0.644,231,3.342,267,2.113,268,3.09,279,3.342,280,2.698,281,2.374,283,2.941,284,2.212,286,2.804,287,2.941,288,2.212,328,4.61,344,3.253,1709,6.477,1710,5.404,1711,5.404,1712,5.404,1713,6.095]],["title/injectables/NetworkHashrateChart.html",[398,1.302,985,3.444]],["body/injectables/NetworkHashrateChart.html",[3,0.037,4,0.084,5,0.037,7,0.403,8,0.448,10,0.759,13,0.797,14,0.576,15,0.008,16,0.042,19,0.003,20,0.003,30,0.867,41,3.576,48,1.006,60,2.444,66,1.637,68,1.026,69,0.807,73,1.363,74,1.667,85,2.4,86,2.112,94,0.486,96,0.342,113,0.276,139,1.047,156,1.09,188,1.994,189,2.932,204,4.554,211,5.642,214,1.612,315,1.486,329,1.682,334,2.628,384,2.73,398,1.183,400,1.158,437,1.34,441,2.793,479,3.201,493,2.879,525,1.682,554,2.661,602,2.001,606,1.682,660,2.124,707,2.124,748,1.883,765,5.862,768,3.67,769,5.178,770,4.742,772,2.319,774,2.319,777,3.67,780,2.319,781,2.319,782,3.13,783,3.67,784,2.319,785,2.319,786,2.319,787,2.319,788,2.124,789,2.319,790,2.319,791,2.319,792,2.319,793,3.885,794,2.319,795,4.554,796,2.319,797,3.67,798,2.319,799,3.67,800,4.171,801,5.178,802,4.554,803,4.554,804,3.67,805,5.178,806,3.67,807,3.67,862,3.67,919,3.13,922,3.67,923,3.361,963,3.361,985,3.13,1010,2.946,1035,3.67,1047,4.554,1133,2.124,1335,3.361,1383,4.558,1568,3.361,1714,5.178,1715,2.319,1716,5.137,1717,5.137,1718,7.089,1719,2.615,1720,2.615,1721,2.615,1722,2.615,1723,4.139,1724,5.137,1725,5.137,1726,2.615,1727,2.615,1728,4.139,1729,2.615,1730,4.139,1731,2.615,1732,2.615,1733,2.615,1734,2.615,1735,2.615,1736,2.615,1737,2.615,1738,2.615,1739,2.615,1740,2.615,1741,2.615,1742,4.139,1743,2.615,1744,2.615,1745,3.67,1746,2.615,1747,2.615,1748,4.139,1749,2.319,1750,2.615,1751,2.615,1752,3.361,1753,3.361,1754,4.139,1755,4.139,1756,4.139,1757,4.139,1758,4.139,1759,2.615,1760,2.615,1761,4.139,1762,4.139,1763,4.139,1764,4.139,1765,2.615,1766,4.139,1767,2.615,1768,2.615,1769,4.139,1770,2.615,1771,2.615,1772,2.124,1773,2.615,1774,2.615,1775,2.615,1776,2.615,1777,2.615,1778,2.615,1779,2.615,1780,2.615,1781,2.319,1782,2.615,1783,2.615,1784,2.615,1785,2.615,1786,2.615,1787,2.615,1788,2.615,1789,2.615,1790,2.615,1791,2.615,1792,2.615]],["title/components/NewComponent.html",[22,0.924,233,1.691]],["body/components/NewComponent.html",[3,0.049,4,0.049,5,0.049,7,0.269,8,0.551,10,0.628,14,0.261,15,0.008,16,0.055,19,0.004,20,0.004,22,1.233,23,1.272,24,2.032,25,1.401,27,1.401,28,1.401,30,1.688,31,2.764,33,1.136,34,3.495,35,2.609,36,2.843,39,1.983,48,1.237,52,3.06,55,0.866,63,5.127,66,1.591,68,0.849,69,1.311,73,1.188,74,1.972,85,2.155,86,1.811,94,0.505,96,0.447,113,0.362,114,1.877,214,1.334,215,2.083,216,2.083,217,1.272,218,2.753,219,1.401,220,1.401,221,1.334,222,1.401,223,1.272,224,1.401,225,1.272,226,1.401,227,1.242,228,1.401,229,1.272,230,1.401,231,1.214,232,1.401,233,2.498,234,2.934,235,1.401,236,1.242,237,1.334,238,1.401,239,1.272,240,1.401,241,1.272,242,1.401,243,1.334,244,1.161,245,1.401,246,1.272,247,1.401,248,1.242,249,1.401,250,1.847,251,2.083,252,1.272,253,1.401,254,1.272,255,1.401,256,1.242,257,1.401,258,1.242,259,1.401,260,1.272,261,1.367,262,1.242,263,1.367,264,1.401,331,2.492,353,3.972,354,1.367,610,1.7,611,3.548,612,3.823,677,1.877,1610,5.016,1615,3.623,1793,3.036,1794,5.09,1795,5.387,1796,6.076,1797,2.437,1798,5.09,1799,3.424,1800,3.424,1801,3.424,1802,3.424,1803,2.437,1804,3.424,1805,3.424,1806,3.424,1807,3.424,1808,3.424,1809,5.09,1810,4.133,1811,5.462,1812,4.133,1813,5.09]],["title/components/NoDaemonRunningDialog.html",[22,0.924,236,1.653]],["body/components/NoDaemonRunningDialog.html",[0,0.172,3,0.053,4,0.053,5,0.053,7,0.293,8,0.587,10,0.685,13,0.741,14,0.487,15,0.008,16,0.087,19,0.004,20,0.004,22,1.297,23,1.387,24,2.166,25,1.529,27,1.529,28,1.529,33,1.239,34,3.528,35,2.636,36,3.145,39,2.114,41,3.263,48,1.318,55,1.372,66,1.481,68,0.926,69,1.452,73,0.872,74,1.761,91,2.659,94,0.451,96,0.488,113,0.394,214,1.455,215,2.221,216,2.221,217,1.387,218,2.871,219,1.529,220,1.529,221,1.455,222,1.529,223,1.387,224,1.529,225,1.387,226,1.529,227,1.355,228,1.529,229,1.387,230,1.529,231,1.325,232,1.529,233,1.387,234,2.526,235,1.529,236,2.545,237,2.489,238,1.529,239,1.387,240,1.529,241,1.387,242,1.529,243,1.455,244,1.267,245,1.529,246,1.387,247,1.529,248,1.355,249,1.529,250,1.969,251,2.221,252,1.387,253,1.529,254,1.387,255,1.529,256,1.355,257,1.529,258,1.355,259,1.529,260,1.387,261,1.491,262,1.355,263,1.491,264,1.529,334,2.526,348,2.469,480,5.305,694,4.811,893,4.811,947,2.825,1285,4.811,1408,5.634,1409,6.05,1410,5.961,1411,3.033,1412,3.312,1413,3.312,1414,6.606,1415,2.825,1416,4.811,1417,6.219,1418,4.811,1419,6.219,1420,3.312,1814,3.735,1815,3.735,1816,3.735,1817,3.735,1818,3.735,1819,5.427,1820,4.811,1821,4.811,1822,5.427,1823,5.427]],["title/components/OpenComponent.html",[22,0.924,239,1.691]],["body/components/OpenComponent.html",[3,0.05,4,0.05,5,0.05,7,0.276,8,0.563,10,0.646,13,0.71,14,0.396,15,0.008,16,0.057,19,0.004,20,0.004,22,1.253,23,1.308,24,2.075,25,1.441,27,1.441,28,1.441,30,1.724,31,2.81,33,1.168,34,3.506,35,2.618,36,2.866,39,2.025,48,1.263,52,3.103,55,0.891,63,4.971,66,1.608,68,0.873,69,1.535,73,1.213,74,1.687,85,2.191,86,1.841,94,0.514,96,0.46,113,0.372,156,0.927,214,1.372,215,2.127,216,2.127,217,1.308,218,2.791,219,1.441,220,1.441,221,1.372,222,1.441,223,1.308,224,1.441,225,1.308,226,1.441,227,1.278,228,1.441,229,1.308,230,1.441,231,1.249,232,1.441,233,1.308,234,2.95,235,1.441,236,1.278,237,1.372,238,1.441,239,2.533,240,1.441,241,1.308,242,1.441,243,1.372,244,1.194,245,1.441,246,1.308,247,1.441,248,1.278,249,1.441,250,1.886,251,2.127,252,1.308,253,1.441,254,1.308,255,1.441,256,1.278,257,1.441,258,1.278,259,1.441,260,1.308,261,1.406,262,1.278,263,1.406,264,1.441,331,2.12,353,4.027,354,1.406,610,3.387,611,3.369,677,1.93,935,3.931,948,3.507,1610,4.677,1615,2.507,1658,3.931,1797,2.507,1803,2.507,1810,4.22,1811,4.22,1824,3.123,1825,5.197,1826,6.82,1827,5.197,1828,3.522,1829,3.522,1830,3.522,1831,3.522,1832,3.522,1833,5.197,1834,3.522,1835,5.197,1836,5.197]],["title/interfaces/OpenWallet.html",[0,0.21,609,2.496]],["body/interfaces/OpenWallet.html",[0,0.351,2,0.933,3,0.065,4,0.065,5,0.065,7,0.354,8,0.671,10,1.137,12,2.051,13,1.231,14,0.472,15,0.008,16,0.136,17,2.661,19,0.005,20,0.005,35,1.771,88,2.645,94,0.589,113,0.654,114,3.397,139,1.14,156,1.187,189,2.198,331,2.202,348,2.051,350,2.773,384,1.674,471,2.47,493,1.674,551,3.522,553,2.773,554,3.985,555,4.779,556,3.041,557,3.041,560,2.898,561,3.282,562,2.773,563,3.522,564,3.041,565,2.773,566,3.812,567,2.773,568,2.773,569,2.898,570,3.041,571,3.041,572,3.041,573,2.931,574,3.041,575,2.661,576,2.898,577,2.561,578,3.751,579,3.751,580,3.812,581,2.898,582,2.661,583,2.773,584,2.773,585,2.773,586,2.773,587,2.661,588,2.773,589,2.661,590,2.661,591,2.661,592,2.387,593,2.661,594,2.561,595,2.661,596,2.773,597,2.661,598,2.773,599,2.773,600,3.751,601,2.773,602,1.756,603,2.773,604,3.041,605,3.041,606,2.898,607,2.661,608,2.561,609,3.397,610,3.972,611,3.539,612,2.561,613,2.239,614,2.898]],["title/interfaces/ParseUri.html",[0,0.21,607,2.689]],["body/interfaces/ParseUri.html",[0,0.354,2,0.947,3,0.066,4,0.066,5,0.066,7,0.359,8,0.678,10,1.149,12,2.082,13,1.181,14,0.348,15,0.008,16,0.137,17,2.702,19,0.005,20,0.005,35,1.79,88,2.662,94,0.594,113,0.661,114,3.432,139,1.157,156,1.205,189,2.221,331,2.219,348,2.082,350,2.815,384,1.7,471,2.508,493,1.7,551,3.559,553,2.815,554,4.026,555,4.817,556,3.088,557,3.088,560,2.942,561,3.316,562,2.815,563,4.362,564,3.088,565,2.815,566,3.852,567,2.815,568,2.815,569,2.942,570,3.088,571,3.088,572,3.088,573,2.944,574,3.088,575,2.702,576,2.942,577,2.601,578,3.781,579,3.781,580,3.852,581,2.942,582,2.702,583,2.815,584,2.815,585,2.815,586,2.815,587,2.702,588,2.815,589,2.702,590,2.702,591,2.702,592,2.424,593,2.702,594,2.601,595,2.702,596,2.815,597,2.702,598,2.815,599,2.815,600,3.781,601,2.815,602,1.783,603,2.815,604,3.088,605,3.088,606,2.942,607,3.698,608,4.362,609,2.508,610,3.11,611,2.772,612,2.601,613,2.273,614,2.942]],["title/interfaces/Payment.html",[0,0.21,1546,2.928]],["body/interfaces/Payment.html",[0,0.284,2,1.277,3,0.088,4,0.088,5,0.088,7,0.484,8,0.823,12,3.916,13,1.229,14,0.673,15,0.008,16,0.099,19,0.006,20,0.006,573,3.294,587,5.083,1405,5.807,1546,4.889,1587,6.99,1837,5.468,1838,8.608]],["title/modules/PipesModule.html",[265,1.653,1839,3.241]],["body/modules/PipesModule.html",[3,0.066,4,0.066,5,0.066,15,0.008,16,0.074,19,0.005,20,0.005,94,0.731,96,0.603,113,0.487,267,1.601,268,2.578,279,2.788,280,2.043,281,1.798,283,2.454,284,1.675,286,2.34,287,2.454,288,1.675,344,2.715,1425,6.441,1440,6.441,1566,6.441,1643,6.441,1839,6.748,1840,4.093,1841,4.093,1842,4.093,1843,6.441,1844,6.441,1845,6.441,1846,4.617,1847,4.617,1848,4.617,1849,4.617,1850,4.617,1851,4.617,1852,4.617,1853,4.617]],["title/components/PostComponent.html",[22,0.924,241,1.691]],["body/components/PostComponent.html",[3,0.048,4,0.048,5,0.048,7,0.265,8,0.546,10,0.62,13,0.823,14,0.571,15,0.008,16,0.054,19,0.004,20,0.004,22,1.223,23,1.255,24,2.012,25,1.383,26,1.852,27,1.383,28,1.383,30,1.672,31,2.743,33,1.121,34,3.49,35,2.605,36,2.947,37,2.67,39,1.964,41,3.585,46,2.348,48,1.225,52,3.041,55,0.855,56,2.556,57,4.821,60,4.222,66,1.641,68,0.838,69,1.303,73,0.789,74,1.636,85,2.536,86,2.131,94,0.501,96,0.441,99,1.316,113,0.357,139,1.525,148,3.56,189,1.788,214,1.316,215,2.063,216,2.063,217,1.255,218,2.735,219,1.383,220,1.383,221,1.316,222,1.383,223,1.255,224,1.383,225,1.255,226,1.383,227,1.226,228,1.383,229,1.255,230,1.383,231,1.199,232,1.383,233,1.255,234,2.424,235,1.383,236,1.226,237,1.316,238,1.383,239,1.255,240,1.383,241,2.482,242,1.383,243,1.316,244,1.146,245,1.383,246,1.255,247,1.383,248,1.226,249,1.383,250,1.829,251,2.063,252,1.255,253,1.383,254,1.255,255,1.383,256,1.226,257,1.383,258,1.226,259,1.383,260,1.255,261,1.349,262,1.226,263,1.349,264,1.383,331,1.051,354,1.349,479,1.852,911,5.876,1854,2.997,1855,6.029,1856,5.041,1857,7.15,1858,6.029,1859,5.041,1860,3.38,1861,3.38,1862,3.38,1863,3.38,1864,3.38,1865,5.346,1866,2.744,1867,2.997,1868,2.997,1869,2.997,1870,2.997,1871,3.38,1872,3.38,1873,3.38,1874,3.38,1875,3.38,1876,3.38,1877,3.38,1878,3.38,1879,3.38,1880,3.38,1881,3.38,1882,3.38,1883,3.38]],["title/modules/PostModule.html",[265,1.653,1884,3.444]],["body/modules/PostModule.html",[3,0.084,4,0.084,5,0.084,15,0.008,16,0.094,19,0.006,20,0.006,22,1.494,94,0.739,96,0.765,99,2.281,113,0.618,139,1.481,241,3.389,267,2.031,268,3.014,279,3.259,280,2.592,281,2.281,283,2.868,284,2.125,286,2.735,287,2.868,288,2.125,370,2.822,371,3.565,379,3.259,674,4.185,675,3.328,880,3.002,1839,5.241,1884,6.722,1885,5.193,1886,5.193,1887,5.857,1888,5.857,1889,5.857]],["title/modules/PostRoutingModule.html",[265,1.653,363,3.241]],["body/modules/PostRoutingModule.html",[3,0.091,4,0.091,5,0.091,15,0.008,16,0.102,19,0.006,20,0.006,94,0.694,96,0.827,99,2.468,113,0.669,139,1.602,267,2.197,284,2.299,286,2.871,287,3.011,288,2.299,344,2.73,363,5.502,369,3.897,370,3.725,371,3.693,379,2.804,880,3.247,883,4.274,1575,4.791,1890,6.335,1891,6.335,1892,6.335]],["title/components/ProfileComponent.html",[22,0.924,243,1.774]],["body/components/ProfileComponent.html",[3,0.052,4,0.052,5,0.052,7,0.283,8,0.572,13,0.722,14,0.275,15,0.008,16,0.058,19,0.004,20,0.004,22,1.271,23,1.34,24,2.111,25,1.476,26,1.977,27,1.476,28,1.476,30,1.754,31,2.849,33,1.196,34,3.515,35,2.626,36,2.886,37,2.801,39,2.06,41,2.63,48,1.285,52,3.138,55,1.584,66,1.323,69,1.432,73,0.842,74,1.717,85,1.279,86,1.075,94,0.44,96,0.471,113,0.381,188,2.549,214,1.405,215,2.165,216,2.165,217,1.34,218,2.823,219,1.476,220,1.476,221,1.405,222,1.476,223,1.34,224,1.476,225,1.34,226,1.476,227,1.309,228,1.476,229,1.34,230,1.476,231,1.279,232,1.476,233,1.34,234,2.491,235,1.476,236,1.309,237,1.405,238,1.476,239,1.34,240,1.476,241,1.34,242,1.476,243,2.687,244,2.124,245,1.476,246,1.34,247,1.476,248,1.309,249,1.476,250,1.919,251,2.165,252,1.34,253,1.476,254,1.34,255,1.476,256,1.309,257,1.476,258,1.309,259,1.476,260,1.34,261,1.44,262,1.309,263,1.44,264,1.476,348,2.406,352,4.435,383,4.074,425,4.91,471,3.781,478,6.117,512,3.123,613,2.627,693,4.295,782,4.737,1410,4.91,1893,3.198,1894,5.464,1895,6.264,1896,5.289,1897,6.264,1898,3.607,1899,3.607,1900,6.264,1901,5.289,1902,6.117,1903,6.264,1904,5.289,1905,5.289,1906,5.289,1907,3.607,1908,3.198,1909,3.198,1910,5.289,1911,5.289,1912,8.137,1913,6.117]],["title/interfaces/ProfileState.html",[0,0.21,1914,3.241]],["body/interfaces/ProfileState.html",[0,0.256,2,1.148,3,0.079,4,0.079,5,0.079,7,0.435,8,0.77,13,1.27,14,0.667,15,0.008,16,0.089,19,0.006,20,0.006,65,3.152,69,1.386,115,4.194,334,2.412,345,3.566,497,3.742,602,2.771,613,4.254,652,4.194,691,3.947,748,3.769,1230,4.504,1316,4.194,1476,4.194,1894,5.063,1914,5.063,1915,4.918,1916,7.345,1917,7.345,1918,7.345,1919,7.345,1920,6.307,1921,4.918,1922,4.918,1923,4.918,1924,4.918,1925,4.918,1926,4.918,1927,4.504,1928,4.918,1929,4.918]],["title/interfaces/QueryKeyIn.html",[0,0.21,1930,3.444]],["body/interfaces/QueryKeyIn.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,1930,6.153,1931,6.117,1932,8.938]],["title/interfaces/QueryKeyOut.html",[0,0.21,1933,3.444]],["body/interfaces/QueryKeyOut.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,602,3.482,1933,6.153,1934,6.117]],["title/pipes/RemoveTrailingZerosPipe.html",[1118,2.072,1843,3.241]],["body/pipes/RemoveTrailingZerosPipe.html",[3,0.081,4,0.081,5,0.081,10,1.039,14,0.431,15,0.008,16,0.091,19,0.006,20,0.006,30,1.879,33,1.879,48,1.377,55,1.433,66,1.197,68,1.404,69,1.546,73,1.322,86,2.488,88,2.75,94,0.471,96,0.74,113,0.598,156,1.899,188,4.155,189,2.01,384,2.678,1118,3.281,1426,3.486,1429,3.643,1430,5.454,1431,7.034,1433,3.823,1434,4.636,1435,4.865,1649,5.024,1843,5.133,1935,5.024,1936,7.212,1937,5.666,1938,5.666,1939,7.212,1940,5.666,1941,7.212,1942,5.666]],["title/interfaces/Response.html",[0,0.21,1066,3.241]],["body/interfaces/Response.html",[0,0.262,2,1.179,3,0.082,4,0.082,5,0.082,7,0.447,8,0.783,13,1.205,14,0.605,15,0.008,16,0.092,19,0.006,20,0.006,139,2.011,156,2.094,189,2.021,334,1.932,681,4.426,1066,5.15,1466,6.794,1475,3.505,1943,4.626,1944,4.626,1945,7.658,1946,4.626,1947,6.328,1948,7.419,1949,5.051,1950,3.844,1951,4.309,1952,4.626,1953,5.051,1954,5.051,1955,5.051,1956,5.051,1957,5.051,1958,5.051,1959,5.051]],["title/components/RestoreComponent.html",[22,0.924,246,1.691]],["body/components/RestoreComponent.html",[3,0.042,4,0.042,5,0.042,7,0.23,8,0.49,9,2.834,10,1.014,14,0.223,15,0.008,16,0.047,19,0.004,20,0.004,22,1.122,23,1.09,24,1.808,25,1.201,27,1.201,28,1.201,30,1.502,31,2.516,33,0.973,34,3.431,35,2.558,36,2.711,39,1.764,48,1.1,52,2.829,55,0.742,63,5.451,66,1.313,68,1.371,69,1.212,73,1.057,74,1.795,85,1.041,86,0.874,94,0.517,96,0.383,113,0.31,173,2.321,214,1.143,215,1.853,216,1.853,217,1.09,218,2.545,219,1.201,220,1.201,221,1.143,222,1.201,223,1.09,224,1.201,225,1.09,226,1.201,227,1.065,228,1.201,229,1.09,230,1.201,231,1.041,232,1.201,233,1.09,234,2.842,235,1.201,236,1.065,237,1.143,238,1.201,239,1.09,240,1.201,241,1.09,242,1.201,243,1.143,244,0.995,245,1.201,246,2.309,247,1.201,248,1.065,249,1.201,250,1.643,251,1.853,252,1.09,253,1.201,254,1.09,255,1.201,256,1.065,257,1.201,258,1.065,259,1.201,260,1.09,261,1.171,262,1.065,263,1.171,264,1.201,326,3.997,327,2.219,331,2.755,353,1.733,354,1.171,602,2.422,610,2.747,611,3.275,614,2.911,677,1.608,1610,5.389,1795,4.015,1797,2.088,1803,2.088,1810,3.677,1811,5.049,1812,3.677,1960,2.602,1961,3.677,1962,4.529,1963,5.53,1964,4.195,1965,2.934,1966,2.934,1967,2.934,1968,4.49,1969,4.903,1970,4.529,1971,4.903,1972,4.529,1973,4.903,1974,4.903,1975,4.529,1976,4.529,1977,2.934,1978,2.934,1979,2.934,1980,2.934,1981,2.934,1982,2.934,1983,2.934,1984,2.934,1985,2.934,1986,2.934,1987,4.529,1988,4.529,1989,4.529,1990,4.529,1991,4.529,1992,4.529,1993,4.015,1994,4.529]],["title/interfaces/RestoreWallet.html",[0,0.21,1964,3.073]],["body/interfaces/RestoreWallet.html",[0,0.205,2,0.923,3,0.064,4,0.064,5,0.101,7,0.35,8,0.666,9,4.221,10,1.62,11,2.149,13,1.252,14,0.643,15,0.008,16,0.072,17,4.484,19,0.005,20,0.005,46,2.958,69,1.199,88,2.442,120,4.379,173,3.153,189,2.182,234,2.96,331,1.912,384,2.82,573,2.498,589,3.633,602,2.958,610,3.771,611,3.645,754,4.151,764,5.455,1121,3.174,1313,4.653,1475,2.743,1476,4.653,1541,5.455,1961,5.719,1964,4.151,1969,6.733,1971,6.733,1973,6.733,1974,6.733,1993,6.733,1995,3.954,1996,8.835,1997,6.152,1998,6.152,1999,5.455,2000,6.152]],["title/components/RootComponent.html",[22,0.924,248,1.653]],["body/components/RootComponent.html",[3,0.043,4,0.043,5,0.043,7,0.237,8,0.502,10,0.555,14,0.429,15,0.008,16,0.049,19,0.004,20,0.004,22,1.144,23,1.124,24,1.852,25,1.239,27,1.239,28,1.239,30,1.539,31,2.565,33,1.004,34,3.444,35,2.569,36,2.738,39,1.807,41,3.018,46,2.462,48,1.127,52,2.876,55,1.173,56,2.29,57,4.622,63,4.423,66,1.706,68,0.75,69,1.232,73,1.747,74,2.051,85,1.074,86,0.902,88,1.608,94,0.598,96,0.395,99,1.179,113,0.32,139,1.173,156,1.222,189,1.645,214,1.179,215,1.899,216,1.899,217,1.124,218,2.587,219,1.239,220,1.239,221,1.179,222,1.239,223,1.124,224,1.239,225,1.124,226,1.239,227,1.099,228,1.239,229,1.124,230,1.239,231,1.074,232,1.239,233,1.124,234,2.618,235,1.239,236,1.099,237,1.179,238,1.239,239,1.124,240,1.239,241,1.124,242,1.239,243,1.179,244,1.027,245,1.239,246,1.124,247,1.239,248,2.294,249,1.239,250,1.683,251,1.899,252,1.124,253,1.239,254,1.124,255,1.239,256,1.099,257,1.239,258,1.099,259,1.239,260,1.124,261,1.209,262,1.099,263,1.209,264,1.239,320,4.499,321,2.685,326,4.064,327,2.29,331,0.941,348,2.11,352,3.626,390,2.304,412,3.464,414,3.33,435,2.155,436,1.862,666,2.685,667,4.113,682,3.091,887,5.604,1865,5,1866,2.459,1867,2.685,1868,2.685,1869,2.685,1870,2.685,2001,2.685,2002,4.639,2003,5.639,2004,5.639,2005,6.321,2006,6.321,2007,6.321,2008,6.321,2009,5.133,2010,4.639,2011,3.028,2012,3.028,2013,3.028,2014,3.028,2015,3.028,2016,3.028,2017,3.028,2018,3.028,2019,3.028,2020,3.028,2021,3.028,2022,3.028,2023,3.028,2024,3.028,2025,3.028,2026,3.028,2027,3.028,2028,3.028,2029,3.028,2030,3.028,2031,3.028,2032,3.028,2033,3.028,2034,4.639,2035,3.028,2036,4.639,2037,4.639,2038,4.639]],["title/modules/RootModule.html",[265,1.653,2039,3.241]],["body/modules/RootModule.html",[3,0.076,4,0.076,5,0.076,15,0.008,16,0.085,19,0.006,20,0.006,94,0.776,96,0.689,99,2.057,104,3.395,105,3.395,113,0.558,231,1.873,248,3.139,267,1.831,268,2.82,275,5.836,278,5.321,279,3.05,280,2.337,281,2.057,283,2.684,284,2.501,286,2.559,287,2.684,288,1.916,301,5.596,302,4.288,309,3.916,310,3.001,313,4.43,314,3.248,315,3.001,319,4.682,328,3.993,344,2.275,370,2.544,371,2.337,616,3.118,674,3.916,675,3.001,2039,6.576,2040,4.682,2041,4.682,2042,4.682,2043,6.157,2044,5.28,2045,5.28,2046,4.682,2047,6.11,2048,4.682,2049,5.28]],["title/modules/RootRoutingModule.html",[265,1.653,364,3.241]],["body/modules/RootRoutingModule.html",[3,0.082,4,0.082,5,0.082,11,2.753,15,0.008,16,0.092,19,0.006,20,0.006,22,1.159,44,3.673,60,3.373,94,0.734,96,0.746,99,2.225,113,0.603,139,1.445,152,3.673,248,2.63,267,1.981,268,2.967,279,3.208,280,2.528,281,2.225,283,2.225,284,2.63,286,2.692,287,2.824,288,2.073,334,1.937,344,2.462,364,6.287,369,3.514,370,3.493,371,3.524,379,2.528,381,5.065,382,4.639,384,2.122,616,4.28,619,4.066,880,2.928,882,4.32,2039,6.287,2050,5.713,2051,5.713,2052,5.713,2053,5.713,2054,5.713,2055,5.713,2056,5.713,2057,5.713]],["title/components/SettingsComponent.html",[22,0.924,250,1.653]],["body/components/SettingsComponent.html",[3,0.059,4,0.059,5,0.059,7,0.324,8,0.631,13,0.563,14,0.314,15,0.008,16,0.066,19,0.005,20,0.005,22,1.371,23,1.532,24,2.326,25,1.688,26,2.261,27,1.688,28,1.688,30,1.933,31,3.073,33,1.368,34,3.562,35,2.664,36,2.992,37,3.086,39,2.27,48,1.416,52,3.339,55,1.708,66,1.55,69,1.317,73,1.36,74,2.382,85,1.463,86,1.229,94,0.343,96,0.539,113,0.436,170,3.35,214,1.607,215,2.385,216,2.385,217,1.532,218,3.004,219,1.688,220,1.688,221,1.607,222,1.688,223,1.532,224,1.688,225,1.532,226,1.688,227,1.497,228,1.688,229,1.532,230,1.688,231,1.463,232,1.688,233,1.532,234,2.625,235,1.688,236,1.497,237,1.607,238,1.688,239,1.532,240,1.688,241,1.532,242,1.688,243,1.607,244,1.399,245,1.688,246,1.532,247,1.688,248,1.497,249,1.688,250,2.809,251,2.385,252,1.532,253,1.688,254,1.532,255,1.688,256,1.497,257,1.688,258,1.497,259,1.688,260,1.532,261,1.647,262,1.497,263,1.647,264,1.688,512,3.441,814,5.109,820,5.551,840,3.35,2058,3.658,2059,6.755,2060,5.166,2061,6.755,2062,5.827,2063,4.125,2064,4.125,2065,5.827,2066,5.827,2067,4.125]],["title/components/SettingsComponent-1.html",[22,0.769,188,1.827,250,1.375]],["body/components/SettingsComponent-1.html",[3,0.062,4,0.062,5,0.062,7,0.338,15,0.007,16,0.069,19,0.005,20,0.005,22,1.404,23,1.602,24,2.399,25,1.765,27,1.765,28,1.765,30,1.994,31,3.148,33,1.43,34,3.577,35,2.676,36,3.112,39,2.341,48,1.46,52,3.405,55,1.75,66,1.269,69,1.348,73,1.006,74,1.951,94,0.359,96,0.563,113,0.455,188,2.078,214,1.68,215,2.46,216,2.46,217,1.602,218,3.063,219,1.765,220,1.765,221,1.68,222,1.765,223,1.602,224,1.765,225,1.602,226,1.765,227,1.565,228,1.765,229,1.602,230,1.765,231,1.529,232,1.765,233,1.602,234,2.836,235,1.765,236,1.565,237,1.68,238,1.765,239,1.602,240,1.765,241,1.602,242,1.765,243,1.68,244,1.462,245,1.765,246,1.602,247,1.765,248,1.565,249,1.765,250,2.856,251,2.46,252,1.602,253,1.765,254,1.602,255,1.765,256,1.565,257,1.765,258,1.565,259,1.765,260,1.602,261,1.721,262,1.565,263,1.721,264,1.765,512,4.419,613,2.985,742,4.881,743,4.881,744,4.881,745,4.881,746,5.33,747,3.824,748,2.734,749,3.824,2060,5.33,2068,3.824,2069,4.312,2070,4.312]],["title/injectables/SettingsEffects.html",[398,1.302,2071,3.698]],["body/injectables/SettingsEffects.html",[3,0.075,4,0.075,5,0.075,7,0.412,8,0.743,10,0.964,13,1.108,14,0.583,15,0.008,16,0.084,19,0.006,20,0.006,46,2.047,49,5.787,55,1.329,63,4.707,64,7.196,66,1.451,68,1.302,69,1.024,85,1.863,86,1.566,94,0.675,96,0.686,103,4.266,104,3.378,105,3.378,113,0.555,114,4.448,156,1.809,354,2.097,398,1.963,400,2.325,493,2.551,1046,5.577,1086,3.973,1087,6.148,1089,6.785,1090,6.09,1116,4.659,1130,4.659,1131,3.545,2071,5.577,2072,4.659,2073,5.254,2074,6.869,2075,6.869,2076,6.869,2077,6.869,2078,5.254]],["title/modules/SettingsModule.html",[265,1.653,2079,3.444]],["body/modules/SettingsModule.html",[3,0.071,4,0.071,5,0.071,11,2.388,15,0.008,16,0.08,19,0.005,20,0.005,22,1.005,35,1.416,44,3.186,60,2.926,94,0.769,96,0.647,99,1.93,113,0.523,139,1.253,152,3.186,250,3.148,267,1.718,268,2.705,279,2.925,280,2.193,281,1.93,283,2.574,284,2.398,286,2.454,287,2.574,288,1.798,299,4.703,300,3.527,303,4.998,304,3.748,305,4.998,306,3.748,309,3.755,310,2.816,313,4.249,314,3.048,315,2.816,334,1.68,344,2.135,348,2.254,370,3.184,371,3.291,379,2.925,383,2.926,493,1.84,511,3.186,512,3.902,674,3.755,675,2.816,880,2.54,883,3.343,1625,6.048,2047,5.859,2048,4.394,2079,6.665,2080,4.394,2081,4.394,2082,4.956,2083,4.956,2084,5.859,2085,4.394,2086,4.394,2087,5.366,2088,4.024,2089,4.956,2090,4.956,2091,4.956,2092,4.394,2093,4.956,2094,4.956,2095,4.956]],["title/modules/SettingsRoutingModule.html",[265,1.653,365,3.241]],["body/modules/SettingsRoutingModule.html",[3,0.089,4,0.089,5,0.089,15,0.008,16,0.1,19,0.006,20,0.006,94,0.718,96,0.812,99,2.424,113,0.657,139,1.574,267,2.157,283,2.424,284,2.258,286,2.84,287,2.978,288,2.258,343,3.828,344,2.681,365,5.442,369,3.828,370,3.684,371,3.664,379,2.754,512,3.674,616,4.888,619,4.428,880,3.189,882,4.705,883,4.198,1573,5.517,2096,6.222,2097,6.222,2098,6.222]],["title/interfaces/SettingsState.html",[0,0.21,2099,3.444]],["body/interfaces/SettingsState.html",[0,0.255,2,1.145,3,0.079,4,0.079,5,0.079,7,0.434,8,0.769,13,1.196,14,0.687,15,0.008,16,0.089,19,0.006,20,0.006,88,3.293,114,4.691,1304,5.767,1752,4.492,1753,4.492,1772,4.492,2099,5.371,2100,4.905,2101,7.338,2102,7.338,2103,7.338,2104,7.338,2105,7.338,2106,7.338,2107,7.338,2108,4.905,2109,4.905]],["title/pipes/ShruggiePipe.html",[1118,2.072,1844,3.241]],["body/pipes/ShruggiePipe.html",[3,0.087,4,0.087,5,0.087,10,1.115,14,0.463,15,0.008,16,0.098,19,0.006,20,0.006,30,2.016,33,2.016,48,1.476,66,1.283,68,1.506,69,1.596,73,1.418,88,2.84,94,0.505,96,0.794,113,0.642,148,5.057,156,1.985,493,2.257,1118,3.428,1383,3.907,1426,3.739,1429,3.907,1433,4.1,1434,4.845,1435,4.1,1443,6.119,1569,7.263,1844,5.364,2110,5.389,2111,7.536,2112,6.078,2113,6.078]],["title/interfaces/SplitIntegratedAddressOut.html",[0,0.21,2114,3.444]],["body/interfaces/SplitIntegratedAddressOut.html",[0,0.306,2,1.374,3,0.095,4,0.095,5,0.095,7,0.521,8,0.861,9,4.523,12,4.015,13,1.162,14,0.605,15,0.007,16,0.107,19,0.006,20,0.006,94,0.552,1636,5.884,2114,6.013,2115,5.884,2116,8.825]],["title/components/StatusComponent.html",[22,0.924,252,1.691]],["body/components/StatusComponent.html",[3,0.057,4,0.057,5,0.057,7,0.314,8,0.618,10,0.735,14,0.606,15,0.008,16,0.064,19,0.005,20,0.005,22,1.349,23,1.488,24,2.278,25,1.64,26,2.196,27,1.64,28,1.64,33,1.329,34,3.552,35,2.656,36,3.065,37,3.023,39,2.223,41,2.396,55,1.013,66,1.681,68,0.993,69,1.412,94,0.474,96,0.523,113,0.423,214,1.561,215,2.336,216,2.336,217,1.488,218,2.965,219,1.64,220,1.64,221,1.561,222,1.64,223,1.488,224,1.64,225,1.488,226,1.64,227,1.454,228,1.64,229,1.488,230,1.64,231,1.421,232,1.64,233,1.488,234,2.596,235,1.64,236,1.454,237,2.59,238,1.64,239,1.488,240,1.64,241,1.488,242,1.64,243,1.561,244,1.359,245,1.64,246,1.488,247,1.64,248,1.454,249,1.64,250,2.071,251,2.336,252,2.691,253,1.64,254,1.488,255,1.64,256,1.454,257,1.64,258,1.454,259,1.64,260,1.488,261,1.599,262,1.454,263,1.599,264,1.64,593,3.37,1415,3.03,2117,3.553,2118,6.648,2119,5.708,2120,7.245,2121,6.648,2122,6.648,2123,6.648,2124,6.648,2125,4.007,2126,7.657,2127,5.708,2128,4.007,2129,4.007,2130,4.007,2131,4.007,2132,4.007,2133,5.708,2134,5.708,2135,5.708,2136,7.245,2137,7.245]],["title/modules/StatusModule.html",[265,1.653,277,3.241]],["body/modules/StatusModule.html",[3,0.081,4,0.081,5,0.081,15,0.008,16,0.091,19,0.006,20,0.006,94,0.761,96,0.738,113,0.597,236,3.196,252,3.465,267,1.959,268,2.946,277,6.511,279,3.186,280,2.501,281,2.201,283,2.804,284,2.051,286,2.674,287,2.804,288,2.051,299,5.124,300,4.022,309,4.091,310,3.211,311,5.846,312,4.589,344,3.102,674,4.091,675,3.211,1410,4.022,1415,4.274,2138,5.011,2139,5.011,2140,5.011,2141,5.651,2142,5.651,2143,7.199,2144,5.651,2145,5.651]],["title/interfaces/StoreOut.html",[0,0.21,2146,3.444]],["body/interfaces/StoreOut.html",[0,0.331,2,1.487,3,0.103,4,0.103,5,0.103,15,0.007,16,0.115,19,0.007,20,0.007,2146,6.3,2147,6.369]],["title/interfaces/SweepAllIn.html",[0,0.21,2148,3.444]],["body/interfaces/SweepAllIn.html",[0,0.195,2,0.875,3,0.061,4,0.061,5,0.061,7,0.331,8,0.641,9,4.15,10,1.722,11,2.036,12,3.375,13,1.193,14,0.657,15,0.008,16,0.068,19,0.005,20,0.005,41,2.488,88,2.991,156,1.954,189,2.631,348,2.696,537,4.481,561,3.138,573,3.244,578,3.138,579,3.138,582,4.38,583,3.645,584,3.645,585,3.645,586,3.645,587,4.38,588,3.645,589,3.499,590,3.499,591,3.499,592,3.138,593,3.499,594,3.367,595,3.499,596,3.645,597,3.499,598,4.563,599,3.645,600,3.929,603,3.645,1121,3.007,1475,2.599,2148,4.481,2149,3.747,2150,3.747,2151,7.418,2152,7.418,2153,7.418,2154,7.418,2155,7.418,2156,4.812,2157,5.926]],["title/interfaces/SweepAllOut.html",[0,0.21,2158,3.444]],["body/interfaces/SweepAllOut.html",[0,0.3,2,1.348,3,0.093,4,0.093,5,0.093,7,0.511,8,0.851,13,1.28,14,0.643,15,0.008,16,0.105,19,0.006,20,0.006,2158,5.945,2159,5.774,2160,8.77,2161,7.121,2162,8.77]],["title/interfaces/SweepDustOut.html",[0,0.21,2163,3.698]],["body/interfaces/SweepDustOut.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,2161,7.258,2163,6.607,2164,6.117]],["title/interfaces/Task.html",[0,0.21,2165,3.444]],["body/interfaces/Task.html",[0,0.178,2,0.802,3,0.055,4,0.055,5,0.08,7,0.304,8,0.603,13,1.074,14,0.497,15,0.008,16,0.09,19,0.005,20,0.005,22,1.13,34,1.473,35,1.107,37,2.051,39,1.509,46,2.779,55,0.98,57,4.194,69,1.473,88,2.262,94,0.674,96,0.506,99,1.509,113,0.409,139,1.99,237,2.944,244,1.889,256,1.406,331,2.579,334,1.313,335,3.145,348,1.762,384,1.439,393,2.929,406,2.613,412,3.053,414,3.289,418,3.145,432,2.757,433,2.929,434,2.929,436,2.383,491,2.613,493,2.069,494,4.213,497,2.613,502,3.145,504,3.145,505,3.145,506,3.145,537,4.213,602,1.509,611,3.483,620,4.194,631,4.647,677,2.123,681,1.985,682,2.123,684,4.401,728,3.145,729,4.802,990,3.145,1343,3.145,1372,4.524,1575,2.929,1605,5.793,1610,5.213,1615,2.757,1616,3.145,1894,2.757,1968,4.524,2165,5.395,2166,3.145,2167,6.701,2168,3.435,2169,3.435,2170,3.435,2171,3.435,2172,3.435,2173,3.435,2174,3.435,2175,3.435,2176,3.435,2177,3.435,2178,3.435,2179,3.435,2180,3.435,2181,3.435,2182,6.701,2183,3.435,2184,3.435,2185,5.784,2186,4.94,2187,4.94,2188,4.94,2189,3.435,2190,3.435,2191,3.435,2192,3.435,2193,3.435,2194,3.435,2195,3.435,2196,3.435,2197,3.435,2198,3.435,2199,3.435,2200,3.435,2201,3.435,2202,3.435,2203,3.435,2204,3.435,2205,3.435,2206,3.435]],["title/pipes/TimeAgoPipe.html",[1118,2.072,1845,3.241]],["body/pipes/TimeAgoPipe.html",[3,0.076,4,0.076,5,0.076,10,0.976,13,1.113,14,0.405,15,0.008,16,0.085,19,0.006,20,0.006,30,1.765,33,1.765,48,1.293,55,1.346,66,1.124,68,1.319,69,1.501,73,1.242,86,1.586,94,0.442,96,0.695,113,0.562,139,2.263,156,1.824,331,2.153,493,1.976,656,4.718,857,4.024,858,4.718,1118,3.151,1426,3.273,1429,3.421,1430,5.237,1434,4.452,1435,3.59,1749,4.718,1845,4.929,2207,4.718,2208,6.925,2209,5.321,2210,5.321,2211,6.925,2212,5.321,2213,5.321,2214,5.321,2215,5.321,2216,5.321,2217,6.14,2218,5.321,2219,5.321,2220,5.321,2221,5.321,2222,5.321,2223,5.321,2224,6.925,2225,5.321,2226,7.699,2227,5.321,2228,5.321,2229,5.321,2230,5.321]],["title/components/TransactionsComponent.html",[22,0.924,254,1.691]],["body/components/TransactionsComponent.html",[3,0.044,4,0.044,5,0.044,7,0.241,8,0.508,10,0.563,13,0.64,14,0.573,15,0.008,16,0.049,19,0.004,20,0.004,22,1.155,23,1.141,24,1.872,25,1.257,27,1.257,28,1.257,30,1.556,31,2.589,33,1.019,34,3.45,35,2.574,36,2.751,39,1.827,48,1.14,52,2.897,55,0.777,63,2.886,66,1.713,68,0.761,69,1.774,73,1.095,74,1.522,85,2.564,86,2.155,94,0.601,96,0.401,112,2.073,113,0.324,173,2.404,214,1.197,215,1.92,216,1.92,217,1.141,218,2.607,219,1.257,220,1.257,221,1.197,222,1.257,223,1.141,224,1.257,225,1.141,226,1.257,227,1.115,228,1.257,229,1.141,230,1.257,231,1.09,232,1.257,233,1.141,234,2.695,235,1.257,236,1.115,237,1.197,238,1.257,239,1.141,240,1.257,241,1.141,242,1.257,243,1.197,244,1.042,245,1.257,246,1.141,247,1.257,248,1.115,249,1.257,250,1.702,251,1.92,252,1.141,253,1.257,254,2.365,255,1.257,256,1.115,257,1.257,258,1.115,259,1.257,260,1.141,261,1.226,262,1.115,263,1.226,264,1.257,281,1.827,331,1.98,353,3.761,354,1.226,384,3.012,577,2.666,610,2.826,611,2.519,677,1.684,681,2.404,682,3.119,729,1.746,846,3.339,935,3.548,948,3.839,1001,2.073,1405,3.165,1546,3.016,1552,3.839,1555,3.339,1559,3.548,1562,4.05,1610,4.41,1745,4.159,1797,2.187,1803,2.187,2156,5.172,2231,2.724,2232,4.691,2233,7.231,2234,5.045,2235,5.69,2236,6.369,2237,5.045,2238,4.691,2239,3.072,2240,3.072,2241,3.072,2242,3.072,2243,4.159,2244,4.159,2245,3.809,2246,4.691,2247,3.072,2248,3.072,2249,3.072,2250,3.072,2251,2.323,2252,2.495,2253,2.495,2254,3.072,2255,3.072,2256,3.072,2257,2.724,2258,3.072,2259,4.691]],["title/interfaces/Transfer.html",[0,0.21,1564,3.241]],["body/interfaces/Transfer.html",[0,0.263,2,1.183,3,0.082,4,0.082,5,0.082,7,0.448,8,0.785,12,3.81,13,1.276,14,0.711,15,0.008,16,0.092,19,0.006,20,0.006,173,4.292,573,3.313,577,4.759,1405,5.651,1564,5.159,2243,7.426,2244,7.426,2245,6.801,2260,5.065]],["title/interfaces/TransferIn.html",[0,0.21,2261,3.444]],["body/interfaces/TransferIn.html",[0,0.239,2,1.074,3,0.074,4,0.074,5,0.074,7,0.407,8,0.737,10,1.633,12,3.674,13,1.145,14,0.655,15,0.008,16,0.083,19,0.006,20,0.006,88,2.8,94,0.431,156,1.366,189,2.416,348,2.361,350,3.192,561,4.277,562,3.192,573,3.248,576,5.192,577,4.59,578,4.028,579,4.028,580,3.192,581,3.336,582,4.769,583,3.192,584,3.192,585,3.192,586,3.192,587,4.769,588,3.192,589,3.064,590,3.064,591,3.064,592,2.748,593,3.064,594,2.949,595,3.064,596,3.192,597,3.064,598,3.192,599,3.192,600,3.608,601,4.968,602,2.021,603,3.192,2261,5.152,2262,4.601,2263,5.189]],["title/interfaces/TransferOut.html",[0,0.21,2264,3.444]],["body/interfaces/TransferOut.html",[0,0.282,2,1.265,3,0.088,4,0.088,5,0.088,7,0.479,8,0.819,13,1.266,14,0.625,15,0.008,16,0.098,19,0.006,20,0.006,86,1.822,384,2.27,573,2.913,577,5.011,600,4.005,601,3.76,602,2.381,1323,4.964,1587,6.968,1637,5.42,2264,5.72,2265,5.42,2266,8.581,2267,6.113,2268,6.113,2269,6.113,2270,6.113,2271,6.113,2272,6.113]],["title/interfaces/TransferSplitIn.html",[0,0.21,575,2.689]],["body/interfaces/TransferSplitIn.html",[0,0.338,2,0.854,3,0.059,4,0.059,5,0.059,7,0.324,8,0.631,10,1.595,12,3.339,13,1.187,14,0.629,15,0.008,16,0.133,17,2.436,19,0.005,20,0.005,35,1.665,88,2.925,94,0.562,113,0.615,114,3.194,139,1.043,156,1.086,189,2.066,331,2.1,348,1.877,350,2.538,384,1.532,471,2.261,493,1.532,551,3.311,553,2.538,554,3.746,555,4.558,556,2.783,557,2.783,560,2.652,561,3.887,562,2.538,563,3.311,564,2.783,565,2.538,566,3.584,567,2.538,568,2.538,569,2.652,570,2.783,571,2.783,572,2.783,573,3.148,574,2.783,575,3.441,576,4.719,577,4.171,578,3.577,579,3.577,580,3.584,581,2.652,582,4.334,583,2.538,584,2.538,585,2.538,586,2.538,587,4.334,588,2.538,589,2.436,590,2.436,591,2.436,592,2.185,593,2.436,594,2.344,595,2.436,596,2.538,597,2.436,598,2.538,599,2.538,600,3.577,601,4.515,602,1.607,603,2.538,604,4.952,605,2.783,606,2.652,607,2.436,608,2.344,609,2.261,610,2.894,611,2.579,612,2.344,613,2.049,614,2.652]],["title/interfaces/TransferSplitOut.html",[0,0.21,2273,3.444]],["body/interfaces/TransferSplitOut.html",[0,0.309,2,1.387,3,0.096,4,0.096,5,0.096,7,0.526,8,0.865,13,1.167,14,0.609,15,0.008,16,0.108,19,0.007,20,0.007,573,3.032,2161,7.189,2273,6.048,2274,5.941,2275,8.853]],["title/modules/TranslateModule.html",[265,1.653,278,2.802]],["body/modules/TranslateModule.html",[3,0.095,4,0.095,5,0.095,15,0.008,16,0.107,19,0.007,20,0.007,94,0.709,96,0.869,100,4.492,101,4.28,113,0.703,267,2.308,278,4.9,283,2.593,284,2.416,286,2.959,287,3.103,288,2.416,289,7.063,2276,6.657]],["title/interfaces/Uri.html",[0,0.21,608,2.588]],["body/interfaces/Uri.html",[0,0.318,2,1.428,3,0.099,4,0.099,5,0.099,7,0.541,8,0.881,13,1.182,14,0.525,15,0.007,16,0.111,19,0.007,20,0.007,608,5.252,2277,6.117]],["title/components/UserComponent.html",[22,0.924,256,1.653]],["body/components/UserComponent.html",[0,0.098,3,0.03,4,0.03,5,0.05,7,0.167,8,0.379,10,0.39,13,0.478,14,0.267,15,0.008,16,0.056,19,0.003,20,0.003,22,0.906,23,0.79,24,1.398,25,0.87,26,1.166,27,0.87,28,0.87,33,0.705,34,3.271,35,2.43,36,2.412,37,1.855,39,1.364,46,2.016,48,0.851,55,0.886,57,4.185,66,1.436,68,0.527,69,1.269,73,0.496,85,2.184,86,1.835,88,0.737,94,0.541,96,0.278,99,0.828,113,0.225,139,1.557,214,0.828,215,1.433,216,1.433,217,0.79,218,2.118,219,0.87,220,0.87,221,0.828,222,0.87,223,0.79,224,0.87,225,0.79,226,0.87,227,0.772,228,0.87,229,0.79,230,0.87,231,0.754,232,0.87,233,0.79,234,1.941,235,0.87,236,0.772,237,2.016,238,0.87,239,0.79,240,0.87,241,0.79,242,0.87,243,0.828,244,2.665,245,0.87,246,0.79,247,0.87,248,0.772,249,0.87,250,1.271,251,1.433,252,0.79,253,0.87,254,0.79,255,0.87,256,1.878,257,0.87,258,0.772,259,0.87,260,0.79,261,0.849,262,0.772,263,0.849,264,0.87,331,2.536,334,2.766,335,2.844,345,3.328,348,1.593,380,2.493,383,2.068,384,0.79,393,1.608,406,1.435,412,2.837,414,3.056,418,1.727,432,1.514,433,1.608,434,1.608,436,1.308,471,2.837,491,1.435,493,1.922,494,2.648,497,1.435,502,1.727,504,1.727,505,1.727,506,1.727,537,3.914,538,2.844,541,2.648,600,1.855,602,2.229,611,3.424,620,4.185,631,4.392,643,3.105,644,3.105,647,2.844,648,3.105,651,3.105,652,2.648,677,1.166,681,1.09,682,2.447,683,1.886,684,4.154,691,3.684,697,4.589,728,1.727,729,4.005,990,1.727,1094,2.493,1288,4.589,1309,3.105,1313,2.648,1316,3.914,1343,1.727,1372,2.844,1575,1.608,1605,5.286,1610,4.974,1615,1.514,1616,1.727,1812,2.844,1820,4.589,1894,3.178,1947,2.648,1968,3.625,2156,2.844,2165,4.656,2166,1.727,2167,3.959,2168,1.886,2169,1.886,2170,1.886,2171,3.105,2172,3.959,2173,3.959,2174,3.959,2175,4.589,2176,1.886,2177,1.886,2178,1.886,2179,1.886,2180,1.886,2181,1.886,2182,5.075,2183,1.886,2184,1.886,2185,3.959,2186,3.105,2187,3.105,2188,3.105,2189,1.886,2190,1.886,2191,1.886,2192,1.886,2193,1.886,2194,1.886,2195,1.886,2196,1.886,2197,1.886,2198,1.886,2199,1.886,2200,1.886,2201,1.886,2202,1.886,2203,1.886,2204,1.886,2205,1.886,2206,1.886,2278,3.502,2279,2.127,2280,2.127,2281,2.127,2282,2.127,2283,2.127,2284,2.127,2285,3.502,2286,5.176,2287,2.127,2288,3.502,2289,3.502,2290,3.502,2291,3.502,2292,2.127,2293,3.502,2294,5.176,2295,3.502,2296,3.502,2297,3.502,2298,6.157,2299,3.502,2300,3.502,2301,3.502,2302,3.502,2303,3.502,2304,3.502,2305,3.502,2306,5.176,2307,2.127,2308,3.502,2309,3.502,2310,3.502,2311,3.502,2312,2.844,2313,3.502,2314,3.502,2315,3.502,2316,2.844,2317,3.502,2318,3.502,2319,3.502,2320,3.502,2321,3.502,2322,3.502,2323,2.127,2324,3.502,2325,3.502,2326,3.502,2327,3.502,2328,3.502,2329,3.502,2330,3.502,2331,3.502,2332,3.502,2333,3.502,2334,3.502,2335,3.502,2336,3.502,2337,2.127,2338,2.127,2339,2.127]],["title/interfaces/UserMeta.html",[0,0.21,2340,3.241]],["body/interfaces/UserMeta.html",[0,0.384,2,1.311,3,0.091,4,0.091,5,0.091,7,0.497,8,0.837,13,1.237,14,0.482,15,0.008,16,0.134,19,0.006,20,0.006,62,4.791,94,0.527,631,3.741,645,3.741,681,3.962,748,2.882,2340,5.939,2341,4.791,2342,7.055,2343,5.216,2344,5.144,2345,4.274,2346,5.502]],["title/modules/UserModule.html",[265,1.653,2347,3.444]],["body/modules/UserModule.html",[3,0.072,4,0.072,5,0.072,11,2.411,15,0.008,16,0.08,19,0.005,20,0.005,22,1.015,35,1.901,44,3.216,60,2.954,94,0.779,96,0.653,99,1.949,113,0.528,139,1.265,152,3.216,244,2.533,256,3.155,267,1.735,268,2.722,279,2.943,280,2.214,281,1.949,283,2.59,284,1.815,286,2.47,287,2.59,288,1.815,299,4.733,300,3.561,301,5.4,302,4.062,305,5.029,306,3.783,309,3.779,310,2.843,313,4.276,314,3.078,315,2.843,331,2.322,334,1.696,370,2.411,371,3.306,379,2.214,383,3.927,493,1.858,674,3.779,675,2.843,676,5.4,677,2.742,678,5.4,679,4.062,880,2.564,2084,5.897,2085,4.436,2086,4.436,2087,5.4,2088,4.062,2092,4.436,2347,6.444,2348,4.436,2349,4.436,2350,5.003,2351,6.65,2352,5.003,2353,5.003,2354,5.897,2355,4.436,2356,6.65,2357,5.003,2358,5.003,2359,5.003]],["title/interfaces/UserOptions.html",[0,0.21,2343,3.073]],["body/interfaces/UserOptions.html",[0,0.309,2,1.387,3,0.096,4,0.096,5,0.096,7,0.526,8,0.865,14,0.51,15,0.008,16,0.128,19,0.007,20,0.007,188,3.228,611,2.965,2343,5.395,2360,5.44,2361,8.853,2362,7.85,2363,6.7,2364,5.941]],["title/modules/UserRoutingModule.html",[265,1.653,366,3.241]],["body/modules/UserRoutingModule.html",[3,0.09,4,0.09,5,0.09,15,0.008,16,0.101,19,0.006,20,0.006,94,0.721,96,0.822,99,2.453,113,0.665,139,1.593,244,2.135,267,2.183,283,2.453,284,2.285,286,2.861,287,3,288,2.285,343,3.874,344,2.713,366,5.482,369,3.874,370,3.711,371,3.683,379,2.787,616,4.548,880,3.227,883,4.248,2046,5.583,2365,6.297,2366,6.297,2367,6.297]],["title/interfaces/UserState.html",[0,0.21,2346,3.241]],["body/interfaces/UserState.html",[0,0.374,2,1.233,3,0.085,4,0.085,5,0.085,7,0.467,8,0.805,13,1.25,14,0.647,15,0.008,16,0.13,19,0.006,20,0.006,62,6.43,94,0.495,631,5.021,645,3.517,681,4.486,748,3.868,2340,6.052,2341,4.505,2342,4.837,2343,5.737,2344,4.837,2345,4.019,2346,5.777]],["title/interfaces/UsersState.html",[0,0.21,2345,3.073]],["body/interfaces/UsersState.html",[0,0.383,2,1.303,3,0.09,4,0.09,5,0.09,7,0.494,8,0.834,13,1.184,14,0.633,15,0.008,16,0.134,19,0.006,20,0.006,62,4.762,94,0.523,631,3.718,645,5.119,681,3.948,748,2.865,1536,6.255,2340,5.482,2341,4.762,2342,5.113,2343,5.197,2344,5.113,2345,5.197,2346,5.482]],["title/components/VpnComponent.html",[22,0.924,258,1.653]],["body/components/VpnComponent.html",[3,0.056,4,0.056,5,0.056,7,0.305,15,0.007,16,0.062,19,0.005,20,0.005,22,1.326,23,1.444,24,2.23,25,1.591,26,2.131,27,1.591,28,1.591,30,1.853,31,2.974,33,1.29,34,3.542,35,2.648,36,2.946,37,2.958,39,2.176,48,1.357,52,3.251,55,1.653,66,1.18,69,1.274,73,0.907,74,1.813,94,0.323,96,0.508,113,0.411,214,1.514,215,2.286,216,2.286,217,1.444,218,2.925,219,1.591,220,1.591,221,1.514,222,1.591,223,1.444,224,1.591,225,1.444,226,1.591,227,1.411,228,1.591,229,1.444,230,1.591,231,1.379,232,1.591,233,1.444,234,2.566,235,1.591,236,1.411,237,1.514,238,1.591,239,1.444,240,1.591,241,1.444,242,1.591,243,1.514,244,1.318,245,1.591,246,1.444,247,1.591,248,1.411,249,1.591,250,2.027,251,2.286,252,1.444,253,1.591,254,1.444,255,1.591,256,1.411,257,1.591,258,2.593,259,1.591,260,1.444,261,1.552,262,1.411,263,1.552,264,1.591,331,1.736,348,3.251,349,5.086,392,3.769,425,3.976,453,3.976,497,3.769,1033,4.953,1262,4.536,1913,4.953,2312,4.536,2316,5.803,2368,3.447,2369,6.537,2370,5.586,2371,3.888,2372,3.888,2373,5.586,2374,7.146,2375,4.953,2376,5.586,2377,5.586,2378,5.586,2379,7.88,2380,5.586,2381,5.586,2382,5.586,2383,5.586,2384,5.586,2385,5.586,2386,5.586,2387,7.146,2388,7.146]],["title/modules/VpnModule.html",[265,1.653,2389,3.444]],["body/modules/VpnModule.html",[3,0.086,4,0.086,5,0.086,15,0.008,16,0.097,19,0.006,20,0.006,94,0.744,96,0.784,113,0.634,258,3.246,267,2.083,268,3.062,279,3.312,280,2.659,281,2.34,283,2.915,284,2.18,286,2.779,287,2.915,288,2.18,309,4.252,310,3.414,313,4.81,314,3.696,315,3.414,674,4.252,675,3.414,2389,6.765,2390,5.327,2391,5.327,2392,6.008,2393,5.327]],["title/modules/VpnRoutingModule.html",[265,1.653,2394,3.698]],["body/modules/VpnRoutingModule.html",[3,0.09,4,0.09,5,0.09,15,0.008,16,0.101,19,0.006,20,0.006,22,1.274,94,0.72,96,0.82,99,2.445,113,0.663,139,1.588,258,2.79,267,2.177,283,2.445,284,2.278,286,2.855,287,2.995,288,2.278,344,2.705,369,3.862,370,3.705,371,3.678,379,2.779,880,3.218,2316,5.098,2393,5.567,2394,6.243,2395,6.278]],["title/components/WalletComponent.html",[22,0.924,260,1.691]],["body/components/WalletComponent.html",[3,0.037,4,0.037,5,0.037,7,0.204,8,0.446,10,1.068,13,0.966,14,0.575,15,0.008,16,0.042,19,0.003,20,0.003,22,1.039,23,0.967,24,1.646,25,1.065,26,1.426,27,1.065,28,1.065,30,1.367,31,2.329,33,0.863,34,3.376,35,2.513,36,2.745,37,2.183,39,1.606,41,3.727,46,1.994,48,1.002,52,2.65,55,0.658,66,1.764,68,1.444,69,1.379,73,1.651,74,1.661,85,2.065,86,1.736,88,1.429,91,1.852,94,0.528,95,1.968,96,0.34,113,0.275,156,1.086,214,1.014,215,1.687,216,1.687,217,0.967,218,2.384,219,1.065,220,1.065,221,1.014,222,1.065,223,0.967,224,1.065,225,0.967,226,1.065,227,0.944,228,1.065,229,0.967,230,1.065,231,2.509,232,1.065,233,0.967,234,2.832,235,1.065,236,0.944,237,1.014,238,1.065,239,0.967,240,1.065,241,0.967,242,1.065,243,1.014,244,0.882,245,1.065,246,0.967,247,1.065,248,0.944,249,1.065,250,1.496,251,1.687,252,0.967,253,1.065,254,0.967,255,1.065,256,0.944,257,1.065,258,0.944,259,1.065,260,2.163,261,1.039,262,0.944,263,1.039,264,1.065,281,1.606,326,3.744,327,1.968,328,1.968,334,0.882,354,1.039,384,2.875,493,2.163,512,2.434,602,1.606,609,2.26,613,3.153,658,2.434,682,4.403,729,3.31,742,3.348,743,3.348,744,3.348,745,3.348,750,4.556,814,3.872,820,4.404,840,2.113,846,2.934,1254,1.968,1383,3.744,1555,2.934,1556,3.656,1557,3.656,1558,3.656,1559,3.118,1582,3.348,1592,6.506,1658,3.118,1668,3.656,1672,5.223,1673,2.307,1692,3.656,1797,1.852,2234,3.656,2251,1.968,2396,2.307,2397,5.12,2398,4.123,2399,5.12,2400,5.12,2401,5.12,2402,4.729,2403,4.123,2404,5.824,2405,3.656,2406,4.123,2407,2.602,2408,4.123,2409,2.602,2410,4.123,2411,2.602,2412,2.602,2413,2.602,2414,4.123,2415,2.602,2416,4.123,2417,2.602,2418,2.602,2419,2.602,2420,2.602,2421,2.602,2422,2.602,2423,2.602,2424,2.602,2425,2.602,2426,2.307,2427,2.602,2428,2.602,2429,2.602,2430,2.602,2431,2.602,2432,2.602,2433,2.602,2434,5.12,2435,4.123]],["title/modules/WalletModule.html",[265,1.653,2043,3.241]],["body/modules/WalletModule.html",[3,0.055,4,0.055,5,0.055,11,1.846,15,0.008,16,0.062,19,0.005,20,0.005,22,0.777,44,2.463,60,2.262,94,0.771,96,0.5,99,1.492,104,2.463,105,2.463,113,0.405,139,0.969,152,2.463,233,3.218,239,3.218,246,3.218,254,3.218,260,3.002,267,1.328,268,2.262,278,4.823,279,2.446,280,1.696,281,1.492,283,2.153,284,2.005,286,2.053,287,2.153,288,1.39,299,3.934,300,2.727,303,4.18,304,2.897,305,4.18,306,2.897,309,3.141,310,2.177,311,4.488,312,3.111,313,3.553,314,2.357,315,2.177,334,1.299,344,2.382,370,1.846,371,2.87,379,1.696,384,1.423,613,1.903,674,3.141,675,2.177,676,4.488,677,2.1,678,4.488,679,3.111,880,1.963,1709,5.58,2043,6.582,2087,4.488,2088,3.111,2252,3.111,2253,3.111,2354,4.9,2355,3.397,2436,3.397,2437,3.397,2438,3.397,2439,3.831,2440,3.831,2441,3.831,2442,5.527,2443,3.831,2444,3.831,2445,3.831,2446,3.831,2447,3.831,2448,3.831,2449,5.527,2450,3.831,2451,3.831,2452,3.831,2453,3.831]],["title/modules/WalletRoutingModule.html",[265,1.653,367,3.241]],["body/modules/WalletRoutingModule.html",[3,0.09,4,0.09,5,0.09,15,0.008,16,0.101,19,0.006,20,0.006,94,0.719,96,0.817,99,2.438,113,0.661,139,1.583,234,2.122,267,2.17,283,2.438,284,2.271,286,2.85,287,2.989,288,2.271,343,3.85,344,2.697,367,5.462,369,3.85,370,3.698,371,3.673,379,2.77,616,4.901,619,4.455,880,3.208,882,4.734,883,4.223,2454,6.259,2455,6.259,2456,6.259]],["title/injectables/WalletRpcService.html",[353,2.689,398,1.302]],["body/injectables/WalletRpcService.html",[1,4.305,3,0.023,4,0.023,5,0.023,7,0.285,8,0.298,9,1.861,10,1.458,13,0.777,14,0.64,15,0.008,16,0.026,19,0.002,20,0.002,46,1.414,48,0.67,55,0.405,65,2.452,66,1.776,68,1.971,69,1.549,73,2.111,85,0.568,86,0.477,94,0.473,96,0.209,112,1.86,113,0.169,130,2.445,139,0.918,148,0.945,156,2.19,173,1.861,234,1.802,293,2.774,295,1.08,331,0.498,347,1.773,349,1.962,351,4.694,352,1.773,353,1.628,354,0.639,390,0.795,398,0.788,400,0.709,437,0.821,493,0.595,563,2.764,573,1.53,575,2.872,600,1.46,607,1.628,608,2.764,609,3.12,612,3.235,658,5.434,681,1.413,692,1.14,748,1.254,750,2.45,754,1.08,757,2.445,800,7.4,822,1.211,824,1.86,834,1.14,903,2.239,904,1.3,905,1.3,906,1.3,907,1.3,908,1.3,909,1.3,910,1.14,911,2.746,913,1.3,914,1.3,915,1.42,1001,1.08,1406,4.713,1433,1.08,1475,2.234,1533,1.211,1535,2.445,1536,4.316,1537,3.679,1544,1.211,1548,3.679,1550,1.211,1552,3.282,1562,1.14,1564,3.462,1579,3.679,1584,1.211,1594,3.679,1631,3.679,1930,3.679,1933,1.211,1947,2.085,1950,1.08,1951,1.211,1952,2.948,1964,3.841,2009,3.504,2114,1.211,2146,1.211,2148,3.679,2150,2.445,2158,1.211,2245,2.239,2251,1.211,2261,3.679,2264,1.211,2273,1.211,2402,3.504,2457,1.3,2458,2.757,2459,4.315,2460,2.757,2461,2.757,2462,4.315,2463,2.757,2464,2.757,2465,2.757,2466,3.631,2467,3.631,2468,2.757,2469,2.757,2470,3.631,2471,4.315,2472,4.315,2473,2.757,2474,2.757,2475,2.757,2476,1.601,2477,2.757,2478,1.601,2479,2.757,2480,1.601,2481,1.601,2482,2.757,2483,1.601,2484,1.601,2485,2.757,2486,2.757,2487,1.601,2488,1.601,2489,2.757,2490,1.601,2491,2.757,2492,1.601,2493,2.757,2494,2.757,2495,1.601,2496,1.601,2497,1.601,2498,1.601,2499,1.601,2500,2.757,2501,1.601,2502,2.757,2503,1.601,2504,2.757,2505,4.864,2506,1.601,2507,2.757,2508,1.601,2509,2.757,2510,1.601,2511,2.757,2512,1.601,2513,1.601,2514,1.601,2515,1.601,2516,2.445,2517,1.601,2518,1.601,2519,2.757,2520,1.601,2521,1.601,2522,2.757,2523,1.601,2524,2.757,2525,1.601,2526,2.757,2527,1.601,2528,1.601,2529,1.601,2530,1.601,2531,1.601,2532,1.601,2533,1.601,2534,1.601,2535,1.601,2536,1.601,2537,1.601,2538,1.601,2539,1.601,2540,1.601,2541,1.601,2542,1.601,2543,1.601,2544,1.601,2545,1.601,2546,1.601,2547,1.601,2548,1.601,2549,1.601,2550,1.601,2551,1.601,2552,1.601,2553,1.601,2554,1.601,2555,1.601,2556,1.601,2557,1.601,2558,1.601]],["title/injectables/WalletService.html",[326,2.928,398,1.302]],["body/injectables/WalletService.html",[3,0.05,4,0.05,5,0.088,7,0.273,8,0.558,10,1.245,13,0.838,14,0.577,15,0.008,16,0.056,19,0.004,20,0.004,46,2.644,48,1.253,55,0.882,66,1.738,68,1.682,69,1.323,73,2.045,74,1.131,85,1.236,86,1.039,94,0.602,96,0.455,112,2.352,113,0.545,156,1.997,189,1.83,234,2.79,326,3.317,331,1.084,334,1.182,347,3.317,349,3.672,351,3.626,353,4.008,354,1.392,390,1.732,392,3.481,398,1.475,400,1.543,403,4.189,412,3.72,435,2.481,436,2.145,437,1.787,592,1.846,609,4.302,613,4.002,658,4.479,750,4.579,754,4.143,1000,4.574,1001,2.352,1459,3.672,1530,3.091,1552,4.579,1658,3.902,1803,2.481,1961,4.189,1964,5.295,2009,5.511,2237,3.091,2251,2.637,2257,3.091,2402,5.511,2426,3.091,2516,6.423,2559,3.091,2560,6.787,2561,5.159,2562,6.787,2563,3.487,2564,5.159,2565,3.487,2566,3.487,2567,6.787,2568,5.159,2569,3.487,2570,5.159,2571,3.487,2572,5.159,2573,3.487,2574,3.487,2575,3.487,2576,5.159,2577,3.487,2578,3.487,2579,3.487,2580,3.487,2581,3.487,2582,3.487,2583,3.487,2584,3.487,2585,3.487,2586,3.487,2587,3.487,2588,3.487,2589,3.487,2590,3.487,2591,3.487]],["title/injectables/WebStorageService.html",[398,1.302,527,3.444]],["body/injectables/WebStorageService.html",[3,0.058,4,0.058,5,0.058,7,0.317,8,0.622,10,1.41,13,1.234,14,0.585,15,0.008,16,0.065,19,0.005,20,0.005,30,1.342,35,1.156,36,1.435,46,3.326,48,1.396,66,1.803,68,1.905,69,1.498,73,1.864,74,1.865,85,2.038,86,2.379,94,0.336,96,0.528,113,0.427,139,1.453,156,2.024,334,1.372,390,2.009,398,1.643,400,1.791,408,4.346,437,2.073,479,3.663,527,4.346,545,3.587,566,4.111,573,2.038,602,3.326,635,5.909,1121,4.09,1383,4.678,1512,5.926,1600,3.285,1950,2.73,1951,3.06,2592,7.678,2593,3.587,2594,6.683,2595,5.747,2596,5.747,2597,5.747,2598,5.747,2599,4.046,2600,4.046,2601,4.046,2602,4.046,2603,5.747,2604,4.046,2605,4.046,2606,4.046,2607,5.747,2608,4.046,2609,5.747,2610,4.046,2611,5.747,2612,4.046,2613,4.046,2614,4.046,2615,4.046,2616,4.046,2617,4.046,2618,4.046,2619,4.046,2620,4.046,2621,4.046,2622,4.046,2623,4.046,2624,4.046,2625,4.046,2626,4.046,2627,4.046,2628,4.046,2629,4.046]],["title/injectables/WebsocketService.html",[398,1.302,1166,3.444]],["body/injectables/WebsocketService.html",[3,0.067,4,0.067,5,0.067,7,0.365,8,0.685,10,0.852,13,0.983,14,0.482,15,0.008,16,0.102,19,0.005,20,0.005,41,3.501,46,2.803,48,1.537,55,1.82,66,1.761,68,1.152,69,0.906,73,1.803,74,2.054,94,0.598,96,0.607,113,0.491,139,1.601,156,1.667,390,2.308,398,1.809,400,2.057,437,2.382,793,3.515,1073,2.988,1128,3.774,1166,4.786,1286,3.774,1366,3.774,1504,3.774,1999,4.121,2630,3.774,2631,6.381,2632,7.726,2633,7.726,2634,7.726,2635,6.329,2636,6.329,2637,4.647,2638,4.647,2639,8.083,2640,4.647,2641,6.329,2642,4.647,2643,7.197,2644,3.774,2645,4.121,2646,7.197,2647,6.329,2648,7.197,2649,4.647,2650,4.647,2651,4.647,2652,4.647,2653,4.647,2654,4.647,2655,4.647,2656,4.647,2657,4.647,2658,7.197,2659,4.647,2660,4.647,2661,4.647,2662,4.647,2663,4.647,2664,4.647,2665,4.647,2666,4.647,2667,4.647]],["title/coverage.html",[2668,5.534]],["body/coverage.html",[0,0.414,1,1.18,5,0.022,6,1.384,9,0.8,14,0.119,15,0.008,19,0.002,20,0.002,21,1.384,22,1.603,23,0.58,29,1.384,35,0.446,49,1.18,108,1.267,109,1.267,110,1.267,113,0.285,173,0.8,176,4.425,189,3.398,217,0.58,221,0.608,223,0.58,225,0.58,227,0.566,229,0.58,231,0.956,233,0.58,236,0.566,239,0.58,241,0.58,243,0.608,246,0.58,248,0.566,250,0.979,252,0.58,254,0.58,256,0.566,258,0.566,260,0.58,262,0.566,282,1.267,320,1.111,326,1.003,329,3.819,331,0.485,341,1.267,353,0.922,398,2.185,399,1.18,401,1.384,412,0.855,430,2.191,508,1.267,509,3.621,525,1.003,527,1.18,530,1.18,535,1.18,536,3.888,546,1.18,548,2.191,551,0.887,553,3.456,561,0.826,563,0.887,565,0.96,575,0.922,607,0.922,608,0.887,609,0.855,612,0.887,615,1.267,616,0.922,618,1.384,620,1.003,632,8.093,680,1.384,684,1.053,738,1.384,750,1.053,751,1.384,765,1.18,766,1.384,767,1.384,813,1.384,815,0.96,886,1.384,919,1.18,920,1.384,921,1.384,926,1.111,927,1.384,932,1.384,975,1.384,985,1.18,1023,1.267,1066,1.111,1079,1.267,1080,1.384,1081,1.267,1082,1.267,1092,1.18,1102,1.267,1118,2.556,1137,1.267,1141,1.18,1142,3.207,1144,3.888,1146,1.267,1151,1.384,1166,1.18,1240,1.384,1393,1.267,1404,1.384,1408,1.18,1409,2.19,1410,1.919,1411,2.19,1421,1.384,1423,1.384,1425,1.111,1427,1.384,1440,1.111,1441,1.384,1448,1.18,1449,1.384,1450,1.384,1459,1.111,1475,0.96,1477,2.19,1478,1.384,1483,1.18,1511,1.384,1533,1.18,1534,1.384,1537,1.18,1538,1.384,1544,1.18,1545,1.384,1546,1.003,1548,1.18,1549,1.384,1550,1.18,1551,1.384,1552,1.053,1553,1.384,1562,1.111,1563,1.384,1564,1.111,1566,1.111,1567,1.384,1578,1.384,1579,1.18,1580,1.384,1584,1.18,1585,1.384,1594,1.18,1595,1.384,1598,1.18,1599,2.19,1601,1.18,1602,1.111,1603,1.384,1620,1.384,1631,1.18,1632,1.384,1633,1.384,1643,1.111,1644,1.384,1651,2.391,1672,1.111,1689,1.384,1714,1.384,1715,1.384,1781,1.384,1793,1.384,1824,1.384,1837,1.384,1843,1.111,1844,1.111,1845,1.111,1854,1.384,1893,1.384,1914,1.111,1915,1.384,1930,1.18,1931,1.384,1933,1.18,1934,1.384,1935,1.384,1943,3.443,1944,3.443,1946,1.267,1950,1.819,1960,1.384,1964,1.053,1995,1.384,2001,1.384,2058,1.384,2068,1.384,2071,1.267,2072,1.384,2099,1.18,2100,1.384,2110,1.384,2114,1.18,2115,1.384,2117,1.384,2146,1.18,2147,1.384,2148,1.18,2149,1.384,2158,1.18,2159,1.384,2163,1.267,2164,1.384,2165,1.18,2166,2.19,2207,1.384,2217,1.384,2231,1.384,2260,1.384,2261,1.18,2262,1.384,2264,1.18,2265,1.384,2273,1.18,2274,1.384,2277,1.384,2340,1.111,2341,2.693,2343,1.053,2345,1.053,2346,1.111,2360,1.267,2368,1.384,2396,1.384,2457,2.19,2559,1.384,2592,1.384,2593,1.384,2630,2.19,2644,1.267,2668,1.384,2669,1.561,2670,1.561,2671,1.561,2672,1.561,2673,9.23,2674,5.619,2675,3.621,2676,1.384,2677,5.24,2678,1.384,2679,1.384,2680,3.157,2681,3.157,2682,1.384,2683,1.384,2684,1.384,2685,1.384,2686,2.892,2687,2.391,2688,3.157,2689,1.384,2690,1.384,2691,1.384,2692,7.43,2693,7.901,2694,4.789,2695,1.561,2696,1.561,2697,1.561,2698,1.561,2699,6.217,2700,1.561,2701,1.561,2702,1.561,2703,1.561,2704,4.646,2705,1.384,2706,1.384,2707,1.384,2708,5.24,2709,3.76,2710,1.384,2711,1.384,2712,3.561,2713,5.513,2714,1.384,2715,1.384,2716,1.384,2717,1.384,2718,1.384,2719,1.384,2720,1.384,2721,2.892,2722,1.384,2723,3.76,2724,1.384,2725,1.384,2726,1.384,2727,1.384,2728,2.892,2729,2.391,2730,1.384,2731,1.384,2732,1.384,2733,1.384,2734,2.892,2735,1.384,2736,2.391,2737,1.384,2738,1.384,2739,5.619,2740,1.561,2741,4.24,2742,1.561,2743,1.561,2744,1.561,2745,1.561,2746,1.561,2747,1.561,2748,1.561,2749,1.561,2750,1.561,2751,1.561,2752,1.561,2753,1.561,2754,1.561,2755,1.384,2756,1.384,2757,1.384,2758,1.561,2759,1.561]],["title/dependencies.html",[268,2.245,2760,3.791]],["body/dependencies.html",[15,0.008,19,0.005,20,0.005,65,3.971,96,0.574,99,1.712,100,4.108,101,3.915,104,4.493,105,2.825,107,2.825,112,2.964,234,1.49,268,1.798,285,4.605,288,1.594,314,2.703,315,2.497,324,3.896,325,3.896,402,3.896,406,2.964,432,3.127,433,3.323,434,3.323,490,6.196,523,3.896,524,5.399,560,2.825,594,2.497,677,2.408,754,2.964,788,3.568,832,3.896,1008,3.896,1017,3.896,1018,3.896,1019,5.399,1021,3.896,1131,2.964,1184,5.285,1185,3.568,1390,3.896,1392,3.896,1648,3.896,1671,3.896,1866,3.568,1902,3.896,1908,3.896,1909,3.896,1950,2.964,2252,3.568,2253,3.568,2631,5.399,2761,4.394,2762,8.701,2763,4.394,2764,8.809,2765,4.394,2766,4.394,2767,4.394,2768,4.394,2769,4.394,2770,4.394,2771,4.394,2772,4.394,2773,4.394,2774,4.394,2775,4.394,2776,6.089,2777,4.394,2778,4.394,2779,4.394,2780,4.394,2781,4.394,2782,4.394,2783,4.394,2784,4.394,2785,4.394,2786,4.394,2787,4.394,2788,4.394,2789,4.394,2790,4.394,2791,4.394,2792,4.394,2793,4.394,2794,4.394,2795,4.394,2796,4.394,2797,4.394,2798,6.089,2799,4.394,2800,4.394,2801,4.394,2802,4.394,2803,4.394,2804,4.394,2805,4.394,2806,4.394,2807,4.394,2808,4.394,2809,4.394,2810,4.394,2811,4.394,2812,4.394,2813,4.394,2814,4.394,2815,4.394,2816,4.394,2817,4.394,2818,4.394,2819,4.394]],["title/miscellaneous/enumerations.html",[2820,2.557,2821,4.863]],["body/miscellaneous/enumerations.html",[3,0.098,7,0.539,15,0.007,19,0.007,20,0.007,86,2.049,188,3.313,611,3.043,1001,4.639,1073,4.421,1092,5.2,1134,6.594,2360,5.583,2362,7.2,2364,6.097,2675,5.2,2820,4.639,2821,6.097,2822,6.876,2823,5.583,2824,5.583,2825,6.876,2826,6.876,2827,6.876]],["title/miscellaneous/functions.html",[2820,2.557,2828,4.863]],["body/miscellaneous/functions.html",[7,0.411,10,1.636,14,0.617,15,0.008,19,0.006,20,0.006,68,2.211,69,1.739,73,1.223,282,4.256,293,4.409,330,4.647,341,5.568,458,4.256,463,4.256,509,3.963,517,6.777,535,5.186,536,7.448,539,5.677,824,3.536,1094,6.569,1134,5.568,1142,3.963,1149,7.461,1914,4.881,2675,3.963,2676,6.08,2686,4.256,2721,4.256,2728,4.256,2734,4.256,2820,3.536,2823,4.256,2824,4.256,2828,4.647,2829,5.241,2830,4.647,2831,7.189,2832,4.647,2833,5.241,2834,5.241,2835,5.241,2836,6.08,2837,5.241,2838,5.241,2839,5.241]],["title/index.html",[7,0.297,357,3.361,2840,3.791]],["body/index.html",[0,0.304,15,0.006,19,0.006,20,0.006,345,4.24,383,4.677,425,6.511,453,4.693,464,7.023,1504,5.355,1821,7.528,1927,5.355,2841,7.921,2842,6.594,2843,6.594,2844,6.594,2845,6.594,2846,9.329,2847,6.594,2848,6.594,2849,6.594,2850,6.594,2851,6.594]],["title/modules.html",[267,2.164]],["body/modules.html",[15,0.006,19,0.006,20,0.006,101,6.059,266,3.973,267,1.822,273,3.739,274,3.739,275,3.545,276,3.739,277,3.739,278,3.232,362,3.739,363,3.739,364,3.739,365,3.739,366,3.739,367,3.739,868,3.973,873,3.739,1582,7.248,1625,3.739,1709,3.739,1839,3.739,1884,3.973,2039,3.739,2043,3.739,2079,3.973,2347,3.973,2375,8.491,2389,3.973,2394,4.266,2852,9.424,2853,9.424,2854,8.926]],["title/overview.html",[2855,5.534]],["body/overview.html",[2,0.575,15,0.008,19,0.004,20,0.004,23,2.694,24,1.109,188,2.092,217,1.032,223,2.433,225,2.694,227,1.938,229,2.694,231,2.573,233,2.694,236,1.938,239,2.694,241,1.984,246,2.694,248,1.938,250,1.938,252,2.694,254,2.694,256,1.938,258,1.938,260,1.984,262,2.799,266,6.515,267,0.963,268,1.776,269,2.464,270,2.464,271,2.464,272,2.464,273,6.026,274,4.662,275,4.894,276,3.802,277,5.342,278,4.271,279,1.921,280,1.23,281,1.082,360,2.464,361,2.464,362,3.802,363,3.802,364,4.662,365,3.802,366,3.802,367,3.802,371,1.23,400,1.23,552,2.256,615,2.256,660,2.256,670,2.464,671,2.464,815,4.03,868,5.676,869,2.464,870,2.464,871,2.464,872,2.464,873,5.342,970,2.464,972,2.464,1234,2.464,1235,2.464,1236,2.464,1339,2.464,1398,2.464,1425,5.163,1426,1.709,1440,5.163,1566,5.163,1625,4.942,1626,2.464,1627,2.464,1628,2.464,1643,5.163,1709,4.942,1710,2.464,1711,2.464,1712,2.464,1839,6.348,1840,2.464,1841,2.464,1842,2.464,1843,5.163,1844,5.163,1845,5.163,1884,4.566,1885,2.464,1886,2.464,2039,5.721,2040,2.464,2041,2.464,2042,2.464,2043,6.288,2079,5.251,2080,2.464,2081,2.464,2138,2.464,2139,2.464,2140,2.464,2347,4.566,2348,2.464,2349,2.464,2389,4.566,2390,2.464,2391,2.464,2436,2.464,2437,2.464,2438,2.464,2855,2.464,2856,2.779,2857,2.779,2858,2.779,2859,2.779,2860,2.779]],["title/routes.html",[371,2.763]],["body/routes.html",[15,0.007,19,0.007,20,0.007,371,3.292]],["title/miscellaneous/variables.html",[2820,2.557,2861,4.863]],["body/miscellaneous/variables.html",[4,0.022,7,0.12,13,0.953,14,0.579,15,0.008,19,0.002,20,0.002,36,0.941,49,2.006,65,0.87,69,0.517,73,0.357,85,3.231,86,2.715,108,2.154,109,2.154,110,2.154,114,2.294,115,1.158,120,1.09,148,0.904,156,1.975,188,1.278,189,0.543,244,0.519,315,0.87,331,0.476,334,1.419,338,1.357,345,0.984,347,0.984,384,1.758,430,3.189,441,3.497,458,1.243,479,2.294,481,1.158,493,2.066,497,1.79,498,1.243,509,1.158,510,1.243,511,3.042,512,2.072,518,1.357,519,1.357,525,3.042,530,2.006,531,1.357,532,1.357,533,1.357,534,1.357,535,2.006,539,5.627,546,2.006,547,1.09,548,1.632,549,1.357,550,1.357,553,0.942,565,1.632,566,1.632,567,0.942,568,0.942,569,0.984,573,1.245,592,0.811,602,1.033,613,1.317,645,0.904,652,1.158,681,1.799,691,1.09,748,0.696,910,1.09,926,1.888,928,1.357,929,1.243,1001,1.79,1010,2.979,1023,2.154,1046,1.243,1073,0.984,1081,2.154,1082,2.154,1092,4.207,1093,1.357,1094,1.09,1102,2.154,1106,1.357,1110,3.112,1118,0.696,1122,1.243,1128,4.517,1137,2.154,1141,1.158,1142,1.158,1143,3.112,1144,5.665,1146,2.154,1147,1.357,1148,1.357,1156,1.357,1230,1.243,1299,1.357,1304,2.154,1310,3.112,1316,1.158,1335,1.243,1366,4.209,1383,3.577,1393,2.154,1469,1.357,1475,1.632,1476,1.158,1568,1.243,1601,3.579,1602,1.09,1752,2.85,1753,2.154,1772,2.154,1894,1.888,1914,1.09,1916,1.357,1917,1.357,1918,1.357,1919,1.357,1920,2.352,1921,1.357,1922,1.357,1923,1.357,1924,1.357,1925,1.357,1926,1.357,1927,1.243,1928,1.357,1929,1.357,1943,1.243,1944,3.399,1945,1.357,1946,2.154,1947,3.165,1948,3.711,1949,1.357,1950,2.824,1951,2.006,1952,1.243,1953,1.357,1954,1.357,1955,1.357,1956,1.357,1957,1.357,1958,1.357,1959,1.357,2099,3.165,2101,1.357,2102,2.352,2103,2.352,2104,1.357,2105,2.352,2106,1.357,2107,2.352,2108,1.357,2109,2.352,2312,3.843,2345,1.033,2405,4.596,2457,1.243,2630,1.243,2644,2.154,2645,1.357,2675,1.158,2678,2.352,2679,3.112,2680,1.357,2681,3.711,2682,3.112,2683,3.112,2684,1.357,2685,2.352,2686,1.243,2687,3.711,2688,1.357,2689,2.352,2690,2.352,2691,2.352,2704,1.357,2705,2.352,2706,2.352,2707,2.352,2709,1.357,2710,2.352,2711,2.352,2713,1.357,2714,2.352,2715,2.352,2716,2.352,2717,2.352,2718,2.352,2719,2.352,2720,2.352,2721,1.243,2722,2.352,2723,1.357,2724,2.352,2725,4.196,2726,1.357,2727,2.352,2728,1.243,2729,1.357,2730,2.352,2731,2.352,2732,1.357,2733,2.352,2734,1.243,2735,2.352,2736,1.357,2737,2.352,2738,2.352,2755,1.357,2756,1.357,2757,1.357,2820,1.033,2823,3.399,2824,1.243,2830,3.112,2831,5.219,2832,2.352,2836,5.87,2861,1.357,2862,6.165,2863,1.531,2864,1.531,2865,1.531,2866,3.509,2867,1.531,2868,6.165,2869,3.509,2870,1.531,2871,6.62,2872,4.185,2873,1.531,2874,6.165,2875,4.732,2876,3.509,2877,3.509,2878,1.531,2879,1.531,2880,1.531,2881,1.531,2882,1.531,2883,1.531,2884,1.531,2885,1.531,2886,5.184,2887,1.531,2888,2.652,2889,2.652,2890,1.531,2891,1.531,2892,5.184,2893,1.531,2894,4.185,2895,1.531,2896,1.531,2897,1.531,2898,1.531,2899,1.531,2900,2.652,2901,1.531,2902,1.531,2903,1.531,2904,1.531,2905,1.531,2906,1.531,2907,2.652,2908,2.652,2909,1.531,2910,1.531,2911,1.531,2912,1.531,2913,1.531,2914,3.509,2915,1.531,2916,1.531,2917,1.531,2918,1.531,2919,2.652,2920,1.531,2921,2.652,2922,2.652,2923,3.509,2924,3.509,2925,4.185,2926,1.531,2927,1.531,2928,1.531,2929,3.509,2930,1.531,2931,1.531,2932,1.531,2933,2.652,2934,1.531,2935,1.531,2936,1.531,2937,1.531,2938,4.185,2939,1.531,2940,1.531,2941,1.531]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0\">{{error",{"_index":1619,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.1",{"_index":1770,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["0.1.2",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":2772,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["0.2.4",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":798,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["0/1",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["0000000000000000000000000000000000000000000000000000000000000000",{"_index":18,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["1",{"_index":188,"title":{"injectables/Effects-1.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":2771,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1754,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["10.0.0",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"coverage.html":{}}}],["1000",{"_index":857,"title":{},"body":{"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/HashRatePipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["100vh",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["12.0.0",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["12.0.1",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":1792,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["13",{"_index":1215,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["13.0.0",{"_index":2762,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":2764,"title":{},"body":{"dependencies.html":{}}}],["130",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["14.0.0",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["151",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":567,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"miscellaneous/variables.html":{}}}],["179211/@${slug}`).then(function",{"_index":1875,"title":{},"body":{"components/PostComponent.html":{}}}],["18",{"_index":2858,"title":{},"body":{"overview.html":{}}}],["181",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["1c9ea3",{"_index":1782,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["2",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/NetworkHashrateChart.html":{},"overview.html":{}}}],["2.0",{"_index":1949,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":2289,"title":{},"body":{"components/UserComponent.html":{}}}],["21",{"_index":2857,"title":{},"body":{"overview.html":{}}}],["210px",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2222,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["242",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["242628",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":1398,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["255",{"_index":1769,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["256",{"_index":1347,"title":{},"body":{"injectables/CryptService.html":{}}}],["25vh",{"_index":960,"title":{},"body":{"directives/ChartDirective.html":{}}}],["298px",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1333,"title":{},"body":{"injectables/CryptService.html":{}}}],["3.0.0",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["3/6",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["30.416",{"_index":2225,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["30000",{"_index":931,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["30vh",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["32",{"_index":595,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["33",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["365",{"_index":2227,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["36963",{"_index":2530,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["3rd",{"_index":473,"title":{},"body":{"injectables/AppService.html":{}}}],["4",{"_index":1335,"title":{},"body":{"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["4.4.4",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["4096",{"_index":1352,"title":{},"body":{"injectables/CryptService.html":{}}}],["42",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2032,"title":{},"body":{"components/RootComponent.html":{}}}],["5.0.0",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1781,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["52",{"_index":2859,"title":{},"body":{"overview.html":{}}}],["545",{"_index":2229,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["54px",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["55",{"_index":2702,"title":{},"body":{"coverage.html":{}}}],["5b98925f755d045127d6b1815b51443e6f93eff84f516e0dbc343168c6b2bc1d",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["6.1.1",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2217,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"coverage.html":{}}}],["62",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":568,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"miscellaneous/variables.html":{}}}],["64px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1339,"title":{},"body":{"injectables/CryptService.html":{},"overview.html":{}}}],["7.0.0",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["7/30",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1220,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{}}}],["8/8",{"_index":2745,"title":{},"body":{"coverage.html":{}}}],["838488",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["85",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2860,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["9px",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["_(ツ)_",{"_index":2113,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["access",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["accessibility",{"_index":2108,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":408,"title":{},"body":{"injectables/AppService.html":{},"components/BlockchainComponent.html":{},"injectables/FileSystemService.html":{},"injectables/WebStorageService.html":{}}}],["account_balance_wallet",{"_index":743,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["accounts",{"_index":1288,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["action",{"_index":1094,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/UserComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action.language",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actionreducer",{"_index":517,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":518,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":1087,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{}}}],["actionsblocklist",{"_index":1400,"title":{},"body":{"modules/DataModule.html":{}}}],["activatedroute",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroute.firstchild",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["acts",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["adapter",{"_index":1018,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["add",{"_index":592,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/FileSystemService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["addaddressbook",{"_index":1,"title":{"interfaces/AddAddressBook.html":{}},"body":{"interfaces/AddAddressBook.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["addaddressbook(x",{"_index":2475,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["adding",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["addlog",{"_index":2685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addoptions",{"_index":768,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["addoptions(overrides",{"_index":772,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["address",{"_index":9,"title":{"interfaces/Address.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["adds",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adduser",{"_index":2175,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["adjust",{"_index":2835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adjustments",{"_index":994,"title":{},"body":{"injectables/ChartService.html":{}}}],["afterviewinit",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{}}}],["again",{"_index":1618,"title":{},"body":{"components/LoginComponent.html":{}}}],["ago",{"_index":2230,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["algorithm",{"_index":606,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["alias",{"_index":1916,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":1276,"title":{},"body":{"injectables/CryptService.html":{}}}],["alpha(0.2",{"_index":1042,"title":{},"body":{"injectables/ChartService.html":{}}}],["always",{"_index":1261,"title":{},"body":{"injectables/CryptService.html":{}}}],["amount",{"_index":1405,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["amp",{"_index":2287,"title":{},"body":{"components/UserComponent.html":{}}}],["angular/animations",{"_index":2761,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2763,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["angular/compiler",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":677,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2768,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2769,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/card",{"_index":675,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/checkbox",{"_index":2355,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/core",{"_index":2352,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/dialog",{"_index":1415,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{}}}],["angular/material/divider",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/expansion",{"_index":2443,"title":{},"body":{"modules/WalletModule.html":{}}}],["angular/material/form",{"_index":2085,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/input",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/list",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/menu",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":2357,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/select",{"_index":2088,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/sidenav",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":2048,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{}}}],["angular/material/toolbar",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/tooltip",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["angular/platform",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":1412,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["animation",{"_index":784,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animationduration",{"_index":786,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animations",{"_index":788,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"dependencies.html":{}}}],["ansi",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["anyone",{"_index":2319,"title":{},"body":{"components/UserComponent.html":{}}}],["anything",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1504,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebsocketService.html":{},"index.html":{}}}],["apiurl",{"_index":1512,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["app",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["app'},{'name",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["app.component",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["app.service",{"_index":1328,"title":{},"body":{"injectables/CryptService.html":{}}}],["app/package.json",{"_index":448,"title":{},"body":{"injectables/AppService.html":{}}}],["app_config",{"_index":430,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app_config.debug",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_config.environment",{"_index":496,"title":{},"body":{"injectables/AppService.html":{},"components/BlockchainComponent.html":{}}}],["app_config.production",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":23,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appfilesystem",{"_index":1485,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["application",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/x",{"_index":905,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["applies",{"_index":992,"title":{},"body":{"injectables/ChartService.html":{}}}],["appmodule",{"_index":266,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":273,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":399,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CryptService.html":{},"coverage.html":{}}}],["appstate",{"_index":508,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"coverage.html":{}}}],["arg",{"_index":2505,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["args",{"_index":1646,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["armored",{"_index":1357,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredkey",{"_index":1370,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredmessage",{"_index":1376,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoured",{"_index":1251,"title":{},"body":{"injectables/CryptService.html":{}}}],["array",{"_index":1319,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{}}}],["assert",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["async",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["atob(state",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{}}}],["atomic",{"_index":551,"title":{"classes/Atomic.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"coverage.html":{}}}],["atomic(this.times(1e8",{"_index":571,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["attach",{"_index":1164,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["attached",{"_index":1924,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["attack",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{}}}],["auth",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":2170,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auth/route.guard",{"_index":2046,"title":{},"body":{"modules/RootModule.html":{},"modules/UserRoutingModule.html":{}}}],["authenticated",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2311,"title":{},"body":{"components/UserComponent.html":{}}}],["authguard",{"_index":616,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":274,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1857,"title":{},"body":{"components/PostComponent.html":{}}}],["authservice",{"_index":620,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["auto",{"_index":1230,"title":{},"body":{"components/ConsoleComponent.html":{},"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["autosave_current",{"_index":1971,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["available",{"_index":1582,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{},"components/WalletComponent.html":{},"modules.html":{}}}],["avatar",{"_index":1917,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["aware",{"_index":1265,"title":{},"body":{"injectables/CryptService.html":{}}}],["away",{"_index":2205,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["axios",{"_index":1950,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["axios.post(`${this.apiurl}/${cmd",{"_index":2626,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["axios.post(url",{"_index":1953,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1224,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["backend",{"_index":2595,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd",{"_index":2599,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd:string",{"_index":2623,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["background",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["backgroundcolor",{"_index":1724,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["backup",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"components/BackupComponent.html":{}}}],["backup'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["backup.component.html",{"_index":739,"title":{},"body":{"components/BackupComponent.html":{}}}],["backupcomponent",{"_index":221,"title":{"components/BackupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{}}}],["balance",{"_index":750,"title":{"interfaces/Balance.html":{}},"body":{"interfaces/Balance.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["bar",{"_index":2358,"title":{},"body":{"modules/UserModule.html":{}}}],["basechartconfigservice",{"_index":765,"title":{"injectables/BaseChartConfigService.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["basechartconfigservice:12",{"_index":1733,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:121",{"_index":1721,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:16",{"_index":1727,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:17",{"_index":1732,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:18",{"_index":1726,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:31",{"_index":1719,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:61",{"_index":1722,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["before",{"_index":589,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["below",{"_index":2303,"title":{},"body":{"components/UserComponent.html":{}}}],["below_amount",{"_index":2151,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["benefit",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta.35",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1027,"title":{},"body":{"injectables/ChartService.html":{}}}],["big",{"_index":555,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["big.js",{"_index":560,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["bigger",{"_index":1299,"title":{},"body":{"injectables/CryptService.html":{},"miscellaneous/variables.html":{}}}],["biggercontentfont",{"_index":2101,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["binaries",{"_index":894,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["binary",{"_index":1359,"title":{},"body":{"injectables/CryptService.html":{}}}],["black",{"_index":1436,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["blank",{"_index":2272,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["block",{"_index":1541,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/RestoreWallet.html":{}}}],["block.age",{"_index":853,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.hash",{"_index":854,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.height",{"_index":855,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block.timestamp",{"_index":856,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["block_height",{"_index":1838,"title":{},"body":{"interfaces/Payment.html":{}}}],["blockchain",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["blockchain.component",{"_index":875,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain.component.html",{"_index":817,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchain.component.scss",{"_index":816,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchaincomponent",{"_index":223,"title":{"components/BlockchainComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blockchainmodule",{"_index":868,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainroutingmodule",{"_index":362,"title":{"modules/BlockchainRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":320,"title":{"injectables/BlockchainService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"components/RootComponent.html":{},"coverage.html":{}}}],["blocks",{"_index":588,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["blocks.headings.age",{"_index":849,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.hash",{"_index":850,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.height",{"_index":851,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.headings.time",{"_index":852,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blocks.title",{"_index":848,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["boolean",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["bootstrap",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":1671,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["border",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["bordercolor",{"_index":1725,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["borderwidth",{"_index":797,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["both",{"_index":447,"title":{},"body":{"injectables/AppService.html":{}}}],["bottom",{"_index":1744,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["bounds",{"_index":1759,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["box",{"_index":863,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["brain",{"_index":1293,"title":{},"body":{"injectables/CryptService.html":{}}}],["browse",{"_index":2375,"title":{},"body":{"components/VpnComponent.html":{},"modules.html":{}}}],["browser",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["browserify",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/TranslateModule.html":{}}}],["browsermodule.withservertransition({appid",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(state",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{}}}],["build",{"_index":464,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["builddocumentation",{"_index":2849,"title":{},"body":{"index.html":{}}}],["building",{"_index":2333,"title":{},"body":{"components/UserComponent.html":{}}}],["buildtype",{"_index":818,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["bundle",{"_index":468,"title":{},"body":{"injectables/AppService.html":{}}}],["button.install",{"_index":2038,"title":{},"body":{"components/RootComponent.html":{}}}],["bypassed",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{}}}],["byte/64",{"_index":596,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["calc(99vh",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["calculated",{"_index":581,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["callback",{"_index":802,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["callbacks",{"_index":807,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["called",{"_index":2658,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["canactivate",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["canactivate(route",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cant",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canvas",{"_index":1233,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["capital",{"_index":1905,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["caretsize",{"_index":1774,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["catch",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["catcherror",{"_index":1132,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["catcherror((error",{"_index":1123,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chain",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{}}}],["chain'},{'name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["chance",{"_index":1382,"title":{},"body":{"injectables/CryptService.html":{}}}],["change",{"_index":1046,"title":{},"body":{"injectables/ChartService.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/variables.html":{}}}],["changedetection",{"_index":1152,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy",{"_index":1182,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1153,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectorref",{"_index":1168,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changelanguage",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changelanguage(lang",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["changelanguage.type",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changestream",{"_index":1162,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel",{"_index":1172,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel:string",{"_index":1199,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["channel",{"_index":1174,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["character",{"_index":597,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["charged",{"_index":2267,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["chart",{"_index":525,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BaseChartConfigService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart(`lthn",{"_index":1055,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.chartseffects",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["chart.chartsstate",{"_index":513,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.directive",{"_index":974,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.js",{"_index":1008,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chart.reducer",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["chart.register(...registerables",{"_index":1034,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.service",{"_index":951,"title":{},"body":{"directives/ChartDirective.html":{},"modules/ChartModule.html":{}}}],["chartconfiginterface",{"_index":919,"title":{"interfaces/ChartConfigInterface.html":{}},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["chartdata",{"_index":976,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartdifficulty",{"_index":926,"title":{"interfaces/ChartDifficulty.html":{}},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdifficultyreducer",{"_index":1146,"title":{},"body":{"interfaces/ChartsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdifficultyreducer(state",{"_index":1150,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultystate",{"_index":929,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"miscellaneous/variables.html":{}}}],["chartdirective",{"_index":262,"title":{"directives/ChartDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chartelement",{"_index":933,"title":{},"body":{"directives/ChartDirective.html":{}}}],["charting",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chartinstances",{"_index":977,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartjs",{"_index":1017,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chartmeta",{"_index":978,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartmodule",{"_index":873,"title":{"modules/ChartModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartnetworkdifficulty",{"_index":1127,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultyloadfailure",{"_index":2705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartnetworkdifficultyloadrequested",{"_index":1102,"title":{},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartnetworkdifficultyloadsuccess",{"_index":2706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartnetworkdifficultystartpolling",{"_index":1081,"title":{},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartnetworkdifficultystoppedpolling",{"_index":2707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartnetworkdifficultystoppolling",{"_index":1082,"title":{},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["charts",{"_index":510,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ChartService.html":{},"miscellaneous/variables.html":{}}}],["charts.network",{"_index":841,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["chartsactions",{"_index":1133,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultyloadfailure",{"_index":1125,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadrequested",{"_index":1096,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadsuccess",{"_index":1122,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/variables.html":{}}}],["chartsactions.chartnetworkdifficultystartpolling",{"_index":1728,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultystoppedpolling",{"_index":1099,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultystoppolling",{"_index":1730,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartseffects",{"_index":1079,"title":{"injectables/ChartsEffects.html":{}},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty",{"_index":1114,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty$.next(true",{"_index":1095,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartservice",{"_index":815,"title":{"injectables/ChartService.html":{}},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"coverage.html":{},"overview.html":{}}}],["chartsstate",{"_index":1141,"title":{"interfaces/ChartsState.html":{}},"body":{"interfaces/ChartsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartsubscriptions",{"_index":979,"title":{},"body":{"injectables/ChartService.html":{}}}],["charttype",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{}}}],["checks",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1159,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["circumstances",{"_index":2321,"title":{},"body":{"components/UserComponent.html":{}}}],["class",{"_index":113,"title":{"classes/Atomic.html":{},"classes/LTHN.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["classes",{"_index":552,"title":{},"body":{"classes/Atomic.html":{},"classes/LTHN.html":{},"overview.html":{}}}],["clear",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/WebStorageService.html":{}}}],["cleartext",{"_index":2309,"title":{},"body":{"components/UserComponent.html":{}}}],["client",{"_index":1865,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["client.database",{"_index":2027,"title":{},"body":{"components/RootComponent.html":{}}}],["client.database.getstate(`/hive",{"_index":1874,"title":{},"body":{"components/PostComponent.html":{}}}],["close",{"_index":1656,"title":{},"body":{"components/ModalComponent.html":{}}}],["closebuttonlabel",{"_index":1690,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["closeconnection",{"_index":2632,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closed",{"_index":2666,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cloud",{"_index":2133,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_download",{"_index":744,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cloud_off",{"_index":2134,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_upload",{"_index":745,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cluster_appmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":670,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":671,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":869,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_blockchaincomponent_providers",{"_index":871,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_declarations",{"_index":870,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":872,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":970,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_chartdirective_providers",{"_index":971,"title":{},"body":{"modules/ChartModule.html":{}}}],["cluster_chartmodule_declarations",{"_index":2856,"title":{},"body":{"overview.html":{}}}],["cluster_chartmodule_exports",{"_index":972,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_consolemodule",{"_index":1234,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_declarations",{"_index":1236,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_exports",{"_index":1235,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":1626,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_declarations",{"_index":1628,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":1627,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":1710,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1711,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1712,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":1840,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":1841,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":1842,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":1885,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_declarations",{"_index":1886,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_rootmodule",{"_index":2040,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_declarations",{"_index":2042,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_imports",{"_index":2041,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootroutingmodule",{"_index":2050,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_rootroutingmodule_imports",{"_index":2051,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_settingsmodule",{"_index":2080,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2081,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2082,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_statusmodule",{"_index":2138,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_declarations",{"_index":2140,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":2139,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2348,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2349,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_vpnmodule",{"_index":2390,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_vpnmodule_declarations",{"_index":2391,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":2436,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_declarations",{"_index":2437,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_exports",{"_index":2438,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":2439,"title":{},"body":{"modules/WalletModule.html":{}}}],["cmd",{"_index":2601,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["code",{"_index":428,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["col",{"_index":2410,"title":{},"body":{"components/WalletComponent.html":{}}}],["color",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["colorlib",{"_index":1020,"title":{},"body":{"injectables/ChartService.html":{}}}],["colors",{"_index":782,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{}}}],["colour",{"_index":993,"title":{},"body":{"injectables/ChartService.html":{}}}],["columnmode",{"_index":2233,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["columns",{"_index":2234,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["command",{"_index":1160,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["commonmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["community",{"_index":2374,"title":{},"body":{"components/VpnComponent.html":{}}}],["compiled",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{}}}],["completed",{"_index":2167,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["component",{"_index":22,"title":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"coverage.html":{}}}],["component_template",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["components",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["components/new.component",{"_index":2444,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/restore.component",{"_index":2445,"title":{},"body":{"modules/WalletModule.html":{}}}],["conditional",{"_index":439,"title":{},"body":{"injectables/AppService.html":{}}}],["conf/app.ini",{"_index":2183,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["conffile",{"_index":499,"title":{},"body":{"injectables/AppService.html":{}}}],["confidentiality",{"_index":2306,"title":{},"body":{"components/UserComponent.html":{}}}],["confidentially",{"_index":2288,"title":{},"body":{"components/UserComponent.html":{}}}],["config",{"_index":432,"title":{},"body":{"injectables/AppService.html":{},"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["config.interface",{"_index":1738,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.interface.ts",{"_index":921,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"coverage.html":{}}}],["config.interface.ts:7",{"_index":925,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:9",{"_index":924,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.service",{"_index":1736,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.service.ts",{"_index":767,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"coverage.html":{}}}],["config.service.ts:12",{"_index":808,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:50",{"_index":771,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:57",{"_index":776,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:59",{"_index":775,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:61",{"_index":773,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:7",{"_index":779,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:8",{"_index":809,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:9",{"_index":778,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["configiniparser",{"_index":418,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser('\\r\\n",{"_index":502,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser.errors.errorduplicatesectionerror",{"_index":504,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configs",{"_index":1031,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurations",{"_index":1013,"title":{},"body":{"injectables/ChartService.html":{}}}],["configureoptions",{"_index":769,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["confirm",{"_index":1812,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/UserComponent.html":{}}}],["connect",{"_index":2633,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connection",{"_index":2665,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["considered",{"_index":762,"title":{},"body":{"interfaces/Balance.html":{}}}],["console",{"_index":1156,"title":{},"body":{"components/ConsoleComponent.html":{},"miscellaneous/variables.html":{}}}],["console'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["console.component",{"_index":1238,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["console.component.html",{"_index":1158,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":1157,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.debug(message",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error('duplicated",{"_index":505,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.error(e",{"_index":507,"title":{},"body":{"injectables/AppService.html":{}}}],["console.error(error",{"_index":1124,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["console.error(message",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.info(message",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log",{"_index":1805,"title":{},"body":{"components/NewComponent.html":{}}}],["console.log(\"blockchain",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('blockchaincomponent",{"_index":839,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["console.log('cleaning",{"_index":2203,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('complete",{"_index":2664,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('creating",{"_index":2186,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('done",{"_index":2204,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('e",{"_index":1532,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log('keyboard",{"_index":1205,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log('keys",{"_index":2190,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('message",{"_index":2656,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('saving",{"_index":2192,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('settingscomponent",{"_index":2066,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log('wallet",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('walletcomponent",{"_index":2428,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.log(`cmd:letheand:${this.command.join",{"_index":1216,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(dat",{"_index":915,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{}}}],["console.log(data",{"_index":1955,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["console.log(err",{"_index":2661,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":1074,"title":{},"body":{"injectables/ChartService.html":{}}}],["console.log(post",{"_index":1883,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.command.join",{"_index":1227,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(this.router.routerstate.snapshot.url",{"_index":1873,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.rows",{"_index":2258,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["console.trace(message",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolecomponent",{"_index":225,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["consolemodule",{"_index":275,"title":{"modules/ConsoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["construction",{"_index":605,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["constructor",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(actions",{"_index":1086,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{}}}],["constructor(appfilesystem",{"_index":1482,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["constructor(appservice",{"_index":1247,"title":{},"body":{"injectables/CryptService.html":{}}}],["constructor(authservice",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cryptservice",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor(dialog",{"_index":2125,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(dialogref",{"_index":1814,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["constructor(filesystem",{"_index":411,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(fs",{"_index":2563,"title":{},"body":{"injectables/WalletService.html":{}}}],["constructor(http",{"_index":822,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["constructor(modalservice",{"_index":1659,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(private",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["constructor(public",{"_index":2132,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(renderer",{"_index":936,"title":{},"body":{"directives/ChartDirective.html":{}}}],["constructor(router",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["constructor(store",{"_index":983,"title":{},"body":{"injectables/ChartService.html":{}}}],["constructor(wallet",{"_index":1797,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(ws",{"_index":1165,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["container",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["content",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockchainService.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/PostComponent.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["content.tofixed(2",{"_index":1576,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["content/html.pipe",{"_index":1849,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/markdown.pipe",{"_index":1852,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/shruggie.pipe",{"_index":1850,"title":{},"body":{"modules/PipesModule.html":{}}}],["contents",{"_index":1463,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["context",{"_index":1787,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["contrast",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conversion",{"_index":1260,"title":{},"body":{"injectables/CryptService.html":{}}}],["converted",{"_index":1326,"title":{},"body":{"injectables/CryptService.html":{}}}],["cost",{"_index":2388,"title":{},"body":{"components/VpnComponent.html":{}}}],["coverage",{"_index":2668,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1313,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"interfaces/RestoreWallet.html":{},"components/UserComponent.html":{}}}],["createaction",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[settings",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createchart",{"_index":980,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchart(name",{"_index":987,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchartelement",{"_index":934,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createchartelement(name",{"_index":943,"title":{},"body":{"directives/ChartDirective.html":{}}}],["created",{"_index":2191,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createeffect",{"_index":1089,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{}}}],["createfeatureselector('charts",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('logs",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('profile",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('settings",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('users",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createopenpgp",{"_index":1241,"title":{},"body":{"injectables/CryptService.html":{}}}],["createopenpgp(username",{"_index":1249,"title":{},"body":{"injectables/CryptService.html":{}}}],["createreducer",{"_index":1143,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/variables.html":{}}}],["createreducer(initialstate",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":995,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["createsalt",{"_index":1242,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(input",{"_index":1255,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(username",{"_index":2201,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createselector",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectchartsstate",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectlogsstate",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectprofilestate",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuserstate",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createwallet",{"_index":612,"title":{"interfaces/CreateWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["createwallet(x",{"_index":2477,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["creation",{"_index":2335,"title":{},"body":{"components/UserComponent.html":{}}}],["crypto",{"_index":402,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["crypto/effort.pipe",{"_index":1853,"title":{},"body":{"modules/PipesModule.html":{}}}],["crypto/hashrate.pipe",{"_index":1847,"title":{},"body":{"modules/PipesModule.html":{}}}],["cryptservice",{"_index":684,"title":{"injectables/CryptService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["cryptservice.sha256salty(username",{"_index":1296,"title":{},"body":{"injectables/CryptService.html":{}}}],["current",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"interfaces/RestoreWallet.html":{},"miscellaneous/variables.html":{}}}],["currentflag",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["currentlanguage",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":1278,"title":{},"body":{"injectables/CryptService.html":{}}}],["d",{"_index":1749,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"pipes/TimeAgoPipe.html":{}}}],["d.gettime",{"_index":2214,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["daemon",{"_index":1410,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/ProfileComponent.html":{},"modules/StatusModule.html":{},"coverage.html":{}}}],["daemon'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["daltonism",{"_index":2102,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["dark",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darkmode",{"_index":2103,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["dat",{"_index":1530,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{}}}],["dat.endswith('.keys",{"_index":2586,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.endswith('.txt",{"_index":2587,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.length",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["data",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/ProfileState.html":{},"interfaces/Response.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["data.data",{"_index":2628,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["data.data.blocks",{"_index":838,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["data.description",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["data.heading",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["data.length",{"_index":2585,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.map((n",{"_index":1789,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["data.robots",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["data/data.module",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["data/debug.rxjs",{"_index":1135,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["data['data",{"_index":1957,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["data['data'].result",{"_index":1959,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["data[0",{"_index":1192,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["database",{"_index":1929,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["datamap",{"_index":922,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamap(data",{"_index":923,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamodule",{"_index":276,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["dataset",{"_index":1723,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dataset.backgroundcolor",{"_index":1040,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.bordercolor",{"_index":1044,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.yaxisid",{"_index":1052,"title":{},"body":{"injectables/ChartService.html":{}}}],["datasets",{"_index":777,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datastore",{"_index":1002,"title":{},"body":{"injectables/ChartService.html":{}}}],["datatable",{"_index":2253,"title":{},"body":{"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["dataupdates",{"_index":2634,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["date",{"_index":858,"title":{},"body":{"components/BlockchainComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["date(value",{"_index":2210,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date/timeago.pipe",{"_index":1848,"title":{},"body":{"modules/PipesModule.html":{}}}],["day",{"_index":1748,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["days",{"_index":2220,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["dd/mm/yyyy",{"_index":859,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["dealing",{"_index":2578,"title":{},"body":{"injectables/WalletService.html":{}}}],["debug",{"_index":1092,"title":{},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["debug(rxjslogginglevel.debug",{"_index":1120,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["debugfunction",{"_index":2678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decimation",{"_index":1777,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["declaration",{"_index":2291,"title":{},"body":{"components/UserComponent.html":{}}}],["declarations",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["declared",{"_index":476,"title":{},"body":{"injectables/AppService.html":{}}}],["decorator",{"_index":1569,"title":{},"body":{"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{}}}],["decorators",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/WalletComponent.html":{}}}],["decrypt",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["decrypted",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["decrypted.id",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["decrypted.username",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["decryption",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["decryptionkey",{"_index":2342,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["decryptionkeys",{"_index":1379,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle",{"_index":1243,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle(id",{"_index":1282,"title":{},"body":{"injectables/CryptService.html":{}}}],["deep",{"_index":760,"title":{},"body":{"interfaces/Balance.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":17,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/TransferSplitIn.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["deleteaddressbook",{"_index":2458,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["deleteaddressbook(x",{"_index":2479,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dependencies",{"_index":268,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":444,"title":{},"body":{"injectables/AppService.html":{}}}],["deploy",{"_index":2380,"title":{},"body":{"components/VpnComponent.html":{}}}],["deprecated",{"_index":438,"title":{},"body":{"injectables/AppService.html":{}}}],["deps",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["describes",{"_index":1294,"title":{},"body":{"injectables/CryptService.html":{}}}],["describing",{"_index":1641,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["designed",{"_index":2293,"title":{},"body":{"components/UserComponent.html":{}}}],["desktop",{"_index":2841,"title":{},"body":{"index.html":{}}}],["destination",{"_index":561,"title":{"interfaces/Destination.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"coverage.html":{}}}],["destinations",{"_index":576,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destroy",{"_index":840,"title":{},"body":{"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["destroysubscriptions",{"_index":981,"title":{},"body":{"injectables/ChartService.html":{}}}],["destroysubscriptions(name",{"_index":996,"title":{},"body":{"injectables/ChartService.html":{}}}],["details",{"_index":2327,"title":{},"body":{"components/UserComponent.html":{}}}],["dev",{"_index":498,"title":{},"body":{"injectables/AppService.html":{},"components/BlockchainComponent.html":{},"miscellaneous/variables.html":{}}}],["dev:setup",{"_index":2847,"title":{},"body":{"index.html":{}}}],["develop",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{}}}],["development",{"_index":2845,"title":{},"body":{"index.html":{}}}],["devices",{"_index":1303,"title":{},"body":{"injectables/CryptService.html":{}}}],["devproduction",{"_index":2848,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1387,"title":{},"body":{"modules/DataModule.html":{}}}],["di",{"_index":1029,"title":{},"body":{"injectables/ChartService.html":{}}}],["dialog",{"_index":2120,"title":{},"body":{"components/StatusComponent.html":{}}}],["dialog/no",{"_index":2144,"title":{},"body":{"modules/StatusModule.html":{}}}],["dialogdata",{"_index":1408,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"coverage.html":{}}}],["dialogref",{"_index":1417,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dictionaries",{"_index":1901,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diff",{"_index":928,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"miscellaneous/variables.html":{}}}],["difficulty",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["digital",{"_index":2295,"title":{},"body":{"components/UserComponent.html":{}}}],["dir",{"_index":896,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{}}}],["directive",{"_index":217,"title":{"directives/ChartDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["directory",{"_index":1488,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["dirname",{"_index":1461,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["disableclosebutton",{"_index":1693,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disabledismissbutton",{"_index":1694,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disablerpclogin",{"_index":2531,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["discussions",{"_index":2034,"title":{},"body":{"components/RootComponent.html":{}}}],["dismiss",{"_index":1657,"title":{},"body":{"components/ModalComponent.html":{}}}],["dismissbuttonlabel",{"_index":1691,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["dispatch",{"_index":2077,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["display",{"_index":805,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["displaycolors",{"_index":1776,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["displayformats",{"_index":1747,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dkey",{"_index":1918,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["do_not_relay",{"_index":2152,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["doc",{"_index":2850,"title":{},"body":{"index.html":{}}}],["doc:serve",{"_index":2851,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["domsanitizer",{"_index":1445,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["don't",{"_index":2307,"title":{},"body":{"components/UserComponent.html":{}}}],["don\\'t",{"_index":2338,"title":{},"body":{"components/UserComponent.html":{}}}],["dont",{"_index":2325,"title":{},"body":{"components/UserComponent.html":{}}}],["download",{"_index":893,"title":{},"body":{"injectables/BlockchainService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["downloadcli",{"_index":887,"title":{},"body":{"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["drawborder",{"_index":1763,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dropbox",{"_index":462,"title":{},"body":{"injectables/AppService.html":{}}}],["dto/makeuriin",{"_index":564,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["duration",{"_index":787,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["during",{"_index":463,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["dvpn",{"_index":2030,"title":{},"body":{"components/RootComponent.html":{}}}],["dynamic",{"_index":2770,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":494,"title":{},"body":{"injectables/AppService.html":{},"pipes/HashRatePipe.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["e.domevent",{"_index":1209,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.domevent.keycode",{"_index":1206,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.key",{"_index":1207,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e2e2e2",{"_index":783,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["each",{"_index":1014,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Destination.html":{}}}],["easier",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["ecc",{"_index":1350,"title":{},"body":{"injectables/CryptService.html":{}}}],["effects",{"_index":548,"title":{"injectables/Effects.html":{},"injectables/Effects-1.html":{}},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":1388,"title":{},"body":{"modules/DataModule.html":{}}}],["effectsmodule.forroot([...effects",{"_index":1401,"title":{},"body":{"modules/DataModule.html":{}}}],["effort",{"_index":1428,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["effortpipe",{"_index":1425,"title":{"pipes/EffortPipe.html":{}},"body":{"pipes/EffortPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["ekey",{"_index":1919,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["electron",{"_index":459,"title":{},"body":{"injectables/AppService.html":{}}}],["electron's",{"_index":454,"title":{},"body":{"injectables/AppService.html":{}}}],["electron/remote",{"_index":475,"title":{},"body":{"injectables/AppService.html":{}}}],["element",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["elementref",{"_index":939,"title":{},"body":{"directives/ChartDirective.html":{}}}],["elements",{"_index":792,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["elmref",{"_index":938,"title":{},"body":{"directives/ChartDirective.html":{}}}],["empty",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["en",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1822,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["enabled",{"_index":1778,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["enableremotemodule",{"_index":482,"title":{},"body":{"injectables/AppService.html":{}}}],["encapsulation",{"_index":1154,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encoded",{"_index":2157,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["encrypt",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["encrypted",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["encryption",{"_index":1316,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["encryptionkey",{"_index":1360,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkey.length",{"_index":1363,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkeys",{"_index":1368,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle",{"_index":1244,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle(id",{"_index":1297,"title":{},"body":{"injectables/CryptService.html":{}}}],["endpoints",{"_index":2844,"title":{},"body":{"index.html":{}}}],["engine",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["engineering",{"_index":1911,"title":{},"body":{"components/ProfileComponent.html":{}}}],["english",{"_index":1808,"title":{},"body":{"components/NewComponent.html":{}}}],["enough",{"_index":761,"title":{},"body":{"interfaces/Balance.html":{}}}],["entity",{"_index":1394,"title":{},"body":{"modules/DataModule.html":{}}}],["entityconfig",{"_index":1393,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitydatamodule",{"_index":1391,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule.forroot(entityconfig",{"_index":1403,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamoduleconfig",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitymetadata",{"_index":2682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitymetadatamap",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entries",{"_index":1535,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["enum",{"_index":2363,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["enumerations",{"_index":2821,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":431,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["environment",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":2660,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["error",{"_index":1073,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error(`chart",{"_index":1038,"title":{},"body":{"injectables/ChartService.html":{}}}],["error(`failed",{"_index":1364,"title":{},"body":{"injectables/CryptService.html":{}}}],["escapehtmlpipe",{"_index":1440,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["etc",{"_index":1926,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["ev",{"_index":1208,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.altkey",{"_index":1211,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.ctrlkey",{"_index":1212,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.keycode",{"_index":1214,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.metakey",{"_index":1213,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["even",{"_index":1306,"title":{},"body":{"injectables/CryptService.html":{}}}],["event",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{}}}],["ex",{"_index":461,"title":{},"body":{"injectables/AppService.html":{}}}],["exactly",{"_index":2385,"title":{},"body":{"components/VpnComponent.html":{}}}],["exists",{"_index":1451,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(pathname",{"_index":1486,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(type",{"_index":1455,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["exitnode",{"_index":2381,"title":{},"body":{"components/VpnComponent.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["exportchain",{"_index":888,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["exports",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["expose",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["exsist",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exsists",{"_index":1458,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["extends",{"_index":554,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["extra",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["fail",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":1555,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["failure",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":493,"title":{},"body":{"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1755,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["favourites",{"_index":2378,"title":{},"body":{"components/VpnComponent.html":{}}}],["feature",{"_index":1823,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["fee",{"_index":577,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["fee_list",{"_index":2275,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["feedback",{"_index":1305,"title":{},"body":{"injectables/CryptService.html":{}}}],["field",{"_index":2086,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["filename",{"_index":610,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["files",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileSystemService.html":{}}}],["filesystem",{"_index":414,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["filesystem/file",{"_index":1329,"title":{},"body":{"injectables/CryptService.html":{}}}],["filesysteminterface",{"_index":1448,"title":{"interfaces/FileSystemInterface.html":{}},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"coverage.html":{}}}],["filesystemservice",{"_index":412,"title":{"injectables/FileSystemService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["filesystemwebservice",{"_index":1483,"title":{"injectables/FileSystemWebService.html":{}},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"coverage.html":{}}}],["fill",{"_index":862,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["filled",{"_index":866,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["filter",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GetTransfersIn.html":{}}}],["filter_by_height",{"_index":1556,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["final",{"_index":467,"title":{},"body":{"injectables/AppService.html":{}}}],["find",{"_index":1026,"title":{},"body":{"injectables/ChartService.html":{}}}],["first",{"_index":424,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{}}}],["flexmodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["folder",{"_index":450,"title":{},"body":{"injectables/AppService.html":{},"interfaces/FileSystemInterface.html":{}}}],["folders",{"_index":477,"title":{},"body":{"injectables/AppService.html":{}}}],["follow,index",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":1752,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["forget",{"_index":2326,"title":{},"body":{"components/UserComponent.html":{}}}],["form",{"_index":907,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["format",{"_index":900,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{}}}],["formcontrol",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["formcontrol('0",{"_index":1970,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(false",{"_index":1976,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(true",{"_index":1972,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formgroup",{"_index":1968,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["found",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["free",{"_index":2298,"title":{},"body":{"components/UserComponent.html":{}}}],["friendly",{"_index":1920,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":403,"title":{},"body":{"injectables/AppService.html":{},"injectables/FileSystemService.html":{},"injectables/WalletService.html":{}}}],["full",{"_index":382,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"modules/RootRoutingModule.html":{}}}],["function",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["functionality",{"_index":1819,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["functions",{"_index":2828,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funds",{"_index":757,"title":{},"body":{"interfaces/Balance.html":{},"injectables/WalletRpcService.html":{}}}],["g",{"_index":1439,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{}}}],["general",{"_index":2065,"title":{},"body":{"components/SettingsComponent.html":{}}}],["generated",{"_index":1921,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["generatekey",{"_index":1245,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatekey(input",{"_index":1311,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatepaymentid",{"_index":565,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":1998,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["generator",{"_index":1909,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["get('https://lethean.hashvault.pro/explorer/api/transactions",{"_index":835,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["get_tx_hex",{"_index":2153,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["get_tx_key",{"_index":601,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["get_tx_keys",{"_index":2154,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["getaddress",{"_index":2459,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook",{"_index":2460,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook(x",{"_index":2482,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbookout",{"_index":1533,"title":{"interfaces/GetAddressBookOut.html":{}},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["getauthstatus",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getbalance",{"_index":2402,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["getbulkpayments",{"_index":2461,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpayments(x",{"_index":2486,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsin",{"_index":1537,"title":{"interfaces/GetBulkPaymentsIn.html":{}},"body":{"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["getbulkpaymentsout",{"_index":1544,"title":{"interfaces/GetBulkPaymentsOut.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["getchild",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(activatedroute",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["getdiscussions('trending",{"_index":2028,"title":{},"body":{"components/RootComponent.html":{}}}],["getfilesystem",{"_index":1498,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["getheight",{"_index":2462,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getisapp",{"_index":426,"title":{},"body":{"injectables/AppService.html":{},"components/BlockchainComponent.html":{}}}],["getisfirstrun",{"_index":422,"title":{},"body":{"injectables/AppService.html":{}}}],["getisweb",{"_index":828,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["getitem",{"_index":2596,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getitem(key",{"_index":2603,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getlength",{"_index":2614,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getpayments",{"_index":2463,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpayments(x",{"_index":2489,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpaymentsin",{"_index":1548,"title":{"interfaces/GetPaymentsIn.html":{}},"body":{"interfaces/GetPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["getpaymentsout",{"_index":1550,"title":{"interfaces/GetPaymentsOut.html":{}},"body":{"interfaces/GetPaymentsOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["gets",{"_index":1000,"title":{},"body":{"injectables/ChartService.html":{},"injectables/WalletService.html":{}}}],["getsub",{"_index":1163,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["getting",{"_index":2840,"title":{"index.html":{}},"body":{}}],["gettransferbytxid",{"_index":2464,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransferbytxid(x",{"_index":2491,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers",{"_index":2465,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers(x",{"_index":2494,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfersin",{"_index":1552,"title":{"interfaces/GetTransfersIn.html":{}},"body":{"interfaces/GetTransfersIn.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["gettransfersout",{"_index":1562,"title":{"interfaces/GetTransfersOut.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["getwalletlist",{"_index":2560,"title":{},"body":{"injectables/WalletService.html":{}}}],["github",{"_index":1267,"title":{},"body":{"injectables/CryptService.html":{}}}],["give",{"_index":1030,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["global",{"_index":2109,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["global_index",{"_index":1586,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["globalfontsize",{"_index":2104,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":2206,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["good",{"_index":1269,"title":{},"body":{"injectables/CryptService.html":{}}}],["grade",{"_index":2330,"title":{},"body":{"components/UserComponent.html":{}}}],["gradient(circle",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":2854,"title":{},"body":{"modules.html":{}}}],["gridlines",{"_index":1761,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["group",{"_index":1600,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"injectables/WebStorageService.html":{}}}],["guard",{"_index":615,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handles",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handling",{"_index":2290,"title":{},"body":{"components/UserComponent.html":{}}}],["happen",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["hascli",{"_index":2003,"title":{},"body":{"components/RootComponent.html":{}}}],["hash",{"_index":1323,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/TransferOut.html":{}}}],["hashrate",{"_index":1568,"title":{},"body":{"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"miscellaneous/variables.html":{}}}],["hashrate.chart",{"_index":1025,"title":{},"body":{"injectables/ChartService.html":{}}}],["hashrate.chart.ts",{"_index":1715,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["hashrate.chart.ts:12",{"_index":1729,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:132",{"_index":1720,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:14",{"_index":1731,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.subtitle",{"_index":843,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hashrate.title",{"_index":842,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hashratepipe",{"_index":1566,"title":{"pipes/HashRatePipe.html":{}},"body":{"pipes/HashRatePipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["hashvault",{"_index":844,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["headers",{"_index":904,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["heading",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["height",{"_index":173,"title":{"interfaces/Height.html":{}},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Height.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["height:40vh",{"_index":965,"title":{},"body":{"directives/ChartDirective.html":{}}}],["helps",{"_index":2382,"title":{},"body":{"components/VpnComponent.html":{}}}],["here",{"_index":453,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["hex",{"_index":598,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["hexadecimal",{"_index":1639,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["hh:mm:ss",{"_index":860,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["hidden",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["hide",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hideclosebutton",{"_index":1695,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidedismissbutton",{"_index":1696,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidenavigation",{"_index":2105,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["high",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highcontrasttext",{"_index":2106,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["highlight",{"_index":2304,"title":{},"body":{"components/UserComponent.html":{}}}],["history",{"_index":2318,"title":{},"body":{"components/UserComponent.html":{}}}],["hiveio/dhive",{"_index":1866,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{},"dependencies.html":{}}}],["hold",{"_index":2308,"title":{},"body":{"components/UserComponent.html":{}}}],["holds",{"_index":1005,"title":{},"body":{"injectables/ChartService.html":{}}}],["home",{"_index":895,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["host",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{}}}],["hours",{"_index":2218,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["hover",{"_index":785,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hovering",{"_index":789,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hsm/encrypted",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["html.dark",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":824,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":903,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["httploaderfactory",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["https",{"_index":2843,"title":{},"body":{"index.html":{}}}],["https://anyx.io",{"_index":1869,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1117,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["https://api.hive.blog",{"_index":1867,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hivekings.com",{"_index":1868,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.openhive.network",{"_index":1870,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://lethean.hashvault.pro/explorer/api/transactions",{"_index":833,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["https://localhost:36911/daemon/chain/export",{"_index":916,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/import",{"_index":917,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/start",{"_index":912,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/wallet/json_rpc",{"_index":2526,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/daemon/wallet/rpc",{"_index":2532,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/filesystem",{"_index":1524,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["https://localhost:36911/object",{"_index":2611,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["id",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"directives/ChartDirective.html":{},"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Response.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["id's",{"_index":1923,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["idea",{"_index":1270,"title":{},"body":{"injectables/CryptService.html":{}}}],["identifiable",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":599,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["ids",{"_index":1355,"title":{},"body":{"injectables/CryptService.html":{}}}],["if(data['data",{"_index":1958,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["if(data['data'].error",{"_index":1956,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["if(this.attach",{"_index":1191,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(this.child.keyeventinput",{"_index":1203,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ignored",{"_index":580,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["im",{"_index":1264,"title":{},"body":{"injectables/CryptService.html":{}}}],["image",{"_index":1922,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":2579,"title":{},"body":{"injectables/WalletService.html":{}}}],["implements",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["import",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["import('./blockchain.module').then((m",{"_index":884,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["import('./logs/logs.module').then((m",{"_index":2094,"title":{},"body":{"modules/SettingsModule.html":{}}}],["import('./post.module').then((m",{"_index":1891,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["import('./settings.module').then",{"_index":2097,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["import('./user.module').then((m",{"_index":2366,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["import('./wallet.module').then((m",{"_index":2455,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["important",{"_index":1231,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["importchain",{"_index":889,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imported",{"_index":445,"title":{},"body":{"injectables/AppService.html":{}}}],["imports",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["impose",{"_index":2300,"title":{},"body":{"components/UserComponent.html":{}}}],["include",{"_index":867,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["including",{"_index":1495,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["incoming",{"_index":1592,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"components/WalletComponent.html":{}}}],["incomingtransfers",{"_index":2466,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfers(x",{"_index":2496,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfersin",{"_index":1579,"title":{"interfaces/IncomingTransfersIn.html":{}},"body":{"interfaces/IncomingTransfersIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["incomingtransfersout",{"_index":1584,"title":{"interfaces/IncomingTransfersOut.html":{}},"body":{"interfaces/IncomingTransfersOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["informed",{"_index":2331,"title":{},"body":{"components/UserComponent.html":{}}}],["inherited",{"_index":1718,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ini",{"_index":433,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["init",{"_index":2067,"title":{},"body":{"components/SettingsComponent.html":{}}}],["initialstate",{"_index":1144,"title":{},"body":{"interfaces/ChartsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":947,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(mat_dialog_data",{"_index":1418,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(platform_id",{"_index":952,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["injectable",{"_index":398,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":1674,"title":{},"body":{"components/ModalComponent.html":{}}}],["injectables",{"_index":400,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["input",{"_index":948,"title":{},"body":{"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["inputs",{"_index":935,"title":{},"body":{"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["install",{"_index":1821,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"index.html":{}}}],["installed",{"_index":429,"title":{},"body":{"injectables/AppService.html":{}}}],["instance",{"_index":991,"title":{},"body":{"injectables/ChartService.html":{}}}],["instanceof",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["instances",{"_index":1009,"title":{},"body":{"injectables/ChartService.html":{}}}],["int",{"_index":579,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["integer",{"_index":1637,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/TransferOut.html":{}}}],["integrated_address",{"_index":1596,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["integratedaddress",{"_index":1594,"title":{"interfaces/IntegratedAddress.html":{}},"body":{"interfaces/IntegratedAddress.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["interact",{"_index":1287,"title":{},"body":{"injectables/CryptService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"coverage.html":{},"index.html":{}}}],["interface/file",{"_index":1525,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"overview.html":{}}}],["interfaces/difficulty.state",{"_index":1136,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["interfaces/user.options",{"_index":2344,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["internal",{"_index":1590,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["intersect",{"_index":1773,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["io",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["isapp",{"_index":410,"title":{},"body":{"injectables/AppService.html":{},"components/BlockchainComponent.html":{}}}],["isauthenticated",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ischecked",{"_index":2403,"title":{},"body":{"components/WalletComponent.html":{}}}],["ischecked(col",{"_index":2408,"title":{},"body":{"components/WalletComponent.html":{}}}],["isfirstrun",{"_index":409,"title":{},"body":{"injectables/AppService.html":{}}}],["isn't",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":950,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":953,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformserver",{"_index":1022,"title":{},"body":{"injectables/ChartService.html":{}}}],["isplatformserver(this.platformid",{"_index":1071,"title":{},"body":{"injectables/ChartService.html":{}}}],["issue",{"_index":1268,"title":{},"body":{"injectables/CryptService.html":{}}}],["issues",{"_index":1266,"title":{},"body":{"injectables/CryptService.html":{}}}],["isweb",{"_index":821,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["it'll",{"_index":1301,"title":{},"body":{"injectables/CryptService.html":{}}}],["it's",{"_index":2323,"title":{},"body":{"components/UserComponent.html":{}}}],["it\\'s",{"_index":2339,"title":{},"body":{"components/UserComponent.html":{}}}],["item",{"_index":790,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["items",{"_index":2594,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["itself",{"_index":1325,"title":{},"body":{"injectables/CryptService.html":{}}}],["js",{"_index":490,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["json",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["json.parse",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(dat",{"_index":1528,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["json.stringify",{"_index":2198,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["json.stringify(rpcbody(method)(params))).then((data",{"_index":1954,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["jsonrpc",{"_index":1945,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["jszmq",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1572,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["keep",{"_index":2376,"title":{},"body":{"components/VpnComponent.html":{}}}],["keephtml",{"_index":1442,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["kept",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":602,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["key(key",{"_index":2605,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key(key:number",{"_index":2617,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key_type",{"_index":1932,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["keys",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["keysize",{"_index":1346,"title":{},"body":{"injectables/CryptService.html":{}}}],["kind",{"_index":2663,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["know",{"_index":2576,"title":{},"body":{"injectables/WalletService.html":{}}}],["knowledge",{"_index":1271,"title":{},"body":{"injectables/CryptService.html":{}}}],["known",{"_index":2567,"title":{},"body":{"injectables/WalletService.html":{}}}],["kurkle/color",{"_index":1021,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["l337",{"_index":1259,"title":{},"body":{"injectables/CryptService.html":{}}}],["label",{"_index":1047,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["lang",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.de",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.en",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.es",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.fr",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.ru",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.zh",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/TransferSplitIn.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["later",{"_index":1281,"title":{},"body":{"injectables/CryptService.html":{}}}],["layout",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"injectables/NetworkHashrateChart.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leave",{"_index":1380,"title":{},"body":{"injectables/CryptService.html":{}}}],["left",{"_index":1742,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["legacy",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["length",{"_index":566,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["less",{"_index":1272,"title":{},"body":{"injectables/CryptService.html":{}}}],["lethean",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{},"modules/SettingsModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"index.html":{}}}],["lethean's",{"_index":2292,"title":{},"body":{"components/UserComponent.html":{}}}],["lethean/cli",{"_index":897,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["lethean/users",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{}}}],["lethean\\'s",{"_index":2337,"title":{},"body":{"components/UserComponent.html":{}}}],["letheanconfig",{"_index":404,"title":{},"body":{"injectables/AppService.html":{}}}],["letheanpaths",{"_index":405,"title":{},"body":{"injectables/AppService.html":{}}}],["level",{"_index":2836,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":2825,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["limit",{"_index":2031,"title":{},"body":{"components/RootComponent.html":{}}}],["limitations",{"_index":2301,"title":{},"body":{"components/UserComponent.html":{}}}],["line",{"_index":795,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["linewidth",{"_index":1762,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["list",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/VpnComponent.html":{},"injectables/WalletService.html":{}}}],["list(dirname",{"_index":1515,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["list(type",{"_index":1460,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["listfiles",{"_index":1479,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["listfiles(dirname",{"_index":1489,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["lite",{"_index":1258,"title":{},"body":{"injectables/CryptService.html":{}}}],["literal",{"_index":1536,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{}}}],["live",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":1310,"title":{},"body":{"injectables/CryptService.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":883,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["loadconfig",{"_index":407,"title":{},"body":{"injectables/AppService.html":{}}}],["loaded",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{}}}],["loader",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadrequestedchartdifficulty",{"_index":1083,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["loads",{"_index":989,"title":{},"body":{"injectables/ChartService.html":{}}}],["loadtransactions",{"_index":2236,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["loadtransfers",{"_index":2561,"title":{},"body":{"injectables/WalletService.html":{}}}],["loadtransfers(opts",{"_index":2568,"title":{},"body":{"injectables/WalletService.html":{}}}],["local",{"_index":497,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":524,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":522,"title":{},"body":{"interfaces/AppState.html":{}}}],["localstoragesyncreducer",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["localstoragesyncreducer(reducer",{"_index":2833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lock",{"_index":593,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["lock_open",{"_index":2135,"title":{},"body":{"components/StatusComponent.html":{}}}],["locked",{"_index":2328,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":1601,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log(level",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logentry",{"_index":1598,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"coverage.html":{}}}],["logged",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logging",{"_index":2824,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":380,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["login(username",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":673,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":227,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginmethod",{"_index":2361,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["loginmethods",{"_index":2362,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["logo",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["logonly",{"_index":1399,"title":{},"body":{"modules/DataModule.html":{}}}],["logout",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["logs",{"_index":511,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/LogEntry.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["logs'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["logs.component",{"_index":1630,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.component.html",{"_index":1622,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1621,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.logsstate",{"_index":514,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs.reducer",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["logs/logs.module",{"_index":2089,"title":{},"body":{"modules/SettingsModule.html":{}}}],["logscomponent",{"_index":229,"title":{"components/LogsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logsmodule",{"_index":1625,"title":{"modules/LogsModule.html":{}},"body":{"modules/LogsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsstate",{"_index":1602,"title":{"interfaces/LogsState.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logstype",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longer",{"_index":1300,"title":{},"body":{"injectables/CryptService.html":{}}}],["looking",{"_index":1542,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["lthn",{"_index":35,"title":{"classes/LTHN.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/DialogData.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"coverage.html":{}}}],["lthn(this.div(1e8",{"_index":572,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["lthn/rxjs",{"_index":2773,"title":{},"body":{"dependencies.html":{}}}],["lthnchart",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["lttb",{"_index":1779,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["m",{"_index":1573,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/SettingsRoutingModule.html":{}}}],["m.blockchainmodule",{"_index":885,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["m.logsmodule",{"_index":2095,"title":{},"body":{"modules/SettingsModule.html":{}}}],["m.postmodule",{"_index":1892,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2098,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["m.usermodule",{"_index":2367,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["m.walletmodule",{"_index":2456,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["made",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["magic",{"_index":2320,"title":{},"body":{"components/UserComponent.html":{}}}],["main",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{}}}],["main.ts",{"_index":483,"title":{},"body":{"injectables/AppService.html":{}}}],["maintainaspectratio",{"_index":780,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["make",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{}}}],["makeintegratedaddress",{"_index":2467,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddress(x",{"_index":2498,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddressin",{"_index":1631,"title":{"interfaces/MakeIntegratedAddressIn.html":{}},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["makes",{"_index":2383,"title":{},"body":{"components/VpnComponent.html":{}}}],["makeuri",{"_index":2468,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuri(x",{"_index":2500,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuriin",{"_index":563,"title":{"interfaces/MakeUriIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["making",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":742,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["map",{"_index":1003,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{}}}],["markdown",{"_index":1645,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownpipe",{"_index":1643,"title":{"pipes/MarkdownPipe.html":{}},"body":{"pipes/MarkdownPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{}}}],["marked",{"_index":1648,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["marked(value",{"_index":1650,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["marketplace",{"_index":2373,"title":{},"body":{"components/VpnComponent.html":{}}}],["mat",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["mat_dialog_data",{"_index":1413,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matbuttonmodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["matcardmodule",{"_index":674,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["match",{"_index":1048,"title":{},"body":{"injectables/ChartService.html":{}}}],["matcheckboxmodule",{"_index":2354,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":2126,"title":{},"body":{"components/StatusComponent.html":{}}}],["matdialogmodule",{"_index":2143,"title":{},"body":{"modules/StatusModule.html":{}}}],["matdialogref",{"_index":1414,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matdividermodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["matexpansionmodule",{"_index":2442,"title":{},"body":{"modules/WalletModule.html":{}}}],["matformfieldmodule",{"_index":2084,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["math.abs((now.gettime",{"_index":2213,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.floor(n.diff",{"_index":1791,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["math.round",{"_index":2212,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(days",{"_index":2224,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(hours",{"_index":2221,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(minutes",{"_index":2219,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(seconds",{"_index":2216,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math/removetrailingzeros.pipe",{"_index":1851,"title":{},"body":{"modules/PipesModule.html":{}}}],["maticonmodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matinputmodule",{"_index":678,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matlistmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["matmenumodule",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["matoptionmodule",{"_index":2351,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":2356,"title":{},"body":{"modules/UserModule.html":{}}}],["matselectmodule",{"_index":2087,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matsidenav",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":2047,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{}}}],["mattoolbarmodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["mattooltipmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["max",{"_index":1561,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["max_height",{"_index":1557,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["maxage",{"_index":1397,"title":{},"body":{"modules/DataModule.html":{}}}],["maxrotation",{"_index":1760,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["maybe",{"_index":1275,"title":{},"body":{"injectables/CryptService.html":{}}}],["md",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaningless",{"_index":2310,"title":{},"body":{"components/UserComponent.html":{}}}],["means",{"_index":585,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["member",{"_index":2384,"title":{},"body":{"components/VpnComponent.html":{}}}],["menu",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.blockchain",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.dashboard",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.settings",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.wallet",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["menu_open",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1366,"title":{},"body":{"injectables/CryptService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["metadata",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"modules/DataModule.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["metadata.ts",{"_index":2681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metareducer",{"_index":519,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metaservice",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":1947,"title":{},"body":{"interfaces/Response.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["mid",{"_index":1437,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["military",{"_index":2329,"title":{},"body":{"components/UserComponent.html":{}}}],["min",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{}}}],["min_block_height",{"_index":1539,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["min_height",{"_index":1558,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["mine",{"_index":746,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["minutes",{"_index":2215,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["mirror",{"_index":1767,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["miscellaneous",{"_index":2820,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":584,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixin",{"_index":582,"title":{},"body":{"classes/Atomic.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixing",{"_index":586,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mkdir",{"_index":1452,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(dirname",{"_index":1491,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(type",{"_index":1464,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["mmm",{"_index":1750,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modal",{"_index":1652,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["modal.component.html",{"_index":1653,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":231,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalconfig",{"_index":1672,"title":{"interfaces/ModalConfig.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/WalletComponent.html":{},"coverage.html":{}}}],["modalconfig.closebuttonlabel",{"_index":1688,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.dismissbuttonlabel",{"_index":1687,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.modaltitle",{"_index":1686,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":1654,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalmodule",{"_index":1709,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["modalref",{"_index":1655,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalservice",{"_index":1662,"title":{},"body":{"components/ModalComponent.html":{}}}],["modaltitle",{"_index":1692,"title":{},"body":{"interfaces/ModalConfig.html":{},"components/WalletComponent.html":{}}}],["mode",{"_index":1772,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":2299,"title":{},"body":{"components/UserComponent.html":{}}}],["module",{"_index":265,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}},"body":{"injectables/AppService.html":{}}}],["module/auth/auth.module",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/login.component",{"_index":378,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/auth/route.guard",{"_index":882,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/chart/base",{"_index":1735,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart",{"_index":1737,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart.module",{"_index":876,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chart/chart.service",{"_index":831,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["module/root",{"_index":375,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/root.component",{"_index":2053,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/root.module",{"_index":2054,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/settings/data",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["module/settings/settings",{"_index":376,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/status/status.module",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user",{"_index":374,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":267,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/chart/data",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/chart/data/actions",{"_index":1734,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modules/settings/data",{"_index":520,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/user/data/user",{"_index":521,"title":{},"body":{"interfaces/AppState.html":{}}}],["moment",{"_index":1019,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["monero",{"_index":590,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["months",{"_index":2223,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["more",{"_index":1045,"title":{},"body":{"injectables/ChartService.html":{}}}],["mostly",{"_index":1589,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["msg",{"_index":2643,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["much",{"_index":2297,"title":{},"body":{"components/UserComponent.html":{}}}],["multiple",{"_index":1289,"title":{},"body":{"injectables/CryptService.html":{}}}],["n.ts",{"_index":1790,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1902,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["names.mining",{"_index":845,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["navigation",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigationend",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["navigator.useragent.tolowercase().indexof",{"_index":495,"title":{},"body":{"injectables/AppService.html":{}}}],["nbsp;&nbsp",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["nearest",{"_index":1771,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["need",{"_index":466,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["network",{"_index":2312,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{},"miscellaneous/variables.html":{}}}],["network/chart/difficulty",{"_index":1119,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["networkdifficulty",{"_index":1010,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{},"miscellaneous/variables.html":{}}}],["networkhashratechart",{"_index":985,"title":{"injectables/NetworkHashrateChart.html":{}},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["networkhashrateconfigservice",{"_index":984,"title":{},"body":{"injectables/ChartService.html":{}}}],["never",{"_index":2302,"title":{},"body":{"components/UserComponent.html":{}}}],["new",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new'},{'name",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["new.component.html",{"_index":1794,"title":{},"body":{"components/NewComponent.html":{}}}],["new_algorithm",{"_index":604,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["newcomponent",{"_index":233,"title":{"components/NewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"coverage.html":{},"overview.html":{}}}],["newcomponent,restorecomponent,transactionscomponent,opencomponent,routermodule",{"_index":2453,"title":{},"body":{"modules/WalletModule.html":{}}}],["ng",{"_index":1184,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{}}}],["ngbmodal",{"_index":1660,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodalref",{"_index":1670,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["ngondestroy",{"_index":820,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ngoninit",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["ngrx",{"_index":523,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/component",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["ngrx/data",{"_index":1392,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1131,"title":{},"body":{"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1390,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"modules/DataModule.html":{},"dependencies.html":{}}}],["ngterminal",{"_index":1178,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ngterminalmodule",{"_index":1239,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["nguniversal/express",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":2449,"title":{},"body":{"modules/WalletModule.html":{}}}],["nodaemonrunningdialog",{"_index":236,"title":{"components/NoDaemonRunningDialog.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodejs",{"_index":472,"title":{},"body":{"injectables/AppService.html":{}}}],["nodejs's",{"_index":443,"title":{},"body":{"injectables/AppService.html":{}}}],["nodes",{"_index":1913,"title":{},"body":{"components/ProfileComponent.html":{},"components/VpnComponent.html":{}}}],["nofollow,noindex",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["none",{"_index":2827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["normalized",{"_index":781,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["note",{"_index":2243,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["notes",{"_index":442,"title":{},"body":{"injectables/AppService.html":{}}}],["nothing",{"_index":1381,"title":{},"body":{"injectables/CryptService.html":{}}}],["now",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/TimeAgoPipe.html":{}}}],["npm",{"_index":2846,"title":{},"body":{"index.html":{}}}],["null",{"_index":1383,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"pipes/ShruggiePipe.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":573,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["number(this",{"_index":574,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["number.isnan(seconds",{"_index":2228,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["object",{"_index":479,"title":{},"body":{"injectables/AppService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["object.values(data).flat",{"_index":2257,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["observable",{"_index":1001,"title":{},"body":{"injectables/ChartService.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["observable.debug",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observables",{"_index":1006,"title":{},"body":{"injectables/ChartService.html":{}}}],["of(chartsactions.chartnetworkdifficultyloadfailure({error",{"_index":1140,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["offsetgridlines",{"_index":1765,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["oftype",{"_index":1130,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{}}}],["oftype('[settings",{"_index":2074,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultyloadrequested",{"_index":1101,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystartpolling",{"_index":1091,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystoppolling",{"_index":1098,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["omit",{"_index":2000,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["on(chartsactions.chartnetworkdifficultyloadfailure",{"_index":1148,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/variables.html":{}}}],["on(logsactions.addlog",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(settingsactions.changelanguage",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(settingsactions.toggledarkmode",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(settingsactions.togglehidenavigation",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclose",{"_index":1697,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["ondestroy",{"_index":814,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ondismiss",{"_index":1698,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["one",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{}}}],["oninit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["onnoclick",{"_index":1419,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["open",{"_index":1658,"title":{},"body":{"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["open'},{'name",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["open.component.html",{"_index":1825,"title":{},"body":{"components/OpenComponent.html":{}}}],["opencomponent",{"_index":239,"title":{"components/OpenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"coverage.html":{},"overview.html":{}}}],["opened",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/WalletRpcService.html":{}}}],["openedwallet",{"_index":2399,"title":{},"body":{"components/WalletComponent.html":{}}}],["openmodal",{"_index":2404,"title":{},"body":{"components/WalletComponent.html":{}}}],["openned",{"_index":2485,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openpgp",{"_index":406,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["openwallet",{"_index":609,"title":{"interfaces/OpenWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["openwallet(key",{"_index":2414,"title":{},"body":{"components/WalletComponent.html":{}}}],["openwallet(req",{"_index":2570,"title":{},"body":{"injectables/WalletService.html":{}}}],["openwallet(x",{"_index":2502,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["option",{"_index":1107,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":748,"title":{},"body":{"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["options.pollinginterval).pipe",{"_index":1112,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["opts",{"_index":2237,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["orchestrates",{"_index":2577,"title":{},"body":{"injectables/WalletService.html":{}}}],["order",{"_index":451,"title":{},"body":{"injectables/AppService.html":{}}}],["other(method",{"_index":2504,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["otherwise",{"_index":2271,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["out",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["outpouts",{"_index":583,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["output",{"_index":1358,"title":{},"body":{"injectables/CryptService.html":{}}}],["outputs",{"_index":2263,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["overflow",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":774,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["overview",{"_index":2855,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1575,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/PostRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.addsection('daemon",{"_index":2179,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.set('daemon",{"_index":2180,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.stringify('\\r\\n",{"_index":2184,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["package",{"_index":2760,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":449,"title":{},"body":{"injectables/AppService.html":{}}}],["padding",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["page",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["panel",{"_index":2092,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["param",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1948,"title":{},"body":{"interfaces/Response.html":{},"miscellaneous/variables.html":{}}}],["parseint(value",{"_index":1940,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["parser",{"_index":434,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["parseuri",{"_index":607,"title":{"interfaces/ParseUri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["parseuri(x",{"_index":2507,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["parsing",{"_index":1740,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["party",{"_index":474,"title":{},"body":{"injectables/AppService.html":{}}}],["pass",{"_index":1354,"title":{},"body":{"injectables/CryptService.html":{}}}],["passphrase",{"_index":1283,"title":{},"body":{"injectables/CryptService.html":{}}}],["password",{"_index":611,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["password_confirm",{"_index":1795,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["passwordless",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordrepeat",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["path",{"_index":379,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["path(filename",{"_index":1518,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["path(type",{"_index":1467,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["pathmatch",{"_index":381,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["pathname",{"_index":1456,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["payload",{"_index":1121,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WebStorageService.html":{}}}],["payload):string",{"_index":2624,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payload}).then((data",{"_index":2627,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payment",{"_index":1546,"title":{"interfaces/Payment.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["payment_id",{"_index":12,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["payment_ids",{"_index":1540,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["payments",{"_index":1543,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["pbkdf2",{"_index":1315,"title":{},"body":{"injectables/CryptService.html":{}}}],["pending",{"_index":1559,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["people",{"_index":1277,"title":{},"body":{"injectables/CryptService.html":{}}}],["per",{"_index":2314,"title":{},"body":{"components/UserComponent.html":{}}}],["perform",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["persist",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["person_add",{"_index":1910,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personality",{"_index":1290,"title":{},"body":{"injectables/CryptService.html":{}}}],["phase",{"_index":465,"title":{},"body":{"injectables/AppService.html":{}}}],["pi4",{"_index":1308,"title":{},"body":{"injectables/CryptService.html":{}}}],["pipe",{"_index":1118,"title":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{}},"body":{"injectables/ChartsEffects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe(filter((event",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["pipes",{"_index":1426,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"overview.html":{}}}],["pipes/pipes.module",{"_index":1889,"title":{},"body":{"modules/PostModule.html":{}}}],["pipesmodule",{"_index":1839,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1434,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["platform_id",{"_index":949,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["platformid",{"_index":940,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["please",{"_index":480,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["plugin.lthn.chain.table.recent",{"_index":847,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.wallet.button.create",{"_index":1813,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.button.restore",{"_index":1994,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.button.unlock",{"_index":1836,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.label.address",{"_index":1988,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.autosave",{"_index":1992,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.filename",{"_index":1810,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.restore",{"_index":1991,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.spend",{"_index":1989,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.view",{"_index":1990,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.wallet",{"_index":1811,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.new",{"_index":1809,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.titles.restore",{"_index":1987,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.unlockang",{"_index":1835,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.titles.wallet",{"_index":2259,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["plugin/console/console.module",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{}}}],["plugin/hashvault/charts/network",{"_index":1024,"title":{},"body":{"injectables/ChartService.html":{}}}],["plugin/hive/post/post",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain.service",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/wallet/components/open.component",{"_index":2446,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/components/transactions.component",{"_index":2448,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/interfaces",{"_index":2251,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["plugin/lthn/wallet/interfaces/requests/restorewallet",{"_index":2528,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["plugin/lthn/wallet/wallet",{"_index":377,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/wallet/wallet.module",{"_index":2049,"title":{},"body":{"modules/RootModule.html":{}}}],["plugin/lthn/wallet/wallet.service",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["plugins",{"_index":804,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["pluralnames",{"_index":2683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["point",{"_index":793,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WebsocketService.html":{}}}],["polling",{"_index":1110,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/variables.html":{}}}],["pollinginterval",{"_index":930,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["pollingstartaction",{"_index":1716,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollingstopaction",{"_index":1717,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollinguntil",{"_index":1085,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["polyfill",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["pool",{"_index":846,"title":{},"body":{"components/BlockchainComponent.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["poolstatsstate",{"_index":1145,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["position",{"_index":963,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["possible",{"_index":2324,"title":{},"body":{"components/UserComponent.html":{}}}],["post",{"_index":911,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"injectables/WalletRpcService.html":{}}}],["post'},{'name",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["post(`${this.apiurl}/list",{"_index":1527,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/read",{"_index":1529,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`https://localhost:36911/update/cli",{"_index":918,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["post.component",{"_index":1888,"title":{},"body":{"modules/PostModule.html":{}}}],["post.component.html",{"_index":1856,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.scss",{"_index":1855,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].author",{"_index":1882,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].body",{"_index":1878,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].title",{"_index":1880,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":241,"title":{"components/PostComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postmodule",{"_index":1884,"title":{"modules/PostModule.html":{}},"body":{"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postroutingmodule",{"_index":363,"title":{"modules/PostRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":2004,"title":{},"body":{"components/RootComponent.html":{}}}],["prefrences",{"_index":1925,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["present",{"_index":446,"title":{},"body":{"injectables/AppService.html":{}}}],["primary",{"_index":1997,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["printable",{"_index":1210,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["priority",{"_index":2155,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["privacy",{"_index":2286,"title":{},"body":{"components/UserComponent.html":{}}}],["private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PostComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["privatekey",{"_index":1372,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pro",{"_index":1757,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["process",{"_index":456,"title":{},"body":{"injectables/AppService.html":{}}}],["processingform",{"_index":2174,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["production",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1894,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profile.component.html",{"_index":1896,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1895,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profileactiontypes",{"_index":2727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilecomponent",{"_index":243,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{}}}],["profilereducer",{"_index":2687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["profiles",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{}}}],["profilestate",{"_index":1914,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["promise(resolve",{"_index":1675,"title":{},"body":{"components/ModalComponent.html":{}}}],["prop",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["props",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protect",{"_index":2294,"title":{},"body":{"components/UserComponent.html":{}}}],["protected",{"_index":1252,"title":{},"body":{"injectables/CryptService.html":{}}}],["protecting",{"_index":2285,"title":{},"body":{"components/UserComponent.html":{}}}],["protects",{"_index":1356,"title":{},"body":{"injectables/CryptService.html":{}}}],["provide",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{}}}],["provided",{"_index":1004,"title":{},"body":{"injectables/ChartService.html":{}}}],["providedin",{"_index":437,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["provider",{"_index":2379,"title":{},"body":{"components/VpnComponent.html":{}}}],["providers",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["public",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["publically",{"_index":2269,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["publickey",{"_index":2187,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["purchase",{"_index":2317,"title":{},"body":{"components/UserComponent.html":{}}}],["pure",{"_index":1435,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["purposes",{"_index":1317,"title":{},"body":{"injectables/CryptService.html":{}}}],["querykey",{"_index":2469,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykey(x",{"_index":2509,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykeyin",{"_index":1930,"title":{"interfaces/QueryKeyIn.html":{}},"body":{"interfaces/QueryKeyIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["querykeyout",{"_index":1933,"title":{"interfaces/QueryKeyOut.html":{}},"body":{"interfaces/QueryKeyOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["quick",{"_index":1307,"title":{},"body":{"injectables/CryptService.html":{}}}],["r",{"_index":1438,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["r\\n",{"_index":1194,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["radial",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":794,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["random",{"_index":594,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["random.hex(false)(random.engines.nativemath",{"_index":569,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"miscellaneous/variables.html":{}}}],["randomalias",{"_index":1897,"title":{},"body":{"components/ProfileComponent.html":{}}}],["raw",{"_index":899,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["reactiveformsmodule",{"_index":676,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["read",{"_index":1453,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["read(filename",{"_index":1520,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["read(type",{"_index":1470,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["readfile",{"_index":1480,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readfile(filename",{"_index":1493,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["reason",{"_index":1286,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"injectables/WebsocketService.html":{}}}],["receive",{"_index":1638,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["received",{"_index":2657,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["recenttxs",{"_index":819,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["recipient",{"_index":1640,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recipient_name",{"_index":1634,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recover",{"_index":2322,"title":{},"body":{"components/UserComponent.html":{}}}],["redirected",{"_index":2334,"title":{},"body":{"components/UserComponent.html":{}}}],["reducer",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1149,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":1167,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["refrence",{"_index":2842,"title":{},"body":{"index.html":{}}}],["region",{"_index":2387,"title":{},"body":{"components/VpnComponent.html":{}}}],["registerables",{"_index":1016,"title":{},"body":{"injectables/ChartService.html":{}}}],["rehydrate",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{}}}],["relative",{"_index":964,"title":{},"body":{"directives/ChartDirective.html":{}}}],["relativelinkresolution",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reminder",{"_index":469,"title":{},"body":{"injectables/AppService.html":{}}}],["remote",{"_index":478,"title":{},"body":{"injectables/AppService.html":{},"components/ProfileComponent.html":{}}}],["removeitem",{"_index":2597,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeitem(key",{"_index":2607,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeonundefined",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{}}}],["removetrailingzero",{"_index":1936,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["removetrailingzerospipe",{"_index":1843,"title":{"pipes/RemoveTrailingZerosPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"coverage.html":{},"overview.html":{}}}],["renderappview",{"_index":2005,"title":{},"body":{"components/RootComponent.html":{}}}],["renderer",{"_index":455,"title":{},"body":{"injectables/AppService.html":{},"directives/ChartDirective.html":{}}}],["renderer2",{"_index":937,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderfirstrunview",{"_index":2006,"title":{},"body":{"components/RootComponent.html":{}}}],["renderwebview",{"_index":2007,"title":{},"body":{"components/RootComponent.html":{}}}],["replace('o",{"_index":1330,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/a/gi",{"_index":1334,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/e/gi",{"_index":1332,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/l/gi",{"_index":1331,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/s/gi",{"_index":1336,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/t/gi",{"_index":1338,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducable",{"_index":1327,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducible",{"_index":1273,"title":{},"body":{"injectables/CryptService.html":{}}}],["req",{"_index":2516,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["request",{"_index":1475,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request(this.url)('add_address_book",{"_index":2553,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('create_wallet",{"_index":2556,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('delete_address_book",{"_index":2554,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('generate_from_keys",{"_index":2557,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_address_book",{"_index":2552,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_bulk_payments",{"_index":2542,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_payments",{"_index":2541,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfer_by_txid",{"_index":2544,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfers",{"_index":2543,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getaddress",{"_index":2534,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getbalance",{"_index":2533,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getheight",{"_index":2535,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('incoming_transfers",{"_index":2545,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_integrated_address",{"_index":2547,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_uri",{"_index":2550,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('open_wallet",{"_index":2555,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('parse_uri",{"_index":2551,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('query_key",{"_index":2546,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('split_integrated_address",{"_index":2548,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('stop_wallet",{"_index":2549,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('store",{"_index":2540,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_all",{"_index":2539,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_dust",{"_index":2538,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer",{"_index":2536,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer_split",{"_index":2537,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)(method",{"_index":2558,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["requested",{"_index":1469,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"miscellaneous/variables.html":{}}}],["require('axios').default",{"_index":1951,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/variables.html":{}}}],["require('crypto",{"_index":489,"title":{},"body":{"injectables/AppService.html":{}}}],["require('openpgp",{"_index":487,"title":{},"body":{"injectables/AppService.html":{}}}],["required",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["requires",{"_index":1285,"title":{},"body":{"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["reset",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":1679,"title":{},"body":{"components/ModalComponent.html":{}}}],["respecting",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":1066,"title":{"interfaces/Response.html":{}},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["responsetype",{"_index":909,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["responsiveanimationduration",{"_index":791,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["restore",{"_index":1961,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletService.html":{}}}],["restore'},{'name",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["restore.component.html",{"_index":1962,"title":{},"body":{"components/RestoreComponent.html":{}}}],["restore_height",{"_index":1969,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["restorecomponent",{"_index":246,"title":{"components/RestoreComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"coverage.html":{},"overview.html":{}}}],["restorewallet",{"_index":1964,"title":{"interfaces/RestoreWallet.html":{}},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["restorewallet(req",{"_index":2572,"title":{},"body":{"injectables/WalletService.html":{}}}],["restorewallet(x",{"_index":2511,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["restorewalletform",{"_index":1963,"title":{},"body":{"components/RestoreComponent.html":{}}}],["result",{"_index":1466,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"components/ModalComponent.html":{},"interfaces/Response.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":2625,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["ret.data",{"_index":2629,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["return",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["revocationcertificate",{"_index":2188,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["rgba(21",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":1768,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(255,255,255,0.5",{"_index":1775,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(8",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["rgbstring",{"_index":1043,"title":{},"body":{"injectables/ChartService.html":{}}}],["rick's",{"_index":747,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["rick\\'s",{"_index":749,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["right",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["robots",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["root",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["root.component",{"_index":2045,"title":{},"body":{"modules/RootModule.html":{}}}],["root.component.html",{"_index":2002,"title":{},"body":{"components/RootComponent.html":{}}}],["rootcomponent",{"_index":248,"title":{"components/RootComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rootmodule",{"_index":2039,"title":{"modules/RootModule.html":{}},"body":{"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rootroutingmodule",{"_index":364,"title":{"modules/RootRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["route",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["routermodule",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":880,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":371,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["routing.module",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["row",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":2235,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rpc",{"_index":754,"title":{},"body":{"interfaces/Balance.html":{},"components/ConsoleComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rpc.ts",{"_index":1944,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rpcbindport",{"_index":2529,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["rpcbody",{"_index":1946,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rsa",{"_index":1349,"title":{},"body":{"injectables/CryptService.html":{}}}],["rsabits",{"_index":1351,"title":{},"body":{"injectables/CryptService.html":{}}}],["rt",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["rt.data.subscribe((data",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":2107,"title":{},"body":{"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":425,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"components/ProfileComponent.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["running.component",{"_index":2145,"title":{},"body":{"modules/StatusModule.html":{}}}],["running.component.html",{"_index":1416,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts",{"_index":1411,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"coverage.html":{}}}],["running.component.ts:13",{"_index":1815,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:15",{"_index":1818,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:16",{"_index":1817,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:19",{"_index":1816,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["runtime",{"_index":458,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{}}}],["rxjs/websocket",{"_index":2647,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rxjslogging",{"_index":2679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjslogginglevel",{"_index":1134,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rxjslogginglevel.debug",{"_index":1106,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/variables.html":{}}}],["rxjslogginglevel.error",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjslogginglevel.info",{"_index":1093,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/variables.html":{}}}],["rxjslogginglevel.trace",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safe",{"_index":763,"title":{},"body":{"interfaces/Balance.html":{}}}],["salt",{"_index":1263,"title":{},"body":{"injectables/CryptService.html":{}}}],["salted",{"_index":1314,"title":{},"body":{"injectables/CryptService.html":{}}}],["salter",{"_index":1279,"title":{},"body":{"injectables/CryptService.html":{}}}],["salts",{"_index":1274,"title":{},"body":{"injectables/CryptService.html":{}}}],["same",{"_index":1262,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"components/VpnComponent.html":{}}}],["samples",{"_index":1780,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sanitizer",{"_index":1446,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["sans",{"_index":1756,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["save",{"_index":1476,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/ProfileState.html":{},"interfaces/RestoreWallet.html":{},"miscellaneous/variables.html":{}}}],["scales",{"_index":799,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["screen",{"_index":1232,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["searchable",{"_index":2270,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["seconds",{"_index":2211,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["secret",{"_index":2313,"title":{},"body":{"components/UserComponent.html":{}}}],["section",{"_index":506,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["security",{"_index":2296,"title":{},"body":{"components/UserComponent.html":{}}}],["seed",{"_index":614,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["select",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{}}}],["select(selectchartdata(this.chartmeta[name].key",{"_index":1062,"title":{},"body":{"injectables/ChartService.html":{}}}],["select(selectchartoptions('networkdifficulty",{"_index":1105,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectchart",{"_index":2710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectchartdata",{"_index":1023,"title":{},"body":{"injectables/ChartService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectchartoptions",{"_index":1137,"title":{},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectchartsstate",{"_index":2711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectdarkmode",{"_index":2724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecthashrateminersoptions",{"_index":1108,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectlanguage",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlogdata",{"_index":2689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlogs",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlogsstate",{"_index":2691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenuvisibility",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["selectors",{"_index":1138,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectprofile",{"_index":2730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectprofilestate",{"_index":2731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectsettingsstate",{"_index":2725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserbyid",{"_index":2737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserstate",{"_index":2738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":1406,"title":{},"body":{"interfaces/Destination.html":{},"injectables/WalletRpcService.html":{}}}],["sending",{"_index":603,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["sendmessage",{"_index":2635,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmessage(msg",{"_index":2641,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sent",{"_index":2435,"title":{},"body":{"components/WalletComponent.html":{}}}],["separator",{"_index":1906,"title":{},"body":{"components/ProfileComponent.html":{}}}],["server",{"_index":1999,"title":{},"body":{"interfaces/RestoreWallet.html":{},"injectables/WebsocketService.html":{}}}],["service",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartService.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["service/crypt.service",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["service/filesystem/file",{"_index":435,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/RootComponent.html":{},"injectables/WalletService.html":{}}}],["service/json",{"_index":2527,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["service/ui/modal/modal.component",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"modules/ModalModule.html":{},"modules/RootModule.html":{},"components/WalletComponent.html":{}}}],["service/ui/modal/modal.module",{"_index":2447,"title":{},"body":{"modules/WalletModule.html":{}}}],["service/ui/modal/modalconfig",{"_index":1673,"title":{},"body":{"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["service/wallet.rpc.service",{"_index":1803,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["service/web",{"_index":528,"title":{},"body":{"interfaces/AppState.html":{}}}],["service/websocket.service",{"_index":1186,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["services",{"_index":1033,"title":{},"body":{"injectables/ChartService.html":{},"components/VpnComponent.html":{}}}],["services/crypt.service",{"_index":2168,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["services/filesystem/file",{"_index":2169,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["session",{"_index":755,"title":{},"body":{"interfaces/Balance.html":{}}}],["set",{"_index":481,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"miscellaneous/variables.html":{}}}],["setglobalfontsize",{"_index":2714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setglobalfontsize.type",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setinterval",{"_index":1188,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["setitem",{"_index":2598,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setitem(key",{"_index":2609,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setrxjslogginglevel",{"_index":2676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(0",{"_index":2838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(4",{"_index":2837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(level",{"_index":2834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setting",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["setting_tab",{"_index":2061,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":512,"title":{},"body":{"interfaces/AppState.html":{},"components/BackupComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/WalletComponent.html":{},"miscellaneous/variables.html":{}}}],["settings'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["settings.component",{"_index":2090,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":2060,"title":{},"body":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}}}],["settings.component.scss",{"_index":2059,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.reducer",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["settings.settingseffects",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["settings.settingsstate",{"_index":515,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsactiontypes",{"_index":2715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingscomponent",{"_index":250,"title":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingseffects",{"_index":2071,"title":{"injectables/SettingsEffects.html":{}},"body":{"injectables/SettingsEffects.html":{},"coverage.html":{}}}],["settingsmodule",{"_index":2079,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsreducer",{"_index":2722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsroutingmodule",{"_index":365,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsstate",{"_index":2099,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/SettingsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setup",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["setupcallbacks",{"_index":770,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["setupdatasubscription",{"_index":982,"title":{},"body":{"injectables/ChartService.html":{}}}],["setupdatasubscription(name",{"_index":998,"title":{},"body":{"injectables/ChartService.html":{}}}],["several",{"_index":1591,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["sha256",{"_index":1322,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256(input",{"_index":1341,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty",{"_index":1246,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty(input",{"_index":1320,"title":{},"body":{"injectables/CryptService.html":{}}}],["share",{"_index":1593,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["shared",{"_index":1928,"title":{},"body":{"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["shell/bootstrap",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldclose",{"_index":1699,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shoulddismiss",{"_index":1700,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["showtx",{"_index":2400,"title":{},"body":{"components/WalletComponent.html":{}}}],["shrug",{"_index":2111,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["shruggiepipe",{"_index":1844,"title":{"pipes/ShruggiePipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ShruggiePipe.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["signals",{"_index":2662,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signatures",{"_index":1377,"title":{},"body":{"injectables/CryptService.html":{}}}],["simply",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":1753,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":864,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["slow",{"_index":1302,"title":{},"body":{"injectables/CryptService.html":{}}}],["slug",{"_index":1871,"title":{},"body":{"components/PostComponent.html":{}}}],["snider",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["socket",{"_index":2631,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["software",{"_index":1820,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"components/UserComponent.html":{}}}],["something",{"_index":1280,"title":{},"body":{"injectables/CryptService.html":{}}}],["soon",{"_index":2336,"title":{},"body":{"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["source.pipe",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spangaps",{"_index":1741,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["spend",{"_index":764,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/RestoreWallet.html":{}}}],["spendkey",{"_index":1973,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spent",{"_index":591,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["split",{"_index":1292,"title":{},"body":{"injectables/CryptService.html":{}}}],["splitintegratedaddress",{"_index":2470,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddress(x",{"_index":2513,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddressout",{"_index":2114,"title":{"interfaces/SplitIntegratedAddressOut.html":{}},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["src",{"_index":457,"title":{},"body":{"injectables/AppService.html":{}}}],["src/.../actions.ts",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug.rxjs.ts",{"_index":2823,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../entity",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2830,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../json",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reducer.ts",{"_index":2831,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../selectors.ts",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.actions.ts",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.reducer.ts",{"_index":2832,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../settings.selectors.ts",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.options.ts",{"_index":2822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../wallet.rpc.service.ts",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../wallet.ts",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../websocket.service.ts",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:98",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.service.ts",{"_index":401,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:15",{"_index":417,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:16",{"_index":421,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:17",{"_index":419,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:18",{"_index":420,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:19",{"_index":416,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:20",{"_index":413,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:49",{"_index":423,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:62",{"_index":427,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:70",{"_index":415,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/data/data.module.ts",{"_index":1384,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/debug.rxjs.ts",{"_index":2675,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/entity",{"_index":2680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/logs/actions.ts",{"_index":2684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/logs/reducer.ts",{"_index":2686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/logs/selectors.ts",{"_index":2688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/logs/state.ts",{"_index":1599,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"coverage.html":{}}}],["src/app/data/reducers/index.ts",{"_index":509,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/file",{"_index":1449,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":672,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:11",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:30",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:49",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:63",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/login.component.ts",{"_index":1603,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/login.component.ts:11",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:12",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:13",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:14",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:19",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/route.guard.ts",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/modules/auth/route.guard.ts:34",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:8",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/chart/base",{"_index":766,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"coverage.html":{}}}],["src/app/modules/chart/chart",{"_index":920,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"coverage.html":{}}}],["src/app/modules/chart/chart.directive.ts",{"_index":932,"title":{},"body":{"directives/ChartDirective.html":{},"coverage.html":{}}}],["src/app/modules/chart/chart.directive.ts:10",{"_index":942,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:11",{"_index":941,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:21",{"_index":945,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:28",{"_index":944,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:46",{"_index":946,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.module.ts",{"_index":973,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/app/modules/chart/chart.service.ts",{"_index":975,"title":{},"body":{"injectables/ChartService.html":{},"coverage.html":{}}}],["src/app/modules/chart/chart.service.ts:125",{"_index":997,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:19",{"_index":1007,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:20",{"_index":1015,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:26",{"_index":1012,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:34",{"_index":986,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:54",{"_index":988,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:98",{"_index":999,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/data/actions.ts",{"_index":2704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/chart/data/effects.ts",{"_index":1080,"title":{},"body":{"injectables/ChartsEffects.html":{},"coverage.html":{}}}],["src/app/modules/chart/data/effects.ts:112",{"_index":1100,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:124",{"_index":1088,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:14",{"_index":1129,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:39",{"_index":1126,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:99",{"_index":1097,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/interfaces/difficulty.state.ts",{"_index":927,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"coverage.html":{}}}],["src/app/modules/chart/data/reducer.ts",{"_index":1142,"title":{},"body":{"interfaces/ChartsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/chart/data/selectors.ts",{"_index":2709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/root",{"_index":2052,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["src/app/modules/root.component.ts",{"_index":2001,"title":{},"body":{"components/RootComponent.html":{},"coverage.html":{}}}],["src/app/modules/root.component.ts:13",{"_index":2018,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:15",{"_index":2010,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:25",{"_index":2012,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:38",{"_index":2013,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:41",{"_index":2014,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:45",{"_index":2011,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:49",{"_index":2016,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:53",{"_index":2017,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:57",{"_index":2015,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.module.ts",{"_index":2044,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/settings/data/settings.actions.ts",{"_index":2713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/settings/data/settings.effects.ts",{"_index":2072,"title":{},"body":{"injectables/SettingsEffects.html":{},"coverage.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:17",{"_index":2073,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:8",{"_index":2078,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.reducer.ts",{"_index":2721,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/settings/data/settings.selectors.ts",{"_index":2723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/settings/data/settingsstate.ts",{"_index":2100,"title":{},"body":{"interfaces/SettingsState.html":{},"coverage.html":{}}}],["src/app/modules/settings/logs/logs.component.ts",{"_index":1620,"title":{},"body":{"components/LogsComponent.html":{},"coverage.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:11",{"_index":1624,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:8",{"_index":1623,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.module.ts",{"_index":1629,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/app/modules/settings/settings",{"_index":2096,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2058,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/modules/settings/settings.component.ts:13",{"_index":2064,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:17",{"_index":2063,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:9",{"_index":2062,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2083,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/status/dialog/no",{"_index":1409,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"coverage.html":{}}}],["src/app/modules/status/status.component.ts",{"_index":2117,"title":{},"body":{"components/StatusComponent.html":{},"coverage.html":{}}}],["src/app/modules/status/status.component.ts:10",{"_index":2129,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:11",{"_index":2131,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:12",{"_index":2130,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:13",{"_index":2127,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:15",{"_index":2128,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.module.ts",{"_index":2141,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/app/modules/user/data/profile/actions.ts",{"_index":2726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/data/profile/effects.ts",{"_index":1421,"title":{},"body":{"injectables/Effects.html":{},"coverage.html":{}}}],["src/app/modules/user/data/profile/effects.ts:5",{"_index":1422,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/reducer.ts",{"_index":2728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/data/profile/selectors.ts",{"_index":2729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/data/profile/state.ts",{"_index":1915,"title":{},"body":{"interfaces/ProfileState.html":{},"coverage.html":{}}}],["src/app/modules/user/data/user/actions.ts",{"_index":2732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/data/user/effects.ts",{"_index":1423,"title":{},"body":{"injectables/Effects-1.html":{},"coverage.html":{}}}],["src/app/modules/user/data/user/effects.ts:5",{"_index":1424,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/interfaces/user.options.ts",{"_index":2360,"title":{},"body":{"interfaces/UserOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/data/user/reducer.ts",{"_index":2734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/data/user/selectors.ts",{"_index":2736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/data/user/state.ts",{"_index":2341,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"coverage.html":{}}}],["src/app/modules/user/profile.component.ts",{"_index":1893,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/modules/user/profile.component.ts:15",{"_index":1907,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:19",{"_index":1898,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:23",{"_index":1899,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/user",{"_index":2365,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2166,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/modules/user/user.component.ts:21",{"_index":2282,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:27",{"_index":2283,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:33",{"_index":2284,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:34",{"_index":2280,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:35",{"_index":2281,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:36",{"_index":2278,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:46",{"_index":2279,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2350,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/pipes/content/html.pipe.ts",{"_index":1441,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"coverage.html":{}}}],["src/app/pipes/content/html.pipe.ts:8",{"_index":1444,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts",{"_index":1644,"title":{},"body":{"pipes/MarkdownPipe.html":{},"coverage.html":{}}}],["src/app/pipes/content/markdown.pipe.ts:8",{"_index":1647,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts",{"_index":2110,"title":{},"body":{"pipes/ShruggiePipe.html":{},"coverage.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts:5",{"_index":2112,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts",{"_index":1427,"title":{},"body":{"pipes/EffortPipe.html":{},"coverage.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts:7",{"_index":1432,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts",{"_index":1567,"title":{},"body":{"pipes/HashRatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts:8",{"_index":1570,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts",{"_index":2207,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"coverage.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:10",{"_index":2209,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts",{"_index":1935,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{},"coverage.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts:7",{"_index":1937,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":1846,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/plugins/console/console.component.ts",{"_index":1151,"title":{},"body":{"components/ConsoleComponent.html":{},"coverage.html":{}}}],["src/app/plugins/console/console.component.ts:16",{"_index":1180,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:18",{"_index":1171,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:19",{"_index":1181,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:20",{"_index":1169,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:29",{"_index":1177,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:43",{"_index":1175,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:47",{"_index":1173,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:52",{"_index":1176,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.module.ts",{"_index":1237,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/plugins/hashvault/charts/network",{"_index":1714,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"coverage.html":{}}}],["src/app/plugins/hive/post/post",{"_index":1890,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["src/app/plugins/hive/post/post.component.ts",{"_index":1854,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["src/app/plugins/hive/post/post.component.ts:11",{"_index":1863,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:12",{"_index":1864,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:13",{"_index":1862,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:14",{"_index":1861,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:15",{"_index":1859,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:19",{"_index":1860,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.module.ts",{"_index":1887,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain",{"_index":881,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts",{"_index":813,"title":{},"body":{"components/BlockchainComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:13",{"_index":827,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:14",{"_index":823,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:19",{"_index":829,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:25",{"_index":830,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:29",{"_index":826,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:38",{"_index":825,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.module.ts",{"_index":874,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts",{"_index":886,"title":{},"body":{"injectables/BlockchainService.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:10",{"_index":902,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:31",{"_index":898,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:52",{"_index":901,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:7",{"_index":891,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:75",{"_index":892,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/vpn/vpn",{"_index":2395,"title":{},"body":{"modules/VpnRoutingModule.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts",{"_index":2368,"title":{},"body":{"components/VpnComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:11",{"_index":2372,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:8",{"_index":2371,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.module.ts",{"_index":2392,"title":{},"body":{"modules/VpnModule.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts",{"_index":738,"title":{},"body":{"components/BackupComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:10",{"_index":741,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:7",{"_index":740,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts",{"_index":1793,"title":{},"body":{"components/NewComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:11",{"_index":1802,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:12",{"_index":1801,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:13",{"_index":1798,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:16",{"_index":1800,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:18",{"_index":1799,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts",{"_index":1824,"title":{},"body":{"components/OpenComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:11",{"_index":1828,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:13",{"_index":1831,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:14",{"_index":1827,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:20",{"_index":1829,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:24",{"_index":1830,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts",{"_index":1960,"title":{},"body":{"components/RestoreComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:12",{"_index":1977,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:22",{"_index":1965,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:27",{"_index":1966,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:30",{"_index":1967,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts",{"_index":2068,"title":{},"body":{"components/SettingsComponent-1.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:10",{"_index":2070,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:7",{"_index":2069,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts",{"_index":2231,"title":{},"body":{"components/TransactionsComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:14",{"_index":2239,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:15",{"_index":2240,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:23",{"_index":2248,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:24",{"_index":2249,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:26",{"_index":2250,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:30",{"_index":2247,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:34",{"_index":2238,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:40",{"_index":2242,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:44",{"_index":2241,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getaddressbookout.ts",{"_index":1534,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsin.ts",{"_index":1538,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsout.ts",{"_index":1545,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsin.ts",{"_index":1549,"title":{},"body":{"interfaces/GetPaymentsIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsout.ts",{"_index":1551,"title":{},"body":{"interfaces/GetPaymentsOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersin.ts",{"_index":1553,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersout.ts",{"_index":1563,"title":{},"body":{"interfaces/GetTransfersOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersin.ts",{"_index":1580,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersout.ts",{"_index":1585,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeintegratedaddressin.ts",{"_index":1632,"title":{},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeuriin.ts",{"_index":1633,"title":{},"body":{"interfaces/MakeUriIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyin.ts",{"_index":1931,"title":{},"body":{"interfaces/QueryKeyIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyout.ts",{"_index":1934,"title":{},"body":{"interfaces/QueryKeyOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/splitintegratedaddressout.ts",{"_index":2115,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/storeout.ts",{"_index":2147,"title":{},"body":{"interfaces/StoreOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallin.ts",{"_index":2149,"title":{},"body":{"interfaces/SweepAllIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallout.ts",{"_index":2159,"title":{},"body":{"interfaces/SweepAllOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepdustout.ts",{"_index":2164,"title":{},"body":{"interfaces/SweepDustOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferin.ts",{"_index":2262,"title":{},"body":{"interfaces/TransferIn.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferout.ts",{"_index":2265,"title":{},"body":{"interfaces/TransferOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transfersplitout.ts",{"_index":2274,"title":{},"body":{"interfaces/TransferSplitOut.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/requests/restorewallet.ts",{"_index":1995,"title":{},"body":{"interfaces/RestoreWallet.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/addaddressbook.ts",{"_index":6,"title":{},"body":{"interfaces/AddAddressBook.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/address.ts",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/balance.ts",{"_index":751,"title":{},"body":{"interfaces/Balance.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/destination.ts",{"_index":1404,"title":{},"body":{"interfaces/Destination.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/height.ts",{"_index":1578,"title":{},"body":{"interfaces/Height.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/integratedaddress.ts",{"_index":1595,"title":{},"body":{"interfaces/IntegratedAddress.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/payment.ts",{"_index":1837,"title":{},"body":{"interfaces/Payment.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/transfer.ts",{"_index":2260,"title":{},"body":{"interfaces/Transfer.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/uri.ts",{"_index":2277,"title":{},"body":{"interfaces/Uri.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts",{"_index":553,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:13",{"_index":558,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:14",{"_index":559,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:9",{"_index":1597,"title":{},"body":{"classes/LTHN.html":{}}}],["src/app/plugins/lthn/wallet/wallet",{"_index":2454,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts",{"_index":2396,"title":{},"body":{"components/WalletComponent.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:13",{"_index":2406,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:15",{"_index":2423,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:16",{"_index":2419,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:17",{"_index":2418,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:18",{"_index":2420,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:19",{"_index":2421,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:20",{"_index":2422,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:30",{"_index":2413,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:33",{"_index":2412,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:39",{"_index":2411,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:43",{"_index":2415,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:49",{"_index":2407,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:53",{"_index":2417,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:58",{"_index":2409,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.module.ts",{"_index":2440,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts",{"_index":2559,"title":{},"body":{"injectables/WalletService.html":{},"coverage.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:14",{"_index":2564,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:24",{"_index":2574,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:34",{"_index":2573,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:44",{"_index":2571,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:54",{"_index":2565,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:60",{"_index":2566,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:77",{"_index":2575,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:84",{"_index":2569,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/services/crypt.service.ts",{"_index":1240,"title":{},"body":{"injectables/CryptService.html":{},"coverage.html":{}}}],["src/app/services/crypt.service.ts:121",{"_index":1284,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:25",{"_index":1256,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:44",{"_index":1321,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:56",{"_index":1312,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:71",{"_index":1250,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:8",{"_index":1248,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:92",{"_index":1298,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/filesystem/file",{"_index":1477,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"coverage.html":{}}}],["src/app/services/i18n/translate/translate.module.ts",{"_index":2276,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/app/services/json",{"_index":1943,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/ui/modal/modal.component.ts",{"_index":1651,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/services/ui/modal/modal.component.ts:14",{"_index":1669,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:15",{"_index":1661,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:19",{"_index":1665,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:21",{"_index":1666,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:28",{"_index":1663,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:35",{"_index":1664,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.module.ts",{"_index":1713,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/services/ui/modal/modalconfig.ts",{"_index":1689,"title":{},"body":{"interfaces/ModalConfig.html":{},"coverage.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:10",{"_index":1705,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:12",{"_index":1706,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:14",{"_index":1701,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:16",{"_index":1702,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:18",{"_index":1703,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:20",{"_index":1704,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:6",{"_index":1707,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:8",{"_index":1708,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/wallet.rpc.service.ts",{"_index":2457,"title":{},"body":{"injectables/WalletRpcService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/wallet.rpc.service.ts:107",{"_index":2520,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:115",{"_index":2518,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:124",{"_index":2490,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:133",{"_index":2487,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:142",{"_index":2495,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:152",{"_index":2492,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:161",{"_index":2497,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:172",{"_index":2510,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:18",{"_index":2474,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:181",{"_index":2499,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:192",{"_index":2514,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:202",{"_index":2517,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:211",{"_index":2501,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:220",{"_index":2508,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:229",{"_index":2483,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:238",{"_index":2476,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:247",{"_index":2480,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:256",{"_index":2503,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:265",{"_index":2478,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:274",{"_index":2512,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:28",{"_index":2515,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:284",{"_index":2506,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:53",{"_index":2484,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:62",{"_index":2481,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:71",{"_index":2488,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:81",{"_index":2523,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:90",{"_index":2525,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:98",{"_index":2521,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/web",{"_index":2592,"title":{},"body":{"injectables/WebStorageService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts",{"_index":2630,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/websocket.service.ts:10",{"_index":2636,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:14",{"_index":2638,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:21",{"_index":2640,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:25",{"_index":2637,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:29",{"_index":2642,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/environments/environment.dev.ts",{"_index":2755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssh_pem",{"_index":2364,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["standard",{"_index":2315,"title":{},"body":{"components/UserComponent.html":{}}}],["standard_address",{"_index":2116,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["start",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["start_on_boot",{"_index":2181,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["startblockchain",{"_index":2008,"title":{},"body":{"components/RootComponent.html":{}}}],["startdaemon",{"_index":890,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["started",{"_index":357,"title":{"index.html":{}},"body":{"modules/AppModule.html":{}}}],["startwallet",{"_index":2009,"title":{},"body":{"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["starwars",{"_index":1903,"title":{},"body":{"components/ProfileComponent.html":{}}}],["state",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.darkmode",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.hidenavigation",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.language",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.logs",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.networkdifficulty",{"_index":1147,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/variables.html":{}}}],["state[charttype",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[charttype].data",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[charttype].options",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[id",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[logstype",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[logstype].logs",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1084,"title":{},"body":{"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{}}}],["stats",{"_index":2093,"title":{},"body":{"modules/SettingsModule.html":{}}}],["status",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status'},{'name",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status.component",{"_index":2142,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.component.html",{"_index":2119,"title":{},"body":{"components/StatusComponent.html":{}}}],["status.component.scss",{"_index":2118,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_annon",{"_index":2121,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_daemon",{"_index":2122,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_private",{"_index":2123,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_secure",{"_index":2124,"title":{},"body":{"components/StatusComponent.html":{}}}],["statuscomponent",{"_index":252,"title":{"components/StatusComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statusmodule",{"_index":277,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["steps",{"_index":2305,"title":{},"body":{"components/UserComponent.html":{}}}],["stop",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stopped",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stopwallet",{"_index":2471,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["storage",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["storage.service",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{}}}],["storage.service.ts",{"_index":2593,"title":{},"body":{"injectables/WebStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":2615,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:15",{"_index":2606,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:19",{"_index":2604,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:23",{"_index":2610,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:27",{"_index":2608,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:31",{"_index":2602,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:35",{"_index":2600,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:8",{"_index":2613,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:9",{"_index":2612,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["store",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"interfaces/ProfileState.html":{},"injectables/WalletRpcService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["storedevtoolsmodule",{"_index":1386,"title":{},"body":{"modules/DataModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":1396,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule",{"_index":1385,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule.forroot(reducers",{"_index":1395,"title":{},"body":{"modules/DataModule.html":{}}}],["storeout",{"_index":2146,"title":{"interfaces/StoreOut.html":{}},"body":{"interfaces/StoreOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["storerouterconnectingmodule",{"_index":1389,"title":{},"body":{"modules/DataModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":1402,"title":{},"body":{"modules/DataModule.html":{}}}],["stream",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetPaymentsIn.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["strip",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["style",{"_index":1904,"title":{},"body":{"components/ProfileComponent.html":{}}}],["styles",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["styleurls",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["sub",{"_index":1161,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{}}}],["subject",{"_index":1128,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["subject.subscribe",{"_index":2655,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["submit",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{}}}],["subs",{"_index":1858,"title":{},"body":{"components/PostComponent.html":{}}}],["subscribe",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((data",{"_index":836,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["subscription",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{}}}],["success",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sufficiently",{"_index":759,"title":{},"body":{"interfaces/Balance.html":{}}}],["supplied",{"_index":1253,"title":{},"body":{"injectables/CryptService.html":{}}}],["support",{"_index":2852,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["svg",{"_index":2853,"title":{},"body":{"modules.html":{}}}],["sweepall",{"_index":2150,"title":{},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepall(x",{"_index":2519,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepallin",{"_index":2148,"title":{"interfaces/SweepAllIn.html":{}},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["sweepallout",{"_index":2158,"title":{"interfaces/SweepAllOut.html":{}},"body":{"interfaces/SweepAllOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["sweepdust",{"_index":2472,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepdustout",{"_index":2163,"title":{"interfaces/SweepDustOut.html":{}},"body":{"interfaces/SweepDustOut.html":{},"coverage.html":{}}}],["swimlane/ngx",{"_index":2252,"title":{},"body":{"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["switchmap",{"_index":1116,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(([action",{"_index":1109,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["switchmap((req",{"_index":2075,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["sync",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["syndrome",{"_index":1291,"title":{},"body":{"injectables/CryptService.html":{}}}],["system",{"_index":1459,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["system.interface",{"_index":1526,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["system.interface.ts",{"_index":1450,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"coverage.html":{}}}],["system.interface.ts:16",{"_index":1471,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:25",{"_index":1473,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:33",{"_index":1462,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:41",{"_index":1465,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:49",{"_index":1457,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:8",{"_index":1468,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.service",{"_index":436,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["system.service.ts",{"_index":1478,"title":{},"body":{"injectables/FileSystemService.html":{},"coverage.html":{}}}],["system.service.ts:17",{"_index":1499,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:27",{"_index":1490,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:36",{"_index":1494,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:46",{"_index":1497,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:56",{"_index":1492,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:66",{"_index":1487,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:8",{"_index":1484,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["t",{"_index":1574,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["table",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2029,"title":{},"body":{"components/RootComponent.html":{}}}],["take",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["takes",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["takeuntil",{"_index":1113,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["tap((val",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":2165,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"coverage.html":{}}}],["template",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["templateref",{"_index":1667,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tension",{"_index":796,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["terminal",{"_index":1185,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"dependencies.html":{}}}],["text",{"_index":910,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["that.author",{"_index":1881,"title":{},"body":{"components/PostComponent.html":{}}}],["that.content",{"_index":1877,"title":{},"body":{"components/PostComponent.html":{}}}],["that.post",{"_index":1876,"title":{},"body":{"components/PostComponent.html":{}}}],["that.posts",{"_index":2035,"title":{},"body":{"components/RootComponent.html":{}}}],["that.ref.markforcheck",{"_index":1195,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["that.title",{"_index":1879,"title":{},"body":{"components/PostComponent.html":{}}}],["that.ws.sendmessage(`cmd:letheand:${this.command.join('')}\\n",{"_index":1217,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["theme",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["themselves",{"_index":1032,"title":{},"body":{"injectables/ChartService.html":{}}}],["then((dat",{"_index":914,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["then(function",{"_index":2033,"title":{},"body":{"components/RootComponent.html":{}}}],["this.actions$.pipe",{"_index":1090,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.addoptions",{"_index":1739,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.apiurl}/write",{"_index":1531,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.appfilesystem",{"_index":1505,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.appservice.crypto",{"_index":1340,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.lib.wordarray.random(128",{"_index":1344,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.pbkdf2(input",{"_index":1345,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.createmessage",{"_index":1367,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decrypt",{"_index":1378,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decryptkey",{"_index":1373,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.encrypt",{"_index":1365,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.generatekey",{"_index":1348,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readkey",{"_index":1369,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readmessage",{"_index":1375,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readprivatekey",{"_index":1374,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.authservice.getauthstatus",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(this.username.value",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(username",{"_index":2202,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.backend('clear",{"_index":2622,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('get",{"_index":2619,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('remove",{"_index":2621,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('set",{"_index":2620,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.balance",{"_index":2431,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.chain.downloadcli",{"_index":2024,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon",{"_index":2025,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon().then((data",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["this.changestream(this.attach",{"_index":1196,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.chartdata$[name",{"_index":1060,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartdata$[name].subscribe",{"_index":1065,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartelement",{"_index":956,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartinstances[name",{"_index":1078,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets.map((item",{"_index":1067,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets[i].data",{"_index":1068,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].destroy",{"_index":1077,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].update",{"_index":1070,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartmeta[name].datamap(response",{"_index":1069,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartservice.createchart(this.lthnchart",{"_index":955,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartservice.destroysubscriptions(this.lthnchart",{"_index":969,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartsubscriptions[name",{"_index":1064,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartsubscriptions[name].unsubscribe",{"_index":1076,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.child.keyeventinput.subscribe((e",{"_index":1204,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.buffer.active.cursorx",{"_index":1222,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write",{"_index":1202,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write('\\b",{"_index":1223,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write('\\r\\n",{"_index":1219,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write(data[1",{"_index":1193,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write(e.key",{"_index":1226,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command",{"_index":1218,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.pop",{"_index":1221,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.push(e.key",{"_index":1225,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.configureoptions",{"_index":810,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.connect().asobservable",{"_index":2651,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connect().complete",{"_index":2652,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.createchartelement(this.lthnchart",{"_index":954,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.createsalt(input",{"_index":1342,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.crypto",{"_index":488,"title":{},"body":{"injectables/AppService.html":{}}}],["this.cryptservice",{"_index":2200,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.createopenpgp(usernamehash",{"_index":2189,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.decryptpgpsingle(id",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.encryptpgpsingle",{"_index":2197,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.generatekey",{"_index":2199,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sha256salty(username",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.currentlanguage",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["this.destroysubscriptions(name",{"_index":1072,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.dialogref.close",{"_index":1420,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["this.elmref.nativeelement",{"_index":962,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.error",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filename.value",{"_index":1834,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.filesystem.exists('conf/app.ini",{"_index":492,"title":{},"body":{"injectables/AppService.html":{}}}],["this.filesystem.exists(pathname",{"_index":1510,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.list(dirname",{"_index":1506,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.listfiles('/cli').then((dat",{"_index":2021,"title":{},"body":{"components/RootComponent.html":{}}}],["this.filesystem.listfiles('/users').then((dat",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["this.filesystem.mkdir(dirname",{"_index":1509,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.read(filename",{"_index":1507,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.readfile",{"_index":1361,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.filesystem.readfile('conf/app.ini",{"_index":500,"title":{},"body":{"injectables/AppService.html":{}}}],["this.filesystem.readfile(`users/${id}.lthn",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filesystem.write(filename",{"_index":1508,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.writefile",{"_index":2182,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.fs.listfiles('/wallets').then((data",{"_index":2584,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getbalance",{"_index":2425,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.getchild(activatedroute.firstchild",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getchild(this.activatedroute",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getwalletlist",{"_index":2590,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.hascli",{"_index":2022,"title":{},"body":{"components/RootComponent.html":{}}}],["this.heading",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http",{"_index":834,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1139,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.id",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isfirstrun",{"_index":484,"title":{},"body":{"injectables/AppService.html":{}}}],["this.items.length",{"_index":2616,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.items[key",{"_index":2618,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.letheanconfig",{"_index":501,"title":{},"body":{"injectables/AppService.html":{}}}],["this.letheanconfig.parse(conffile.tostring",{"_index":503,"title":{},"body":{"injectables/AppService.html":{}}}],["this.loadconfig",{"_index":485,"title":{},"body":{"injectables/AppService.html":{}}}],["this.loadtransactions",{"_index":2254,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.menu",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.removetag(\"name='description",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.updatetag",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalcomponent.open",{"_index":2424,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.modalconfig.onclose",{"_index":1681,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.ondismiss",{"_index":1684,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shouldclose",{"_index":1680,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shoulddismiss",{"_index":1683,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref",{"_index":1676,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.close(result",{"_index":1682,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.dismiss(result",{"_index":1685,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.result.then(resolve",{"_index":1678,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.open(this.modalcontent",{"_index":1677,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.name",{"_index":1833,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.networkhashrateconfigservice",{"_index":1011,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.openedwallet",{"_index":2429,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.openmodal",{"_index":2430,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.openpgp",{"_index":486,"title":{},"body":{"injectables/AppService.html":{}}}],["this.options",{"_index":812,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.options.plugins.tooltip.callbacks",{"_index":1786,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.options.scales.y.ticks.callback",{"_index":1783,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.password.value",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.password_confirm.value",{"_index":1804,"title":{},"body":{"components/NewComponent.html":{}}}],["this.passwordrepeat.value",{"_index":2178,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.processingform",{"_index":2176,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.recenttxs",{"_index":837,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.ref.detach",{"_index":1187,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.detectchanges",{"_index":1189,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.markforcheck",{"_index":1201,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.renderappview",{"_index":2019,"title":{},"body":{"components/RootComponent.html":{}}}],["this.renderer.appendchild(this.elmref.nativeelement",{"_index":967,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.createelement('canvas",{"_index":957,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.removechild",{"_index":968,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setattribute",{"_index":958,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle",{"_index":961,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle(this.elmref.nativeelement",{"_index":959,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderfirstrunview",{"_index":2020,"title":{},"body":{"components/RootComponent.html":{}}}],["this.restorewalletform.value.address",{"_index":1980,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.autosave_current",{"_index":1982,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.filename",{"_index":1979,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.password",{"_index":1983,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.restore_height",{"_index":1981,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.spendkey",{"_index":1985,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewkey",{"_index":1986,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewonly_wallet",{"_index":1984,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.router.events",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/login",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/user",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.router.navigatebyurl('/user",{"_index":2023,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.routerstate.snapshot.url.replace('/p",{"_index":1872,"title":{},"body":{"components/PostComponent.html":{}}}],["this.rows",{"_index":2255,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.rpc.getbalance",{"_index":2583,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.gettransfers(opts).then((data",{"_index":2591,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.openwallet(req",{"_index":2582,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.restorewallet(req",{"_index":2581,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.startwallet",{"_index":2580,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(content",{"_index":1447,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["this.setupcallbacks",{"_index":811,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.sidenav.toggle",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.socket",{"_index":2648,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.closed",{"_index":2649,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.next(msg",{"_index":2653,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.store$.pipe",{"_index":1104,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.store.dispatch(changelanguage({language",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstartaction",{"_index":1063,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstopaction",{"_index":1075,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(togglehidenavigation",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe",{"_index":1061,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe(select(selectlanguage)).subscribe((lang",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectmenuvisibility)).subscribe((opened",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sub",{"_index":1197,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.titleservice.settitle(this.translate.instant(data.title",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.instant(data.description",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(req.language",{"_index":2076,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.txnselection[col",{"_index":2434,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.updatemeta",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.length",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username.value",{"_index":2177,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.wallet.createwallet",{"_index":1806,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallet.getbalance().then((data",{"_index":2432,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.gettransfers(this.opts).then((data",{"_index":2256,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.wallet.loadtransfers(this.txnselection",{"_index":2433,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.openwallet",{"_index":1832,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.wallet.restorewallet",{"_index":1978,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.wallet.startwallet",{"_index":2026,"title":{},"body":{"components/RootComponent.html":{}}}],["this.wallet.startwallet().then((data",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["this.wallet.walletlist",{"_index":2427,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet_name.value",{"_index":1807,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallets",{"_index":2426,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["this.wallets.length",{"_index":2589,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.push(dat",{"_index":2588,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.ws.connect",{"_index":1198,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect().subscribe((data",{"_index":1190,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.sendmessage(`daemon:${this.attach",{"_index":1200,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["those",{"_index":758,"title":{},"body":{"interfaces/Balance.html":{}}}],["throw",{"_index":1037,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["tickmarklength",{"_index":1766,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ticks",{"_index":801,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["ticks.color",{"_index":1053,"title":{},"body":{"injectables/ChartService.html":{}}}],["time",{"_index":1745,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/TransactionsComponent.html":{}}}],["timeago",{"_index":2208,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["timeagopipe",{"_index":1845,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TimeAgoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["timer",{"_index":1115,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["timer(0",{"_index":1111,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["timeseries",{"_index":1746,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["timestamp",{"_index":2244,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["title",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["titleservice",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["tmi",{"_index":2839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toatomic",{"_index":570,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["todo",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/FileSystemService.html":{}}}],["toggle",{"_index":2405,"title":{},"body":{"components/WalletComponent.html":{},"miscellaneous/variables.html":{}}}],["toggle(col",{"_index":2416,"title":{},"body":{"components/WalletComponent.html":{}}}],["togglebiggercontentfont",{"_index":2716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglebiggercontentfont.type",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggledaltonism",{"_index":2717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggledaltonism.type",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toggledarkmode",{"_index":2718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggledarkmode.type",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglehidenavigation",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglehidenavigation.type",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglehighcontrasttext",{"_index":2719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglehighcontrasttext.type",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglemenu",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["togglertl",{"_index":2720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["togglertl.type",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tolthn",{"_index":556,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tonumber",{"_index":557,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["toolbar",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":806,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top",{"_index":1743,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["topromise",{"_index":913,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["torrents",{"_index":2386,"title":{},"body":{"components/VpnComponent.html":{}}}],["tostring",{"_index":1343,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["tot",{"_index":1474,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["total",{"_index":753,"title":{},"body":{"interfaces/Balance.html":{}}}],["trace",{"_index":2826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":2377,"title":{},"body":{"components/VpnComponent.html":{}}}],["transactin",{"_index":2493,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transaction",{"_index":600,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["transactions",{"_index":2156,"title":{},"body":{"interfaces/SweepAllIn.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["transactions'},{'name",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["transactions.component.html",{"_index":2232,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":254,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"coverage.html":{},"overview.html":{}}}],["transfer",{"_index":1564,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["transfer(x",{"_index":2522,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfer_type",{"_index":1581,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["transferin",{"_index":2261,"title":{"interfaces/TransferIn.html":{}},"body":{"interfaces/TransferIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["transferout",{"_index":2264,"title":{"interfaces/TransferOut.html":{}},"body":{"interfaces/TransferOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["transfers",{"_index":1554,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{}}}],["transfersplit",{"_index":2473,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplit(x",{"_index":2524,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplitin",{"_index":575,"title":{"interfaces/TransferSplitIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["transfersplitout",{"_index":2273,"title":{"interfaces/TransferSplitOut.html":{}},"body":{"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["transform",{"_index":1429,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transform(content",{"_index":1443,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{}}}],["transform(value",{"_index":1430,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transforms",{"_index":1257,"title":{},"body":{"injectables/CryptService.html":{}}}],["translate",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":278,"title":{"modules/TranslateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/TranslateModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["translation",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tries",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":491,"title":{},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["ts",{"_index":460,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ChartDifficulty.html":{}}}],["tslib",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tx",{"_index":1642,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx's",{"_index":1560,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["tx_blob_list",{"_index":2160,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_description",{"_index":1635,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx_hash",{"_index":1587,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"interfaces/Payment.html":{},"interfaces/TransferOut.html":{}}}],["tx_hash_list",{"_index":2161,"title":{},"body":{"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/TransferSplitOut.html":{}}}],["tx_key",{"_index":2266,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["tx_key_list",{"_index":2162,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_size",{"_index":1588,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["txid",{"_index":2245,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{}}}],["txn",{"_index":2268,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["txnselection",{"_index":2401,"title":{},"body":{"components/WalletComponent.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1571,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["types/address",{"_index":1636,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/SplitIntegratedAddressOut.html":{}}}],["types/destination",{"_index":562,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["types/payment",{"_index":1547,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["types/transfer",{"_index":1565,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["typescript",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1304,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/SettingsState.html":{},"miscellaneous/variables.html":{}}}],["unavailable",{"_index":1583,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["undefined",{"_index":441,"title":{},"body":{"injectables/AppService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1309,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["unified",{"_index":2091,"title":{},"body":{"modules/SettingsModule.html":{}}}],["unique",{"_index":1908,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["uniquenamesgenerator",{"_index":1900,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":1751,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["units",{"_index":1407,"title":{},"body":{"interfaces/Destination.html":{},"pipes/HashRatePipe.html":{},"interfaces/MakeUriIn.html":{}}}],["units[i]}h/s",{"_index":1577,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["unknown",{"_index":1254,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/WalletComponent.html":{}}}],["unlock",{"_index":2246,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["unlock_time",{"_index":587,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["unlocked",{"_index":756,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlocked_balance",{"_index":752,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlockwallet",{"_index":1826,"title":{},"body":{"components/OpenComponent.html":{}}}],["unsigned",{"_index":578,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["up",{"_index":990,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["update",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatemeta",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["uri",{"_index":608,"title":{"interfaces/Uri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/Uri.html":{},"injectables/WalletRpcService.html":{},"coverage.html":{}}}],["url",{"_index":1952,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/variables.html":{}}}],["urlencoded",{"_index":908,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["use",{"_index":471,"title":{},"body":{"injectables/AppService.html":{},"classes/Atomic.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{}}}],["used",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user.component",{"_index":2353,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":2171,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.component.scss",{"_index":2172,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.reducer",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["user.usersstate",{"_index":516,"title":{},"body":{"interfaces/AppState.html":{}}}],["useractiontypes",{"_index":2733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercomponent",{"_index":256,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userform",{"_index":2173,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["userids",{"_index":1353,"title":{},"body":{"injectables/CryptService.html":{}}}],["usermeta",{"_index":2340,"title":{"interfaces/UserMeta.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"coverage.html":{}}}],["usermodule",{"_index":2347,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usernamehash",{"_index":2185,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["useroptions",{"_index":2343,"title":{"interfaces/UserOptions.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"coverage.html":{}}}],["userreducer",{"_index":2735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroutingmodule",{"_index":366,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"miscellaneous/variables.html":{}}}],["users/${id}.lthn.private.asc",{"_index":1371,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${id}.lthn.public.asc",{"_index":1362,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${usernamehash}.lthn",{"_index":2196,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.private.asc",{"_index":2193,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.public.asc",{"_index":2194,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.revoke.asc",{"_index":2195,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["usersstate",{"_index":2345,"title":{"interfaces/UsersState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userstate",{"_index":2346,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"coverage.html":{}}}],["uses",{"_index":1324,"title":{},"body":{"injectables/CryptService.html":{}}}],["using",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["val",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1431,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.indexof",{"_index":1939,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.length",{"_index":1649,"title":{},"body":{"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.slice",{"_index":1941,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.substr(0",{"_index":1942,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.tostring",{"_index":1938,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["values",{"_index":1784,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["var",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["variable",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["variables",{"_index":2861,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified_user",{"_index":2137,"title":{},"body":{"components/StatusComponent.html":{}}}],["vertical",{"_index":861,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["vertically",{"_index":865,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["view",{"_index":1993,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["view.chain.description",{"_index":879,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.heading",{"_index":878,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.title",{"_index":877,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.dashboard.description",{"_index":2057,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.heading",{"_index":2056,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.title",{"_index":2055,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.wallets.description",{"_index":2452,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.heading",{"_index":2451,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.title",{"_index":2450,"title":{},"body":{"modules/WalletModule.html":{}}}],["viewchild",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('modal",{"_index":1668,"title":{},"body":{"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('sidenav",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('term",{"_index":1179,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation",{"_index":1183,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.none",{"_index":1155,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewkey",{"_index":1974,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["viewonly_wallet",{"_index":1975,"title":{},"body":{"components/RestoreComponent.html":{}}}],["viewport",{"_index":1229,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["visibility_off",{"_index":2136,"title":{},"body":{"components/StatusComponent.html":{}}}],["vm",{"_index":1035,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["vm.chartinstances[name",{"_index":1054,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name",{"_index":1036,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data",{"_index":1057,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.length",{"_index":1049,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.map((dataset",{"_index":1039,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options",{"_index":1058,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.colors[i",{"_index":1041,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales",{"_index":1051,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales[dataset.yaxisid",{"_index":1050,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].type",{"_index":1056,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.hashratepipe.transform(context.parsed.y",{"_index":1788,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.hashratepipe.transform(value",{"_index":1785,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.setupdatasubscription(name",{"_index":1059,"title":{},"body":{"injectables/ChartService.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["vpn",{"_index":2316,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn'},{'name",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["vpn.component",{"_index":2393,"title":{},"body":{"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn.component.html",{"_index":2370,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpn.component.scss",{"_index":2369,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpncomponent",{"_index":258,"title":{"components/VpnComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"coverage.html":{},"overview.html":{}}}],["vpnmodule",{"_index":2389,"title":{"modules/VpnModule.html":{}},"body":{"modules/VpnModule.html":{},"modules.html":{},"overview.html":{}}}],["vpnroutingmodule",{"_index":2394,"title":{"modules/VpnRoutingModule.html":{}},"body":{"modules/VpnRoutingModule.html":{},"modules.html":{}}}],["wallet",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/GetTransfersIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["wallet's",{"_index":1996,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["wallet.component",{"_index":2441,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.component.html",{"_index":2398,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.component.scss",{"_index":2397,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet_name",{"_index":1796,"title":{},"body":{"components/NewComponent.html":{}}}],["walletcomponent",{"_index":260,"title":{"components/WalletComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"coverage.html":{},"overview.html":{}}}],["walletlist",{"_index":2562,"title":{},"body":{"injectables/WalletService.html":{}}}],["walletmodule",{"_index":2043,"title":{"modules/WalletModule.html":{}},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletroutingmodule",{"_index":367,"title":{"modules/WalletRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["walletrpcservice",{"_index":353,"title":{"injectables/WalletRpcService.html":{}},"body":{"modules/AppModule.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["wallets",{"_index":613,"title":{},"body":{"classes/Atomic.html":{},"components/BackupComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["walletservice",{"_index":326,"title":{"injectables/WalletService.html":{}},"body":{"modules/AppModule.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["want",{"_index":470,"title":{},"body":{"injectables/AppService.html":{},"injectables/CryptService.html":{}}}],["watcher",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["way",{"_index":1028,"title":{},"body":{"injectables/ChartService.html":{}}}],["ways",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["web",{"_index":832,"title":{},"body":{"components/BlockchainComponent.html":{},"dependencies.html":{}}}],["web.service",{"_index":1502,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["web.service.ts",{"_index":1511,"title":{},"body":{"injectables/FileSystemWebService.html":{},"coverage.html":{}}}],["web.service.ts:14",{"_index":1514,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:18",{"_index":1516,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:31",{"_index":1517,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:34",{"_index":1519,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:37",{"_index":1521,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:50",{"_index":1523,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:9",{"_index":1513,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["webfilesystem",{"_index":1503,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["websocket",{"_index":2646,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(\"ws://localhost:8081",{"_index":2654,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(ws_endpoint",{"_index":2650,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketservice",{"_index":1166,"title":{"injectables/WebsocketService.html":{}},"body":{"components/ConsoleComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["websocketsubject",{"_index":2639,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["webstorageservice",{"_index":527,"title":{"injectables/WebStorageService.html":{}},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{},"coverage.html":{}}}],["welcome",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["well",{"_index":1295,"title":{},"body":{"injectables/CryptService.html":{}}}],["whatever",{"_index":2667,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["whenever",{"_index":2659,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["white",{"_index":1758,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["width",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{}}}],["width:80vw",{"_index":966,"title":{},"body":{"directives/ChartDirective.html":{}}}],["window.require",{"_index":440,"title":{},"body":{"injectables/AppService.html":{}}}],["wish",{"_index":2332,"title":{},"body":{"components/UserComponent.html":{}}}],["within",{"_index":1927,"title":{},"body":{"interfaces/ProfileState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["withlatestfrom",{"_index":1103,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["without",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["wizard",{"_index":2359,"title":{},"body":{"modules/UserModule.html":{}}}],["wont",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["word",{"_index":1318,"title":{},"body":{"injectables/CryptService.html":{}}}],["words.state.not_installed",{"_index":2036,"title":{},"body":{"components/RootComponent.html":{}}}],["words.state.not_installed_desc",{"_index":2037,"title":{},"body":{"components/RootComponent.html":{}}}],["work",{"_index":452,"title":{},"body":{"injectables/AppService.html":{}}}],["working",{"_index":1500,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["works",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["worst",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrapper",{"_index":1501,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["write",{"_index":1454,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["write(filename",{"_index":1522,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["write(type",{"_index":1472,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["writefile",{"_index":1481,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["writefile(filename",{"_index":1496,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["ws",{"_index":1170,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ws://localhost:36909",{"_index":2645,"title":{},"body":{"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["ws_endpoint",{"_index":2644,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["www",{"_index":906,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["x",{"_index":800,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["xterm",{"_index":1228,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["y",{"_index":803,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["years",{"_index":2226,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["yes",{"_index":1433,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletRpcService.html":{}}}],["yes/no",{"_index":1912,"title":{},"body":{"components/ProfileComponent.html":{}}}],["z",{"_index":1337,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["zerolinewidth",{"_index":1764,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["zone.js",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddAddressBook.html":{"url":"interfaces/AddAddressBook.html","title":"interface - AddAddressBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddAddressBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/addAddressBook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddAddressBook {\n\taddress: string;\n\tpayment_id?: string; // (optional) string, defaults to \"0000000000000000000000000000000000000000000000000000000000000000\";\n\tdescription?: string; // (optional) string, defaults to \"\";\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\taddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentFlag\n                            \n                            \n                                    Public\n                                currentLanguage\n                            \n                            \n                                    Public\n                                currentLanguage$\n                            \n                            \n                                    Public\n                                heading\n                            \n                            \n                                    Public\n                                menu\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getChild\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, metaService: Meta, translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChild\n                        \n                    \n                \n            \n            \n                \ngetChild(activatedRoute: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMeta\n                        \n                    \n                \n            \n            \n                \nupdateMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        heading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menu$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {select, Store} from '@ngrx/store';\nimport {changeLanguage, selectLanguage, selectMenuVisibility, toggleHideNavigation} from '@module/settings/data';\nimport {Subscription} from 'rxjs';\n\n@Component({\n\tselector: 'lthn-app',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\tpublic menu: boolean;\n\tpublic heading = '';\n\n\n\t@ViewChild('sidenav') public sidenav: MatSidenav;\n\tpublic currentFlag: any;\n\tpublic currentLanguage$: Subscription;\n\tpublic currentLanguage: string;\n\tprivate menu$: Subscription;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate translate: TranslateService,\n\t\tprivate store: Store\n\t) {\n\t\t// this language will be used as a fallback when a translation isn't found in the current language\n\t\ttranslate.setDefaultLang('en');\n\t}\n\n\tngOnInit(): void {\n\t\t// setup language watcher\n\t\tthis.currentLanguage$ = this.store.pipe(select(selectLanguage)).subscribe((lang) => {\n\t\t\tthis.currentLanguage = lang;\n\t\t\tthis.translate.use(lang)\n\t\t})\n\n\t\tthis.updateMeta();\n\t}\n\n\tpublic ngAfterViewInit() {\n\t\tthis.menu$ = this.store.pipe(select(selectMenuVisibility)).subscribe((opened) => {\n\t\t\tthis.menu = opened\n\t\t\tthis.sidenav.toggle();\n\n\t\t})\n\t}\n\n\tchangeLanguage(lang: string){\n\t\tthis.store.dispatch(changeLanguage({language: lang}))\n\t}\n\n\ttoggleMenu() {\n\t\tthis.store.dispatch(toggleHideNavigation())\n\n\t}\n\n\tupdateMeta() {\n\t\tthis.router.events\n\t\t\t.pipe(filter((event) => event instanceof NavigationEnd))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst rt = this.getChild(this.activatedRoute);\n\t\t\t\trt.data.subscribe((data) => {\n\t\t\t\t\tthis.titleService.setTitle(this.translate.instant(data.title));\n\t\t\t\t\tthis.heading = data.heading;\n\t\t\t\t\tif (data.description) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tcontent: this.translate.instant(data.description)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.removeTag(\"name='description'\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!data.robots) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'nofollow,noindex'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'follow,index'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetChild(activatedRoute: ActivatedRoute) {\n\t\tif (activatedRoute.firstChild) {\n\t\t\treturn this.getChild(activatedRoute.firstChild);\n\t\t} else {\n\t\t\treturn activatedRoute;\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                menu\n            \n        \n\n        \n        \n            {{ 'menu.text.dashboard' | translate }}\n            {{ 'menu.text.blockchain' | translate }}\n            {{ 'menu.text.wallet' | translate }}\n            {{ 'menu.text.settings' | translate }}\n        \n        \n        \n    \n\n    \n        \n            \n\n                \n                    menu_open\n                \n                {{heading | translate}}\n                \n                \n                    \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.en' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.ru' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.zh' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.es' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.de' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.fr' | translate }}\n                            \n                        \n\n\n                    \n                \n\n                \n                    \n                \n            \n        \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  .main-container {\n    height: 100vh;\n    width: 100%;\n    min-height: calc(99vh - 54px);\n    overflow: hidden;\n    background: radial-gradient(circle, rgba(8, 242, 181, 1) 0%, rgba(21, 130, 151, 1) 100%);\n\n    mat-card {\n      mat-card-content {\n        img {\n          height: 30vh;\n        }\n      }\n    }\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 64px;\n  }\n\n  mat-sidenav {\n    width: 298px;\n\n    .logo {\n      border: 0;\n      padding: 9px;\n      width: 210px;\n    }\n  }\n\n  html.dark-theme .made-by {\n    --active-background-color: #242628;\n    color: #838488;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                menu                                                {{ \\'menu.text.dashboard\\' | translate }}            {{ \\'menu.text.blockchain\\' | translate }}            {{ \\'menu.text.wallet\\' | translate }}            {{ \\'menu.text.settings\\' | translate }}                                                                                        menu_open                                {{heading | translate}}                                                                                                                                          {{ \\'lang.en\\' | translate }}                                                                                                                                          {{ \\'lang.ru\\' | translate }}                                                                                                                                          {{ \\'lang.zh\\' | translate }}                                                                                                                                          {{ \\'lang.es\\' | translate }}                                                                                                                                          {{ \\'lang.de\\' | translate }}                                                                                                                                          {{ \\'lang.fr\\' | translate }}                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule, BrowserTransferStateModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {DataModule} from '@data/data.module';\nimport {StatusModule} from '@module/status/status.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexModule} from '@angular/flex-layout';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\treturn new TranslateHttpLoader(http);\n}\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule.withServerTransition({appId: 'lthn-data-sync'}),\n\t\tBrowserTransferStateModule,\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tTranslateModule.forRoot({\n\t\t\tdefaultLanguage: 'en',\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t}\n\t\t}),\n\t\tAppRoutingModule,\n\t\tCommonModule,\n\t\tDataModule,\n\t\tStatusModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatDividerModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatMenuModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tFlexModule,\n\t\tAuthModule,\n\t\tConsoleModule\n\n\t],\n\tproviders: [],\n\texports: [\n\t],\n\tbootstrap: [AppComponent]\n})\n/**\n * Application shell/bootstrap\n */\nexport class AppModule {\n\n\t/**\n\t * Start blockchain & wallet service automatically on start\n\t *\n\t * @param {BlockchainService} chain\n\t * @param {WalletRpcService} wallet\n\t */\n\tconstructor(private chain: BlockchainService, private wallet: WalletService) {\n\t\tthis.chain.startDaemon().then((data) => {\n\t\t\tconsole.log(\"blockchain started\")\n\t\t\tthis.wallet.startWallet().then((data) => console.log('wallet started'))\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nPostRoutingModule\n\nPostRoutingModule\n\nAppRoutingModule -->\n\nPostRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nAppRoutingModule -->\n\nSettingsRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BlockchainRoutingModule\n                        \n                        \n                            PostRoutingModule\n                        \n                        \n                            RootRoutingModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                        \n                            UserRoutingModule\n                        \n                        \n                            WalletRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PostRoutingModule} from '@plugin/hive/post/post-routing.module';\nimport {BlockchainRoutingModule} from '@plugin/lthn/chain/blockchain-routing.module';\nimport {UserRoutingModule} from '@module/user/user-routing.module';\nimport {RootRoutingModule} from '@module/root-routing.module';\nimport {SettingsRoutingModule} from '@module/settings/settings-routing.module';\nimport {WalletRoutingModule} from '@plugin/lthn/wallet/wallet-routing.module';\nimport {LoginComponent} from '@module/auth/login.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'Login - Lethean (LTHN)',\n\t\t\theading: 'Login',\n\t\t\tdescription: 'Lethean (LTHN) Login',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, {relativeLinkResolution: 'legacy'}),\n\t\tPostRoutingModule,\n\t\tBlockchainRoutingModule,\n\t\tUserRoutingModule,\n\t\tSettingsRoutingModule,\n\t\tWalletRoutingModule,\n\t\t// Make sure Root is the last in the list, it has a catch all\n\t\tRootRoutingModule\n\t],\n\texports: [RouterModule]\n})\n/**\n * Application routing bootstrap file, adds all routes as lazy loaded modules\n */\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crypto\n                            \n                            \n                                fs\n                            \n                            \n                                    Public\n                                letheanConfig\n                            \n                            \n                                letheanPaths\n                            \n                            \n                                openpgp\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isFirstRun\n                                \n                                \n                                    isApp\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadConfig\n                        \n                    \n                \n            \n            \n                \nloadConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        letheanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigIniParser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        letheanPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openpgp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isFirstRun\n                    \n                \n\n                \n                    \n                        getisFirstRun()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.service.ts:49\n                                \n                            \n                    \n                        \n                                returns true if this is the application first run\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isApp\n                    \n                \n\n                \n                    \n                        getisApp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.service.ts:62\n                                \n                            \n                    \n                        \n                                Returns true if code is run in the installed Application\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n\nimport {APP_CONFIG} from '@env/environment';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * @deprecated\n */\nexport class AppService {\n\tfs: any;\n\tpath: any;\n\tpublic letheanConfig: ConfigIniParser;\n\topenpgp: any;\n\tcrypto: any;\n\tletheanPaths: any;\n\n\tconstructor(private fileSystem: FileSystemService) {\n\t\t// Conditional imports\n\t\tif (window.require !== undefined) {\n\t\t\t// Notes :\n\t\t\t// * A NodeJS's dependency imported with 'window.require' MUST BE present in `dependencies` of both `app/package.json`\n\t\t\t// and `package.json (root folder)` in order to make it work here in Electron's Renderer process (src folder)\n\t\t\t// because it will loaded at runtime by Electron.\n\t\t\t// * A NodeJS's dependency imported with TS module import (ex: import { Dropbox } from 'dropbox') CAN only be present\n\t\t\t// in `dependencies` of `package.json (root folder)` because it is loaded during build phase and does not need to be\n\t\t\t// in the final bundle. Reminder : only if not used in Electron's Main process (app folder)\n\n\t\t\t// If you want to use a NodeJS 3rd party deps in Renderer process (like @electron/remote),\n\t\t\t// it must be declared in dependencies of both package.json (in root and app folders)\n\t\t\t// If you want to use remote object in renderer process, please set enableRemoteModule to true in main.ts\n\n\t\t\tif (!this.isFirstRun) {\n\t\t\t\tthis.loadConfig();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.openpgp = require('openpgp');\n\t\t\tthis.crypto = require('crypto-js');\n\t\t}\n\t}\n\n\t/**\n\t * returns true if this is the application first run\n\t */\n\tget isFirstRun(): boolean {\n\t\ttry {\n\t\t\treturn this.fileSystem.exists('conf/app.ini') === false;\n\t\t} catch (e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if code is run in the installed Application\n\t *\n\t * @returns\n\t */\n\tget isApp(): boolean {\n\t\treturn (\n\t\t\tnavigator.userAgent.toLowerCase().indexOf(' electron/') > -1 ||\n\t\t\tAPP_CONFIG.environment === 'LOCAL' ||\n\t\t\tAPP_CONFIG.environment === 'DEV'\n\t\t);\n\t}\n\n\tloadConfig() {\n\t\ttry {\n\t\t\tconst confFile = this.fileSystem.readFile('conf/app.ini');\n\n\t\t\tthis.letheanConfig = new ConfigIniParser('\\r\\n');\n\t\t\tthis.letheanConfig.parse(confFile.toString());\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            charts\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            settings\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charts:         Chart.ChartsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chart.ChartsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         Logs.LogsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Logs.LogsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         Settings.SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Settings.SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User.UsersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User.UsersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {APP_CONFIG} from '@env/environment';\nimport * as Settings from '../../modules/settings/data';\nimport * as User from '../../modules/user/data/user';\nimport {localStorageSync} from 'ngrx-store-localstorage';\nimport * as Chart from '../../modules/chart/data';\nimport * as Logs from '../logs';\nimport {WebStorageService} from '@service/web-storage.service';\n\nexport interface AppState {\n\tsettings: Settings.SettingsState;\n\tcharts: Chart.ChartsState;\n\tuser: User.UsersState;\n\tlogs: Logs.LogsState;\n}\n\nexport const reducers: ActionReducerMap = {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer\n};\n\nexport function localStorageSyncReducer(\n\treducer: ActionReducer\n): ActionReducer {\n\treturn localStorageSync({\n\t\tkeys: [\n\t\t\t'settings',\n\t\t\t{\n\t\t\t\tuser: {\n\t\t\t\t\tencrypt: (state: string) => btoa(state),\n\t\t\t\t\tdecrypt: (state: string) => atob(state)\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\trehydrate: true,\n\t\tremoveOnUndefined: true,\n\t\tstorage:  new WebStorageService()\n\t})(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !APP_CONFIG.production\n\t? [localStorageSyncReducer]\n\t: [localStorageSyncReducer];\n\nexport const effects = [Settings.SettingsEffects, Chart.ChartsEffects];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Atomic.html":{"url":"classes/Atomic.html","title":"class - Atomic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Atomic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toLTHN\n                            \n                            \n                                toNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toLTHN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/auth/route.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/route.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/route.guard.ts:34\n                \n            \n\n\n            \n                \n                    Handles logged out access\nRun during routing to check if the user is logged in or not, we do this check if\ngetAuthStatus() returns true, the username variable is set, to logout simply clear the username\nIf the user is not authenticated this function acts in one of two ways\n\nif ~/Lethean/users is empty perform first run / welcome\nif users do exsist, take to the /login page\n\nif APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\nyou may or may not have to login to develop, for now at least\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\n\t/**\n\t * Handles logged out access\n\t * Run during routing to check if the user is logged in or not, we do this check if\n\t * getAuthStatus() returns true, the username variable is set, to logout simply clear the username\n\t *\n\t * If the user is not authenticated this function acts in one of two ways\n\t *\n\t * 1) if ~/Lethean/users is empty perform first run / welcome\n\t * 2) if users do exsist, take to the /login page\n\t *\n\t * if APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\n\t * you may or may not have to login to develop, for now at least\n\t *\n\t * @param {ActivatedRouteSnapshot} route\n\t * @param {RouterStateSnapshot} state\n\t * @returns {boolean | Promise}\n\t */\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): boolean | Promise {\n\t\tlet isAuthenticated = this.authService.getAuthStatus();\n\t\t// @todo try to attack this variable in compiled app\n\t\tif (!APP_CONFIG.production) {\n\t\t\tisAuthenticated = true;\n\t\t}\n\t\tif (!isAuthenticated) {\n\t\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\t\tif (dat.length > 0) {\n\t\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\t} else {\n\t\t\t\t\tthis.router.navigate(['/user']);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn isAuthenticated;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [LoginComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule\n\t]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthStatus\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthStatus\n                        \n                    \n                \n            \n            \n                \ngetAuthStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n                    User auth check is (this.user.length > 0) we only need to store how to access the data.\nPlease do not add identifiable data or anything here, data like that should live in the users encrypted\njson profiles.\nIf extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\nnot because it would just be easier to code\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n                    Takes a username and password and tries to decrypt data files with a name id matching\nIt either works and that was the right password, or it does not and then it wont.\nWe are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\nso if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:63\n                \n            \n\n\n            \n                \n                    Clear the user prop by setting to a empty string, making auth checks fail.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '5b98925f755d045127d6b1815b51443e6f93eff84f516e0dbc343168c6b2bc1d'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'snider'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate user = 'snider';\n\tprivate id = '5b98925f755d045127d6b1815b51443e6f93eff84f516e0dbc343168c6b2bc1d';\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * User auth check is (this.user.length > 0) we only need to store how to access the data.\n\t *\n\t * Please do not add identifiable data or anything here, data like that should live in the users encrypted\n\t * json profiles.\n\t *\n\t * If extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\n\t * not because it would just be easier to code\n\t *\n\t * @returns {boolean}\n\t */\n\tgetAuthStatus() {\n\t\tif (!APP_CONFIG.production) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this.user.length > 0;\n\t}\n\n\t/**\n\t * Takes a username and password and tries to decrypt data files with a name id matching\n\t *\n\t * It either works and that was the right password, or it does not and then it wont.\n\t *\n\t * We are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\n\t * so if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync login(username, password) {\n\t\tconst id = this.cryptService.sha256Salty(username);\n\t\tconst data = await this.fileSystem.readFile(`users/${id}.lthn`);\n\n\t\tconst decrypted = JSON.parse(\n\t\t\tawait this.cryptService.decryptPGPSingle(id, password, data)\n\t\t);\n\t\tthis.user = decrypted.username;\n\t\tthis.id = decrypted.id;\n\t}\n\n\t/**\n\t * Clear the user prop by setting to a empty string, making auth checks fail.\n\t */\n\tlogout() {\n\t\tthis.user = '';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackupComponent.html":{"url":"components/BackupComponent.html","title":"component - BackupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/backup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-backup\n            \n\n\n\n\n            \n                templateUrl\n                ./backup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-backup',\n\ttemplateUrl: './backup.component.html'\n})\nexport class BackupComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BackupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/balance.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            unlocked_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlocked_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlocked_balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Balance {\n\tbalance: number; // - unsigned int; The total balance of the current monero-wallet-rpc in session.\n\tunlocked_balance: number; // - unsigned int; Unlocked funds are those funds that are sufficiently deep enough in the Monero blockchain to be considered safe to spend.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseChartConfigService.html":{"url":"injectables/BaseChartConfigService.html","title":"injectable - BaseChartConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/base-chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOptions\n                            \n                            \n                                configureOptions\n                            \n                            \n                                setupCallbacks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: []\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class BaseChartConfigService {\n\tpublic key = '';\n\tpublic type = '';\n\tpublic data: any = {\n\t\tdatasets: []\n\t};\n\tpublic options = {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.configureOptions();\n\t\tthis.setupCallbacks();\n\t}\n\n\tsetupCallbacks() {}\n\n\tconfigureOptions() {}\n\n\taddOptions(overrides: object) {\n\t\tthis.options = { ...this.options, ...overrides };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainComponent.html":{"url":"components/BlockchainComponent.html","title":"component - BlockchainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/chain/blockchain.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ChartService\n                \n            \n\n\n            \n                selector\n                lthn-chain\n            \n\n            \n                styleUrls\n                ./blockchain.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./blockchain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildType\n                            \n                            \n                                    Public\n                                recentTxs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isWeb\n                                \n                                \n                                    isApp\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recentTxs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isWeb\n                    \n                \n\n                \n                    \n                        getisWeb()\n                    \n                \n                            \n                                \n                                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isApp\n                    \n                \n\n                \n                    \n                        getisApp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ChartService} from '@module/chart/chart.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Component({\n\tselector: 'lthn-chain',\n\ttemplateUrl: './blockchain.component.html',\n\tstyleUrls: ['./blockchain.component.scss'],\n\tproviders: [ChartService]\n})\nexport class BlockchainComponent implements OnInit, OnDestroy {\n\tpublic recentTxs: any;\n\tpublic buildType: string;\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic get isWeb() {\n\t\treturn (\n\t\t\tAPP_CONFIG.environment === 'WEB' || APP_CONFIG.environment === 'DEV'\n\t\t);\n\t}\n\n\tpublic get isApp() {\n\t\treturn APP_CONFIG.environment === 'APP';\n\t}\n\n\tngOnInit(): void {\n\t\t// https://lethean.hashvault.pro/explorer/api/transactions\n\t\tthis.http\n\t\t\t.get('https://lethean.hashvault.pro/explorer/api/transactions')\n\t\t\t.subscribe((data) => {\n\t\t\t\tthis.recentTxs = data.data.blocks;\n\t\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('BlockchainComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'charts.network-hashrate.title' | translate }}\n        \n          {{ 'charts.network-hashrate.subtitle' | translate }} HashVault\n         {{ 'names.mining-pool' | translate }}\n        \n        \n          \n        \n      \n\n    \n    \n    \n      \n        {{ 'plugin.lthn.chain.table.recent-blocks.title' | translate }}\n        \n          \n            \n            \n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.age' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.hash' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.height' | translate }}\n              {{ 'plugin.lthn.chain.table.recent-blocks.headings.time' | translate }}\n            \n            \n\n            \n            \n              {{block.age}}\n              \n                {{block.hash}}\n              \n              \n                {{block.height}}\n              {{block.timestamp * 1000 | date: 'dd/MM/yyyy @ HH:mm:ss'}}\n            \n            \n          \n        \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./blockchain.component.scss\n                \n                :host {\n\n}\n\n@mixin vertical-fill {\n\tbox-sizing: border-box;\n\theight: 100%;\n}\n\n.vertically-filled-mat-card-container {\n\tmat-card {\n\t\t@include vertical-fill;\n\t}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'charts.network-hashrate.title\\' | translate }}                  {{ \\'charts.network-hashrate.subtitle\\' | translate }} HashVault         {{ \\'names.mining-pool\\' | translate }}                                                                  {{ \\'plugin.lthn.chain.table.recent-blocks.title\\' | translate }}                                                        {{ \\'plugin.lthn.chain.table.recent-blocks.headings.age\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.hash\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.height\\' | translate }}              {{ \\'plugin.lthn.chain.table.recent-blocks.headings.time\\' | translate }}                                                              {{block.age}}                              {{block.hash}}                                            {{block.height}}              {{block.timestamp * 1000 | date: \\'dd/MM/yyyy @ HH:mm:ss\\'}}                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockchainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockchainComponent} from './blockchain.component';\nimport {ChartModule} from '@module/chart/chart.module';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {TranslateModule} from '@ngx-translate/core';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: BlockchainComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [BlockchainComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tChartModule,\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tTranslateModule\n\t],\n\texports: [RouterModule]\n})\nexport class BlockchainModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainRoutingModule.html":{"url":"modules/BlockchainRoutingModule.html","title":"module - BlockchainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'chain',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./blockchain.module').then((m) => m.BlockchainModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class BlockchainRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadCLI\n                            \n                            \n                                exportChain\n                            \n                            \n                                importChain\n                            \n                            \n                                startDaemon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \ndownloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:75\n                \n            \n\n\n            \n                \n                    Download Lethean binaries to the users home dir\n~/Lethean/cli\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportChain\n                        \n                    \n                \n            \n            \n                \nexportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:31\n                \n            \n\n\n            \n                \n                    Export chain to a raw format\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importChain\n                        \n                    \n                \n            \n            \n                \nimportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:52\n                \n            \n\n\n            \n                \n                    Import raw chain data file\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDaemon\n                        \n                    \n                \n            \n            \n                \nstartDaemon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BlockchainService {\n\tconstructor(private http: HttpClient) {}\n\n\tstartDaemon() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/start`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Export chain to a raw format\n\t *\n\t */\n\texportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/export`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Import raw chain data file\n\t *\n\t */\n\timportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/import`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Download Lethean binaries to the users home dir\n\t * ~/Lethean/cli\n\t *\n\t * @returns {Promise}\n\t */\n\tdownloadCLI() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(`https://localhost:36911/update/cli`, {}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartConfigInterface.html":{"url":"interfaces/ChartConfigInterface.html","title":"interface - ChartConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dataMap\n                                    \n                                \n                                \n                                    \n                                        setupCallbacks\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartConfigInterface {\n\tkey: string;\n\ttype: string;\n\tdata: object;\n\toptions: object;\n\n\tsetupCallbacks(): void;\n\n\tdataMap(data: any, i: number): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDifficulty.html":{"url":"interfaces/ChartDifficulty.html","title":"interface - ChartDifficulty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartDifficulty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/interfaces/difficulty.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diff\n                                        \n                                \n                                \n                                        \n                                            ts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDifficultyState {\n\toptions: {\n\t\tpollingInterval: number;\n\t};\n\tdata: ChartDifficulty[];\n}\n\nexport class ChartDifficultyState implements ChartDifficultyState {\n\tdata: ChartDifficulty[] = [];\n\toptions: { pollingInterval: number } = { pollingInterval: 30000 };\n}\n\nexport interface ChartDifficulty {\n\tts: string;\n\tdiff: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChartDirective.html":{"url":"directives/ChartDirective.html","title":"directive - ChartDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ChartDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ChartService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [lthnChart]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChartElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lthnChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elmRef: ElementRef, chartService: ChartService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        ChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        lthnChart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chart/chart.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChartElement\n                        \n                    \n                \n            \n            \n                \ncreateChartElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, PLATFORM_ID, Renderer2} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {ChartService} from './chart.service';\n\n@Directive({\n\tselector: '[lthnChart]',\n\tproviders: [ChartService]\n})\nexport class ChartDirective implements AfterViewInit, OnDestroy {\n\t@Input() lthnChart: string;\n\tprivate chartElement: any;\n\n\tconstructor(\n\t\tprivate renderer: Renderer2,\n\t\tprivate elmRef: ElementRef,\n\t\tprivate chartService: ChartService,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.createChartElement(this.lthnChart);\n\t\t\tthis.chartService.createChart(this.lthnChart);\n\t\t}\n\t}\n\n\tcreateChartElement(name: string) {\n\t\tthis.chartElement = this.renderer.createElement('canvas');\n\t\tthis.renderer.setAttribute(\n\t\t\tthis.chartElement,\n\t\t\t'id',\n\t\t\t`lthn-chart-${name}`\n\t\t);\n\t\tthis.renderer.setStyle(this.elmRef.nativeElement, 'height', '25vh');\n\t\tthis.renderer.setStyle(\n\t\t\tthis.elmRef.nativeElement,\n\t\t\t'position',\n\t\t\t'relative'\n\t\t);\n\n\t\t// position: relative; height:40vh; width:80vw\n\t\tthis.renderer.appendChild(this.elmRef.nativeElement, this.chartElement);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.renderer.removeChild(\n\t\t\t\tthis.elmRef.nativeElement,\n\t\t\t\tthis.chartElement\n\t\t\t);\n\t\t}\n\t\tthis.chartService.destroySubscriptions(this.lthnChart);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_ChartDirective_providers\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nChartDirective\n\nChartDirective\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartService\n\nChartService\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDirective} from './chart.directive';\nimport {ChartService} from './chart.service';\n\n@NgModule({\n\tdeclarations: [ChartDirective],\n\timports: [CommonModule],\n\tproviders: [ChartService],\n\texports: [ChartDirective]\n})\nexport class ChartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData$\n                            \n                            \n                                    Private\n                                chartInstances\n                            \n                            \n                                    Private\n                                chartMeta\n                            \n                            \n                                    Private\n                                chartSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                destroySubscriptions\n                            \n                            \n                                setupDataSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, platformId: Object, networkHashrateConfigService: NetworkHashrateChart)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        networkHashrateConfigService\n                                                  \n                                                        \n                                                                        NetworkHashrateChart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:54\n                \n            \n\n\n            \n                \n                    Loads up a new chart instance,\napplies colour adjustments\ncreates data subscription\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroySubscriptions\n                        \n                    \n                \n            \n            \n                \ndestroySubscriptions(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDataSubscription\n                        \n                    \n                \n            \n            \n                \nsetupDataSubscription(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:98\n                \n            \n\n\n            \n                \n                    Gets the observable for the chart key from the datastore\ncreates the data subscription, the map function is provided by the\nchart config service as a function dataMap(data)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                        \n                    \n\n            \n                \n                    holds all the data observables for all charts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:19\n                        \n                    \n\n            \n                \n                    holds the chart.js instances\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tnetworkDifficulty: this.networkHashrateConfigService\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:26\n                        \n                    \n\n            \n                \n                    holds the configurations for each chart type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {Chart, registerables} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport {select, Store} from '@ngrx/store';\nimport colorLib from '@kurkle/color';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {selectChartData} from './data';\nimport {NetworkHashrateChart} from '@plugin/hashvault/charts/network-hashrate.chart';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChartService {\n\t/**\n\t * holds the chart.js instances\n\t *\n\t * @private\n\t */\n\tprivate chartInstances: object = {};\n\tprivate chartSubscriptions: object = {};\n\t/**\n\t * holds the configurations for each chart type\n\t *\n\t * @private\n\t */\n\tprivate chartMeta = {\n\t\tnetworkDifficulty: this.networkHashrateConfigService\n\t};\n\t/**\n\t * holds all the data observables for all charts\n\t *\n\t * @private\n\t */\n\tprivate chartData$: object = {};\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t//@TODO try and find a better way than get DI to give us configs, so they can themselves use services\n\t\tprivate networkHashrateConfigService: NetworkHashrateChart\n\t) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tChart.register(...registerables);\n\t\t}\n\t}\n\n\t/**\n\t * Loads up a new chart instance,\n\t * applies colour adjustments\n\t * creates data subscription\n\t *\n\t * @param name\n\t */\n\tcreateChart(name: string) {\n\t\tconst vm = this;\n\t\tif (!vm.chartMeta[name]) {\n\t\t\tthrow new Error(`Chart Not Defined: ${name}`);\n\t\t}\n\n\t\tvm.chartMeta[name].data.datasets.map((dataset, i) => {\n\t\t\tdataset.backgroundColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t)\n\t\t\t\t.alpha(0.2)\n\t\t\t\t.rgbString();\n\t\t\tdataset.borderColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t).rgbString();\n\t\t\t// if we have more than one data point, change label colors to match data\n\t\t\tif (vm.chartMeta[name].data.datasets.length > 1) {\n\t\t\t\tif (\n\t\t\t\t\tvm.chartMeta[name].options.scales[dataset.yAxisID]\n\t\t\t\t\t\t.position === 'right'\n\t\t\t\t) {\n\t\t\t\t\tvm.chartMeta[name].options.scales[\n\t\t\t\t\t\tdataset.yAxisID\n\t\t\t\t\t\t].ticks.color = dataset.borderColor;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvm.chartInstances[name] = new Chart(`lthn-chart-${name}`, {\n\t\t\ttype: vm.chartMeta[name].type,\n\t\t\tdata: vm.chartMeta[name].data,\n\t\t\toptions: vm.chartMeta[name].options\n\t\t});\n\n\t\tvm.setupDataSubscription(name);\n\t}\n\n\t/**\n\t * Gets the observable for the chart key from the datastore\n\t * creates the data subscription, the map function is provided by the\n\t * chart config service as a function dataMap(data)\n\t *\n\t * @param name\n\t */\n\tsetupDataSubscription(name: string) {\n\t\t//let vm = this\n\t\tthis.chartData$[name] = this.store.pipe(\n\t\t\tselect(selectChartData(this.chartMeta[name].key))\n\t\t);\n\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStartAction);\n\n\t\tthis.chartSubscriptions[name] = this.chartData$[name].subscribe(\n\t\t\t(response) => {\n\t\t\t\tif (response != undefined) {\n\t\t\t\t\tthis.chartInstances[name].data.datasets.map((item, i) => {\n\t\t\t\t\t\tthis.chartInstances[name].data.datasets[i].data =\n\t\t\t\t\t\t\tthis.chartMeta[name].dataMap(response, i);\n\t\t\t\t\t});\n\t\t\t\t\tthis.chartInstances[name].update();\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.destroySubscriptions(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\t//console.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroySubscriptions(name: string): void {\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStopAction);\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.chartSubscriptions[name].unsubscribe();\n\t\t\tthis.chartInstances[name].destroy();\n\t\t\tthis.chartInstances[name] = void 0;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartsEffects.html":{"url":"injectables/ChartsEffects.html","title":"injectable - ChartsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChartNetworkDifficultyStartPolling$\n                            \n                            \n                                ChartNetworkDifficultyStopPolling$\n                            \n                            \n                                LoadRequestedChartDifficulty$\n                            \n                            \n                                    Private\n                                    Static\n                                pollingUntil$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store>, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/data/effects.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                    Store>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStartPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStopPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRequestedChartDifficulty$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pollingUntil$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tChartNetworkDifficulty$: new Subject()\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport * as ChartsActions from './actions';\nimport {of, Subject, timer} from 'rxjs';\nimport {select, State, Store} from '@ngrx/store';\nimport {HttpClient} from '@angular/common/http';\nimport {debug, RxJsLoggingLevel} from '@data/debug.rxjs';\nimport {ChartDifficulty} from './interfaces/difficulty.state';\nimport {selectChartOptions} from './selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\tprivate static pollingUntil$ = {\n\t\tChartNetworkDifficulty$: new Subject()\n\t};\n\t// LoadRequestedChartDifficulty$ = createEffect(() =>\n\t//     this.actions$.pipe(\n\t//         ofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t//         switchMap(() =>\n\t//             this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`)\n\t//                 .pipe(\n\t//                     map(\n\t//                         (networkDifficulty) => ChartsActions.chartNetworkDifficultyLoadSuccess({\n\t//                                 networkDifficulty,\n\t//                             }\n\t//                         ),\n\t//                         catchError((error) => {\n\t//                                 console.error(error);\n\t//                                 return of(ChartsActions.chartNetworkDifficultyLoadFailure({error}));\n\t//                             }\n\t//                         )\n\t//                     )\n\t//                 )\n\t//         )\n\t//     )\n\t// );\n\n\tLoadRequestedChartDifficulty$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tChartNetworkDifficultyStartPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t);\n\tChartNetworkDifficultyStopPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate store$: Store>,\n\t\tprivate http: HttpClient\n\t) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartsState.html":{"url":"interfaces/ChartsState.html","title":"interface - ChartsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            networkDifficulty\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        networkDifficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkDifficulty:         ChartDifficultyState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartDifficultyState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createReducer, on} from '@ngrx/store';\nimport * as ChartsActions from './actions';\nimport {ChartDifficultyState} from './interfaces/difficulty.state';\n\n// export const initialState = PoolStatsState;\nexport const initialState: ChartsState = {\n\tnetworkDifficulty: new ChartDifficultyState()\n};\n\nconst chartDifficultyReducer = createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n);\n\nexport function reducer(state, action) {\n\treturn chartDifficultyReducer(state, action);\n}\n\nexport interface ChartsState {\n\tnetworkDifficulty?: ChartDifficultyState;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/console/console.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-console\n            \n\n            \n                styleUrls\n                ./console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                child\n                            \n                            \n                                    Private\n                                command\n                            \n                            \n                                    Private\n                                sub$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStream\n                            \n                            \n                                getSub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ws: WebsocketService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/console/console.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        attach\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lethean-wallet-rpc'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/console/console.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStream\n                        \n                    \n                \n            \n            \n                \nchangeStream(channel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSub\n                        \n                    \n                \n            \n            \n                \ngetSub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        child\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgTerminal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('term', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub$\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NgTerminal} from 'ng-terminal';\nimport {WebsocketService} from '@service/websocket.service';\n\n\n@Component({\n\tselector: 'lthn-app-console',\n\ttemplateUrl: './console.component.html',\n\tstyleUrls: ['./console.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.Default\n\n\n})\nexport class ConsoleComponent implements OnInit, AfterViewInit {\n\t@ViewChild('term', { static: true }) child: NgTerminal;\n\n\t@Input() attach  = 'lethean-wallet-rpc';\n\tprivate command: string[] = []\n\tprivate sub$;\n\tconstructor(private ws: WebsocketService, private ref: ChangeDetectorRef) {\n\t\tthis.ref.detach()\n\t\tsetInterval(() => {\n\t\t\tthis.ref.detectChanges();\n\t\t}, 1000);\n\n\t}\n\n\tngOnInit(): void {\n\t\tlet that = this;\n\t\tthis.ref.detectChanges();\n\t\tthis.ws.connect().subscribe((data) => {\n\t\t\tif(this.attach === data[0]) {\n\t\t\t\tthis.child.write(data[1] + '\\r\\n');\n\t\t\t\tthat.ref.markForCheck()\n\t\t\t}\n\n\t\t})\n\n\t\t\tthis.changeStream(this.attach)\n    }\n\n\tgetSub(){\n\t\tthis.sub$ = this.ws.connect();\n\t}\n\n\tchangeStream(channel:string){\n\t\tthis.ws.sendMessage(`daemon:${this.attach}`)\n\t\tthis.ref.markForCheck()\n\t}\n\n\tngAfterViewInit() {\n\t\tconst that = this;\n\t\tthis.child.write('$ ');\n\t\tif(this.child.keyEventInput) {\n\n\t\t\tthis.child.keyEventInput.subscribe((e) => {\n\t\t\t\t//console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n\n\t\t\t\tconst ev = e.domEvent;\n\t\t\t\tconst printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n\t\t\t\tif (ev.keyCode === 13) {\n\n\t\t\t\t\t//console.log(`cmd:letheand:${this.command.join('')}`)\n\t\t\t\t\tthat.ws.sendMessage(`cmd:letheand:${this.command.join('')}\\n`)\n\t\t\t\t\tthis.command = []\n\t\t\t\t\tthis.child.write('\\r\\n$ ');\n\t\t\t\t\tthis.ref.detectChanges();\n\t\t\t\t} else if (ev.keyCode === 8) {\n\t\t\t\t\t this.command.pop()\n\t\t\t\t\tif (this.child.underlying.buffer.active.cursorX > 0) {\n\t\t\t\t\t\tthis.child.write('\\b \\b');\n\t\t\t\t\t\tthis.ref.detectChanges();\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tthis.command.push(e.key);\n\t\t\t\t\tthis.child.write(e.key);\n\t\t\t\t\tthis.ref.detectChanges();\n\t\t\t\t}\n\t\t\t\t//console.log(this.command.join(\"\"))\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./console.component.scss\n                \n                .xterm-viewport {\n\twidth: auto !important;\n}\n\n.xterm-screen {\n\twidth: auto !important;\n\t> canvas {\n\t\twidth: 100% !important;\n\t}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleModule.html":{"url":"modules/ConsoleModule.html","title":"module - ConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\n\n\nConsoleModule\n\nConsoleModule\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleComponent } from './console.component';\nimport { NgTerminalModule } from 'ng-terminal';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [ConsoleComponent],\n\texports: [\n\t\tConsoleComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tNgTerminalModule,\n\t\tMatCardModule,\n\t\tMatButtonModule\n\t]\n})\nexport class ConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateWallet.html":{"url":"interfaces/CreateWallet.html","title":"interface - CreateWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptService.html":{"url":"injectables/CryptService.html","title":"injectable - CryptService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOpenPGP\n                            \n                            \n                                createSalt\n                            \n                            \n                                    Async\n                                decryptPGPSingle\n                            \n                            \n                                    Async\n                                encryptPGPSingle\n                            \n                            \n                                generateKey\n                            \n                            \n                                sha256Salty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypt.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOpenPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOpenPGP(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:71\n                \n            \n\n\n            \n                \n                    Creates a Armoured OpenPGP key for the username protected with the password supplied\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalt\n                        \n                    \n                \n            \n            \n                \ncreateSalt(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:25\n                \n            \n\n\n            \n                \n                    Transforms the input string with a lite l337 conversion\nthis will always give you the same salt, im aware of the issues here\nPlease start a GitHub issue if you have a good idea for knowledge-less reproducible salts\nMaybe allow people to set a custom salter? something for later.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGPSingle(id: string, passphrase: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:121\n                \n            \n\n\n            \n                \n                    Requires the users password, for this reason, you might want to make or interact with profiles\nthey are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPGPSingle(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:92\n                \n            \n\n\n            \n                \n                    Using a Lethean user public key, encrypt the supplied data\nBigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\"quick for you\" it wont be on a Pi4 under load\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateKey\n                        \n                    \n                \n            \n            \n                \ngenerateKey(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:56\n                \n            \n\n\n            \n                \n                    Create a salted PBKDF2 key for encryption purposes using a random word array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Salty\n                        \n                    \n                \n            \n            \n                \nsha256Salty(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:44\n                \n            \n\n\n            \n                \n                    sha256 hash that uses itself converted as a reproducable salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AppService} from '../app.service';\nimport {FileSystemService} from './filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CryptService {\n\tconstructor(\n\t\tprivate appService: AppService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * Transforms the input string with a lite l337 conversion\n\t * this will always give you the same salt, im aware of the issues here\n\t * Please start a GitHub issue if you have a good idea for knowledge-less reproducible salts\n\t *\n\t * Maybe allow people to set a custom salter? something for later.\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSalt(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\t\treturn input\n\t\t\t.replace('o', '0')\n\t\t\t.replace(/l/gi, '1')\n\t\t\t.replace(/e/gi, '3')\n\t\t\t.replace(/a/gi, '4')\n\t\t\t.replace(/s/gi, 'z')\n\t\t\t.replace(/t/gi, '7');\n\t}\n\n\t/**\n\t * sha256 hash that uses itself converted as a reproducable salt\n\t *\n\t * @param input\n\t * @returns {string}\n\t */\n\tsha256Salty(input): string {\n\t\treturn this.appService.crypto\n\t\t\t.SHA256(input + this.createSalt(input))\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Create a salted PBKDF2 key for encryption purposes using a random word array\n\t *\n\t * @param input\n\t * @returns {any}\n\t */\n\tgenerateKey(input) {\n\t\tconst salt = this.appService.crypto.lib.WordArray.random(128 / 8);\n\t\treturn this.appService.crypto.PBKDF2(input, salt, {\n\t\t\tkeySize: 256 / 32\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a Armoured OpenPGP key for the username protected with the password supplied\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync createOpenPGP(username, password) {\n\t\treturn await this.appService.openpgp.generateKey({\n\t\t\ttype: 'rsa', // Type of the key, defaults to ECC\n\t\t\trsaBits: 4096,\n\t\t\tuserIDs: [{name: username}], // you can pass multiple user IDs\n\t\t\tpassphrase: password, // protects the private key\n\t\t\tformat: 'armored' // output key format, defaults to 'armored' (other options: 'binary' or 'object')\n\t\t});\n\t}\n\n\n\t/**\n\t * Using a Lethean user public key, encrypt the supplied data\n\t *\n\t * Bigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\t * \"quick for you\" it wont be on a Pi4 under load\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} data\n\t * @returns {Promise}\n\t */\n\tasync encryptPGPSingle(id: string, data: string) {\n\t\tconst encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.public.asc`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\tconst encrypted = await this.appService.openpgp.encrypt({\n\t\t\tmessage: await this.appService.openpgp.createMessage({\n\t\t\t\ttext: data\n\t\t\t}), // input as Message object\n\t\t\tencryptionKeys: await this.appService.openpgp.readKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t})\n\t\t});\n\n\t\treturn encrypted;\n\t}\n\n\t/**\n\t * Requires the users password, for this reason, you might want to make or interact with profiles\n\t * they are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} passphrase\n\t * @param {string} encrypted\n\t * @returns {Promise}\n\t */\n\tasync decryptPGPSingle(id: string, passphrase: string, encrypted: string) {\n\t\t/**\n\t\t * @type string OpenPGP Armoured private key\n\t\t */\n\t\tlet encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.private.asc`\n\t\t);\n\t\t// decrypt the private key\n\t\tlet privateKey = await this.appService.openpgp.decryptKey({\n\t\t\tprivateKey: await this.appService.openpgp.readPrivateKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t}),\n\t\t\tpassphrase\n\t\t});\n\n\t\tlet message = await this.appService.openpgp.readMessage({\n\t\t\tarmoredMessage: encrypted\n\t\t})\n\n\t\tconst {data: decrypted, signatures} =\n\t\t\tawait this.appService.openpgp.decrypt({\n\t\t\t\tmessage,\n\t\t\t\tdecryptionKeys: privateKey\n\t\t\t});\n\t\t// Leave nothing to chance\n\t\tprivateKey = null\n\t\tencryptionKey = null\n\t\tmessage = null\n\n\t\treturn decrypted;\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {effects, metaReducers, reducers} from './reducers';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {APP_CONFIG} from '@env/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {EntityDataModule} from '@ngrx/data';\nimport {entityConfig} from './entity-metadata';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forRoot(reducers, {\n\t\t\tmetaReducers\n\t\t}),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25,\n\t\t\tlogOnly: APP_CONFIG.production,\n\t\t\tactionsBlocklist: ['@ngrx/router*']\n\t\t}),\n\t\tEffectsModule.forRoot([...effects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tEntityDataModule.forRoot(entityConfig)\n\t]\n})\nexport class DataModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/destination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface Destination {\n\tamount: number; // - unsigned int; Amount to send to each destination, in atomic units.\n\taddress: Address; // - string; Destination public address.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/status/dialog/no-daemon-running.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            animal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/profile/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects-1.html":{"url":"injectables/Effects-1.html","title":"injectable - Effects-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/user/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EffortPipe.html":{"url":"pipes/EffortPipe.html","title":"pipe - EffortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EffortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/effort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        effort\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/effort.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'effort', pure: false })\nexport class EffortPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tif (valid === false) {\n\t\t\treturn 'black';\n\t\t}\n\t\tconst mid = 100;\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tconst b = 0;\n\t\tif (value \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keepHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(content);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystemInterface.html":{"url":"interfaces/FileSystemInterface.html","title":"interface - FileSystemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileSystemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-system.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        mkdir\n                                    \n                                \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        write\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(type, pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:49\n                \n            \n\n\n            \n                \n                    check if a path.. dir or filename exsists in the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:33\n                \n            \n\n\n            \n                \n                    returns a json list of folder contents\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:41\n                \n            \n\n\n            \n                \n                    make a dir, return result as a boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:8\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:16\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(type, filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:25\n                \n            \n\n\n            \n                \n                    write the string value tot he request filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string value to save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileSystemInterface {\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tpath(type, filename);\n\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tread(type, filename);\n\n\t/**\n\t * write the string value tot he request filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t * @param data string value to save\n\t */\n\twrite(type, filename, data): void;\n\n\t/**\n\t * returns a json list of folder contents\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tlist(type, dirname): any;\n\n\t/**\n\t * make a dir, return result as a boolean\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tmkdir(type, dirname): void;\n\n\t/**\n\t * check if a path.. dir or filename exsists in the filesystem\n\t *\n\t * @param type\n\t * @param pathname full system path\n\t */\n\texists(type, pathname): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemService.html":{"url":"injectables/FileSystemService.html","title":"injectable - FileSystemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exists\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                mkDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileSystem\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appFilesystem: FileSystemWebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appFilesystem\n                                                  \n                                                        \n                                                                        FileSystemWebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:66\n                \n            \n\n\n            \n                \n                    check if a file or directory exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    listFiles(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:27\n                \n            \n\n\n            \n                \n                    List files in the directory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkDir\n                        \n                    \n                \n            \n            \n                \nmkDir(dirname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:56\n                \n            \n\n\n            \n                \n                    Create a directory on the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:36\n                \n            \n\n\n            \n                \n                    Returns the string value of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Including system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filename: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:46\n                \n            \n\n\n            \n                \n                    write a file to the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileSystem\n                    \n                \n\n                \n                    \n                        getfileSystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filesystem/file-system.service.ts:17\n                                \n                            \n                    \n                        \n                                returns a working FS wrapper\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemWebService} from './file-system-web.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemService {\n\tpublic type: string;\n\n\tconstructor(private appFilesystem: FileSystemWebService) {\n\t}\n\n\t/**\n\t * returns a working FS wrapper\n\t * @todo add WebFileSystem API wrapper\n\t */\n\tget fileSystem() {\n\t\treturn this.appFilesystem;\n\t}\n\n\t/**\n\t * List files in the directory\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tasync listFiles(dirname) {\n\t\treturn await this.fileSystem.list(dirname);\n\t}\n\n\t/**\n\t * Returns the string value of a file\n\t *\n\t * @param filename Including system path\n\t */\n\tasync readFile(filename: string) {\n\t\treturn await this.fileSystem.read(filename);\n\t}\n\n\t/**\n\t * write a file to the filesystem\n\t *\n\t * @param filename\n\t * @param data\n\t */\n\twriteFile(filename: string, data: any) {\n\t\treturn this.fileSystem.write(filename, data);\n\t}\n\n\t/**\n\t * Create a directory on the filesystem\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tmkDir(dirname: string) {\n\t\treturn this.fileSystem.mkdir(dirname);\n\t}\n\n\t/**\n\t * check if a file or directory exists\n\t *\n\t * @param pathname\n\t * @returns\n\t */\n\texists(pathname: string) {\n\t\treturn this.fileSystem.exists(pathname);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemWebService.html":{"url":"injectables/FileSystemWebService.html","title":"injectable - FileSystemWebService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemWebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system-web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exists\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                            \n                                    Public\n                                mkdir\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mkdir\n                        \n                    \n                \n            \n            \n                \n                    \n                    mkdir(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        path\n                        \n                    \n                \n            \n            \n                \n                    \n                    path(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                    \n                    write(filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/filesystem'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileSystemInterface} from '@interface/file-system.interface';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemWebService implements FileSystemInterface {\n\tprivate apiUrl = 'https://localhost:36911/filesystem';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic exists(pathname): boolean {\n\t\treturn false;\n\t}\n\n\tpublic async list(dirname) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/list`, {path: dirname}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat));\n\t}\n\n\tpublic mkdir(dirname): void {\n\t}\n\n\tpublic path(filename) {\n\t}\n\n\tpublic async read(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/read`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => dat);\n\t}\n\n\tpublic async write(filename, data) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t})\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(\n\t\t\t\t`${this.apiUrl}/write`,\n\t\t\t\t{path: filename, data: data},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log('e'));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAddressBookOut.html":{"url":"interfaces/GetAddressBookOut.html","title":"interface - GetAddressBookOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAddressBookOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getAddressBookOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetAddressBookOut {\n\tentries: {\n\t\taddress: string;\n\t\tdescription: string;\n\t\tindex: number;\n\t\tpayment_id: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsIn.html":{"url":"interfaces/GetBulkPaymentsIn.html","title":"interface - GetBulkPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            min_block_height\n                                        \n                                \n                                \n                                        \n                                            payment_ids\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        min_block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetBulkPaymentsIn {\n\tpayment_ids: string[]; // - array of: string\n\tmin_block_height: number; // - unsigned int; The block height at which to start looking for payments.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsOut.html":{"url":"interfaces/GetBulkPaymentsOut.html","title":"interface - GetBulkPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetBulkPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsIn.html":{"url":"interfaces/GetPaymentsIn.html","title":"interface - GetPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetPaymentsIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsOut.html":{"url":"interfaces/GetPaymentsOut.html","title":"interface - GetPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersIn.html":{"url":"interfaces/GetTransfersIn.html","title":"interface - GetTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersIn.ts\n        \n\n\n            \n                Description\n            \n            \n                Get wallet transfers request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter_by_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers FAILED\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter_by_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter_by_height:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter TX's\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers IN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    max height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    min height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers OUT\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers PENDING\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers POOL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GetTransfersIn {\n\t/** transfers IN */\n\tin?: boolean;\n\t/** transfers OUT */\n\tout?: boolean;\n\t/** transfers PENDING */\n\tpending?: boolean;\n\t/** transfers FAILED */\n\tfailed?: boolean;\n\t/** transfers POOL */\n\tpool?: boolean;\n\t/** Filter TX's */\n\tfilter_by_height?: boolean;\n\t/** min height */\n\tmin_height?: number;\n\t/** max height */\n\tmax_height?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersOut.html":{"url":"interfaces/GetTransfersOut.html","title":"interface - GetTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Transfer} from '../types/transfer';\nimport {Destination} from '../types/destination';\n\nexport interface GetTransfersOut {\n\tin?: Transfer[] & Destination[]; // - boolean;\n\tout?: Transfer[]; // - boolean;\n\tpending?: Transfer[]; // - boolean;\n\tfailed?: Transfer[]; // - boolean;\n\tpool?: Transfer[]; // - boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashRatePipe.html":{"url":"pipes/HashRatePipe.html","title":"pipe - HashRatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashRatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number | string, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashrate.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'hashrate', pure: false })\nexport class HashRatePipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content: number | string = 0, decorator?: boolean) {\n\t\tif (typeof content == 'string' || content === null) {\n\t\t\tcontent = 0;\n\t\t}\n\t\tlet i = 0;\n\t\tconst units = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z'];\n\t\twhile (content > 1000) {\n\t\t\tcontent /= 1000;\n\t\t\ti++;\n\t\t}\n\t\tif (decorator === false) {\n\t\t\treturn content.toFixed(2);\n\t\t} else {\n\t\t\treturn `${content.toFixed(2)} ${units[i]}H/s`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/height.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n\theight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersIn.html":{"url":"interfaces/IncomingTransfersIn.html","title":"interface - IncomingTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            transfer_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_type:     \"all\" | \"available\" | \"unavailable\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"all\" | \"available\" | \"unavailable\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersIn {\n\ttransfer_type: 'all' | 'available' | 'unavailable';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersOut.html":{"url":"interfaces/IncomingTransfersOut.html","title":"interface - IncomingTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            global_index\n                                        \n                                \n                                \n                                        \n                                            spent\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersOut {\n\tamount: number; // - unsigned int\n\tspent: boolean; // - boolean\n\tglobal_index: number; // - unsigned int; Mostly internal use, can be ignored by most users.\n\ttx_hash: string; // - string; Several incoming transfers may share the same hash if they were in the same transaction.\n\ttx_size: number; // - unsigned int\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntegratedAddress.html":{"url":"interfaces/IntegratedAddress.html","title":"interface - IntegratedAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IntegratedAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/integratedAddress.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            integrated_address\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface IntegratedAddress {\n\tintegrated_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LTHN.html":{"url":"classes/LTHN.html","title":"class - LTHN","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LTHN\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toAtomic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toAtomic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-login',\n\ttemplateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\terror = '';\n\n\tconstructor(private authService: AuthService, private router: Router) {\n\t}\n\n\tasync submit() {\n\t\tawait this.authService.login(this.username.value, this.password.value);\n\t\tif (this.authService.getAuthStatus()) {\n\t\t\tthis.router.navigateByUrl('/');\n\t\t} else {\n\t\t\tthis.error = 'Login Failed, try again.';\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        Login\n        \n             0\">{{error}}\n            \n                Username\n                \n            \n            \n                Password\n                \n            \n\n            Login\n\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                     0\">{{error}}                            Username                                                        Password                                        Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-logs\n            \n\n            \n                styleUrls\n                ./logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/logs/logs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/logs/logs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-logs',\n\ttemplateUrl: './logs.component.html',\n\tstyleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./logs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_declarations\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogsComponent} from './logs.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'logs',\n\t\tcomponent: LogsComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [LogsComponent],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule, LogsComponent]\n})\nexport class LogsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsState.html":{"url":"interfaces/LogsState.html","title":"interface - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeIntegratedAddressIn.html":{"url":"interfaces/MakeIntegratedAddressIn.html","title":"interface - MakeIntegratedAddressIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeIntegratedAddressIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MakeIntegratedAddressIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeUriIn.html":{"url":"interfaces/MakeUriIn.html","title":"interface - MakeUriIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeUriIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeUriIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipient_name\n                                        \n                                \n                                \n                                        \n                                            tx_description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface MakeUriIn {\n\taddress: Address;\n\tamount?: number; // (optional) - the integer amount to receive, in atomic units\n\tpayment_id?: string; // (optional) - 16 or 64 character hexadecimal payment id string\n\trecipient_name?: string; // (optional) - string name of the payment recipient\n\ttx_description: string; // (optional) - string describing the reason for the tx\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/markdown.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/markdown.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {marked} from 'marked';\n\n@Pipe({\n\tname: 'markdown'\n})\nexport class MarkdownPipe implements PipeTransform {\n\ttransform(value: any, args?: any[]): any {\n\t\tif (value && value.length > 0) {\n\t\t\treturn marked(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/services/ui/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalContent\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injectable, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\n\n@Component({\n\tselector: 'modal',\n\ttemplateUrl: './modal.component.html'\n})\n@Injectable({providedIn: 'root'})\nexport class ModalComponent implements OnInit {\n\n\t@Input() public modalConfig: ModalConfig\n\n\t@ViewChild('modal') private modalContent: TemplateRef\n\tprivate modalRef: NgbModalRef\n\n\tconstructor(private modalService: NgbModal) { }\n\n\tngOnInit(): void { }\n\n\topen(): Promise {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.modalRef = this.modalService.open(this.modalContent)\n\t\t\tthis.modalRef.result.then(resolve, resolve)\n\t\t})\n\t}\n\n\tasync close(): Promise {\n\t\tif (this.modalConfig.shouldClose === undefined || (await this.modalConfig.shouldClose())) {\n\t\t\tconst result = this.modalConfig.onClose === undefined || (await this.modalConfig.onClose())\n\t\t\tthis.modalRef.close(result)\n\t\t}\n\t}\n\n\tasync dismiss(): Promise {\n\t\tif (this.modalConfig.shouldDismiss === undefined || (await this.modalConfig.shouldDismiss())) {\n\t\t\tconst result = this.modalConfig.onDismiss === undefined || (await this.modalConfig.onDismiss())\n\t\t\tthis.modalRef.dismiss(result)\n\t\t}\n\t}\n}\n\n\n\n\n\n\n    \n\n    \n        \n    \n        {{ modalConfig.modalTitle }}\n    \n    \n        \n    \n    \n        \n            {{ modalConfig.dismissButtonLabel }}\n        \n        \n            {{ modalConfig.closeButtonLabel }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ modalConfig.modalTitle }}                                            {{ modalConfig.dismissButtonLabel }}                            {{ modalConfig.closeButtonLabel }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ui/modal/modalConfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closeButtonLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissButtonLabel\n                                        \n                                \n                                \n                                        \n                                            modalTitle\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        disableCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        disableDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onDismiss\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldDismiss\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableCloseButton\n                        \n                    \n                \n            \n            \n                \ndisableCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableDismissButton\n                        \n                    \n                \n            \n            \n                \ndisableDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideCloseButton\n                        \n                    \n                \n            \n            \n                \nhideCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideDismissButton\n                        \n                    \n                \n            \n            \n                \nhideDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onDismiss\n                        \n                    \n                \n            \n            \n                \nonDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldClose\n                        \n                    \n                \n            \n            \n                \nshouldClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldDismiss\n                        \n                    \n                \n            \n            \n                \nshouldDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modalTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modalTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalConfig {\n\tmodalTitle: string;\n\tdismissButtonLabel?: string;\n\tcloseButtonLabel?: string;\n\n\tshouldClose?(): Promise | boolean;\n\n\tshouldDismiss?(): Promise | boolean;\n\n\tonClose?(): Promise | boolean;\n\n\tonDismiss?(): Promise | boolean;\n\n\tdisableCloseButton?(): boolean;\n\n\tdisableDismissButton?(): boolean;\n\n\thideCloseButton?(): boolean;\n\n\thideDismissButton?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/ui/modal/modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n\n\n@NgModule({\n  declarations: [ModalComponent],\n  exports: [\n    ModalComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkHashrateChart.html":{"url":"injectables/NetworkHashrateChart.html","title":"injectable - NetworkHashrateChart","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkHashrateChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/hashvault/charts/network-hashrate.chart.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseChartConfigService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                pollingStartAction\n                            \n                            \n                                    Public\n                                pollingStopAction\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureOptions\n                            \n                            \n                                dataMap\n                            \n                            \n                                setupCallbacks\n                            \n                            \n                                addOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data, i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'networkDifficulty'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStartAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStartPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStopAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStopPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'line'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as ChartsActions from '../../../modules/chart/data/actions';\nimport {BaseChartConfigService} from '@module/chart/base-chart-config.service';\nimport {ChartConfigInterface} from '@module/chart/chart-config.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class NetworkHashrateChart\n\textends BaseChartConfigService\n\timplements ChartConfigInterface {\n\tpublic pollingStartAction =\n\t\tChartsActions.chartNetworkDifficultyStartPolling();\n\tpublic pollingStopAction =\n\t\tChartsActions.chartNetworkDifficultyStopPolling();\n\tpublic key = 'networkDifficulty';\n\tpublic type = 'line';\n\tpublic data = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconfigureOptions() {\n\t\tthis.addOptions({\n\t\t\tparsing: false,\n\t\t\tspanGaps: true,\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tx: {\n\t\t\t\t\ttitle: 'time',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tday: 'D MMM'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunit: 'day'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsource: 'data',\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\tbounds: 'data',\n\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\toffsetGridLines: false,\n\t\t\t\t\t\ttickMarkLength: 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\ttitle: 'hashrate',\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: null,\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro',\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tmirror: true,\n\t\t\t\t\t\tpadding: 4\n\t\t\t\t\t},\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\ttickMarkLength: 0,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tposition: 'nearest',\n\t\t\t\t\tmode: 'index',\n\t\t\t\t\tintersect: false,\n\t\t\t\t\tcaretSize: 4,\n\t\t\t\t\tbackgroundColor: 'e2e2e2',\n\t\t\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t},\n\t\t\t\tdecimation: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\talgorithm: 'lttb',\n\t\t\t\t\tsamples: 50\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolors: ['#1c9ea3']\n\t\t});\n\t}\n\n\tsetupCallbacks() {\n\t\tconst vm = this;\n\t\t// this.options.scales.y.ticks.callback = function (value, index, values) {\n\t\t//     return vm.hashratePipe.transform(value);\n\t\t// };\n\t\t//\n\t\t// this.options.plugins.tooltip.callbacks = {\n\t\t//     label: context => `Hashrate: ${vm.hashratePipe.transform(context.parsed.y)}`\n\t\t// };\n\t}\n\n\tdataMap(data, i) {\n\t\tconst vm = this;\n\t\treturn data.map((n: any) => ({\n\t\t\tx: n.ts,\n\t\t\ty: Math.floor(n.diff / 120)\n\t\t}));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewComponent.html":{"url":"components/NewComponent.html","title":"component - NewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/new.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-new\n            \n\n\n\n\n            \n                templateUrl\n                ./new.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                password_confirm\n                            \n                            \n                                wallet_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWallet\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_confirm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_name\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { WalletRpcService } from '@service/wallet.rpc.service';\n\n@Component({\n\tselector: 'lthn-wallet-new',\n\ttemplateUrl: './new.component.html'\n})\nexport class NewComponent implements OnInit {\n\twallet_name = new FormControl('');\n\tpassword = new FormControl('');\n\tpassword_confirm = new FormControl('');\n\tconstructor(private wallet: WalletRpcService) {}\n\n\tngOnInit(): void {}\n\n\tcreateWallet() {\n\t\tif (this.password.value === this.password_confirm.value) {\n\t\t\tconsole.log(\n\t\t\t\tthis.wallet.createWallet({\n\t\t\t\t\tfilename: this.wallet_name.value,\n\t\t\t\t\tpassword: this.password.value,\n\t\t\t\t\tlanguage: 'English'\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.new-wallet' | translate }}\n    \n\n        \n            {{ 'plugin.lthn.wallet.label.filename' | translate }}\n            \n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n            \n        \n        {{ 'plugin.lthn.wallet.button.create-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.new-wallet\\' | translate }}                        {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}                                        {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                            {{ \\'plugin.lthn.wallet.button.create-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoDaemonRunningDialog.html":{"url":"components/NoDaemonRunningDialog.html","title":"component - NoDaemonRunningDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoDaemonRunningDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/dialog/no-daemon-running.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status-no-daemon\n            \n\n\n\n\n            \n                templateUrl\n                no-daemon-running.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n    \n        \n  Please Download Our App\n  \n    The blockchain functionality requires extra software, please install our app to enable this feature.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Download Our App      The blockchain functionality requires extra software, please install our app to enable this feature.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoDaemonRunningDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-open\n            \n\n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlockWallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockWallet\n                        \n                    \n                \n            \n            \n                \nunlockWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\n\n@Component({\n\tselector: 'lthn-wallet-open',\n\ttemplateUrl: './open.component.html'\n})\nexport class OpenComponent implements OnInit {\n\t@Input() name?: string = '';\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\tconstructor(private wallet: WalletRpcService) {\n\n\t}\n\n\tngOnInit(): void {\n\n\t}\n\n\tunlockWallet() {\n\n\t\treturn this.wallet.openWallet({\n\t\t\tfilename: this.name ? this.name : this.filename.value,\n\t\t\tpassword: this.password.value\n\t\t});\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.unlockang-wallet' | translate }}\n    \n\n        \n            {{ 'plugin.lthn.wallet.label.filename' | translate }}\n            \n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        {{ 'plugin.lthn.wallet.button.unlock-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.unlockang-wallet\\' | translate }}                        {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}                                        {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                            {{ \\'plugin.lthn.wallet.button.unlock-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenWallet.html":{"url":"interfaces/OpenWallet.html","title":"interface - OpenWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParseUri.html":{"url":"interfaces/ParseUri.html","title":"interface - ParseUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParseUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         MakeUriIn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MakeUriIn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Payment {\n\tamount: number;\n\tblock_height: number;\n\tpayment_id: string;\n\ttx_hash: string;\n\tunlock_time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HashRatePipe} from './crypto/hashrate.pipe';\nimport {TimeAgoPipe} from './date/timeAgo.pipe';\nimport {EscapeHtmlPipe} from './content/html.pipe';\nimport {ShruggiePipe} from './content/shruggie.pipe';\nimport {RemoveTrailingZerosPipe} from './math/removeTrailingZeros.pipe';\nimport {MarkdownPipe} from './content/markdown.pipe';\nimport {EffortPipe} from './crypto/effort.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe\n\t],\n\texports: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe\n\t],\n\timports: [CommonModule]\n})\nexport class PipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/hive/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hive/post/post.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client } from '@hiveio/dhive';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'lthn-app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\tpublic post = {};\n\tpublic title = '';\n\tpublic content = '';\n\tpublic author = '';\n\tprivate subs: any = {};\n\n\tconstructor(private router: Router) {}\n\n\tngOnInit(): void {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst slug = this.router.routerState.snapshot.url.replace('/p/', '');\n\t\tconst that = this;\n\t\tconsole.log(this.router.routerState.snapshot.url);\n\n\t\tclient.database.getState(`/hive-179211/@${slug}`).then(function (post) {\n\t\t\tthat.post = post;\n\n\t\t\tthat.content = post.content[slug].body;\n\t\t\tthat.title = post.content[slug].title;\n\t\t\tthat.author = post.content[slug].author;\n\t\t\tconsole.log(post);\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      {{title}}\n      {{author}}\n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                {{title}}      {{author}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PostComponent} from './post.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {PipesModule} from '../../../pipes/pipes.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: PostComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: PostComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [PostComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tPipesModule\n\t]\n})\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostRoutingModule.html":{"url":"modules/PostRoutingModule.html","title":"module - PostRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'p',\n\t\tloadChildren: () => \"import('./post.module').then((m) => m.PostModule)\"\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class PostRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                randomAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/profile.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        randomAlias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n\tcolors,\n\tnames,\n\tstarWars,\n\tuniqueNamesGenerator\n} from 'unique-names-generator';\n\n@Component({\n\tselector: 'lthn-user-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\tpublic randomAlias: string = uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t});\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Profiles\n            \n              Profile 1\n              -->\n              \n              -->\n            \n          \n\n          \n          \n            \n              person_add\n            \n          \n          \n            engineering\n          \n        \n      \n\n\n    \n    \n    \n      \n        Profile\n        \n          \n            Name\n          \n        \n      \n      \n        Blockchain Settings\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n      \n        Wallets\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Profiles                          Profile 1              -->                            -->                                                                    person_add                                            engineering                                                  Profile                              Name                                      Blockchain Settings                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                            Wallets                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            dkey\n                                        \n                                \n                                \n                                        \n                                            ekey\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ekey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ekey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileState {\n\t// Friendly name for the profile\n\talias: string;\n\t// auto generated image from the friendly name\n\tavatar: string;\n\t// id's to attached wallets\n\twallets: any;\n\t// application prefrences etc\n\toptions: any;\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: string;\n\t// Encryption Key, to save data\n\tekey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyIn.html":{"url":"interfaces/QueryKeyIn.html","title":"interface - QueryKeyIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyIn {\n\tkey_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyOut.html":{"url":"interfaces/QueryKeyOut.html","title":"interface - QueryKeyOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyOut {\n\tkey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RemoveTrailingZerosPipe.html":{"url":"pipes/RemoveTrailingZerosPipe.html","title":"pipe - RemoveTrailingZerosPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RemoveTrailingZerosPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/math/removeTrailingZeros.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        removeTrailingZero\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/math/removeTrailingZeros.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'removeTrailingZero', pure: true })\nexport class RemoveTrailingZerosPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tvalue = value.toString();\n\t\tif (value.indexOf('.') === -1) {\n\t\t\treturn parseInt(value);\n\t\t}\n\t\twhile (\n\t\t\t(value.slice(-1) === '0' || value.slice(-1) === '.') &&\n\t\t\tvalue.indexOf('.') !== -1\n\t\t) {\n\t\t\tvalue = value.substr(0, value.length - 1);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-rpc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            jsonrpc\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonrpc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonrpc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        const rpcBody = (method) => (params) => ({\n\tjsonrpc: '2.0',\n\tid: '0',\n\tmethod: method,\n\tparams: params\n});\nconst axios = require('axios').default;\nexport const request =\n\t(url) =>\n\t (method, params = {}) =>\n\t\t axios.post(url, JSON.stringify(rpcBody(method)(params))).then((data) => {\n\t\t\t console.log(data)\n\t\t\t if(data['data'].error){\n\t\t\t\treturn data['data']\n\t\t\t } else if(data['data']) {\n\t\t\t\t return data['data'].result\n\t\t\t }else{\n\t\t\t\t return data\n\t\t\t }\n\t\t });\n\ninterface Response {\n\tid: string;\n\tjsonrpc: string;\n\tresult: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreComponent.html":{"url":"components/RestoreComponent.html","title":"component - RestoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/restore.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-restore\n            \n\n\n\n\n            \n                templateUrl\n                ./restore.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restoreWalletForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                restoreWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWalletForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tfilename: new FormControl(''),\n\t\taddress: new FormControl(''),\n\t\trestore_height: new FormControl('0'),\n\t\tautosave_current: new FormControl(true),\n\t\tpassword: new FormControl(''),\n\t\tpassword_confirm: new FormControl(''),\n\t\tspendkey: new FormControl(''),\n\t\tviewkey: new FormControl(''),\n\t\tviewonly_wallet: new FormControl(false),\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\n\n@Component({\n\tselector: 'lthn-wallet-restore',\n\ttemplateUrl: './restore.component.html'\n})\n\nexport class RestoreComponent implements OnInit {\n\trestoreWalletForm = new FormGroup({\n\t\tfilename: new FormControl(''),\n\t\taddress: new FormControl(''),\n\t\trestore_height: new FormControl('0'),\n\t\tautosave_current: new FormControl(true),\n\t\tpassword: new FormControl(''),\n\t\tpassword_confirm: new FormControl(''),\n\t\tspendkey: new FormControl(''),\n\t\tviewkey: new FormControl(''),\n\t\tviewonly_wallet: new FormControl(false),\n\t});\n\n\tconstructor(private wallet: WalletService) {\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\trestoreWallet() {\n\n\t\tthis.wallet.restoreWallet({\n\t\t\tfilename: this.restoreWalletForm.value.filename,\n\t\t\taddress: this.restoreWalletForm.value.address,\n\t\t\trestore_height: this.restoreWalletForm.value.restore_height,\n\t\t\tautosave_current: this.restoreWalletForm.value.autosave_current,\n\t\t\tpassword: this.restoreWalletForm.value.password,\n\t\t\tspendkey:\n\t\t\t(\n\t\t\t\tthis.restoreWalletForm.value.viewonly_wallet ?\n\t\t\t\t\t'' : this.restoreWalletForm.value.spendkey\n\t\t\t)\n\t\t\t,\n\t\t\tviewkey: this.restoreWalletForm.value.viewkey\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.restore-seed' | translate }}\n    \n        \n            \n                \n                    {{ 'plugin.lthn.wallet.label.filename' | translate }}\n                    \n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                    \n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n                    \n                \n            \n\n            \n                \n                    {{ 'plugin.lthn.wallet.label.address' | translate }}\n                    \n                \n            \n\n\n\n            \n                {{ 'plugin.lthn.wallet.label.spend-key' | translate }}\n                \n            \n\n            \n                {{ 'plugin.lthn.wallet.label.view-key' | translate }}\n                \n            \n\n            \n\n                \n                    \n                        Optional parameters\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.restore-height' | translate }}\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.autosave' | translate }}\n                \n\n                \n                    View only wallet\n                \n\n            \n\n            \n                {{ 'plugin.lthn.wallet.button.restore-wallet' | translate }}\n            \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.restore-seed\\' | translate }}                                                            {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                                                                                                {{ \\'plugin.lthn.wallet.label.address\\' | translate }}                                                                            {{ \\'plugin.lthn.wallet.label.spend-key\\' | translate }}                                                        {{ \\'plugin.lthn.wallet.label.view-key\\' | translate }}                                                                                                    Optional parameters                                                                        {{ \\'plugin.lthn.wallet.label.restore-height\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.autosave\\' | translate }}                                                    View only wallet                                                        {{ \\'plugin.lthn.wallet.button.restore-wallet\\' | translate }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestoreWallet.html":{"url":"interfaces/RestoreWallet.html","title":"interface - RestoreWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestoreWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/requests/restoreWallet.ts\n        \n\n\n            \n                Description\n            \n            \n                Restore Wallet request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            autosave_current\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            restore_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendkey\n                                        \n                                \n                                \n                                        \n                                            viewkey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's primary address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosave_current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosave_current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Defaults to true) If true, save the current wallet before generating the new wallet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's file name on the RPC server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restore_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restore_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; defaults to 0) The block height to restore the wallet from.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's private view key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RestoreWallet {\n\n\t/**\n\t * The wallet's file name on the RPC server.\n\t */\n\tfilename: string;\n\n\t/**\n\t * (Optional; defaults to 0) The block height to restore the wallet from.\n\t */\n\trestore_height?: number;\n\n\t/**\n\t * The wallet's primary address.\n\t */\n\taddress: string;\n\n\t/**\n\t * (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\t */\n\tspendkey?: string;\n\n\t/**\n\t * The wallet's private view key.\n\t */\n\tviewkey: string;\n\n\t/**\n\t * The wallet's password.\n\t */\n\tpassword: string;\n\n\t/**\n\t * (Defaults to true) If true, save the current wallet before generating the new wallet.\n\t */\n\tautosave_current?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RootComponent.html":{"url":"components/RootComponent.html","title":"component - RootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/root.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-root\n            \n\n\n\n\n            \n                templateUrl\n                ./root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasCLI\n                            \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadCLI\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                renderAppView\n                            \n                            \n                                renderFirstRunView\n                            \n                            \n                                renderWebView\n                            \n                            \n                                startBlockchain\n                            \n                            \n                                startWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, fileSystem: FileSystemService, chain: BlockchainService, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/root.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \ndownloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderAppView\n                        \n                    \n                \n            \n            \n                \nrenderAppView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderFirstRunView\n                        \n                    \n                \n            \n            \n                \nrenderFirstRunView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderWebView\n                        \n                    \n                \n            \n            \n                \nrenderWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startBlockchain\n                        \n                    \n                \n            \n            \n                \nstartBlockchain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Client} from '@hiveio/dhive';\nimport {Router} from '@angular/router';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\n\n@Component({\n\tselector: 'lthn-root',\n\ttemplateUrl: './root.component.html'\n})\nexport class RootComponent implements OnInit {\n\tpublic posts: any = [];\n\n\tpublic hasCLI: boolean;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate chain: BlockchainService,\n\t\tprivate wallet: WalletService\n\t) {\n\t}\n\n\tasync ngOnInit() {\n\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\tif (dat.length > 0) {\n\t\t\t\tthis.renderAppView();\n\t\t\t} else {\n\t\t\t\tthis.renderFirstRunView();\n\t\t\t}\n\t\t});\n\t\tthis.fileSystem.listFiles('/cli').then((dat: any) => {\n\t\t\tthis.hasCLI = dat.length > 0;\n\t\t});\n\t}\n\n\trenderAppView() {\n\t}\n\n\trenderFirstRunView() {\n\t\tthis.router.navigateByUrl('/user');\n\t}\n\n\tdownloadCLI() {\n\t\tthis.chain.downloadCLI();\n\t}\n\n\tstartBlockchain() {\n\t\treturn this.chain.startDaemon();\n\t}\n\n\tstartWallet() {\n\t\treturn this.wallet.startWallet();\n\t}\n\n\trenderWebView() {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst that = this;\n\t\tclient.database\n\t\t\t.getDiscussions('trending', {tag: 'dvpn', limit: 5})\n\t\t\t.then(function (discussions) {\n\t\t\t\tthat.posts = discussions;\n\t\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'words.state.not_installed' | translate }}\n    {{ 'words.state.not_installed_desc' | translate }}\n    {{ 'button.install-blockchain' | translate }}\n\n\n    \n        \n            \n        \n        \n            \n        \n\n    \n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'words.state.not_installed\\' | translate }}    {{ \\'words.state.not_installed_desc\\' | translate }}    {{ \\'button.install-blockchain\\' | translate }}                                                                                                                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootModule\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_RootModule_declarations\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConsoleModule\n                        \n                        \n                            TranslateModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from './root.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {AuthGuard} from './auth/route.guard';\nimport {FlexModule} from '@angular/flex-layout';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {WalletModule} from '@plugin/lthn/wallet/wallet.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n@NgModule({\n\tdeclarations: [RootComponent],\n\texports: [\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tConsoleModule,\n\t\tMatTabsModule,\n\t\tWalletModule,\n\t\tTranslateModule,\n\t\tMatDividerModule\n\t]\n})\nexport class RootModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootRoutingModule.html":{"url":"modules/RootRoutingModule.html","title":"module - RootRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RootRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootRoutingModule\n\n\n\ncluster_RootRoutingModule_imports\n\n\n\n\nRootModule\n\nRootModule\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RootModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from '@module/root.component';\nimport {AuthGuard} from '@module/auth/route.guard';\nimport {RootModule} from '@module/root.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: RootComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.dashboard.title',\n\t\t\theading: 'view.dashboard.heading',\n\t\t\tdescription: 'view.dashboard.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule,\n\t\tRootModule,\n\t\tRouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class RootRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                setting_tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        setting_tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'general'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\tsetting_tab = 'general';\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tconsole.log('SettingsComponent INIT');\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('SettingsComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent-1.html":{"url":"components/SettingsComponent-1.html","title":"component - SettingsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-settings',\n\ttemplateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settings.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/data/settings.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/data/settings.effects.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { switchMap } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class SettingsEffects {\n\tchangeLanguage$ = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(private actions$: Actions, private translate: TranslateService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LogsModule} from './logs/logs.module';\nimport {SettingsComponent} from './settings.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: SettingsComponent,\n\t\tdata: {\n\t\t\ttitle: 'Settings',\n\t\t\theading: 'Unified Settings Panel',\n\t\t\tdescription: 'Lethean (LTHN) Blockchain Stats',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'logs',\n\t\tloadChildren: () =>\n\t\t\t\"import('./logs/logs.module').then((m) => m.LogsModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [SettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tFlexModule,\n\t\tMatToolbarModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatTabsModule,\n\t\tLogsModule\n\t],\n\texports: [RouterModule]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./settings.module').then(\\\n\t\t\t\t(m) => m.SettingsModule\\\n\t\t\t)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settingsState.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            biggerContentFont\n                                        \n                                \n                                \n                                        \n                                            daltonism\n                                        \n                                \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                                \n                                        \n                                            globalFontSize\n                                        \n                                \n                                \n                                        \n                                            hideNavigation\n                                        \n                                \n                                \n                                        \n                                            highContrastText\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            rtl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        biggerContentFont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biggerContentFont:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daltonism\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daltonism:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globalFontSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        globalFontSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideNavigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrastText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highContrastText:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rtl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rtl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState {\n\thideNavigation: boolean;\n\t// accessibility\n\tbiggerContentFont: boolean;\n\thighContrastText: boolean;\n\tdaltonism: boolean;\n\trtl: boolean;\n\t// global font size\n\tglobalFontSize: string;\n\t// UI Language\n\tlanguage: string;\n\t// UI mode\n\tdarkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShruggiePipe.html":{"url":"pipes/ShruggiePipe.html","title":"pipe - ShruggiePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShruggiePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/shruggie.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shrug\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/shruggie.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'shrug', pure: false })\nexport class ShruggiePipe implements PipeTransform {\n\ttransform(content, decorator?: boolean) {\n\t\tif (content === null || content === '') {\n\t\t\treturn '¯\\\\_(ツ)_/¯';\n\t\t}\n\t\treturn content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SplitIntegratedAddressOut.html":{"url":"interfaces/SplitIntegratedAddressOut.html","title":"interface - SplitIntegratedAddressOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SplitIntegratedAddressOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            standard_address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standard_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        standard_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface SplitIntegratedAddressOut {\n\tstandard_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/status.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status\n            \n\n            \n                styleUrls\n                ./status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                status_annon\n                            \n                            \n                                status_daemon\n                            \n                            \n                                status_private\n                            \n                            \n                                status_secure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/status.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_annon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_secure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n\tselector: 'lthn-app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent {\n\tstatus_daemon: any;\n\tstatus_secure: any;\n\tstatus_private: any;\n\tstatus_annon: any;\n\n\tconstructor(public dialog: MatDialog) {}\n}\n\n    \n\n    \n        \n    \n        \n            \n                cloud\n            \n            \n                cloud_off\n            \n            \n                lock\n            \n            \n                lock_open\n            \n            \n                visibility_off\n            \n            \n                visibility_off\n            \n            \n                verified_user\n            \n            \n                verified_user\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./status.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cloud                                        cloud_off                                        lock                                        lock_open                                        visibility_off                                        visibility_off                                        verified_user                                        verified_user                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_declarations\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/status/status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NoDaemonRunningDialog\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {NoDaemonRunningDialog} from './dialog/no-daemon-running.component';\n\n@NgModule({\n\tdeclarations: [StatusComponent, NoDaemonRunningDialog],\n\texports: [StatusComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatDialogModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule\n\t]\n})\nexport class StatusModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreOut.html":{"url":"interfaces/StoreOut.html","title":"interface - StoreOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/storeOut.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface StoreOut {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllIn.html":{"url":"interfaces/SweepAllIn.html","title":"interface - SweepAllIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllIn.ts\n        \n\n\n            \n                Description\n            \n            \n                SweepAll request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            below_amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            do_not_relay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_keys\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination public address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        below_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        below_amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        do_not_relay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        do_not_relay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_hex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) return the transactions as hex encoded string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_keys:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Return the transaction keys after sending.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of outpouts from the blockchain to mix with (0 means no mixing).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllIn {\n\n\t/** Destination public address */\n\taddress: string;\n\n\t/** (Optional) */\n\tpriority?: number;\n\n\t/** Number of outpouts from the blockchain to mix with (0 means no mixing). */\n\tmixin: number;\n\n\t/** unsigned int; Number of blocks before the monero can be spent (0 to not add a lock). */\n\tunlock_time: number;\n\n\t/** (Optional) Random 32-byte/64-character hex string to identify a transaction. */\n\tpayment_id?: string;\n\n\t/** (Optional) Return the transaction keys after sending. */\n\tget_tx_keys?: boolean;\n\n\t/** (Optional) */\n\tbelow_amount?: number;\n\n\t/** (Optional)  */\n\tdo_not_relay?: boolean;\n\n\t/** (Optional) return the transactions as hex encoded string. */\n\tget_tx_hex?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllOut.html":{"url":"interfaces/SweepAllOut.html","title":"interface - SweepAllOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_blob_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                                \n                                        \n                                            tx_key_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_blob_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_blob_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllOut {\n\ttx_hash_list: string[];\n\ttx_key_list: string[];\n\ttx_blob_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepDustOut.html":{"url":"interfaces/SweepDustOut.html","title":"interface - SweepDustOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepDustOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepDustOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepDustOut {\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '../../services/crypt.service';\nimport {FileSystemService} from '../../services/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/date/timeAgo.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/date/timeAgo.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'timeAgo',\n\tpure: false\n})\nexport class TimeAgoPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value: string) {\n\t\tconst d = new Date(value);\n\t\tconst now = new Date();\n\t\tconst seconds = Math.round(\n\t\t\tMath.abs((now.getTime() - d.getTime()) / 1000)\n\t\t);\n\t\tconst minutes = Math.round(Math.abs(seconds / 60));\n\t\tconst hours = Math.round(Math.abs(minutes / 60));\n\t\tconst days = Math.round(Math.abs(hours / 24));\n\t\tconst months = Math.round(Math.abs(days / 30.416));\n\t\tconst years = Math.round(Math.abs(days / 365));\n\t\tif (Number.isNaN(seconds)) {\n\t\t\treturn '';\n\t\t} else if (seconds  545)\n\t\t\treturn years + ' years ago';\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/transactions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadTransactions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                opts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opts\n                    \n                \n                \n                    \n                        Type :         GetTransfersIn\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t}\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetTransfersOut[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Observable} from 'rxjs';\nimport {GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\n\n@Component({\n\tselector: 'lthn-wallet-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class TransactionsComponent implements OnInit {\n\t@Input() name?: string = '';\n\t@Input() opts: GetTransfersIn = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t};\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\trows: GetTransfersOut[];\n\n\n\n\tcolumns = [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}];\n\n\tColumnMode = ColumnMode;\n\n\tconstructor(private wallet: WalletRpcService) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.loadTransactions();\n\t}\n\n\tasync loadTransactions() {\n\n\t\tthis.rows = await this.wallet.getTransfers(this.opts).then((data) => Object.values(data).flat());\n\t\tconsole.log(this.rows);\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.wallet-transactions' | translate }}\n    \n\n            \n            \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.wallet-transactions\\' | translate }}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/transfer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            txid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transfer {\n\tamount: number;\n\tfee: number;\n\theight: number;\n\tnote: string;\n\tpayment_id: string;\n\ttimestamp: number;\n\ttxid: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferIn.html":{"url":"interfaces/TransferIn.html","title":"interface - TransferIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from '../types/destination';\n\nexport interface TransferIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. Outputs:\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOut.html":{"url":"interfaces/TransferOut.html","title":"interface - TransferOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferOut {\n\tfee: number; // - Integer value of the fee charged for the txn.\n\ttx_hash: string; // - String for the publically searchable transaction hash\n\ttx_key: string; // - String for the transaction key if get_tx_key is true, otherwise, blank string.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitIn.html":{"url":"interfaces/TransferSplitIn.html","title":"interface - TransferSplitIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            new_algorithm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        new_algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        new_algorithm:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitOut.html":{"url":"interfaces/TransferSplitOut.html","title":"interface - TransferSplitOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferSplitOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee_list:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferSplitOut {\n\tfee_list: number[];\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/i18n/translate/translate.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n  ]\n})\nexport class TranslateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Uri.html":{"url":"interfaces/Uri.html","title":"interface - Uri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Uri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/uri.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Uri {\n\turi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                processingForm\n                            \n                            \n                                task\n                            \n                            \n                                userForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/user.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '../../services/crypt.service';\nimport {FileSystemService} from '../../services/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Welcome To Lethean\n                    \n                        Protecting Privacy &amp; Confidentially since 2017\n                    \n                \n\n            \n        \n        \n        \n\n            \n                New User\n                \n                    \n                        \n                            Username\n                            \n                        \n                        \n                            Password\n                            \n                        \n                        \n                            Password (Confirm)\n                            \n                        \n\n                    \n                    Create User\n                \n            \n\n            \n                Data Handling Declaration\n                \n                    \n                        Lethean's designed to protect your digital security; We encrypt as much as we can.\n                    \n                    \n                        Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you\n                        use your\n                        software and never will.\n                    \n                    \n                        Below is a highlight of some of the steps we take to protect you.\n                    \n                    Data Confidentiality\n                    \n                        User accounts don't hold cleartext data.\n                        Application data is encrypted & meaningless without User authentication.\n                        Transactions on our network are Encrypted, with a secret decryption key per transaction;\n                            confidentiality\n                            is standard.\n                        \n                        There is no method to expose VPN purchase history to anyone but you.\n                        There is no magic key; we can not under any circumstances decrypt or recover your data; it's\n                            just not\n                            possible, dont forget your login details.\n                        \n                    \n                    Data Privacy\n                    \n                        Application data is locked to user accounts with military-grade encryption.\n                        You will be informed when you wish to perform an action that will expose data.\n                    \n                \n            \n        \n        \n            \n                Building Your Encryption Keys\n                \n                    You will be redirected to the profile creation page soon.\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Welcome To Lethean                                            Protecting Privacy & Confidentially since 2017                                                                                                    New User                                                                                        Username                                                                                                        Password                                                                                                        Password (Confirm)                                                                                            Create User                                                        Data Handling Declaration                                                            Lethean\\'s designed to protect your digital security; We encrypt as much as we can.                                                                Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you                        use your                        software and never will.                                                                Below is a highlight of some of the steps we take to protect you.                                        Data Confidentiality                                            User accounts don\\'t hold cleartext data.                        Application data is encrypted & meaningless without User authentication.                        Transactions on our network are Encrypted, with a secret decryption key per transaction;                            confidentiality                            is standard.                                                There is no method to expose VPN purchase history to anyone but you.                        There is no magic key; we can not under any circumstances decrypt or recover your data; it\\'s                            just not                            possible, dont forget your login details.                                                                Data Privacy                                            Application data is locked to user accounts with military-grade encryption.                        You will be informed when you wish to perform an action that will expose data.                                                                                            Building Your Encryption Keys                                    You will be redirected to the profile creation page soon.                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMeta.html":{"url":"interfaces/UserMeta.html","title":"interface - UserMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decryptionKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decryptionKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decryptionKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {UserComponent} from './user.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: UserComponent,\n\t\tdata: {\n\t\t\ttitle: 'New User - Lethean (LTHN)',\n\t\t\theading: 'New User Wizard',\n\t\t\tdescription: 'Lethean (LTHN) New User Panel',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [UserComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatOptionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatDividerModule,\n\t\tMatCardModule,\n\t\tMatInputModule,\n\t\tFlexModule,\n\t\tMatCheckboxModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressBarModule\n\t]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOptions.html":{"url":"interfaces/UserOptions.html","title":"interface - UserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/interfaces/user.options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginMethod\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginMethod:         LoginMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOptions {\n\tloginMethod: LoginMethods;\n}\n\nexport enum LoginMethods {\n\tPASSWORD = 1,\n\tSSH_PEM\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '../auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'user',\n\t\tloadChildren: () =>\n\t\t\t\"import('./user.module').then((m) => m.UserModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         UserMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMeta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         UserOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersState.html":{"url":"interfaces/UsersState.html","title":"interface - UsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VpnComponent.html":{"url":"components/VpnComponent.html","title":"component - VpnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VpnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/vpn/vpn.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-vpn\n            \n\n            \n                styleUrls\n                ./vpn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vpn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/vpn/vpn.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/vpn/vpn.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-vpn',\n\ttemplateUrl: './vpn.component.html',\n\tstyleUrls: ['./vpn.component.scss']\n})\nexport class VpnComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      VPN Marketplace\n      All nodes are community run, browse and keep track of your favourites here.\n      \n        New Provider\n        List Services\n        Deploy ExitNode\n\n      \n    \n    \n      \n        \n          local Blockchain\n          This helps the community the most, and makes you a member of the network. Exactly the same\n            as Torrents, but just our blockchain.\n          \n          \n            \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n            \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./vpn.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            VPN Marketplace      All nodes are community run, browse and keep track of your favourites here.              New Provider        List Services        Deploy ExitNode                                      local Blockchain          This helps the community the most, and makes you a member of the network. Exactly the same            as Torrents, but just our blockchain.                                                                            Region                Provider                Service                Cost                                                                        Region                Provider                Service                Cost                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'VpnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnModule.html":{"url":"modules/VpnModule.html","title":"module - VpnModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VpnComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VpnComponent } from './vpn.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [VpnComponent],\n\timports: [CommonModule, MatCardModule, FlexModule, MatButtonModule]\n})\nexport class VpnModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnRoutingModule.html":{"url":"modules/VpnRoutingModule.html","title":"module - VpnRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VpnComponent } from './vpn.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'vpn',\n\t\tcomponent: VpnComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class VpnRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletComponent.html":{"url":"components/WalletComponent.html","title":"component - WalletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/wallet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-wallet\n            \n\n            \n                styleUrls\n                ./wallet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wallet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Private\n                                modalComponent\n                            \n                            \n                                    Public\n                                modalConfig\n                            \n                            \n                                    Public\n                                openedWallet\n                            \n                            \n                                    Public\n                                showtx\n                            \n                            \n                                    Public\n                                txnSelection\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Public\n                                isChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                openModal\n                            \n                            \n                                openWallet\n                            \n                            \n                                    Public\n                                    Async\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isChecked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isChecked(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        openModal\n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance | Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalConfig\n\n                    \n                \n                \n                    \n                        Default value : {modalTitle: 'Open Wallet'} as ModalConfig\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openedWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        txnSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\nimport {Balance} from '@plugin/lthn/wallet/interfaces';\n\n@Component({\n\tselector: 'lthn-app-wallet',\n\ttemplateUrl: './wallet.component.html',\n\tstyleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit, OnDestroy {\n\tpublic balance:  Balance | Promise;\n\tconstructor(private wallet: WalletService) {}\n\tpublic wallets: string[] = [];\n\tpublic modalConfig: ModalConfig = {modalTitle: 'Open Wallet'} as ModalConfig;\n\t@ViewChild('modal') private modalComponent: ModalComponent\n\tpublic openedWallet: string;\n\tpublic showtx: boolean = false;\n\tpublic txnSelection: any = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t};\n\tasync openModal() {\n\t\treturn await this.modalComponent.open()\n\t}\n\t async ngOnInit() {\n\t\t await this.getBalance()\n\t\t this.wallets = this.wallet.walletList()\n\n\t }\n\n\tngOnDestroy(): void {\n\t\tconsole.log('WalletComponent DESTROY');\n\t}\n\n\topenWallet(key: string){\n\t\tthis.openedWallet = key;\n\t\tthis.openModal()\n\n\t}\n\n\tasync getBalance() {\n\t\tthis.balance = await this.wallet.getBalance().then((data) => data)\n\t}\n\n\tpublic async toggle(col) {\n\t\tawait this.wallet.loadTransfers(this.txnSelection);\n\t\tthis.txnSelection[col] = !!this.txnSelection[col]\n\t}\n\n\tpublic isChecked(col) {\n\t\treturn this.txnSelection[col]\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Wallet Manager\n                \n                \n                    account_balance_wallet\n                \n                \n                    cloud_download\n                \n                \n                    cloud_upload\n                \n                \n                    settings\n                \n            \n        \n        \n            \n                \n                    Wallets\n                    \n                        \n                            {{wallet}}\n                        \n                        \n                        Available Columns\n                        \n                            \n                                \n                                Incoming\n                            \n\n                            \n                                \n                                Sent\n                            \n\n                            \n                                \n                                Incoming\n                            \n\n                            \n                                \n                                Incoming\n                            \n\n                            \n                                \n                                Incoming\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                \n                \n                    \n                \n\n\n            \n        \n    \n\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./wallet.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Wallet Manager                                                    account_balance_wallet                                                    cloud_download                                                    cloud_upload                                                    settings                                                                                            Wallets                                                                        {{wallet}}                                                                        Available Columns                                                                                                                    Incoming                                                                                                                        Sent                                                                                                                        Incoming                                                                                                                        Incoming                                                                                                                        Incoming                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\ncluster_WalletModule_imports\n\n\n\n\nNewComponent\n\nNewComponent\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nModalModule\n\nModalModule\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            WalletComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ModalModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WalletComponent } from './wallet.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NewComponent } from './components/new.component';\nimport { RestoreComponent } from './components/restore.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {OpenComponent} from '@plugin/lthn/wallet/components/open.component';\nimport {ModalModule} from '@service/ui/modal/modal.module';\nimport {TransactionsComponent} from '@plugin/lthn/wallet/components/transactions.component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallets',\n\t\tcomponent: WalletComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.title',\n\t\t\theading: 'view.wallets.heading',\n\t\t\tdescription: 'view.wallets.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [\n\t\tWalletComponent,\n\t\tNewComponent,\n\t\tRestoreComponent,\n\t\tOpenComponent,\n\t\tTransactionsComponent\n\t],\n\texports: [\n\t\tNewComponent,RestoreComponent,TransactionsComponent,OpenComponent,RouterModule\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tFlexModule,\n\t\tReactiveFormsModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatCheckboxModule,\n\t\tMatExpansionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatTooltipModule,\n\t\tMatInputModule,\n\t\tTranslateModule,\n\t\tModalModule,\n\t\tNgxDatatableModule,\n\t\tMatSelectModule\n\t]\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletRoutingModule.html":{"url":"modules/WalletRoutingModule.html","title":"module - WalletRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallet',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./wallet.module').then((m) => m.WalletModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class WalletRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletRpcService.html":{"url":"injectables/WalletRpcService.html","title":"injectable - WalletRpcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletRpcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.rpc.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddressBook\n                            \n                            \n                                createWallet\n                            \n                            \n                                deleteAddressBook\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressBook\n                            \n                            \n                                getBalance\n                            \n                            \n                                getBulkPayments\n                            \n                            \n                                getHeight\n                            \n                            \n                                getPayments\n                            \n                            \n                                getTransferByTxid\n                            \n                            \n                                getTransfers\n                            \n                            \n                                incomingTransfers\n                            \n                            \n                                makeIntegratedAddress\n                            \n                            \n                                makeUri\n                            \n                            \n                                openWallet\n                            \n                            \n                                other\n                            \n                            \n                                parseUri\n                            \n                            \n                                queryKey\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                splitIntegratedAddress\n                            \n                            \n                                startWallet\n                            \n                            \n                                stopWallet\n                            \n                            \n                                store\n                            \n                            \n                                sweepAll\n                            \n                            \n                                sweepDust\n                            \n                            \n                                transfer\n                            \n                            \n                                transferSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddressBook\n                        \n                    \n                \n            \n            \n                \naddAddressBook(x: AddAddressBook)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                AddAddressBook\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet(x: CreateWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                CreateWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddressBook\n                        \n                    \n                \n            \n            \n                \ndeleteAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:62\n                \n            \n\n\n            \n                \n                    Get the address of the opened wallet\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressBook\n                        \n                    \n                \n            \n            \n                \ngetAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:53\n                \n            \n\n\n            \n                \n                    Get openned wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBulkPayments\n                        \n                    \n                \n            \n            \n                \ngetBulkPayments(x: GetBulkPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetBulkPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:71\n                \n            \n\n\n            \n                \n                    Get chain height\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPayments\n                        \n                    \n                \n            \n            \n                \ngetPayments(x: GetPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransferByTxid\n                        \n                    \n                \n            \n            \n                \ngetTransferByTxid(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:152\n                \n            \n\n\n            \n                \n                    Get transfer by Transactin ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransfers\n                        \n                    \n                \n            \n            \n                \ngetTransfers(x: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incomingTransfers\n                        \n                    \n                \n            \n            \n                \nincomingTransfers(x: IncomingTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IncomingTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nmakeIntegratedAddress(x: MakeIntegratedAddressIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeIntegratedAddressIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeUri\n                        \n                    \n                \n            \n            \n                \nmakeUri(x: MakeUriIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeUriIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(x: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n            \n                \nother(method: string, arg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUri\n                        \n                    \n                \n            \n            \n                \nparseUri(x: Uri)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                Uri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKey\n                        \n                    \n                \n            \n            \n                \nqueryKey(x: QueryKeyIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                QueryKeyIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(x: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nsplitIntegratedAddress(x: IntegratedAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IntegratedAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:28\n                \n            \n\n\n            \n                \n                    Send Wallet Service start POST req\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopWallet\n                        \n                    \n                \n            \n            \n                \nstopWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepAll\n                        \n                    \n                \n            \n            \n                \nsweepAll(x: SweepAllIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:107\n                \n            \n\n\n            \n                \n                    Send all funds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                SweepAllIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepDust\n                        \n                    \n                \n            \n            \n                \nsweepDust()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n            \n                \ntransfer(x: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:81\n                \n            \n\n\n            \n                \n                    Send a transaction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferSplit\n                        \n                    \n                \n            \n            \n                \ntransferSplit(x: TransferSplitIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferSplitIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/daemon/wallet/json_rpc'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {request} from '@service/json-rpc';\nimport {AddAddressBook, Address, Balance, CreateWallet, GetAddressBookOut, GetBulkPaymentsIn,\n\tGetBulkPaymentsOut, GetPaymentsIn, GetPaymentsOut, GetTransfersIn, GetTransfersOut, Height, IncomingTransfersIn,\n\tIncomingTransfersOut, IntegratedAddress, MakeIntegratedAddressIn, MakeUriIn, OpenWallet, QueryKeyIn, QueryKeyOut,\n\tSplitIntegratedAddressOut, StoreOut, SweepAllIn, SweepAllOut, Transfer, TransferIn, TransferOut, TransferSplitIn,\n\tTransferSplitOut, Uri} from '@plugin/lthn/wallet/interfaces';\nimport {RestoreWallet} from '@plugin/lthn/wallet/interfaces/requests/restoreWallet';\nimport {Observable} from 'rxjs';\nimport { from } from 'rxjs';\nconst axios = require('axios').default;\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletRpcService {\n\tprivate url = 'https://localhost:36911/daemon/wallet/json_rpc';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\t/**\n\t * Send Wallet Service start POST req\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\n\t\tconst request = {rpcBindPort: '36963', disableRpcLogin: false};\n\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/wallet/rpc`,\n\t\t\t\trequest,\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Get openned wallet balance\n\t *\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn request(this.url)('getbalance');\n\t}\n\n\t/**\n\t * Get the address of the opened wallet\n\t *\n\t * @returns {Promise}\n\t */\n\tgetAddress(): Promise {\n\t\treturn request(this.url)('getaddress');\n\t}\n\n\t/**\n\t * Get chain height\n\t *\n\t * @returns {Promise}\n\t */\n\tgetHeight(): Promise {\n\t\treturn request(this.url)('getheight');\n\t}\n\n\t/**\n\t * Send a transaction\n\t *\n\t * @param {TransferIn} x\n\t * @returns {Promise}\n\t */\n\ttransfer(x: TransferIn): Promise {\n\t\treturn request(this.url)('transfer', x);\n\t}\n\n\t/**\n\t *\n\t * @param {TransferSplitIn} x\n\t * @returns {Promise}\n\t */\n\ttransferSplit(x: TransferSplitIn): Promise {\n\t\treturn request(this.url)('transfer_split', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tsweepDust() {\n\t\treturn request(this.url)('sweep_dust');\n\t}\n\n\t/**\n\t * Send all funds\n\t * @param {SweepAllIn} x\n\t * @returns {Promise}\n\t */\n\tsweepAll(x: SweepAllIn): Promise {\n\t\treturn request(this.url)('sweep_all');\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tstore(): Promise {\n\t\treturn request(this.url)('store');\n\t}\n\n\t/**\n\t *\n\t * @param {GetPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetPayments(x: GetPaymentsIn): Promise {\n\t\treturn request(this.url)('get_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetBulkPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetBulkPayments(x: GetBulkPaymentsIn): Promise {\n\t\treturn request(this.url)('get_bulk_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tgetTransfers(x: GetTransfersIn): Promise {\n\t\treturn request(this.url)('get_transfers', x);\n\t}\n\n\t/**\n\t * Get transfer by Transactin ID\n\t *\n\t * @param {{txid: string}} x\n\t * @returns {Promise}\n\t */\n\tgetTransferByTxid(x: { txid: string }): Promise {\n\t\treturn request(this.url)('get_transfer_by_txid', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IncomingTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tincomingTransfers(\n\t\tx: IncomingTransfersIn\n\t): Promise {\n\t\treturn request(this.url)('incoming_transfers', x);\n\t}\n\n\t/**\n\t *\n\t * @param {QueryKeyIn} x\n\t * @returns {Promise}\n\t */\n\tqueryKey(x: QueryKeyIn): Promise {\n\t\treturn request(this.url)('query_key', x);\n\t}\n\n\t/**\n\t *\n\t * @param {MakeIntegratedAddressIn} x\n\t * @returns {Promise}\n\t */\n\tmakeIntegratedAddress(\n\t\tx: MakeIntegratedAddressIn\n\t): Promise {\n\t\treturn request(this.url)('make_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IntegratedAddress} x\n\t * @returns {Promise}\n\t */\n\tsplitIntegratedAddress(\n\t\tx: IntegratedAddress\n\t): Promise {\n\t\treturn request(this.url)('split_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tstopWallet() {\n\t\treturn request(this.url)('stop_wallet');\n\t}\n\n\t/**\n\t *\n\t * @param {MakeUriIn} x\n\t * @returns {Promise}\n\t */\n\tmakeUri(x: MakeUriIn): Promise {\n\t\treturn request(this.url)('make_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {Uri} x\n\t * @returns {Promise}\n\t */\n\tparseUri(x: Uri): Promise {\n\t\treturn request(this.url)('parse_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{entries: number[]}} x\n\t * @returns {Promise}\n\t */\n\tgetAddressBook(x: { entries: number[] }): Promise {\n\t\treturn request(this.url)('get_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {AddAddressBook} x\n\t * @returns {Promise}\n\t */\n\taddAddressBook(x: AddAddressBook): Promise {\n\t\treturn request(this.url)('add_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{index: number}} x\n\t * @returns {Promise>}\n\t */\n\tdeleteAddressBook(x: { index: number }) {\n\t\treturn request(this.url)('delete_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {OpenWallet} x\n\t * @returns {Promise>}\n\t */\n\topenWallet(x: OpenWallet) {\n\t\treturn request(this.url)('open_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {CreateWallet} x\n\t * @returns {Promise>}\n\t */\n\tcreateWallet(x: CreateWallet) {\n\t\treturn request(this.url)('create_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {RestoreWallet} x\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(x: RestoreWallet) {\n\t\treturn request(this.url)('generate_from_keys', x);\n\t}\n\n\t/**\n\t *\n\t * @param {string} method\n\t * @param arg\n\t * @returns {Promise}\n\t */\n\tother(method: string, arg?: any): Promise {\n\t\treturn request(this.url)(method, arg);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBalance\n                            \n                            \n                                getWalletList\n                            \n                            \n                                loadTransfers\n                            \n                            \n                                openWallet\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                startWallet\n                            \n                            \n                                walletList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService, rpc: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:54\n                \n            \n\n\n            \n                \n                    Get wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWalletList\n                        \n                    \n                \n            \n            \n                \ngetWalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:60\n                \n            \n\n\n            \n                \n                    Gets the list of known wallets from the file system\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTransfers\n                        \n                    \n                \n            \n            \n                \nloadTransfers(opts: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(req: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:44\n                \n            \n\n\n            \n                \n                    Open a known wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(req: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:34\n                \n            \n\n\n            \n                \n                    Restore wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:24\n                \n            \n\n\n            \n                \n                    Start wallet service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletList\n                        \n                    \n                \n            \n            \n                \nwalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:77\n                \n            \n\n\n            \n                \n                    Returns the wallets we know about\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Balance, GetTransfersIn, OpenWallet, RestoreWallet} from '@plugin/lthn/wallet/interfaces';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * Orchestrates dealing with wallets, to add a new wallet type, implement this class\n */\nexport class WalletService {\n\tprivate wallets: string[] = [];\n\n\tconstructor(private fs: FileSystemService, private rpc: WalletRpcService) {\n\t}\n\n\t/**\n\t * Start wallet service\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\treturn this.rpc.startWallet();\n\t}\n\n\t/**\n\t * Restore wallet\n\t *\n\t * @param {RestoreWallet} req\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(req: RestoreWallet) {\n\t\treturn this.rpc.restoreWallet(req);\n\t}\n\n\t/**\n\t * Open a known wallet\n\t *\n\t * @param {OpenWallet} req\n\t * @returns {Promise>}\n\t */\n\topenWallet(req: OpenWallet) {\n\t\treturn this.rpc.openWallet(req);\n\t}\n\n\t/**\n\t * Get wallet balance\n\t *\n\t * @param {Balance} req\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn this.rpc.getBalance()\n\t}\n\t/**\n\t * Gets the list of known wallets from the file system\n\t */\n\tgetWalletList() {\n\t\tthis.fs.listFiles('/wallets').then((data) => {\n\t\t\tif (data.length > 0) {\n\t\t\t\tfor (let dat of data) {\n\t\t\t\t\tif (!dat.endsWith('.keys') && !dat.endsWith('.txt')) {\n\t\t\t\t\t\tthis.wallets.push(dat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the wallets we know about\n\t *\n\t * @returns {string[]}\n\t */\n\twalletList() {\n\t\tif (this.wallets.length === 0) {\n\t\t\tthis.getWalletList();\n\t\t}\n\t\treturn this.wallets;\n\t}\n\n\tloadTransfers(opts: GetTransfersIn){\n\t\treturn this.rpc.getTransfers(opts).then((data) => Object.values(data).flat());\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebStorageService.html":{"url":"injectables/WebStorageService.html","title":"injectable - WebStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/web-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backend\n                            \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        backend\n                        \n                    \n                \n            \n            \n                \n                    \n                    backend(cmd: string, payload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(key: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/object'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/web-storage.service.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebStorageService implements Storage {\n\n\tprivate items = [];\n\tprivate apiUrl = 'https://localhost:36911/object';\n\n\tget length() {\n\t\treturn this.items.length;\n\t}\n\n\tkey(key:number): string | null {\n\t\treturn this.items[key]\n\t}\n\n\tgetItem(key): string | null {\n\t\treturn this.backend('get', {object: key});\n\t}\n\n\tsetItem(key: string, value: string) {\n\t\treturn this.backend('set', {object: key, data: value});\n\t}\n\n\tremoveItem(key) {\n\t\tthis.backend('remove', {object: key});\n\t}\n\n\tclear() {\n\t\tthis.backend('clear', {});\n\t}\n\n\tprivate backend(cmd:string, payload):string {\n\t\tconst axios = require('axios').default;\n\t\tconst ret = axios.post(`${this.apiUrl}/${cmd}`, {group: 'lthn-app', ...payload}).then((data) => data.data)\n\t\treturn ret.data;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeConnection\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                dataUpdates$\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeConnection\n                        \n                    \n                \n            \n            \n                \ncloseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     WebSocketSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataUpdates$\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataUpdates$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/websocket.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nexport const WS_ENDPOINT = 'ws://localhost:36909';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$: WebSocketSubject;\n\n\tconstructor() {}\n\n\tpublic connect(): WebSocketSubject {\n\t\tif (!this.socket$ || this.socket$.closed) {\n\t\t\tthis.socket$ = webSocket(WS_ENDPOINT);\n\t\t}\n\t\treturn this.socket$;\n\t}\n\n\tpublic dataUpdates$() {\n\t\treturn this.connect().asObservable();\n\t}\n\n\tcloseConnection() {\n\t\tthis.connect().complete();\n\t}\n\n\tsendMessage(msg: string) {\n\t\tthis.socket$.next(msg);\n\t}\n\n\n\t/**\n\timport { webSocket } from \"rxjs/webSocket\";\nconst subject = webSocket(\"ws://localhost:8081\");\n\nsubject.subscribe(\n   msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n   err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n   () => console.log('complete') // Called when connection is closed (for whatever reason).\n );\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/data/debug.rxjs.ts\n            \n            function\n            setRxJsLoggingLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/debug.rxjs.ts\n            \n            variable\n            debug\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/debug.rxjs.ts\n            \n            variable\n            debugFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/debug.rxjs.ts\n            \n            variable\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/debug.rxjs.ts\n            \n            variable\n            RxJsLogging\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/entity-metadata.ts\n            \n            variable\n            entityConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/entity-metadata.ts\n            \n            variable\n            entityMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/entity-metadata.ts\n            \n            variable\n            pluralNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/actions.ts\n            \n            variable\n            addLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/reducer.ts\n            \n            variable\n            profileReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/selectors.ts\n            \n            variable\n            selectLogData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/selectors.ts\n            \n            variable\n            selectLogs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/selectors.ts\n            \n            variable\n            selectLogsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/logs/state.ts\n            \n            interface\n            LogEntry\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data/logs/state.ts\n            \n            interface\n            LogsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/reducers/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/reducers/index.ts\n            \n            function\n            localStorageSyncReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/reducers/index.ts\n            \n            variable\n            effects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/reducers/index.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/reducers/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/file-system.interface.ts\n            \n            interface\n            FileSystemInterface\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/modules/auth/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/auth/route.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/chart/base-chart-config.service.ts\n            \n            injectable\n            BaseChartConfigService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/chart/chart-config.interface.ts\n            \n            interface\n            ChartConfigInterface\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/chart/chart.directive.ts\n            \n            directive\n            ChartDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/chart/chart.service.ts\n            \n            injectable\n            ChartService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/actions.ts\n            \n            variable\n            chartNetworkDifficultyLoadFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/actions.ts\n            \n            variable\n            chartNetworkDifficultyLoadRequested\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/actions.ts\n            \n            variable\n            chartNetworkDifficultyLoadSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/actions.ts\n            \n            variable\n            chartNetworkDifficultyStartPolling\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/actions.ts\n            \n            variable\n            chartNetworkDifficultyStoppedPolling\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/actions.ts\n            \n            variable\n            chartNetworkDifficultyStopPolling\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/effects.ts\n            \n            injectable\n            ChartsEffects\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/interfaces/difficulty.state.ts\n            \n            interface\n            ChartDifficulty\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/reducer.ts\n            \n            interface\n            ChartsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/reducer.ts\n            \n            variable\n            chartDifficultyReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/selectors.ts\n            \n            variable\n            selectChart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/selectors.ts\n            \n            variable\n            selectChartData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/selectors.ts\n            \n            variable\n            selectChartOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/chart/data/selectors.ts\n            \n            variable\n            selectChartsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/root.component.ts\n            \n            component\n            RootComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            changeLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            setGlobalFontSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            SettingsActionTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            toggleBiggerContentFont\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            toggleDaltonism\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            toggleDarkMode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            toggleHideNavigation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            toggleHighContrastText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.actions.ts\n            \n            variable\n            toggleRtl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.effects.ts\n            \n            injectable\n            SettingsEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.reducer.ts\n            \n            variable\n            settingsReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.selectors.ts\n            \n            variable\n            selectDarkMode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.selectors.ts\n            \n            variable\n            selectLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.selectors.ts\n            \n            variable\n            selectMenuVisibility\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settings.selectors.ts\n            \n            variable\n            selectSettingsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/settings/data/settingsState.ts\n            \n            interface\n            SettingsState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/settings/logs/logs.component.ts\n            \n            component\n            LogsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/status/dialog/no-daemon-running.component.ts\n            \n            component\n            NoDaemonRunningDialog\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/status/dialog/no-daemon-running.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/status/status.component.ts\n            \n            component\n            StatusComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/actions.ts\n            \n            variable\n            profileActionTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/effects.ts\n            \n            injectable\n            Effects\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/reducer.ts\n            \n            variable\n            profileReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/selectors.ts\n            \n            variable\n            selectProfile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/selectors.ts\n            \n            variable\n            selectProfileState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/profile/state.ts\n            \n            interface\n            ProfileState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/actions.ts\n            \n            variable\n            userActionTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/effects.ts\n            \n            injectable\n            Effects\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/interfaces/user.options.ts\n            \n            interface\n            UserOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/selectors.ts\n            \n            variable\n            selectUserByID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/selectors.ts\n            \n            variable\n            selectUserState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/state.ts\n            \n            interface\n            UserMeta\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/state.ts\n            \n            interface\n            UsersState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/user/data/user/state.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/user/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/user/user.component.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pipes/content/html.pipe.ts\n            \n            pipe\n            EscapeHtmlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/content/markdown.pipe.ts\n            \n            pipe\n            MarkdownPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/content/shruggie.pipe.ts\n            \n            pipe\n            ShruggiePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/crypto/effort.pipe.ts\n            \n            pipe\n            EffortPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/crypto/hashrate.pipe.ts\n            \n            pipe\n            HashRatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/date/timeAgo.pipe.ts\n            \n            pipe\n            TimeAgoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/math/removeTrailingZeros.pipe.ts\n            \n            pipe\n            RemoveTrailingZerosPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/plugins/console/console.component.ts\n            \n            component\n            ConsoleComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/plugins/hashvault/charts/network-hashrate.chart.ts\n            \n            injectable\n            NetworkHashrateChart\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/plugins/hive/post/post.component.ts\n            \n            component\n            PostComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/chain/blockchain.component.ts\n            \n            component\n            BlockchainComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/chain/blockchain.service.ts\n            \n            injectable\n            BlockchainService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/vpn/vpn.component.ts\n            \n            component\n            VpnComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/components/backup.component.ts\n            \n            component\n            BackupComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/components/new.component.ts\n            \n            component\n            NewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/components/open.component.ts\n            \n            component\n            OpenComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/components/restore.component.ts\n            \n            component\n            RestoreComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/components/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/components/transactions.component.ts\n            \n            component\n            TransactionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getAddressBookOut.ts\n            \n            interface\n            GetAddressBookOut\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsIn.ts\n            \n            interface\n            GetBulkPaymentsIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsOut.ts\n            \n            interface\n            GetBulkPaymentsOut\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsIn.ts\n            \n            interface\n            GetPaymentsIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsOut.ts\n            \n            interface\n            GetPaymentsOut\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getTransfersIn.ts\n            \n            interface\n            GetTransfersIn\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/getTransfersOut.ts\n            \n            interface\n            GetTransfersOut\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersIn.ts\n            \n            interface\n            IncomingTransfersIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersOut.ts\n            \n            interface\n            IncomingTransfersOut\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n            \n            interface\n            MakeIntegratedAddressIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/makeUriIn.ts\n            \n            interface\n            MakeUriIn\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/queryKeyIn.ts\n            \n            interface\n            QueryKeyIn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/queryKeyOut.ts\n            \n            interface\n            QueryKeyOut\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n            \n            interface\n            SplitIntegratedAddressOut\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/storeOut.ts\n            \n            interface\n            StoreOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/sweepAllIn.ts\n            \n            interface\n            SweepAllIn\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/sweepAllOut.ts\n            \n            interface\n            SweepAllOut\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/sweepDustOut.ts\n            \n            interface\n            SweepDustOut\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/transferIn.ts\n            \n            interface\n            TransferIn\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/transferOut.ts\n            \n            interface\n            TransferOut\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/dto/transferSplitOut.ts\n            \n            interface\n            TransferSplitOut\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/requests/restoreWallet.ts\n            \n            interface\n            RestoreWallet\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/addAddressBook.ts\n            \n            interface\n            AddAddressBook\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/address.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/balance.ts\n            \n            interface\n            Balance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/destination.ts\n            \n            interface\n            Destination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/height.ts\n            \n            interface\n            Height\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/integratedAddress.ts\n            \n            interface\n            IntegratedAddress\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/payment.ts\n            \n            interface\n            Payment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/transfer.ts\n            \n            interface\n            Transfer\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/types/uri.ts\n            \n            interface\n            Uri\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            class\n            Atomic\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            class\n            LTHN\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            interface\n            CreateWallet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            interface\n            OpenWallet\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            interface\n            ParseUri\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            interface\n            TransferSplitIn\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/interfaces/wallet.ts\n            \n            variable\n            generatePaymentId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/wallet.component.ts\n            \n            component\n            WalletComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/plugins/lthn/wallet/wallet.service.ts\n            \n            injectable\n            WalletService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/services/crypt.service.ts\n            \n            injectable\n            CryptService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/services/filesystem/file-system-web.service.ts\n            \n            injectable\n            FileSystemWebService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filesystem/file-system.service.ts\n            \n            injectable\n            FileSystemService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/services/json-rpc.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/json-rpc.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/json-rpc.ts\n            \n            variable\n            request\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/json-rpc.ts\n            \n            variable\n            rpcBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/ui/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/ui/modal/modal.component.ts\n            \n            injectable\n            ModalComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/ui/modal/modalConfig.ts\n            \n            interface\n            ModalConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/wallet.rpc.service.ts\n            \n            injectable\n            WalletRpcService\n            \n                23 %\n                (7/30)\n            \n        \n        \n            \n                \n                src/app/services/wallet.rpc.service.ts\n            \n            variable\n            axios\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/web-storage.service.ts\n            \n            injectable\n            WebStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            injectable\n            WebsocketService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            variable\n            WS_ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            APP_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            APP_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            APP_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.0\n        \n            @angular/cdk : ~13.0.1\n        \n            @angular/common : ~13.0.0\n        \n            @angular/compiler : ~13.0.0\n        \n            @angular/core : ~13.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~13.0.0\n        \n            @angular/localize : ~13.0.0\n        \n            @angular/material : ^13.0.1\n        \n            @angular/platform-browser : ~13.0.0\n        \n            @angular/platform-browser-dynamic : ~13.0.0\n        \n            @angular/router : ~13.0.0\n        \n            @hiveio/dhive : ^1.1.1\n        \n            @kurkle/color : ^0.1.9\n        \n            @lthn/rxjs-wallet-rpc : ^1.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.1\n        \n            @ngrx/data : ^13.0.1\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @nguniversal/express-engine : ^13.0.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            assert : ^2.0.0\n        \n            axios : ^0.24.0\n        \n            big.js : ^6.1.1\n        \n            bootstrap : ^4.5.0\n        \n            chart.js : ^3.6.0\n        \n            chartjs-adapter-moment : ^1.0.0\n        \n            config-ini-parser : ^1.5.9\n        \n            crypto-js : ^4.1.1\n        \n            jszmq : ^0.1.2\n        \n            localstorage-polyfill : ^1.0.1\n        \n            marked : ^3.0.8\n        \n            moment : ^2.29.1\n        \n            ng-socket-io : ^0.2.4\n        \n            ng-terminal : ^3.1.1\n        \n            ngrx-store-localstorage : ^12.0.1\n        \n            ngx-socket-io : ^4.1.0\n        \n            openpgp : ^5.0.0\n        \n            random-js : ^2.1.0\n        \n            rxjs : ~7.4.0\n        \n            stream-browserify : ^3.0.0\n        \n            strip-ansi : ^7.0.1\n        \n            tslib : ^2.3.1\n        \n            typescript : ^4.4.4\n        \n            unique-names-generator : ^4.6.0\n        \n            web-animations-js : ^2.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginMethods   (src/.../user.options.ts)\n                        \n                        \n                            RxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/data/user/interfaces/user.options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginMethods\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SSH_PEM\n                            \n                        \n            \n        \n\n    src/app/data/debug.rxjs.ts\n    \n        \n            \n                \n                    \n                        \n                        RxJsLoggingLevel\n                    \n                \n                    \n                        \n                            Observable logging levels\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            setRxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: ProfileState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setRxJsLoggingLevel\n                        \n                    \n                \n            \n            \n                \nsetRxJsLoggingLevel(level: RxJsLoggingLevel)\n                \n            \n\n\n\n\n            \n                \n                    Adjust the logging level during runtime\nsetRxJsLoggingLevel(4) = off\nsetRxJsLoggingLevel(0) - tmi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                RxJsLoggingLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLethean Desktop Interface\n\n\nThis is the application that is run within the lethean desktop, the API refrence for the HTTPS endpoints is here:\nDevelopment Build\nnpm install\nnpm run dev:setup\nnpm run devProduction Build\nnpm install\nnpm run buildDocumentation\nnpm install\nnpm run doc\nnpm run doc:serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nPostRoutingModule\n\nPostRoutingModule\n\nAppRoutingModule -->\n\nPostRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nAppRoutingModule -->\n\nSettingsRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\nChartDirective\n\nChartDirective\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        25 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    52 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addLog   (src/.../actions.ts)\n                        \n                        \n                            APP_CONFIG   (src/.../environment.dev.ts)\n                        \n                        \n                            APP_CONFIG   (src/.../environment.prod.ts)\n                        \n                        \n                            APP_CONFIG   (src/.../environment.ts)\n                        \n                        \n                            axios   (src/.../json-rpc.ts)\n                        \n                        \n                            axios   (src/.../wallet.rpc.service.ts)\n                        \n                        \n                            changeLanguage   (src/.../settings.actions.ts)\n                        \n                        \n                            chartDifficultyReducer   (src/.../reducer.ts)\n                        \n                        \n                            chartNetworkDifficultyLoadFailure   (src/.../actions.ts)\n                        \n                        \n                            chartNetworkDifficultyLoadRequested   (src/.../actions.ts)\n                        \n                        \n                            chartNetworkDifficultyLoadSuccess   (src/.../actions.ts)\n                        \n                        \n                            chartNetworkDifficultyStartPolling   (src/.../actions.ts)\n                        \n                        \n                            chartNetworkDifficultyStoppedPolling   (src/.../actions.ts)\n                        \n                        \n                            chartNetworkDifficultyStopPolling   (src/.../actions.ts)\n                        \n                        \n                            debug   (src/.../debug.rxjs.ts)\n                        \n                        \n                            debugFunction   (src/.../debug.rxjs.ts)\n                        \n                        \n                            effects   (src/.../index.ts)\n                        \n                        \n                            entityConfig   (src/.../entity-metadata.ts)\n                        \n                        \n                            entityMetadata   (src/.../entity-metadata.ts)\n                        \n                        \n                            generatePaymentId   (src/.../wallet.ts)\n                        \n                        \n                            initialState   (src/.../reducer.ts)\n                        \n                        \n                            initialState   (src/.../reducer.ts)\n                        \n                        \n                            initialState   (src/.../settings.reducer.ts)\n                        \n                        \n                            initialState   (src/.../reducer.ts)\n                        \n                        \n                            initialState   (src/.../reducer.ts)\n                        \n                        \n                            log   (src/.../debug.rxjs.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            pluralNames   (src/.../entity-metadata.ts)\n                        \n                        \n                            profileActionTypes   (src/.../actions.ts)\n                        \n                        \n                            profileReducer   (src/.../reducer.ts)\n                        \n                        \n                            profileReducer   (src/.../reducer.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                        \n                            request   (src/.../json-rpc.ts)\n                        \n                        \n                            rpcBody   (src/.../json-rpc.ts)\n                        \n                        \n                            RxJsLogging   (src/.../debug.rxjs.ts)\n                        \n                        \n                            selectChart   (src/.../selectors.ts)\n                        \n                        \n                            selectChartData   (src/.../selectors.ts)\n                        \n                        \n                            selectChartOptions   (src/.../selectors.ts)\n                        \n                        \n                            selectChartsState   (src/.../selectors.ts)\n                        \n                        \n                            selectDarkMode   (src/.../settings.selectors.ts)\n                        \n                        \n                            selectLanguage   (src/.../settings.selectors.ts)\n                        \n                        \n                            selectLogData   (src/.../selectors.ts)\n                        \n                        \n                            selectLogs   (src/.../selectors.ts)\n                        \n                        \n                            selectLogsState   (src/.../selectors.ts)\n                        \n                        \n                            selectMenuVisibility   (src/.../settings.selectors.ts)\n                        \n                        \n                            selectProfile   (src/.../selectors.ts)\n                        \n                        \n                            selectProfileState   (src/.../selectors.ts)\n                        \n                        \n                            selectSettingsState   (src/.../settings.selectors.ts)\n                        \n                        \n                            selectUserByID   (src/.../selectors.ts)\n                        \n                        \n                            selectUserState   (src/.../selectors.ts)\n                        \n                        \n                            setGlobalFontSize   (src/.../settings.actions.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            settingsReducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            toggleBiggerContentFont   (src/.../settings.actions.ts)\n                        \n                        \n                            toggleDaltonism   (src/.../settings.actions.ts)\n                        \n                        \n                            toggleDarkMode   (src/.../settings.actions.ts)\n                        \n                        \n                            toggleHideNavigation   (src/.../settings.actions.ts)\n                        \n                        \n                            toggleHighContrastText   (src/.../settings.actions.ts)\n                        \n                        \n                            toggleRtl   (src/.../settings.actions.ts)\n                        \n                        \n                            userActionTypes   (src/.../actions.ts)\n                        \n                        \n                            userReducer   (src/.../reducer.ts)\n                        \n                        \n                            WS_ENDPOINT   (src/.../websocket.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/logs/actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Logs] Add Message',\n\tprops()\n)\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.dev.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: false,\n\tenvironment: 'DEV',\n\tdebug: 1\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: true,\n\tenvironment: 'APP',\n\tdebug: 4\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tproduction: true,\n\tenvironment: 'LOCAL',\n\tdebug: 1\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/json-rpc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        axios\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('axios').default\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (url) =>\n\t (method, params = {}) =>\n\t\t axios.post(url, JSON.stringify(rpcBody(method)(params))).then((data) => {\n\t\t\t console.log(data)\n\t\t\t if(data['data'].error){\n\t\t\t\treturn data['data']\n\t\t\t } else if(data['data']) {\n\t\t\t\t return data['data'].result\n\t\t\t }else{\n\t\t\t\t return data\n\t\t\t }\n\t\t })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rpcBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (method) => (params) => ({\n\tjsonrpc: '2.0',\n\tid: '0',\n\tmethod: method,\n\tparams: params\n})\n                    \n                \n\n\n        \n    \n\n    src/app/services/wallet.rpc.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        axios\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('axios').default\n                    \n                \n\n\n        \n    \n\n    src/app/modules/settings/data/settings.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Settings] Change Language',\n\tprops()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGlobalFontSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Settings] Set Global Font Size',\n\tprops()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SettingsActionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\ttoggleHideNavigation.type,\n\ttoggleBiggerContentFont.type,\n\ttoggleHighContrastText.type,\n\ttoggleDaltonism.type,\n\ttoggleRtl.type,\n\tsetGlobalFontSize.type,\n\tchangeLanguage.type,\n\ttoggleDarkMode.type\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleBiggerContentFont\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Settings] Toggle Bigger Content Font')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDaltonism\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Settings] Toggle Daltonism')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Settings] Toggle Dark Mode')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHideNavigation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Settings] Toggle Hide Navigation')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleHighContrastText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Settings] Toggle High Contrast Text')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRtl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Settings] Toggle RTL')\n                    \n                \n\n\n        \n    \n\n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chartDifficultyReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChartsState\n\n                    \n                \n                \n                    \n                        Default value : {\n\tnetworkDifficulty: new ChartDifficultyState()\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/chart/data/actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chartNetworkDifficultyLoadFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Charting] ChartDifficulty Load Failure',\n\tprops()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartNetworkDifficultyLoadRequested\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Charting] Chart Network Difficulty Load requested'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartNetworkDifficultyLoadSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Charting] ChartDifficulty Load Success',\n\tprops()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartNetworkDifficultyStartPolling\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Charting] Chart Network Difficulty Start polling'\n)\n                    \n                \n\n            \n                \n                    Network Hashrate / Diff chart\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartNetworkDifficultyStoppedPolling\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Charting] Chart Network Difficulty Stopped Polling'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartNetworkDifficultyStopPolling\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Charting] Chart Network Difficulty Stop polling'\n)\n                    \n                \n\n\n        \n    \n\n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (level: number, message: string) => (source: Observable) =>\n\t\tsource.pipe(\n\t\t\ttap((val) => {\n\t\t\t\tlog(level, message, val);\n\t\t\t})\n\t\t)\n                    \n                \n\n            \n                \n                    debug pipe\nObservable.debug\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugFunction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tlevel: number,\n\tmessage: string,\n\tsubject?: any\n) => {\n\tlog(level, message, subject);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (level: number, message: string, subject: any = {}) => {\n\tif (level >= RxJsLogging) {\n\t\tif (level === RxJsLoggingLevel.TRACE) {\n\t\t\tconsole.trace(message + ': ', subject);\n\t\t}\n\t\tif (level === RxJsLoggingLevel.DEBUG) {\n\t\t\tconsole.debug(message + ': ', subject);\n\t\t}\n\t\tif (level === RxJsLoggingLevel.INFO) {\n\t\t\tconsole.info(message + ': ');\n\t\t}\n\t\tif (level === RxJsLoggingLevel.ERROR) {\n\t\t\tconsole.error(message + ': ', subject);\n\t\t}\n\t\tif (level === RxJsLoggingLevel.ERROR) {\n\t\t\tconsole.error(message + ': ', subject);\n\t\t}\n\t}\n}\n                    \n                \n\n            \n                \n                    Observable Logging\nLogs to console respecting runtime debug level\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RxJsLogging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : APP_CONFIG.debug\n                    \n                \n\n            \n                \n                    Current log level\n\n                \n            \n\n        \n    \n\n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        effects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Settings.SettingsEffects, Chart.ChartsEffects]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : !APP_CONFIG.production\n\t? [localStorageSyncReducer]\n\t: [localStorageSyncReducer]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer\n}\n                    \n                \n\n\n        \n    \n\n    src/app/data/entity-metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entityConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityDataModuleConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n\tentityMetadata,\n\tpluralNames\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityMetadataMap\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/app/plugins/lthn/wallet/interfaces/wallet.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generatePaymentId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)'\n                    \n                \n\n\n        \n    \n\n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogsState\n\n                    \n                \n                \n                    \n                        Default value : {\n\tlogs: []\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n\tinitialState,\n\ton(LogsActions.addLog, (state: any, { log }) => ({\n\t\t...state,\n\t\tlogs: {\n\t\t\t...state.logs,\n\t\t\tlog\n\t\t}\n\t}))\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsState\n\n                    \n                \n                \n                    \n                        Default value : {\n\t// app layout\n\thideNavigation: false,\n\t// accessibility\n\tbiggerContentFont: false,\n\thighContrastText: false,\n\tdaltonism: false,\n\trtl: false,\n\t// global font size\n\tglobalFontSize: 'md',\n\t// UI Language\n\tlanguage: 'en',\n\t// UI mode\n\tdarkMode: true\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settingsReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n\tinitialState,\n\ton(SettingsActions.changeLanguage, (state, action) => ({\n\t\t...state,\n\t\tlanguage: action.language\n\t})),\n\ton(SettingsActions.toggleDarkMode, (state) => ({\n\t\t...state,\n\t\tdarkMode: !state.darkMode\n\t})),\n\ton(SettingsActions.toggleHideNavigation, (state) => ({\n\t\t...state,\n\t\thideNavigation: !state.hideNavigation\n\t}))\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProfileState\n\n                    \n                \n                \n                    \n                        Default value : {\n\t// Friendly name for the profile\n\talias: undefined,\n\t// auto generated image from the friendly name\n\tavatar: undefined,\n\t// id's to attached wallets\n\twallets: undefined,\n\t// application prefrences etc\n\toptions: undefined,\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: undefined,\n\t// Encryption Key, to save data\n\tekey: undefined\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(initialState)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersState\n\n                    \n                \n                \n                    \n                        Default value : {\n\tusers: {}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(initialState)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/data/profile/actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        profileActionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n    src/app/modules/chart/data/selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectChart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (chartType: string) =>\n\tcreateSelector(selectChartsState, (state) => {\n\t\tif (state && state[chartType]) {\n\t\t\treturn state[chartType];\n\t\t}\n\t\treturn null;\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChartData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (chartType: string) =>\n\tcreateSelector(selectChartsState, (state) => {\n\t\tif (state && state[chartType]) {\n\t\t\treturn state[chartType].data;\n\t\t}\n\t\treturn null;\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (chartType: string) =>\n\tcreateSelector(selectChartsState, (state) => {\n\t\tif (state && state[chartType]) {\n\t\t\treturn state[chartType].options;\n\t\t}\n\t\treturn null;\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChartsState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('charts')\n                    \n                \n\n\n        \n    \n\n    src/app/modules/settings/data/settings.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectSettingsState,\n\t(state: SettingsState) => state.darkMode\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectSettingsState,\n\t(state: SettingsState) => state.language\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMenuVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectSettingsState,\n\t(state: SettingsState) => !state.hideNavigation\n)\n                    \n                \n\n            \n                \n                    returns true if hide navigation is false\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSettingsState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('settings')\n                    \n                \n\n\n        \n    \n\n    src/app/data/logs/selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectLogData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (logsType: string) =>\n\tcreateSelector(selectLogsState, (state) => {\n\t\tif (state && state[logsType]) {\n\t\t\treturn state[logsType].logs;\n\t\t}\n\t\treturn null;\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectLogsState, (state) => {\n\tif (state && state.logs) {\n\t\treturn state.logs;\n\t}\n\treturn null;\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLogsState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('logs')\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/data/profile/selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectProfile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id: string) =>\n\tcreateSelector(selectProfileState, (state) => {\n\t\tif (state && state[id]) {\n\t\t\treturn state[id];\n\t\t}\n\t\treturn null;\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProfileState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('profile')\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/data/user/selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectUserByID\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id: string) =>\n\tcreateSelector(selectUserState, (state) => {\n\t\tif (state && state[id]) {\n\t\t\treturn state[id];\n\t\t}\n\t\treturn null;\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('users')\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/data/user/actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userActionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n    src/app/services/websocket.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WS_ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ws://localhost:36909'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
