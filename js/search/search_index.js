var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddAddressBook.html",[0,0.211,1,3.8]],["body/interfaces/AddAddressBook.html",[0,0.289,1,6.384,2,1.285,3,0.061,4,0.07,5,0.07,6,6.363,7,0.469,8,0.777,9,4.625,10,1.672,11,4.36,12,4.128,13,1.212,14,0.59,15,0.007,16,0.07,17,4.691,18,6.363,19,0.006,20,0.006]],["title/components/AddComponent.html",[21,0.957,22,1.757]],["body/components/AddComponent.html",[3,0.035,4,0.041,5,0.041,7,0.272,8,0.538,10,0.669,13,0.682,14,0.447,15,0.007,16,0.041,19,0.004,20,0.004,21,1.318,22,2.664,23,2.135,24,1.489,25,1.456,26,1.489,27,3.692,28,1.604,29,2.845,30,6.411,31,1.182,32,3.587,33,2.802,34,2.614,35,2.835,36,2.088,37,5.414,38,6.411,39,1.309,40,5.414,41,3.134,42,7.06,43,3.693,44,6.411,45,1.55,46,1.53,47,5.414,48,1.803,49,1.545,50,4.605,51,3.692,52,5.414,53,7.06,54,3.692,55,0.893,56,1.302,57,3.692,58,1.523,59,2.407,60,3.692,61,3.692,62,1.545,63,2.179,64,0.302,65,3.525,66,0.474,67,0.342,68,5.414,69,5.414,70,6.411,71,2.404,72,2.813,73,1.56,74,5.414,75,4.124,76,5.414,77,1.424,78,2.184,79,2.135,80,1.393,81,2.848,82,1.489,83,1.489,84,1.363,85,1.489,86,1.456,87,3.137,88,1.489,89,1.393,90,1.489,91,1.393,92,1.489,93,1.363,94,1.489,95,1.393,96,1.489,97,1.393,98,1.489,99,1.393,100,1.489,101,1.363,102,1.307,103,1.489,104,1.393,105,1.489,106,1.393,107,1.489,108,1.393,109,1.489,110,1.456,111,1.281,112,1.489,113,1.393,114,1.489,115,1.363,116,1.489,117,1.999,118,2.184,119,1.393,120,1.489,121,1.393,122,1.489,123,1.363,124,1.489,125,1.363,126,1.489,127,1.363,128,1.456,129,1.363,130,1.456,131,1.489]],["title/interfaces/Address.html",[0,0.211,9,2.437]],["body/interfaces/Address.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,9,4.949,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,132,7.046]],["title/components/AppComponent.html",[21,0.957,84,1.719]],["body/components/AppComponent.html",[3,0.016,4,0.018,5,0.018,7,0.12,8,0.279,10,0.67,11,0.804,13,0.839,14,0.479,15,0.007,16,0.018,19,0.002,20,0.002,21,0.761,22,0.615,23,1.107,24,0.657,25,0.642,26,0.657,28,0.832,29,1.642,31,0.521,32,3.187,33,2.469,34,2.218,36,1.083,39,0.679,41,1.952,45,0.679,46,1.489,48,0.543,49,0.465,55,0.895,56,1.184,58,1.457,59,1.859,63,0.954,64,0.593,66,0.209,67,0.151,71,1.061,73,1.187,77,0.628,78,1.132,79,1.107,80,0.615,81,1.774,82,0.657,83,0.657,84,1.624,85,0.657,86,0.642,87,2.54,88,0.657,89,0.615,90,0.657,91,0.615,92,0.657,93,0.602,94,0.657,95,0.615,96,0.657,97,0.615,98,0.657,99,0.615,100,0.657,101,0.602,102,0.577,103,0.657,104,0.615,105,0.657,106,0.615,107,0.657,108,0.615,109,0.657,110,0.642,111,1.283,112,0.657,113,0.615,114,0.657,115,0.602,116,0.657,117,1.037,118,1.132,119,0.615,120,0.657,121,0.615,122,0.657,123,0.602,124,0.657,125,0.602,126,0.657,127,0.602,128,0.642,129,0.602,130,0.642,131,0.657,133,0.88,134,1.629,135,2.818,136,1.47,137,3.699,138,2.807,139,5.422,140,3.246,141,3.699,142,5.422,143,3.229,144,7.067,145,2.451,146,5.422,147,3.289,148,2.807,149,3.35,150,4.398,151,4.398,152,4.398,153,1.241,154,4.337,155,7.647,156,4.398,157,2.975,158,4.398,159,4.889,160,5.066,161,4.049,162,2.999,163,3.59,164,2.68,165,3.382,166,3.562,167,2.975,168,2.807,169,2.807,170,3.35,171,2.807,172,2.807,173,2.016,174,1.828,175,2.807,176,1.629,177,3.59,178,2.867,179,2.139,180,2.863,181,6.136,182,2.807,183,1.629,184,2.807,185,1.629,186,4.96,187,4.96,188,3.911,189,1.629,190,2.999,191,2.807,192,2.807,193,2.292,194,2.139,195,0.994,196,1.629,197,2.016,198,2.016,199,2.807,200,2.657,201,1.629,202,2.292,203,1.629,204,2.292,205,2.807,206,2.807,207,2.807,208,2.016,209,3.699,210,2.016,211,1.629,212,1.629,213,1.629,214,3.383,215,1.629,216,1.629,217,0.954,218,1.629,219,3.699,220,2.807,221,1.629,222,1.241,223,1.449,224,2.807,225,0.672,226,1.061,227,1.016,228,1.33,229,1.241,230,1.016,231,1.016,232,1.016,233,0.828,234,1.629,235,1.629,236,1.629,237,1.629,238,0.942,239,1.111,240,1.111,241,0.977,242,0.942,243,1.33,244,1.111,245,3.975,246,1.629,247,1.629,248,1.567,249,1.629,250,1.241,251,1.111,252,1.33,253,1.629,254,1.449,255,1.629,256,1.629,257,2.807,258,1.629,259,1.629,260,1.629,261,2.807,262,1.629,263,1.449,264,1.629,265,1.629,266,1.629,267,1.629,268,1.629,269,1.629,270,1.33,271,1.629,272,1.629,273,0.424,274,1.629,275,1.629,276,1.629,277,1.629,278,1.629,279,1.629,280,1.629,281,2.807,282,1.629,283,3.699,284,2.542,285,1.629,286,1.629,287,1.828,288,1.629,289,1.629,290,1.629,291,1.629,292,1.629,293,1.629,294,1.629,295,1.449,296,1.629,297,0.772,298,1.629,299,2.807,300,2.807,301,2.807,302,2.807,303,2.807,304,5.422,305,2.807,306,2.807,307,2.807,308,2.807,309,2.807,310,2.807,311,1.33,312,1.629,313,1.449,314,2.111,315,1.629,316,3.289,317,2.139,318,1.33,319,1.629,320,1.629,321,1.629,322,1.629,323,2.807,324,1.629,325,1.629,326,1.629,327,1.629,328,1.629,329,1.629,330,1.629,331,1.629,332,4.41,333,2.496,334,1.629,335,1.629,336,2.807,337,2.807,338,1.629,339,1.629,340,1.629,341,1.629,342,1.449,343,1.449,344,1.629,345,1.629,346,1.629,347,1.629,348,1.629,349,1.241,350,2.496,351,1.629,352,1.629]],["title/modules/AppModule.html",[353,1.719,354,3.344]],["body/modules/AppModule.html",[3,0.038,4,0.044,5,0.044,15,0.007,16,0.064,19,0.004,20,0.004,33,1.193,64,0.783,66,0.517,67,0.373,84,3.325,87,1.486,170,3.066,195,1.425,200,2.89,223,3.579,226,3.752,227,2.511,230,3.595,231,2.511,239,2.745,240,2.745,252,4.704,254,3.579,297,1.106,354,6.795,355,1.396,356,2.379,357,3.579,358,3.579,359,3.579,360,3.579,361,5.814,362,5.814,363,5.52,364,5.814,365,5.814,366,5.814,367,4.853,368,2.495,369,1.701,370,1.518,371,3.579,372,2.272,373,2.128,374,3.93,375,2.128,376,2.272,377,1.455,378,3.579,379,4.024,380,5.763,381,4.024,382,4.2,383,5.763,384,2.62,385,4.024,386,4.024,387,5.763,388,3.752,389,2.62,390,4.704,391,3.285,392,4.139,393,2.89,394,4.139,395,2.89,396,5.124,397,3.579,398,3.331,399,2.326,400,4.39,401,3.066,402,3.595,403,2.414,404,2.326,405,3.579,406,3.579,407,4.024,408,5.763,409,4.024,410,3.579,411,3.579,412,4.024,413,4.024,414,3.285,415,4.024,416,2.745,417,3.579,418,1.34,419,4.024,420,4.024,421,3.285,422,4.024,423,4.024,424,3.579,425,4.024,426,3.579,427,4.024,428,4.024,429,3.285,430,1.786,431,2.89,432,4.024,433,2.326,434,1.742,435,2.89,436,4.024]],["title/modules/AppRoutingModule.html",[353,1.719,361,3.344]],["body/modules/AppRoutingModule.html",[3,0.05,4,0.058,5,0.077,11,2.605,15,0.007,16,0.058,19,0.005,20,0.005,21,1.085,33,2.057,64,0.702,66,0.678,67,0.489,93,2.564,143,3.435,157,3.165,195,1.868,225,2.178,273,1.373,287,3.435,355,2.408,356,2.866,361,6.534,368,3.006,369,2.23,370,1.991,373,2.564,374,3.599,375,2.564,406,6.174,434,2.285,435,3.79,437,4.693,438,4.693,439,6.316,440,6.316,441,5.277,442,3.292,443,3.528,444,4.189,445,5.277,446,5.277,447,5.277,448,2.466,449,5.922,450,4.693,451,4.308,452,4.164,453,1.991,454,5.277,455,5.277,456,5.277,457,5.277,458,5.277,459,4.02,460,4.02,461,4.02,462,4.02,463,4.308,464,5.277,465,2.681,466,4.693,467,3.435,468,3.435,469,4.693,470,5.277,471,5.277,472,4.693]],["title/modules/AppServerModule.html",[353,1.719,473,3.546]],["body/modules/AppServerModule.html",[3,0.059,4,0.068,5,0.068,15,0.007,16,0.068,19,0.006,20,0.006,64,0.714,66,0.789,67,0.569,84,3.427,226,3.997,354,6.573,355,2.13,356,3.158,368,3.313,369,2.595,370,2.317,373,2.825,374,5.218,375,2.825,405,5.46,473,7.07,474,5.46,475,6.14,476,6.14,477,6.14,478,7.651,479,4.678,480,6.14]],["title/injectables/AppService.html",[481,1.328,482,3.8]],["body/injectables/AppService.html",[3,0.057,4,0.066,5,0.066,7,0.44,8,0.746,14,0.573,15,0.007,16,0.066,19,0.005,20,0.005,45,1.989,46,1.682,64,0.707,66,0.766,67,0.553,140,3.395,164,3.223,241,3.578,242,3.449,465,3.031,481,2.144,482,6.133,483,2.583,484,5.966,485,7.314,486,8.225,487,5.61,488,7.514,489,6.714,490,5.966,491,5.966,492,4.069,493,4.069,494,4.285,495,4.545,496,4.545,497,3.124,498,5.966,499,5.966,500,5.966,501,5.966,502,5.966,503,5.305]],["title/interfaces/AppState.html",[0,0.211,504,4.14]],["body/interfaces/AppState.html",[0,0.205,2,0.914,3,0.043,4,0.05,5,0.05,7,0.334,8,0.622,13,0.788,14,0.586,15,0.007,16,0.09,19,0.005,20,0.005,34,1.421,64,0.739,111,2.989,162,2.115,165,5.245,233,2.3,273,1.867,297,1.244,416,3.088,418,1.508,453,2.362,492,3.088,493,3.088,504,5.567,505,4.026,506,7.228,507,5.878,508,5.376,509,3.928,510,7.177,511,7.177,512,7.177,513,7.177,514,7.177,515,7.177,516,6.382,517,6.261,518,6.261,519,4.527,520,4.527,521,6.261,522,4.026,523,4.026,524,3.252,525,4.527,526,4.527,527,4.527,528,5.11,529,4.527,530,4.527,531,4.026,532,4.527,533,4.527,534,4.527,535,4.527,536,4.527,537,4.527,538,5.567,539,5.567,540,3.449,541,3.695,542,4.497,543,4.527,544,6.261,545,3.449,546,4.527,547,4.527,548,4.527,549,4.026,550,4.026,551,3.695,552,3.088,553,4.527,554,4.527,555,4.527]],["title/classes/Atomic.html",[67,0.431,556,2.792]],["body/classes/Atomic.html",[0,0.35,3,0.043,4,0.05,5,0.05,7,0.331,8,0.619,10,1.129,12,2.102,13,1.104,15,0.007,16,0.095,17,2.698,19,0.004,20,0.004,33,1.847,35,2.355,46,1.214,48,2.076,49,1.778,62,2.394,63,2.118,64,0.586,67,0.577,178,3.603,217,2.624,248,2.511,273,1.17,297,1.236,418,2.382,453,1.697,509,2.102,556,4.29,557,3.068,558,3.068,559,4.656,560,5.267,561,4.878,562,4.878,563,4.498,564,4.498,565,2.928,566,3.48,567,2.806,568,3.738,569,3.068,570,3.068,571,4.058,572,2.806,573,2.928,574,3.068,575,3.068,576,3.068,577,3.068,578,3.068,579,2.806,580,2.928,581,2.6,582,3.864,583,3.864,584,3.888,585,2.928,586,2.928,587,2.698,588,2.806,589,2.159,590,2.806,591,2.806,592,2.806,593,2.698,594,2.6,595,2.698,596,2.698,597,2.698,598,2.698,599,2.6,600,2.698,601,2.806,602,2.698,603,2.806,604,2.806,605,3.864,606,2.806,607,1.774,608,2.806,609,3.068,610,3.068,611,2.928,612,1.626,613,2.806,614,2.698,615,2.43,616,3.077,617,2.766,618,2.698,619,2.928]],["title/guards/AuthGuard.html",[620,4.14,621,3.031]],["body/guards/AuthGuard.html",[3,0.037,4,0.043,5,0.043,7,0.285,10,1.013,14,0.39,15,0.007,16,0.043,19,0.004,20,0.004,28,1.144,39,1.353,45,1.353,46,1.09,55,1.353,56,1.032,58,1.713,63,1.312,64,0.627,66,0.496,67,0.358,71,2.514,73,1.632,111,2.501,145,2.281,153,2.942,154,5.196,164,3.896,208,4.018,217,2.235,225,1.594,241,2.316,242,2.232,245,3.234,297,1.062,370,2.111,416,3.815,449,5.733,453,2.111,468,2.514,469,4.974,481,1.596,492,2.634,493,2.634,542,5.18,551,4.566,612,2.378,621,3.642,622,3.862,623,3.862,624,5.498,625,5.615,626,3.802,627,3.862,628,3.862,629,7.655,630,7.655,631,3.862,632,5.594,633,7.212,634,4.974,635,5.18,636,4.974,637,6.08,638,4.974,639,4.325,640,5.594,641,4.566,642,4.974,643,5.594,644,4.566,645,5.594,646,5.594,647,4.974,648,5.594,649,5.594,650,5.594,651,4.974,652,4.974,653,5.594,654,4.974,655,3.49,656,5.594,657,4.566,658,4.974,659,5.594,660,4.974,661,4.566,662,5.594,663,5.594,664,5.594,665,4.974,666,6.578,667,3.802,668,3.434,669,7.212,670,3.434,671,2.514,672,3.434,673,3.434,674,3.862,675,3.862,676,2.634]],["title/modules/AuthModule.html",[353,1.719,362,3.344]],["body/modules/AuthModule.html",[3,0.059,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,64,0.763,66,0.8,67,0.577,93,3.392,355,2.161,356,3.187,362,6.597,368,3.343,369,2.634,370,2.351,372,3.045,373,2.301,375,2.851,376,3.045,377,2.253,398,4.463,399,3.602,677,5.541,678,5.541,679,6.231,680,6.231,681,4.463,682,3.602,683,6.302,684,3.479,685,6.302,686,5.086]],["title/injectables/AuthService.html",[481,1.328,625,3.175]],["body/injectables/AuthService.html",[3,0.032,4,0.036,5,0.066,7,0.243,8,0.495,10,0.903,13,0.841,14,0.418,15,0.007,16,0.036,19,0.004,20,0.005,35,2.609,39,1.205,45,1.205,46,1.469,48,1.66,49,1.422,55,1.205,56,1.233,58,1.704,59,1.057,63,2.04,64,0.547,66,0.424,67,0.306,111,2.861,140,2.057,145,2.915,162,2.329,164,3.611,188,4.432,193,4.068,195,3.064,217,1.694,241,1.981,242,1.909,245,2.881,251,3.399,273,1.561,297,0.908,318,4.068,431,4.801,449,3.58,465,1.678,481,1.422,483,1.43,487,3.399,492,2.253,493,2.253,497,1.729,545,5.745,607,2.974,617,3.789,625,3.399,626,3.469,634,4.432,637,3.797,638,5.944,639,4.009,642,5.944,644,4.068,651,4.432,655,3.109,658,5.944,667,1.909,687,3.303,688,4.075,689,3.351,690,2.937,691,5.417,692,4.984,693,3.303,694,6.002,695,4.984,696,4.068,697,4.984,698,4.984,699,4.984,700,3.797,701,3.58,702,4.068,703,4.432,704,4.984,705,4.984,706,4.432,707,4.984,708,4.984,709,4.984,710,4.984,711,4.984,712,3.303,713,4.984,714,4.984,715,4.432,716,4.984,717,4.068,718,4.432,719,6.707,720,4.984,721,4.432,722,4.984,723,4.984,724,4.984,725,4.984,726,4.984,727,3.303,728,4.432,729,4.984,730,4.984,731,4.984,732,3.303,733,2.696,734,2.696,735,2.881,736,3.303,737,2.937,738,3.303,739,3.303,740,4.984,741,3.303,742,3.303,743,3.303]],["title/components/BackupComponent.html",[21,0.957,86,1.836]],["body/components/BackupComponent.html",[3,0.041,4,0.047,5,0.047,7,0.316,15,0.007,16,0.047,19,0.004,20,0.004,21,1.435,22,1.621,23,2.38,24,1.733,25,1.694,26,1.733,28,1.789,29,3.097,31,1.375,32,3.638,33,2.845,34,2.722,36,2.328,39,1.46,41,3.359,45,1.688,46,1.176,56,1.287,58,1.02,59,1.932,64,0.352,66,0.552,67,0.398,75,4.598,77,1.657,78,2.435,79,2.38,80,1.621,81,3.053,82,1.733,83,1.733,84,1.586,85,1.733,86,2.985,87,3.334,88,1.733,89,1.621,90,1.733,91,1.621,92,1.733,93,1.586,94,1.733,95,1.621,96,1.733,97,1.621,98,1.733,99,1.621,100,1.733,101,1.586,102,1.521,103,1.733,104,1.621,105,1.733,106,1.621,107,1.733,108,1.621,109,1.733,110,1.694,111,1.49,112,1.733,113,1.621,114,1.733,115,1.586,116,1.733,117,2.229,118,2.435,119,1.621,120,1.733,121,1.621,122,1.733,123,1.586,124,1.733,125,1.586,126,1.733,127,1.586,128,1.694,129,1.586,130,1.694,131,1.733,430,2.679,508,3.766,509,2.821,721,5.367,744,4.296,745,6.036,746,4.296,747,4.296,748,4.927,749,4.927,750,4.927,751,5.367,752,3.82,753,3.82]],["title/interfaces/Balance.html",[0,0.211,754,3.175]],["body/interfaces/Balance.html",[0,0.287,2,1.277,3,0.06,4,0.07,5,0.07,7,0.466,8,0.774,14,0.543,15,0.007,16,0.07,19,0.006,20,0.006,34,1.986,62,2.63,251,4.314,582,4.21,583,4.21,589,3.036,596,4.674,754,6.37,755,6.325,756,8.815,757,5.163,758,3.794,759,6.325,760,6.325,761,6.929,762,6.325,763,6.325,764,6.325,765,6.325,766,6.325,767,6.325,768,5.624]],["title/injectables/BaseChartConfigService.html",[481,1.328,769,3.8]],["body/injectables/BaseChartConfigService.html",[3,0.034,4,0.04,5,0.04,7,0.266,8,0.53,10,0.655,13,0.671,14,0.577,15,0.007,16,0.04,19,0.004,20,0.004,39,1.289,45,1.532,46,1.612,48,2.328,49,1.995,55,0.874,56,0.667,58,1.504,59,2.027,63,2.813,64,0.296,66,0.464,67,0.335,77,2.056,140,3.64,174,3.471,195,2.242,430,2.811,453,2.637,481,1.521,483,1.566,497,1.893,524,6.07,607,2.497,612,2.527,769,4.352,770,8.45,771,3.616,772,4.741,773,6.216,774,5.706,775,3.616,776,4.741,777,4.041,778,3.616,779,4.741,780,3.616,781,3.616,782,4.741,783,3.616,784,3.616,785,4.741,786,4.741,787,4.061,788,4.741,789,4.741,790,4.741,791,4.741,792,4.741,793,4.352,794,4.741,795,4.741,796,4.741,797,4.061,798,4.061,799,4.741,800,4.352,801,4.741,802,4.741,803,4.741,804,4.741,805,4.352,806,6.216,807,6.216,808,4.361,809,4.741,810,4.741,811,4.741,812,4.741,813,3.616,814,3.616,815,3.616,816,3.616,817,5.332]],["title/interfaces/BlockHeader.html",[0,0.211,818,3.546]],["body/interfaces/BlockHeader.html",[0,0.235,2,1.045,3,0.049,4,0.057,5,0.057,7,0.381,8,0.681,13,1.101,14,0.658,15,0.007,16,0.057,19,0.005,20,0.005,62,2.805,217,2.611,314,3.927,818,5.22,819,5.173,820,7.274,821,7.274,822,6.677,823,5.876,824,7.274,825,7.274,826,7.274,827,7.274,828,7.274,829,7.274,830,7.274,831,6.231]],["title/components/BlockchainComponent.html",[21,0.957,89,1.757]],["body/components/BlockchainComponent.html",[3,0.016,4,0.019,5,0.019,7,0.126,8,0.291,10,0.695,13,0.368,14,0.457,15,0.007,16,0.019,19,0.002,20,0.002,21,0.789,22,0.645,23,1.154,24,0.69,25,0.674,26,0.69,28,0.867,29,1.703,31,0.547,32,3.218,33,2.494,34,1.748,36,1.129,39,0.708,41,2.016,45,0.414,46,1.461,48,2.888,49,2.418,55,0.928,56,1.621,58,1.079,59,1.635,62,2.213,64,0.614,66,0.22,67,0.158,73,0.723,77,0.659,78,1.18,79,1.154,80,0.645,81,1.832,82,0.69,83,0.69,84,0.631,85,0.69,86,0.674,87,2.42,88,0.69,89,1.714,90,0.69,91,0.645,92,0.69,93,0.631,94,0.69,95,0.645,96,0.69,97,0.645,98,0.69,99,0.645,100,0.69,101,0.631,102,0.605,103,0.69,104,0.645,105,0.69,106,0.645,107,0.69,108,0.645,109,0.69,110,0.674,111,0.593,112,0.69,113,0.645,114,0.69,115,0.631,116,0.69,117,1.081,118,1.18,119,0.645,120,0.69,121,0.645,122,0.69,123,0.631,124,0.69,125,0.631,126,0.69,127,0.631,128,0.674,129,0.631,130,0.674,131,0.69,133,0.924,136,1.532,140,3.287,145,1.771,160,4.312,162,2.781,164,2.454,165,3.186,166,3.263,202,2.389,214,2.617,217,0.581,232,1.067,233,0.869,238,0.988,240,4.28,241,1.025,242,0.988,243,1.396,273,0.445,297,1.055,311,1.396,313,1.52,314,1.842,317,1.303,332,2.602,333,2.602,342,1.52,382,1.067,384,1.113,433,1.692,453,3.127,466,2.602,492,1.166,493,1.166,587,1.025,594,2.952,612,1.642,626,1.692,728,7.583,758,1.025,808,1.067,818,1.303,820,2.602,821,2.602,822,2.389,823,3.263,824,2.602,825,2.602,826,4.04,827,2.602,828,2.602,829,2.602,830,2.602,831,2.229,832,1.71,833,2.756,834,2.498,835,3.836,836,2.927,837,3.836,838,3.836,839,3.412,840,4.545,841,3.132,842,5.107,843,3.836,844,2.756,845,4.04,846,3.263,847,1.71,848,3.483,849,2.927,850,2.602,851,1.71,852,3.412,853,1.71,854,1.71,855,2.602,856,1.71,857,2.927,858,2.927,859,2.927,860,2.927,861,2.927,862,2.927,863,2.102,864,2.927,865,2.927,866,4.543,867,2.927,868,1.996,869,1.71,870,3.325,871,1.71,872,1.71,873,1.71,874,1.71,875,1.71,876,1.71,877,1.71,878,0.988,879,1.71,880,1.303,881,1.303,882,1.303,883,1.52,884,1.396,885,1.52,886,1.52,887,1.396,888,1.396,889,1.52,890,1.113,891,1.113,892,1.52,893,0.74,894,1.71,895,1.71,896,1.71,897,3.412,898,1.52,899,1.71,900,1.52,901,1.52,902,1.303,903,1.52,904,1.52,905,1.52,906,1.52,907,1.52,908,1.52,909,1.52,910,1.71,911,1.71,912,1.71,913,2.927,914,4.543,915,1.71,916,1.71,917,1.71,918,1.71,919,1.396,920,2.927,921,2.927,922,2.602,923,2.602,924,2.602,925,2.602,926,2.602,927,2.602,928,2.927,929,1.71,930,2.602,931,2.389,932,2.602,933,2.229,934,2.229,935,2.229,936,2.927,937,2.602,938,2.927,939,1.71,940,1.71,941,1.71,942,1.71]],["title/modules/BlockchainModule.html",[353,1.719,943,3.546]],["body/modules/BlockchainModule.html",[3,0.046,4,0.054,5,0.054,11,2.394,15,0.007,16,0.054,19,0.005,20,0.005,21,0.997,64,0.783,66,0.623,67,0.449,89,3.414,143,3.158,157,2.909,195,1.718,225,2.002,230,3.026,231,3.026,273,1.262,287,3.158,355,1.682,356,2.709,367,5.356,368,2.842,369,2.05,370,1.83,372,2.588,373,2.424,375,2.424,376,2.588,377,1.754,388,4.273,389,3.158,392,4.714,393,3.484,394,4.714,395,3.484,396,5.837,397,4.313,398,3.794,399,2.804,400,5,401,3.695,402,4.095,403,2.909,404,2.804,433,2.804,434,2.1,443,3.335,444,3.78,448,2.267,612,1.754,681,3.794,682,2.804,834,4.843,848,4.477,890,3.158,891,3.158,892,4.313,943,6.968,944,4.313,945,4.313,946,4.313,947,6.166,948,4.851,949,4.851,950,4.851,951,5.358,952,5.837,953,3.96,954,4.095,955,3.96,956,4.851,957,4.851,958,4.851,959,2.54]],["title/modules/BlockchainRoutingModule.html",[353,1.719,439,3.344]],["body/modules/BlockchainRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,64,0.724,66,0.82,67,0.591,165,3.982,225,2.635,273,1.66,355,2.214,372,2.517,373,2.357,375,2.894,376,3.09,377,2.308,433,3.69,434,2.764,439,5.628,442,3.982,443,3.981,444,4.308,448,2.983,621,5.52,624,4.584,959,3.342,960,6.383,961,4.862,962,4.353,963,6.383,964,6.383]],["title/injectables/BlockchainService.html",[166,3.344,481,1.328]],["body/injectables/BlockchainService.html",[3,0.03,4,0.035,5,0.064,7,0.232,10,1.182,13,0.933,14,0.554,15,0.007,16,0.064,19,0.003,20,0.003,39,1.164,45,0.763,46,1.586,48,1.051,49,0.9,55,1.579,56,1.204,58,1.934,59,1.868,62,2.114,64,0.631,66,0.405,67,0.292,145,1.094,162,3.601,165,4.073,166,3.457,195,1.704,217,1.983,233,1.603,273,1.698,284,3.774,297,1.933,382,4.073,384,2.054,418,2.174,430,3.526,452,2.887,453,1.816,465,1.603,481,1.373,483,1.366,497,1.652,655,3.003,667,1.824,701,4.689,758,1.892,880,2.403,881,2.403,884,2.575,887,2.575,893,1.366,965,3.155,966,4.813,967,5.805,968,6.529,969,4.813,970,6.529,971,4.813,972,6.529,973,6.529,974,2.575,975,3.155,976,3.283,977,4.813,978,5.189,979,3.155,980,2.403,981,3.155,982,4.28,983,4.813,984,4.813,985,4.28,986,4.813,987,3.155,988,6.529,989,4.28,990,4.813,991,5.835,992,3.155,993,3.155,994,3.155,995,4.813,996,7.03,997,3.155,998,4.813,999,3.155,1000,3.155,1001,5.738,1002,3.155,1003,3.155,1004,5.329,1005,5.329,1006,5.329,1007,5.329,1008,5.329,1009,5.329,1010,4.973,1011,5.355,1012,4.445,1013,3.155,1014,5.329,1015,5.329,1016,5.189,1017,3.155,1018,3.155,1019,3.155,1020,2.805,1021,3.155,1022,3.155,1023,3.155,1024,4.813,1025,3.155,1026,5.835,1027,3.155,1028,3.155,1029,3.155,1030,3.155,1031,3.155,1032,3.155,1033,3.155,1034,3.155,1035,3.155,1036,3.155]],["title/interfaces/ChainGetInfo.html",[0,0.211,882,3.546]],["body/interfaces/ChainGetInfo.html",[0,0.23,2,1.022,3,0.048,4,0.056,5,0.056,7,0.373,8,0.671,13,1.094,14,0.66,15,0.007,16,0.056,19,0.005,20,0.005,62,2.81,102,2.871,217,2.583,314,3.893,822,6.619,882,5.145,1037,5.061,1038,8.109,1039,8.109,1040,8.109,1041,8.109,1042,8.109,1043,8.109,1044,8.109,1045,8.109,1046,8.109,1047,8.109,1048,8.109]],["title/interfaces/ChartConfigInterface.html",[0,0.211,1049,3.8]],["body/interfaces/ChartConfigInterface.html",[0,0.267,2,1.188,3,0.056,4,0.065,5,0.065,7,0.433,8,0.74,10,1.065,13,1.14,14,0.654,15,0.007,16,0.065,19,0.005,20,0.005,39,1.801,46,1.45,55,1.423,56,1.085,58,1.769,59,2.384,62,2.332,195,3.138,430,3.812,607,3.387,774,7.012,777,5.233,1049,6.079,1050,8.172,1051,5.883,1052,6.622,1053,6.079,1054,5.883,1055,5.883]],["title/interfaces/ChartDifficulty.html",[0,0.211,1056,3.8]],["body/interfaces/ChartDifficulty.html",[0,0.348,2,1.247,3,0.059,4,0.068,5,0.068,7,0.455,8,0.763,13,1.154,14,0.535,15,0.007,16,0.092,19,0.006,20,0.006,28,1.83,62,2.191,67,0.572,195,2.719,430,3.408,1056,7.135,1057,6.176,1058,8.741,1059,8.741,1060,7.43,1061,6.821,1062,6.176]],["title/directives/ChartDirective.html",[80,1.757,129,1.719]],["body/directives/ChartDirective.html",[3,0.043,4,0.05,5,0.05,7,0.331,8,0.618,10,1.127,13,1.02,14,0.538,15,0.007,16,0.05,19,0.004,20,0.004,28,1.844,31,1.437,32,2.348,33,1.33,39,1.505,43,4.245,45,1.505,46,1.633,55,1.505,56,1.423,58,1.697,59,2.47,64,0.585,65,4.052,66,0.577,67,0.416,80,2.348,128,1.77,129,2.298,130,3.195,135,5.442,145,2.982,149,5.877,314,2.155,377,1.623,433,3.598,524,3.224,688,2.425,777,4.13,833,5.131,834,5.794,846,5.541,1063,4.488,1064,7.144,1065,6.223,1066,4.488,1067,7.715,1068,7.144,1069,7.715,1070,6.353,1071,6.223,1072,6.223,1073,4.488,1074,6.223,1075,4.488,1076,4.488,1077,4.488,1078,3.224,1079,3.664,1080,3.991,1081,3.991,1082,3.991,1083,5.534,1084,4.488,1085,4.488,1086,7.715,1087,4.488,1088,4.488,1089,4.488,1090,4.488,1091,4.488,1092,6.223,1093,5.08,1094,6.223,1095,4.488,1096,4.488,1097,4.488,1098,4.488,1099,4.488]],["title/modules/ChartModule.html",[353,1.719,947,3.344]],["body/modules/ChartModule.html",[3,0.058,4,0.067,5,0.067,15,0.007,16,0.067,19,0.005,20,0.005,64,0.71,66,0.775,67,0.559,129,3.573,355,2.093,356,3.124,368,3.277,369,2.551,370,2.277,372,2.984,373,2.228,375,2.795,376,2.984,377,2.182,433,4.375,434,3.277,834,6.019,947,6.775,1081,5.366,1100,5.366,1101,5.366,1102,6.035,1103,5.366,1104,6.035,1105,6.035]],["title/injectables/ChartService.html",[481,1.328,834,3.031]],["body/injectables/ChartService.html",[3,0.027,4,0.031,5,0.031,7,0.208,8,0.438,10,1.114,13,0.991,14,0.572,15,0.007,16,0.031,19,0.003,20,0.003,39,1.067,45,1.067,46,1.534,48,2.049,49,1.755,55,1.488,56,1.514,58,1.291,59,2.137,63,0.958,64,0.627,66,0.362,67,0.261,73,1.192,145,3.075,162,3.309,179,2.148,195,2.852,198,3.17,204,5.021,214,4.195,232,1.759,233,1.433,245,2.551,248,1.575,273,0.734,377,1.02,416,4.195,418,2.049,430,1.252,465,1.433,481,1.259,483,1.221,494,3.17,497,1.477,506,3.925,524,5.785,607,1.74,647,2.508,671,1.836,717,2.302,777,4.656,787,2.148,798,2.148,808,1.759,834,2.873,870,2.873,1053,3.603,1070,4.835,1078,2.026,1079,2.302,1080,2.508,1082,2.508,1083,3.925,1093,2.302,1106,2.82,1107,5.438,1108,5.438,1109,5.438,1110,5.438,1111,4.414,1112,4.414,1113,4.414,1114,2.82,1115,6.04,1116,4.414,1117,4.414,1118,2.82,1119,4.414,1120,3.362,1121,4.414,1122,4.414,1123,4.414,1124,4.414,1125,4.414,1126,2.82,1127,4.414,1128,2.82,1129,3.925,1130,4.414,1131,3.603,1132,4.414,1133,7.081,1134,4.414,1135,2.82,1136,4.835,1137,4.414,1138,3.362,1139,4.414,1140,2.82,1141,4.414,1142,3.925,1143,2.82,1144,2.82,1145,2.508,1146,2.508,1147,2.508,1148,5.438,1149,2.508,1150,2.508,1151,2.82,1152,2.82,1153,2.82,1154,2.508,1155,2.82,1156,2.82,1157,2.82,1158,2.82,1159,2.508,1160,2.82,1161,2.82,1162,2.508,1163,2.82,1164,3.925,1165,2.82,1166,2.508,1167,2.82,1168,2.82,1169,2.82,1170,4.414,1171,2.82,1172,4.414,1173,4.414,1174,2.82,1175,2.508,1176,2.82,1177,2.82,1178,2.82,1179,2.82,1180,2.82,1181,2.82,1182,2.82,1183,2.82,1184,2.82,1185,2.82,1186,2.82,1187,2.82,1188,2.82,1189,2.82,1190,2.82,1191,2.82,1192,2.82,1193,2.82,1194,3.362,1195,2.82,1196,2.82,1197,2.82,1198,2.82,1199,2.82,1200,2.82,1201,1.691,1202,2.82,1203,2.82,1204,2.82,1205,2.82,1206,2.82]],["title/injectables/ChartsEffects.html",[481,1.328,1207,4.14]],["body/injectables/ChartsEffects.html",[3,0.029,4,0.033,5,0.033,7,0.222,8,0.461,10,0.545,14,0.324,15,0.007,16,0.033,19,0.003,20,0.003,45,1.123,46,1.341,48,2.122,49,1.818,55,0.728,56,0.555,64,0.672,66,0.387,67,0.279,145,2.522,162,3.542,190,3.167,229,2.293,232,1.878,233,1.529,238,4.825,297,1.892,382,3.974,384,1.96,418,1.546,430,2.061,481,1.325,483,1.303,542,2.162,777,1.74,976,4.694,1011,3.537,1056,2.457,1131,6.389,1138,4.853,1194,3.537,1201,2.784,1207,4.128,1208,3.01,1209,6.883,1210,6.883,1211,6.37,1212,5.04,1213,5.667,1214,2.162,1215,5.169,1216,3.01,1217,6.389,1218,6.187,1219,4.643,1220,7.005,1221,8.202,1222,5.224,1223,6.37,1224,4.643,1225,3.01,1226,4.643,1227,4.643,1228,3.01,1229,5.667,1230,6.37,1231,5.04,1232,4.643,1233,4.643,1234,4.643,1235,4.643,1236,4.643,1237,4.128,1238,4.128,1239,4.128,1240,4.643,1241,5.667,1242,4.643,1243,5.04,1244,5.2,1245,4.643,1246,2.454,1247,4.643,1248,4.643,1249,4.576,1250,5.04,1251,5.04,1252,5.04,1253,4.643,1254,3.01,1255,4.643,1256,5.04,1257,3.01,1258,2.457,1259,1.96,1260,2.677,1261,2.457,1262,2.457,1263,2.677,1264,2.677,1265,3.01,1266,2.677,1267,3.01,1268,3.01]],["title/interfaces/ChartsState.html",[0,0.211,1269,4.14]],["body/interfaces/ChartsState.html",[0,0.262,2,1.168,3,0.055,4,0.064,5,0.064,7,0.426,8,0.732,10,1.335,14,0.403,15,0.007,16,0.094,19,0.005,20,0.005,64,0.664,195,2.048,233,2.939,273,2.109,297,1.59,416,3.946,418,1.927,453,2.183,542,6.132,1060,7.84,1138,7.064,1201,3.47,1215,3.946,1222,5.293,1250,5.145,1261,4.722,1264,5.145,1269,7.211,1270,5.145,1271,7.369,1272,8.109,1273,5.785,1274,5.785,1275,5.785,1276,5.785,1277,5.145,1278,5.785]],["title/components/ConsoleComponent.html",[21,0.957,91,1.757]],["body/components/ConsoleComponent.html",[3,0.026,4,0.03,5,0.03,7,0.203,8,0.431,10,0.785,13,0.883,14,0.46,15,0.007,16,0.03,19,0.003,20,0.003,21,1.102,22,1.04,23,1.71,24,1.112,25,1.087,26,1.112,28,1.285,29,2.379,31,0.883,32,3.471,33,2.705,34,2.386,36,1.672,39,1.049,41,2.697,43,2.957,45,0.667,46,1.523,48,1.444,49,1.237,55,1.049,56,1.218,58,1.443,59,2.115,63,1.474,64,0.439,65,2.823,66,0.354,67,0.255,77,1.063,78,1.749,79,1.71,80,1.04,81,2.451,82,1.112,83,1.112,84,1.018,85,1.112,86,1.087,87,3.013,88,1.112,89,1.04,90,1.112,91,2.293,92,1.112,93,1.018,94,1.112,95,1.04,96,1.112,97,1.04,98,1.112,99,1.04,100,1.112,101,1.018,102,0.976,103,1.112,104,1.04,105,1.112,106,1.04,107,1.112,108,1.04,109,1.112,110,1.087,111,0.956,112,1.112,113,1.04,114,1.112,115,1.018,116,1.112,117,1.601,118,1.749,119,1.04,120,1.112,121,1.04,122,1.112,123,1.018,124,1.112,125,1.018,126,1.112,127,1.018,128,1.087,129,1.018,130,1.087,131,1.112,133,1.49,135,4.082,136,2.27,145,2.545,149,4.628,193,2.251,210,1.98,222,2.1,239,1.881,270,2.251,273,1.394,316,4.765,317,2.1,452,2.601,453,1.636,758,2.601,800,2.251,844,3.849,893,1.194,900,2.452,1212,3.856,1279,2.757,1280,4.336,1281,4.336,1282,4.336,1283,4.336,1284,4.336,1285,5.359,1286,4.336,1287,5.359,1288,5.359,1289,4.336,1290,6.076,1291,4.765,1292,2.757,1293,4.959,1294,5.359,1295,6.076,1296,4.336,1297,4.336,1298,2.757,1299,2.757,1300,2.757,1301,2.757,1302,2.757,1303,2.757,1304,2.757,1305,5.359,1306,4.336,1307,2.757,1308,2.757,1309,2.757,1310,2.757,1311,2.251,1312,2.757,1313,2.757,1314,2.757,1315,6.606,1316,2.1,1317,2.757,1318,2.757,1319,2.757,1320,2.757,1321,2.757,1322,2.757,1323,2.757,1324,2.757,1325,2.757,1326,2.757,1327,2.757,1328,2.757,1329,2.757,1330,2.757,1331,2.757,1332,2.757,1333,2.757,1334,2.757,1335,2.757,1336,2.757,1337,2.757,1338,2.757,1339,2.757,1340,2.757,1341,2.757,1342,2.757,1343,2.757,1344,2.757,1345,4.336,1346,2.757,1347,2.757,1348,2.757,1349,4.336,1350,2.757,1351,2.757,1352,2.757,1353,2.757,1354,2.757,1355,2.1,1356,2.757,1357,2.757,1358,2.757,1359,2.452,1360,2.757,1361,2.757,1362,2.757,1363,3.856,1364,2.757,1365,3.856,1366,5.359,1367,2.757,1368,2.757]],["title/modules/ConsoleModule.html",[353,1.719,363,3.175]],["body/modules/ConsoleModule.html",[3,0.056,4,0.065,5,0.065,15,0.007,16,0.065,19,0.005,20,0.005,64,0.752,66,0.751,67,0.542,91,3.608,239,3.99,355,2.029,356,3.063,363,6.263,368,3.213,369,2.472,370,2.207,372,2.926,373,2.16,375,2.74,376,2.926,377,2.115,398,4.29,399,3.382,402,4.63,403,3.508,404,3.382,434,3.213,681,4.29,682,3.382,1311,4.775,1369,5.202,1370,5.202,1371,5.202,1372,5.85,1373,5.85,1374,7.421]],["title/interfaces/CreateWallet.html",[0,0.211,618,2.792]],["body/interfaces/CreateWallet.html",[0,0.351,2,0.91,3,0.043,4,0.05,5,0.05,7,0.332,8,0.62,10,1.13,12,2.106,13,1.172,14,0.499,15,0.007,16,0.095,17,2.703,19,0.004,20,0.004,33,1.85,35,2.36,62,2.396,63,2.121,64,0.586,67,0.578,178,4.691,217,2.627,248,2.517,273,1.172,297,1.239,418,2.385,453,1.701,509,2.106,556,3.744,558,3.074,559,4.064,560,4.884,561,3.074,562,3.074,565,2.934,566,3.485,567,2.812,568,3.744,569,3.074,570,3.074,571,4.064,572,2.812,573,2.934,574,3.074,575,3.074,576,3.074,577,3.074,578,3.074,579,2.812,580,2.934,581,2.606,582,3.868,583,3.868,584,3.894,585,2.934,586,2.934,587,2.703,588,2.812,589,2.164,590,2.812,591,2.812,592,2.812,593,2.703,594,2.606,595,2.703,596,2.703,597,2.703,598,2.703,599,2.606,600,2.703,601,2.812,602,2.703,603,2.812,604,2.812,605,3.868,606,2.812,607,1.777,608,2.812,609,3.074,610,3.074,611,2.934,612,1.63,613,2.812,614,2.703,615,2.435,616,4.006,617,3.602,618,3.744,619,2.934]],["title/injectables/CryptService.html",[481,1.328,691,3.344]],["body/injectables/CryptService.html",[3,0.021,4,0.025,5,0.025,7,0.164,10,1.219,11,1.804,13,1.159,14,0.469,15,0.007,16,0.025,17,2.192,19,0.003,20,0.003,39,0.884,45,0.884,46,1.311,55,1.628,56,1.296,58,1.859,63,1.242,64,0.38,65,4.992,66,0.286,67,0.206,73,0.942,111,1.611,140,1.508,145,2.057,164,2.903,190,2.492,195,2.487,200,2.625,204,2.983,242,1.288,245,4.327,273,1.398,297,1.85,418,0.742,424,3.249,429,2.983,430,0.989,431,2.625,452,2.192,463,2.983,465,1.132,481,1.043,482,5.201,483,0.965,487,3.168,497,1.167,541,2.983,545,1.697,599,2.112,600,1.336,607,3.087,617,3.228,626,2.685,639,3.557,641,2.983,655,2.28,657,2.983,667,2.685,688,3.443,689,4.061,691,2.625,696,4.386,700,5.127,702,2.983,718,3.249,719,4.778,735,4.327,737,3.249,777,2.112,823,2.625,844,2.625,989,3.249,1010,1.697,1159,3.249,1166,1.981,1355,1.697,1375,2.228,1376,3.654,1377,3.654,1378,3.654,1379,3.654,1380,3.654,1381,3.654,1382,2.228,1383,2.228,1384,3.654,1385,2.228,1386,4.645,1387,3.654,1388,5.373,1389,3.791,1390,3.654,1391,2.228,1392,3.654,1393,3.654,1394,3.654,1395,3.654,1396,3.654,1397,2.983,1398,6.372,1399,3.654,1400,3.654,1401,3.654,1402,3.654,1403,3.654,1404,3.654,1405,3.654,1406,3.654,1407,3.654,1408,3.654,1409,3.654,1410,3.654,1411,3.654,1412,3.249,1413,3.654,1414,3.654,1415,3.654,1416,3.654,1417,6.372,1418,2.228,1419,3.249,1420,2.983,1421,3.654,1422,3.654,1423,3.249,1424,4.645,1425,3.654,1426,3.654,1427,3.654,1428,3.654,1429,3.654,1430,3.654,1431,5.373,1432,3.654,1433,2.228,1434,3.654,1435,3.654,1436,3.654,1437,3.654,1438,3.654,1439,3.654,1440,3.249,1441,3.654,1442,3.654,1443,3.249,1444,4.645,1445,3.654,1446,2.228,1447,2.625,1448,3.654,1449,3.654,1450,3.791,1451,3.654,1452,3.654,1453,3.249,1454,3.654,1455,2.228,1456,3.654,1457,3.654,1458,3.654,1459,3.654,1460,3.654,1461,2.228,1462,2.228,1463,2.228,1464,2.228,1465,2.228,1466,1.697,1467,2.228,1468,1.981,1469,2.228,1470,1.981,1471,2.228,1472,2.228,1473,2.228,1474,2.228,1475,2.228,1476,1.819,1477,2.228,1478,2.228,1479,2.228,1480,2.228,1481,2.228,1482,2.228,1483,2.228,1484,2.228,1485,2.228,1486,2.228,1487,2.228,1488,2.228,1489,2.228,1490,3.654,1491,2.228,1492,2.228,1493,5.931,1494,3.654,1495,2.228,1496,2.228,1497,2.228,1498,2.228,1499,4.841,1500,2.228,1501,2.228,1502,2.228,1503,3.654,1504,2.228,1505,4.386,1506,2.228,1507,2.228,1508,2.228,1509,2.228,1510,2.228,1511,2.228,1512,2.228,1513,2.228,1514,2.228,1515,2.228,1516,2.492]],["title/modules/DataModule.html",[353,1.719,364,3.344]],["body/modules/DataModule.html",[3,0.059,4,0.068,5,0.068,15,0.007,16,0.068,19,0.006,20,0.006,31,1.977,64,0.776,66,0.793,67,0.572,162,2.886,233,3.901,355,2.142,364,5.515,372,2.436,373,2.281,375,2.836,492,4.213,493,4.213,531,6.828,550,6.828,551,5.042,552,4.213,904,5.492,1259,4.021,1517,6.176,1518,6.176,1519,6.176,1520,6.176,1521,6.176,1522,6.176,1523,6.828,1524,6.176,1525,5.492,1526,6.176,1527,6.176,1528,6.176,1529,6.176,1530,6.176,1531,6.176,1532,6.176,1533,6.176,1534,6.176,1535,6.176]],["title/interfaces/Destination.html",[0,0.211,566,2.599]],["body/interfaces/Destination.html",[0,0.294,2,1.309,3,0.062,4,0.072,5,0.072,7,0.478,8,0.786,9,5.028,13,0.816,14,0.551,15,0.007,16,0.072,19,0.006,20,0.006,62,2.436,64,0.531,140,2.675,556,3.887,566,4.963,582,3.501,583,3.501,1142,5.763,1536,6.481,1537,6.217,1538,5.763,1539,5.29]],["title/interfaces/DialogData.html",[0,0.211,1540,3.8]],["body/interfaces/DialogData.html",[0,0.271,2,1.208,3,0.057,4,0.066,5,0.066,7,0.441,8,0.748,13,1.144,14,0.525,15,0.007,16,0.083,19,0.005,20,0.005,21,1.548,32,2.258,33,1.773,36,2.307,45,1.447,56,1.594,59,1.915,64,0.616,66,0.769,67,0.554,87,2.209,101,2.209,102,2.118,140,3.107,195,2.118,197,5.916,1078,4.297,1540,6.723,1541,5.32,1542,5.32,1543,7.685,1544,5.32,1545,6.693,1546,4.558,1547,5.32,1548,5.32,1549,5.32,1550,5.32,1551,5.32]],["title/injectables/Effects.html",[481,1.328,552,3.175]],["body/injectables/Effects.html",[3,0.064,4,0.074,5,0.074,10,1.215,14,0.467,15,0.007,16,0.074,19,0.006,20,0.006,45,1.622,46,1.307,55,1.622,56,1.237,64,0.661,66,0.862,67,0.621,481,2.305,483,2.905,552,5.509,893,2.905,1214,4.819,1215,6.376,1259,4.367,1552,6.709,1553,6.709]],["title/injectables/Effects-1.html",[73,1.637,481,1.105,552,2.642]],["body/injectables/Effects-1.html",[3,0.064,4,0.074,5,0.074,10,1.215,14,0.467,15,0.007,16,0.074,19,0.006,20,0.006,45,1.622,46,1.307,55,1.622,56,1.237,64,0.661,66,0.862,67,0.621,481,2.305,483,2.905,552,5.509,893,2.905,1214,4.819,1215,6.376,1259,4.367,1554,6.709,1555,6.709]],["title/pipes/EffortPipe.html",[1246,2.016,1556,3.546]],["body/pipes/EffortPipe.html",[3,0.057,4,0.066,5,0.066,10,1.09,13,0.757,14,0.419,15,0.007,16,0.066,19,0.005,20,0.005,28,1.783,31,1.926,39,1.455,45,1.455,46,1.172,49,2.156,55,1.455,56,1.523,58,1.429,63,2.806,64,0.493,66,0.773,67,0.557,217,2.806,273,1.965,295,5.351,297,1.654,317,4.584,612,2.731,878,4.367,1246,3.271,1359,5.351,1556,5.755,1557,3.478,1558,6.017,1559,7.554,1560,3.609,1561,5.755,1562,7.701,1563,6.017,1564,4.104,1565,3.754,1566,6.017,1567,6.017,1568,5.351]],["title/pipes/EscapeHtmlPipe.html",[1246,2.016,1569,3.546]],["body/pipes/EscapeHtmlPipe.html",[3,0.061,4,0.07,5,0.07,10,1.152,15,0.007,16,0.07,19,0.006,20,0.006,28,1.886,31,2.037,39,1.539,46,1.239,55,1.539,56,1.562,58,1.511,64,0.641,66,0.817,67,0.589,226,4.143,227,3.97,284,3.678,297,1.749,612,2.301,878,4.521,893,2.755,1246,3.387,1557,3.678,1560,3.816,1565,3.97,1569,5.958,1570,6.363,1571,7.821,1572,5.618,1573,6.363,1574,6.955,1575,6.363,1576,6.363]],["title/interfaces/FileSystemInterface.html",[0,0.211,1577,3.8]],["body/interfaces/FileSystemInterface.html",[0,0.165,2,0.737,3,0.035,4,0.04,5,0.04,7,0.269,10,1.417,11,3.861,13,1.045,14,0.616,15,0.007,16,0.04,19,0.004,20,0.004,39,1.298,46,1.524,49,2.003,55,1.892,56,1.443,58,1.971,59,2.247,173,6.345,180,3.493,195,2.938,217,2.385,245,5.158,297,2.15,448,4.266,451,7.211,463,4.38,467,4.57,616,4.598,626,3.102,637,4.087,701,3.854,985,6.242,1577,4.38,1578,8.087,1579,3.647,1580,3.854,1581,4.38,1582,4.771,1583,5.73,1584,5.366,1585,5.73,1586,3.647,1587,5.366,1588,5.366,1589,6.773,1590,3.647,1591,5.366,1592,5.366,1593,5.366,1594,3.647,1595,4.38,1596,5.366,1597,3.647,1598,7.019,1599,5.366,1600,3.647,1601,5.366,1602,3.647,1603,5.366,1604,4.38]],["title/injectables/FileSystemService.html",[164,2.515,481,1.328]],["body/injectables/FileSystemService.html",[3,0.035,4,0.04,5,0.092,7,0.267,8,0.531,10,1.414,11,1.791,13,1.148,14,0.589,15,0.007,16,0.04,19,0.004,20,0.004,35,1.9,39,1.293,45,0.877,46,1.614,49,1.525,55,1.888,56,1.44,58,2.096,64,0.438,66,0.466,67,0.336,140,2.62,163,4.363,164,2.888,173,4.558,195,2.643,245,4.514,297,2.22,448,2.498,465,1.843,467,3.48,468,2.362,481,1.525,483,1.571,497,1.9,616,3.456,626,4.667,637,4.072,671,2.362,676,2.475,689,4.36,715,4.753,735,3.09,893,1.571,1154,3.226,1389,4.363,1447,3.839,1580,5.029,1581,4.363,1583,4.363,1585,4.363,1589,5.715,1605,7.521,1606,3.628,1607,5.345,1608,5.345,1609,5.345,1610,4.753,1611,3.628,1612,5.715,1613,5.345,1614,5.345,1615,4.753,1616,3.628,1617,7.808,1618,5.345,1619,3.628,1620,4.753,1621,3.628,1622,5.345,1623,3.628,1624,5.345,1625,5.345,1626,3.628,1627,3.628,1628,3.628,1629,5.345,1630,6.346,1631,3.628,1632,3.628,1633,2.962,1634,3.628,1635,3.628,1636,3.628,1637,3.628,1638,3.628,1639,3.628]],["title/injectables/FileSystemWebService.html",[481,1.328,1612,3.8]],["body/injectables/FileSystemWebService.html",[3,0.034,4,0.04,5,0.04,7,0.266,8,0.529,10,1.46,13,0.454,14,0.519,15,0.007,16,0.04,19,0.004,20,0.004,28,1.07,39,1.288,45,0.873,46,1.611,48,1.202,49,1.03,55,1.949,56,1.487,58,1.851,59,2.025,64,0.572,66,0.464,67,0.334,140,3.805,145,2.194,173,6.067,195,2.473,217,1.81,273,1.646,284,3.657,297,1.92,382,4.357,384,2.35,418,2.107,430,3.459,448,3.481,465,1.834,467,3.467,481,1.519,483,1.563,497,1.89,612,1.305,616,3.677,689,4.716,701,3.825,735,3.657,893,1.563,974,2.946,976,3.632,1001,5.701,1004,5.165,1005,5.165,1006,5.165,1007,5.165,1008,5.165,1009,4.347,1010,4.056,1011,4.82,1012,2.75,1014,5.165,1015,5.165,1389,5.165,1577,4.347,1580,3.825,1581,4.347,1582,4.735,1583,4.347,1585,2.946,1589,5.165,1605,7.511,1612,4.347,1615,4.735,1620,4.735,1640,3.61,1641,5.626,1642,5.325,1643,3.61,1644,5.325,1645,3.61,1646,3.61,1647,5.325,1648,3.61,1649,5.325,1650,3.61,1651,5.325,1652,3.61,1653,5.325,1654,3.61,1655,3.61,1656,3.21,1657,3.21,1658,3.21,1659,3.61,1660,3.61,1661,3.61,1662,3.61,1663,3.61,1664,3.61,1665,3.61]],["title/interfaces/GetAddressBookOut.html",[0,0.211,1666,3.8]],["body/interfaces/GetAddressBookOut.html",[0,0.308,2,1.372,3,0.065,4,0.075,5,0.075,7,0.6,8,0.809,9,3.558,11,3.354,12,3.175,13,1.097,14,0.607,15,0.007,16,0.075,19,0.006,20,0.006,62,1.939,1666,6.644,1667,6.795,1668,8.032,1669,6.2]],["title/interfaces/GetBulkPaymentsIn.html",[0,0.211,1670,3.8]],["body/interfaces/GetBulkPaymentsIn.html",[0,0.299,2,1.333,3,0.063,4,0.073,5,0.073,7,0.487,8,0.795,13,1.126,14,0.557,15,0.007,16,0.073,19,0.006,20,0.006,62,2.456,190,4.504,240,4.504,314,3.17,582,3.567,583,3.567,1453,5.872,1670,6.53,1671,6.603,1672,8.946,1673,8.946,1674,6.603,1675,5.39]],["title/interfaces/GetBulkPaymentsOut.html",[0,0.211,1676,3.8]],["body/interfaces/GetBulkPaymentsOut.html",[0,0.316,2,1.409,3,0.067,4,0.077,5,0.077,7,0.514,8,0.821,14,0.486,15,0.007,16,0.077,19,0.006,20,0.006,64,0.571,1675,7.437,1676,6.748,1677,6.976,1678,6.214,1679,6.203]],["title/interfaces/GetPaymentsIn.html",[0,0.211,1680,3.8]],["body/interfaces/GetPaymentsIn.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,12,4.271,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,1680,6.789,1681,7.046]],["title/interfaces/GetPaymentsOut.html",[0,0.211,1682,3.8]],["body/interfaces/GetPaymentsOut.html",[0,0.316,2,1.409,3,0.067,4,0.077,5,0.077,7,0.514,8,0.821,14,0.486,15,0.007,16,0.077,19,0.006,20,0.006,64,0.571,1675,7.437,1678,6.214,1679,6.203,1682,6.748,1683,6.976]],["title/interfaces/GetTransfersIn.html",[0,0.211,1684,3.175]],["body/interfaces/GetTransfersIn.html",[0,0.225,2,1,3,0.047,4,0.055,5,0.055,7,0.365,8,0.661,10,1.725,11,2.445,14,0.625,15,0.007,16,0.055,19,0.005,20,0.005,34,1.555,62,2.465,180,3.225,217,3.258,228,5.434,314,3.859,318,5.434,370,3.259,1249,3.558,1684,4.54,1685,4.954,1686,6.654,1687,5.891,1688,7.149,1689,7.149,1690,7.149,1691,6.204,1692,6.58,1693,6.657,1694,6.657]],["title/interfaces/GetTransfersOut.html",[0,0.211,1695,3.031]],["body/interfaces/GetTransfersOut.html",[0,0.269,2,1.198,3,0.057,4,0.066,5,0.066,7,0.437,8,0.744,10,1.716,14,0.6,15,0.007,16,0.066,19,0.005,20,0.005,64,0.613,217,3.019,370,3.251,566,4.18,567,3.701,1687,5.877,1691,6.189,1692,6.564,1695,4.874,1696,5.932,1697,6.586,1698,5.932]],["title/pipes/HashLinkPipe.html",[1246,2.016,1699,3.546]],["body/pipes/HashLinkPipe.html",[3,0.055,4,0.063,5,0.063,10,1.328,13,1.151,14,0.593,15,0.007,16,0.063,19,0.005,20,0.005,28,1.7,31,1.837,39,1.388,45,1.388,46,1.428,48,1.911,49,1.637,55,1.773,56,1.57,58,1.741,64,0.47,66,0.737,67,0.532,145,2.542,284,4.237,297,2.015,572,3.58,612,2.075,808,3.58,878,4.237,1246,3.174,1557,3.317,1560,3.441,1565,3.58,1572,5.265,1699,5.584,1700,5.738,1701,7.33,1702,5.738,1703,7.33,1704,8.511,1705,5.738,1706,5.738,1707,6.518,1708,4.684,1709,5.738,1710,5.102,1711,5.738]],["title/pipes/HashRatePipe.html",[848,3.175,1246,2.016]],["body/pipes/HashRatePipe.html",[3,0.051,4,0.059,5,0.059,10,0.965,13,1.042,14,0.371,15,0.007,16,0.059,19,0.005,20,0.005,28,1.58,31,1.706,39,1.289,45,1.289,46,1.038,48,1.775,49,1.521,55,1.289,56,1.438,58,1.266,62,2.225,63,2.813,64,0.572,66,0.685,67,0.494,217,2.65,226,3.47,227,3.326,273,1.387,284,5.098,297,1.921,612,2.527,676,3.636,848,4.767,878,4.04,931,5.705,1246,3.026,1316,5.324,1470,4.74,1516,3.636,1539,4.351,1557,3.081,1560,3.197,1564,3.636,1565,3.326,1568,4.74,1572,5.02,1574,4.74,1712,5.331,1713,7.36,1714,5.331,1715,5.331,1716,5.331,1717,4.74,1718,5.331,1719,4.061,1720,6.989,1721,5.331]],["title/interfaces/Height.html",[0,0.211,314,2.235]],["body/interfaces/Height.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,62,2.525,314,4.538,1722,7.046]],["title/interfaces/IncomingTransfersIn.html",[0,0.211,1723,3.8]],["body/interfaces/IncomingTransfersIn.html",[0,0.31,2,1.381,3,0.065,4,0.076,5,0.076,7,0.504,8,0.812,14,0.477,15,0.007,16,0.076,19,0.006,20,0.006,250,6.656,1723,6.67,1724,6.84,1725,9.052,1726,8.738]],["title/interfaces/IncomingTransfersOut.html",[0,0.211,1727,3.8]],["body/interfaces/IncomingTransfersOut.html",[0,0.265,2,1.178,3,0.056,4,0.064,5,0.064,7,0.43,8,0.736,13,1.078,14,0.616,15,0.007,16,0.064,19,0.005,20,0.005,62,2.675,217,2.91,248,3.257,582,4.398,583,4.398,584,3.639,597,5.136,605,3.152,655,3.639,823,4.19,1397,6.047,1537,5.841,1686,4.19,1727,6.047,1728,5.834,1729,8.563,1730,6.99,1731,8.563,1732,5.834,1733,5.834,1734,5.834,1735,5.187,1736,5.834]],["title/interfaces/IntegratedAddress.html",[0,0.211,1737,3.8]],["body/interfaces/IntegratedAddress.html",[0,0.307,2,1.368,3,0.065,4,0.075,5,0.075,7,0.499,8,0.807,9,4.831,12,4.216,13,1.095,14,0.566,15,0.007,16,0.075,19,0.006,20,0.006,64,0.555,1737,6.631,1738,6.773,1739,9.023]],["title/classes/LTHN.html",[33,1.379,67,0.431]],["body/classes/LTHN.html",[0,0.353,3,0.044,4,0.051,5,0.051,7,0.339,8,0.628,10,1.146,12,2.148,13,1.11,15,0.007,16,0.096,17,2.757,19,0.005,20,0.005,33,2.144,35,2.406,46,0.895,48,1.531,49,1.312,62,2.41,63,2.15,64,0.592,67,0.586,178,3.657,217,2.649,248,2.566,273,1.196,297,1.263,418,2.409,453,1.734,509,2.148,556,3.794,557,3.135,558,3.135,559,4.71,560,5.315,561,3.135,562,3.135,565,2.992,566,3.532,567,2.867,568,3.794,569,3.135,570,3.135,571,4.119,572,2.867,573,2.992,574,3.135,575,4.934,576,3.135,577,3.135,578,3.135,579,2.867,580,2.992,581,2.657,582,3.908,583,3.908,584,3.947,585,2.992,586,2.992,587,2.757,588,2.867,589,2.206,590,2.867,591,2.867,592,2.867,593,2.757,594,2.657,595,2.757,596,2.757,597,2.757,598,2.757,599,2.657,600,2.757,601,2.867,602,2.757,603,2.867,604,2.867,605,3.908,606,2.867,607,1.812,608,2.867,609,3.135,610,3.135,611,2.992,612,1.662,613,2.867,614,2.757,615,2.483,616,3.123,617,2.808,618,2.757,619,2.992,1740,4.596]],["title/interfaces/LogEntry.html",[0,0.211,1741,3.8]],["body/interfaces/LogEntry.html",[0,0.366,2,1.35,3,0.064,4,0.074,5,0.074,7,0.493,8,0.801,13,1.189,14,0.562,15,0.007,16,0.089,19,0.006,20,0.006,507,4.561,1741,6.58,1742,5.947,1743,7.334,1744,7.989,1745,5.459]],["title/components/LoginComponent.html",[21,0.957,93,1.719]],["body/components/LoginComponent.html",[3,0.033,4,0.039,5,0.039,7,0.258,8,0.518,10,0.635,13,0.441,14,0.363,15,0.007,16,0.039,19,0.004,20,0.004,21,1.279,22,1.323,23,2.056,24,1.415,25,1.383,26,1.415,31,1.123,32,3.568,33,2.787,34,2.421,36,2.01,39,1.261,43,2.392,45,0.848,46,1.556,48,2.294,49,1.965,55,0.848,56,1.27,58,1.238,59,1.123,64,0.564,66,0.451,67,0.325,77,1.353,78,2.103,79,2.056,80,1.323,81,2.778,82,1.415,83,1.415,84,1.295,85,1.415,86,1.383,87,3.096,88,1.415,89,1.323,90,1.415,91,1.323,92,1.415,93,2.543,94,1.415,95,1.323,96,1.415,97,1.323,98,1.415,99,1.323,100,1.415,101,1.295,102,1.242,103,1.415,104,1.323,105,1.415,106,1.323,107,1.415,108,1.323,109,1.415,110,1.383,111,1.216,112,1.415,113,1.323,114,1.415,115,1.295,116,1.415,117,1.925,118,2.103,119,1.323,120,1.415,121,1.323,122,1.415,123,1.295,124,1.415,125,1.295,126,1.415,127,1.295,128,1.383,129,1.295,130,1.383,131,1.415,145,1.216,154,5.199,225,1.448,369,1.482,418,2.569,449,5.893,468,2.283,617,3.266,625,5.26,639,4.414,668,3.119,670,3.119,671,3.393,684,1.958,689,3.473,893,1.519,1201,4.131,1687,3.555,1746,3.507,1747,5.213,1748,5.078,1749,6.887,1750,6.887,1751,3.507,1752,5.213,1753,3.507,1754,3.507,1755,5.199,1756,3.507,1757,3.507,1758,3.507,1759,3.507,1760,6.221,1761,3.507,1762,2.672,1763,2.863,1764,5.213,1765,5.213]],["title/components/LogsComponent.html",[21,0.957,95,1.757]],["body/components/LogsComponent.html",[3,0.042,4,0.049,5,0.049,7,0.327,15,0.007,16,0.049,19,0.004,20,0.004,21,1.459,22,1.672,23,2.433,24,1.788,25,1.747,26,1.788,28,1.828,29,3.149,31,1.419,32,3.647,33,2.853,34,2.622,36,2.379,39,1.492,41,3.405,45,1.716,46,1.201,56,1.309,58,1.052,59,1.975,64,0.363,66,0.569,67,0.411,77,1.709,78,2.488,79,2.433,80,1.672,81,3.095,82,1.788,83,1.788,84,1.637,85,1.788,86,1.747,87,3.354,88,1.788,89,1.672,90,1.788,91,1.672,92,1.788,93,1.637,94,1.788,95,2.895,96,1.788,97,1.672,98,1.788,99,1.672,100,1.788,101,1.637,102,1.569,103,1.788,104,1.672,105,1.788,106,1.672,107,1.788,108,1.672,109,1.788,110,1.747,111,1.537,112,1.788,113,1.672,114,1.788,115,1.637,116,1.788,117,2.278,118,2.488,119,1.672,120,1.788,121,1.672,122,1.788,123,1.637,124,1.788,125,1.637,126,1.788,127,1.637,128,1.747,129,1.637,130,1.747,131,1.788,133,2.394,136,3.23,507,4.207,1766,4.431,1767,7.096,1768,6.169,1769,4.431,1770,4.431]],["title/modules/LogsModule.html",[353,1.719,1771,3.344]],["body/modules/LogsModule.html",[3,0.058,4,0.067,5,0.067,15,0.007,16,0.067,19,0.005,20,0.005,21,1.241,64,0.71,66,0.775,67,0.559,95,3.638,225,2.491,273,1.57,355,2.093,356,3.124,368,3.277,369,2.551,370,2.277,372,2.984,373,2.228,375,2.795,376,2.984,377,2.182,434,3.277,443,3.845,444,4.201,448,2.82,507,4.116,959,3.159,1771,6.641,1772,5.366,1773,5.366,1774,5.366,1775,6.035,1776,6.035]],["title/interfaces/LogsState.html",[0,0.211,1745,3.8]],["body/interfaces/LogsState.html",[0,0.371,2,1.381,3,0.065,4,0.076,5,0.076,7,0.504,8,0.812,13,1.165,14,0.477,15,0.007,16,0.09,19,0.006,20,0.006,507,6.174,1741,5.583,1742,6.082,1743,5.583,1744,6.082,1745,6.67]],["title/interfaces/MakeIntegratedAddressIn.html",[0,0.211,1777,3.8]],["body/interfaces/MakeIntegratedAddressIn.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,12,4.271,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,1777,6.789,1778,7.046]],["title/interfaces/MakeUriIn.html",[0,0.211,568,2.792]],["body/interfaces/MakeUriIn.html",[0,0.257,2,1.143,3,0.054,4,0.063,5,0.063,7,0.417,8,0.722,9,4.833,10,1.703,12,3.957,13,1.198,14,0.61,15,0.007,16,0.063,19,0.005,20,0.005,56,1.044,62,2.29,64,0.464,556,3.395,568,4.358,572,3.532,573,3.685,602,3.395,688,3.058,1420,4.621,1537,5.973,1539,4.621,1678,4.956,1779,5.661,1780,8.468,1781,8.468,1782,5.034,1783,5.034,1784,5.661,1785,5.661,1786,5.661,1787,5.661,1788,5.661]],["title/pipes/MarkdownPipe.html",[1246,2.016,1789,3.546]],["body/pipes/MarkdownPipe.html",[3,0.06,4,0.069,5,0.069,10,1.135,14,0.437,15,0.007,16,0.069,19,0.006,20,0.006,28,1.858,31,2.007,39,1.516,46,1.221,49,2.4,55,1.516,56,1.551,58,1.489,63,2.13,64,0.635,66,0.805,67,0.581,297,2.13,878,4.48,1246,3.355,1557,3.624,1560,3.76,1561,5.903,1564,4.275,1789,5.903,1790,6.268,1791,7.749,1792,8.412,1793,6.268,1794,6.891,1795,5.574,1796,6.268]],["title/components/ModalComponent.html",[21,0.957,97,1.757]],["body/components/ModalComponent.html",[3,0.032,4,0.037,5,0.037,7,0.245,8,0.498,10,0.603,14,0.42,15,0.007,16,0.037,19,0.004,20,0.004,21,1.24,22,1.256,23,1.977,24,1.343,25,1.313,26,1.343,28,1.486,29,2.677,31,1.066,32,3.549,33,2.751,34,2.375,36,1.934,39,1.212,41,2.979,45,0.805,46,1.529,50,4.82,55,0.805,56,1.238,58,1.594,59,1.605,64,0.494,65,3.264,66,0.428,67,0.308,77,1.284,78,2.022,79,1.977,80,1.256,81,2.707,82,1.343,83,1.343,84,1.23,85,1.343,86,1.313,87,3.052,88,1.343,89,1.256,90,1.343,91,1.256,92,1.343,93,1.23,94,1.343,95,1.256,96,1.343,97,2.532,98,1.343,99,1.256,100,1.343,101,1.23,102,1.179,103,1.343,104,1.256,105,1.343,106,1.256,107,1.343,108,1.256,109,1.343,110,1.313,111,1.155,112,1.343,113,1.256,114,1.343,115,1.23,116,1.343,117,1.851,118,2.022,119,1.256,120,1.343,121,1.256,122,1.343,123,1.23,124,1.343,125,1.23,126,1.343,127,1.23,128,1.313,129,1.23,130,1.313,131,1.343,140,1.374,145,2.624,210,2.391,222,2.536,239,2.271,273,1.304,297,0.915,374,2.271,418,1.109,465,1.692,481,0.95,667,4.373,689,4.224,735,3.879,808,4.187,893,1.442,933,5.112,1595,4.093,1797,3.329,1798,5.014,1799,5.014,1800,6.03,1801,6.03,1802,6.711,1803,3.329,1804,6.711,1805,5.014,1806,5.014,1807,3.329,1808,3.329,1809,3.329,1810,3.329,1811,6.03,1812,4.458,1813,3.329,1814,6.03,1815,2.961,1816,4.923,1817,3.329,1818,3.329,1819,3.329,1820,3.329,1821,3.329,1822,3.329,1823,3.329,1824,5.014,1825,5.014,1826,3.329,1827,5.014,1828,5.014,1829,3.329,1830,5.014,1831,5.014,1832,5.014]],["title/interfaces/ModalConfig.html",[0,0.211,1816,3.8]],["body/interfaces/ModalConfig.html",[0,0.22,2,0.977,3,0.046,4,0.053,5,0.053,7,0.357,8,0.651,10,1.742,13,1.138,14,0.518,15,0.007,16,0.053,19,0.005,20,0.005,39,1.585,46,1.738,58,2.119,217,3.227,667,5.158,1816,5.349,1833,4.84,1834,7.963,1835,7.963,1836,7.963,1837,7.963,1838,7.963,1839,7.963,1840,7.963,1841,7.963,1842,7.963,1843,7.963,1844,7.963,1845,4.84,1846,4.84,1847,4.84,1848,4.84,1849,4.84,1850,4.84,1851,4.84,1852,4.84]],["title/modules/ModalModule.html",[353,1.719,1853,3.344]],["body/modules/ModalModule.html",[3,0.059,4,0.069,5,0.069,15,0.007,16,0.069,19,0.006,20,0.006,64,0.686,66,0.798,67,0.576,97,3.636,355,2.155,356,3.181,368,3.337,369,2.626,370,2.344,372,3.039,373,2.294,375,2.846,376,3.039,377,2.246,434,3.337,1853,6.683,1854,5.525,1855,5.525,1856,5.525,1857,6.213,1858,5.525]],["title/injectables/NetworkHashrateChart.html",[481,1.328,1115,3.8]],["body/injectables/NetworkHashrateChart.html",[3,0.025,4,0.066,5,0.029,7,0.384,8,0.417,10,0.759,13,0.747,14,0.537,15,0.007,16,0.029,19,0.003,20,0.003,28,0.783,39,1.014,46,1.539,48,2.294,49,2.06,55,1.014,56,0.773,58,1.409,59,1.669,63,2.867,64,0.486,66,0.34,67,0.245,71,1.721,73,1.772,77,1.617,140,3.589,157,2.515,174,2.73,195,2.798,273,1.091,297,1.153,343,4.635,350,5.755,404,1.528,416,1.803,430,1.861,453,2.826,481,1.197,483,1.144,497,1.384,524,1.898,559,2.73,607,2.056,611,1.721,612,2.857,717,2.157,769,6.451,772,3.729,773,5.277,774,4.844,776,2.35,777,3.43,779,2.35,782,3.729,785,2.35,786,2.35,787,3.194,788,3.729,789,2.35,790,2.35,791,2.35,792,2.35,793,2.157,794,2.35,795,2.35,796,2.35,797,2.013,798,3.971,799,2.35,800,4.255,801,2.35,802,3.729,803,2.35,804,3.729,805,4.255,806,5.277,807,4.635,808,2.616,809,4.635,810,5.277,811,3.729,812,3.729,863,3.012,931,3.423,937,3.729,1049,3.423,1052,3.729,1053,3.423,1093,3.423,1115,3.423,1138,3.194,1164,3.729,1175,4.635,1261,2.157,1468,3.729,1516,4.923,1859,5.934,1860,2.643,1861,5.213,1862,5.213,1863,7.218,1864,2.643,1865,2.643,1866,2.643,1867,2.643,1868,4.193,1869,5.213,1870,5.213,1871,2.643,1872,2.643,1873,4.193,1874,2.643,1875,4.193,1876,2.643,1877,2.643,1878,2.643,1879,2.643,1880,2.643,1881,2.643,1882,2.643,1883,2.643,1884,2.643,1885,2.643,1886,2.643,1887,4.193,1888,2.643,1889,2.643,1890,3.729,1891,2.643,1892,2.643,1893,4.193,1894,2.35,1895,2.643,1896,2.643,1897,3.729,1898,3.194,1899,4.193,1900,4.193,1901,4.193,1902,4.193,1903,2.643,1904,2.643,1905,4.193,1906,4.193,1907,4.193,1908,4.193,1909,2.643,1910,4.193,1911,2.643,1912,2.643,1913,4.193,1914,2.643,1915,2.643,1916,2.35,1917,2.643,1918,2.643,1919,2.643,1920,2.643,1921,2.643,1922,2.643,1923,2.643,1924,2.643,1925,2.643,1926,2.643,1927,2.643,1928,2.643,1929,2.643,1930,2.643,1931,2.643,1932,2.643,1933,2.643,1934,2.643,1935,2.643,1936,2.643]],["title/components/NewComponent.html",[21,0.957,99,1.757]],["body/components/NewComponent.html",[3,0.031,4,0.036,5,0.036,7,0.241,8,0.492,10,0.594,14,0.464,15,0.007,16,0.036,19,0.004,20,0.004,21,1.228,22,1.237,23,1.954,24,1.322,25,1.292,26,1.322,28,1.468,29,2.651,31,1.049,32,3.543,33,2.765,34,2.836,36,1.911,39,1.198,41,2.955,45,0.793,46,1.465,55,0.793,56,1.228,58,1.177,59,1.912,64,0.586,66,0.421,67,0.304,77,1.264,78,1.999,79,1.954,80,1.237,81,2.686,82,1.322,83,1.322,84,1.21,85,1.322,86,1.292,87,3.039,88,1.322,89,1.237,90,1.322,91,1.237,92,1.322,93,1.21,94,1.322,95,1.237,96,1.322,97,1.237,98,1.322,99,2.512,100,1.322,101,1.21,102,1.16,103,1.322,104,1.237,105,1.322,106,1.237,107,1.322,108,1.237,109,1.322,110,1.292,111,1.137,112,1.322,113,1.237,114,1.322,115,1.21,116,1.322,117,1.83,118,1.999,119,1.237,120,1.322,121,1.237,122,1.322,123,1.21,124,1.322,125,1.21,126,1.322,127,1.21,128,1.292,129,1.21,130,1.292,131,1.322,145,1.137,160,5.031,167,3.993,178,1.895,418,2.381,616,1.618,617,3.568,618,3.993,684,1.83,893,1.419,1580,3.559,1755,5.461,1762,3.774,1937,3.278,1938,4.955,1939,5.312,1940,5.973,1941,3.278,1942,4.541,1943,4.955,1944,4.955,1945,3.278,1946,3.278,1947,3.278,1948,3.278,1949,2.497,1950,2.675,1951,2.914,1952,3.278,1953,3.278,1954,2.914,1955,3.278,1956,3.278,1957,3.278,1958,3.278,1959,3.278,1960,3.278,1961,3.278,1962,4.955,1963,4.406,1964,4.406,1965,5.435,1966,4.044,1967,4.955]],["title/components/NoDaemonRunningDialog.html",[21,0.957,101,1.719]],["body/components/NoDaemonRunningDialog.html",[0,0.169,3,0.035,4,0.041,5,0.041,7,0.274,8,0.541,10,0.673,13,0.685,14,0.449,15,0.007,16,0.06,19,0.004,20,0.004,21,1.323,22,1.403,23,2.146,24,1.5,25,1.466,26,1.5,31,1.19,32,3.59,33,2.805,34,2.473,36,2.099,39,1.316,45,1.316,46,1.38,55,0.899,56,1.391,58,0.883,59,1.742,64,0.446,66,0.478,67,0.344,77,1.434,78,2.195,79,2.146,80,1.403,81,2.858,82,1.5,83,1.5,84,1.373,85,1.5,86,1.466,87,3.36,88,1.5,89,1.403,90,1.5,91,1.403,92,1.5,93,1.373,94,1.5,95,1.403,96,1.5,97,1.403,98,1.5,99,1.403,100,1.5,101,2.616,102,2.279,103,1.5,104,1.403,105,1.5,106,1.403,107,1.5,108,1.403,109,1.5,110,1.466,111,1.29,112,1.5,113,1.403,114,1.5,115,1.373,116,1.5,117,2.01,118,2.195,119,1.403,120,1.5,121,1.403,122,1.5,123,1.373,124,1.5,125,1.373,126,1.5,127,1.373,128,1.466,129,1.373,130,1.466,131,1.5,140,3.251,195,2.669,197,6.113,210,2.671,589,2.612,696,5.783,703,4.839,982,4.839,1078,2.671,1419,4.839,1540,6.154,1541,6.704,1542,3.306,1543,3.306,1544,3.306,1545,6.704,1546,2.832,1547,4.839,1548,6.3,1549,4.839,1550,6.3,1551,3.306,1968,3.718,1969,3.718,1970,3.718,1971,3.718,1972,3.718,1973,5.442,1974,4.839,1975,4.839,1976,5.442,1977,5.442]],["title/components/OpenComponent.html",[21,0.957,104,1.757]],["body/components/OpenComponent.html",[3,0.029,4,0.034,5,0.034,7,0.226,8,0.467,10,0.852,13,0.991,14,0.483,15,0.007,16,0.034,19,0.003,20,0.003,21,1.178,22,1.156,23,1.855,24,1.235,25,1.208,26,1.235,28,1.394,29,2.543,31,0.98,32,3.516,33,2.742,34,2.804,36,1.815,39,1.138,41,2.853,43,3.209,45,0.741,46,1.485,48,1.908,49,1.635,50,3.379,55,1.138,56,1.569,58,1.361,59,1.834,64,0.6,65,3.063,66,0.393,67,0.284,77,1.181,78,1.898,79,1.855,80,1.156,81,2.593,82,1.235,83,1.235,84,1.131,85,1.235,86,1.208,87,2.981,88,1.235,89,1.156,90,1.235,91,1.156,92,1.235,93,1.131,94,1.235,95,1.156,96,1.235,97,1.156,98,1.235,99,1.156,100,1.235,101,1.131,102,1.084,103,1.235,104,2.426,105,1.235,106,1.156,107,1.235,108,1.156,109,1.235,110,1.208,111,1.062,112,1.235,113,1.156,114,1.235,115,1.131,116,1.235,117,1.738,118,1.898,119,1.156,120,1.235,121,1.156,122,1.235,123,1.131,124,1.235,125,1.131,126,1.235,127,1.131,128,1.208,129,1.131,130,1.208,131,1.235,140,2.365,145,1.632,160,4.392,162,3.564,167,3.856,170,2.333,233,1.556,244,2.089,297,0.842,414,2.5,418,2.141,467,3.063,472,2.723,509,3.564,615,1.655,616,3.173,617,3.385,626,2.72,667,1.77,684,1.71,893,1.326,1755,4.516,1965,3.841,1978,3.063,1979,4.705,1980,4.705,1981,2.333,1982,7.626,1983,4.705,1984,3.063,1985,3.063,1986,4.705,1987,3.063,1988,4.184,1989,3.063,1990,3.063,1991,4.705,1992,4.184,1993,3.063,1994,2.5,1995,2.5,1996,3.063,1997,3.063,1998,3.063,1999,3.063,2000,2.723,2001,3.063,2002,4.705,2003,4.705,2004,4.705]],["title/interfaces/OpenWallet.html",[0,0.211,615,2.515]],["body/interfaces/OpenWallet.html",[0,0.353,2,0.924,3,0.044,4,0.051,5,0.051,7,0.337,8,0.627,10,1.142,12,2.138,13,1.16,14,0.44,15,0.007,16,0.095,17,2.745,19,0.005,20,0.005,33,1.869,35,2.396,62,2.407,63,2.144,64,0.591,67,0.584,178,3.646,217,2.644,248,2.555,273,1.19,297,1.258,418,2.404,453,1.727,509,2.138,556,3.783,558,3.121,559,4.106,560,4.923,561,3.121,562,3.121,565,2.979,566,3.522,567,2.855,568,3.783,569,3.121,570,3.121,571,4.106,572,2.855,573,2.979,574,3.121,575,3.121,576,3.121,577,3.121,578,3.121,579,2.855,580,2.979,581,2.645,582,3.899,583,3.899,584,3.935,585,2.979,586,2.979,587,2.745,588,2.855,589,2.197,590,2.855,591,2.855,592,2.855,593,2.745,594,2.645,595,2.745,596,2.745,597,2.745,598,2.745,599,2.645,600,2.745,601,2.855,602,2.745,603,2.855,604,2.855,605,3.899,606,2.855,607,1.805,608,2.855,609,3.121,610,3.121,611,2.979,612,1.655,613,2.855,614,2.745,615,3.408,616,4.028,617,3.622,618,2.745,619,2.979]],["title/classes/PaginatorOptions.html",[67,0.431,2005,3.344]],["body/classes/PaginatorOptions.html",[3,0.053,4,0.062,5,0.062,7,0.41,8,0.715,14,0.587,15,0.007,16,0.079,19,0.005,20,0.005,28,2.131,46,1.639,48,2.804,49,2.402,62,2.71,67,0.666,73,3.558,208,5.166,251,3.799,557,3.799,757,5.871,797,5.479,863,6.046,2005,5.166,2006,4.954,2007,6.502,2008,7.485,2009,7.485,2010,7.485,2011,5.571,2012,6.396,2013,5.571,2014,6.396,2015,5.571,2016,5.571,2017,4.954]],["title/classes/PaginatorOptionsInterface.html",[67,0.431,2007,3.8]],["body/classes/PaginatorOptionsInterface.html",[3,0.056,4,0.065,5,0.065,7,0.431,8,0.737,14,0.597,15,0.007,16,0.082,19,0.005,20,0.005,28,1.733,46,1.67,62,2.728,67,0.687,73,3.137,208,5.33,251,3.99,557,3.99,757,6.058,797,5.653,863,6.157,2005,4.202,2006,5.202,2007,6.653,2008,7.623,2009,7.623,2010,7.623,2012,5.202,2014,5.202,2017,5.202,2018,5.85,2019,5.85,2020,5.85,2021,5.85]],["title/interfaces/ParseUri.html",[0,0.211,613,2.904]],["body/interfaces/ParseUri.html",[0,0.355,2,0.938,3,0.044,4,0.051,5,0.051,7,0.342,8,0.633,10,1.154,12,2.172,13,1.113,14,0.324,15,0.007,16,0.096,17,2.787,19,0.005,20,0.005,33,1.889,35,2.433,62,2.418,63,2.166,64,0.596,67,0.591,178,3.685,217,2.661,248,2.595,273,1.209,297,1.277,418,2.423,453,1.753,509,2.172,556,3.823,558,3.169,559,4.15,560,4.963,561,3.169,562,3.169,565,3.025,566,3.559,567,2.899,568,4.696,569,3.169,570,3.169,571,4.15,572,2.899,573,3.025,574,3.169,575,3.169,576,3.169,577,3.169,578,3.169,579,2.899,580,3.025,581,2.686,582,3.931,583,3.931,584,3.977,585,3.025,586,3.025,587,2.787,588,2.899,589,2.231,590,2.899,591,2.899,592,2.899,593,2.787,594,2.686,595,2.787,596,2.787,597,2.787,598,2.787,599,2.686,600,2.787,601,2.899,602,2.787,603,2.899,604,2.899,605,3.931,606,2.899,607,1.832,608,2.899,609,3.169,610,3.169,611,3.025,612,1.68,613,3.977,614,4.696,615,2.511,616,3.146,617,2.829,618,2.787,619,3.025]],["title/interfaces/Payment.html",[0,0.211,1678,3.175]],["body/interfaces/Payment.html",[0,0.285,2,1.27,3,0.06,4,0.069,5,0.069,7,0.463,8,0.771,12,4.11,13,1.159,14,0.63,15,0.007,16,0.069,19,0.006,20,0.006,62,2.71,593,5.276,1537,6,1678,5.295,1730,7.18,2022,6.287,2023,8.796]],["title/modules/PipesModule.html",[353,1.719,954,2.904]],["body/modules/PipesModule.html",[3,0.041,4,0.048,5,0.048,15,0.007,16,0.048,19,0.004,20,0.004,64,0.74,66,0.555,67,0.4,355,1.499,356,2.502,368,2.625,369,1.827,370,1.631,372,2.39,373,1.596,375,2.239,376,2.39,377,1.563,434,2.625,848,6.221,954,6.066,1556,6.949,1569,6.949,1699,6.949,1789,6.949,2024,3.843,2025,3.843,2026,3.843,2027,6.949,2028,6.949,2029,6.949,2030,6.949,2031,4.322,2032,4.322,2033,4.322,2034,4.322,2035,4.322,2036,4.322,2037,4.322,2038,4.322,2039,4.322,2040,4.322]],["title/interfaces/PluginDefinition.html",[0,0.211,2041,3.546]],["body/interfaces/PluginDefinition.html",[0,0.336,2,1.178,3,0.056,4,0.064,5,0.064,7,0.43,8,0.736,13,1.203,14,0.616,15,0.007,16,0.09,19,0.005,20,0.005,56,1.579,62,1.665,63,1.982,71,3.798,73,2.466,102,3.032,174,3.798,349,4.444,1466,4.444,2041,6.201,2042,4.762,2043,6.99,2044,6.99,2045,6.99,2046,6.523,2047,5.187,2048,5.187,2049,4.762,2050,4.762,2051,4.762,2052,4.762]],["title/interfaces/Plugins.html",[0,0.211,174,3.031]],["body/interfaces/Plugins.html",[0,0.349,2,1.251,3,0.059,4,0.068,5,0.068,7,0.456,8,0.764,13,1.102,14,0.536,15,0.007,16,0.092,19,0.006,20,0.006,56,1.143,62,2.388,63,2.105,71,4.033,73,2.618,102,2.193,174,5.008,349,4.719,1466,4.719,2041,6.666,2042,5.056,2043,5.056,2044,5.056,2045,5.056,2046,5.86,2047,7.781,2048,7.781,2049,5.056,2050,5.056,2051,5.056,2052,5.056]],["title/components/PluginsComponent.html",[21,0.957,106,1.757]],["body/components/PluginsComponent.html",[3,0.037,4,0.043,5,0.043,7,0.289,8,0.562,10,0.71,14,0.394,15,0.007,16,0.043,19,0.004,20,0.004,21,1.493,22,1.479,23,2.23,24,1.581,25,1.545,26,1.581,28,1.676,29,2.944,31,1.255,32,3.608,33,2.82,34,2.813,36,2.181,39,1.367,41,3.223,45,0.948,46,1.292,55,0.948,56,1.339,58,0.931,59,1.81,64,0.595,66,0.503,67,0.363,77,1.511,78,2.281,79,3.163,80,1.479,81,2.929,82,1.581,83,1.581,84,1.447,85,1.581,86,1.545,87,3.309,88,1.581,89,1.479,90,1.581,91,1.479,92,1.581,93,1.447,94,1.581,95,1.479,96,1.581,97,1.479,98,1.581,99,1.479,100,1.581,101,1.447,102,1.388,103,1.581,104,1.479,105,1.581,106,2.74,107,1.581,108,1.479,109,1.581,110,1.545,111,1.359,112,1.581,113,1.479,114,1.581,115,1.447,116,1.581,117,2.088,118,2.281,119,1.479,120,1.581,121,1.479,122,1.581,123,1.447,124,1.581,125,1.447,126,1.581,127,2.088,128,1.545,129,1.447,130,1.545,131,1.581,133,2.117,136,2.96,140,2.738,174,3.681,227,2.445,273,1.019,429,4.615,2053,3.919,2054,6.633,2055,5.654,2056,5.028,2057,7.133,2058,5.53,2059,3.919,2060,3.919,2061,3.919,2062,3.485,2063,3.919,2064,3.199,2065,3.485,2066,3.919,2067,3.919,2068,5.654,2069,3.919,2070,3.919,2071,3.919,2072,6.633,2073,3.919]],["title/modules/PluginsModule.html",[353,1.719,365,3.344]],["body/modules/PluginsModule.html",[3,0.056,4,0.065,5,0.065,15,0.007,16,0.065,19,0.005,20,0.005,64,0.703,66,0.754,67,0.543,106,3.609,355,2.035,356,3.069,365,6.741,368,3.219,369,2.479,370,2.213,372,2.932,373,2.166,375,2.745,376,2.932,377,2.121,433,4.297,434,3.219,2058,6.497,2062,5.216,2074,5.216,2075,5.216,2076,5.216,2077,5.216,2078,5.866,2079,5.866]],["title/injectables/PluginsService.html",[481,1.328,2058,3.344]],["body/injectables/PluginsService.html",[3,0.045,4,0.052,5,0.052,7,0.345,10,1.322,13,1.069,14,0.509,15,0.007,16,0.052,19,0.005,20,0.005,21,0.962,25,2.525,34,2.01,35,3.353,39,1.549,45,1.549,46,1.422,55,1.766,56,1.347,58,1.521,59,2.05,64,0.598,66,0.601,67,0.433,79,2.879,87,2.365,127,1.728,145,2.532,179,3.564,194,3.564,270,3.819,273,2.042,481,1.827,483,2.026,635,3.36,641,3.819,933,4.878,1120,3.564,1291,4.16,1440,4.16,1447,5.244,1499,6.409,2056,4.16,2057,7.551,2058,4.6,2064,3.819,2065,4.16,2080,4.678,2081,6.404,2082,6.404,2083,8.694,2084,8.694,2085,4.678,2086,6.404,2087,4.678,2088,6.404,2089,4.678,2090,6.404,2091,6.404,2092,4.678,2093,6.404,2094,6.404,2095,4.678,2096,4.678,2097,4.678,2098,4.678,2099,6.404,2100,4.678,2101,4.678,2102,4.678,2103,4.678,2104,4.678,2105,4.678,2106,4.678,2107,4.678,2108,4.678]],["title/components/PostComponent.html",[21,0.957,108,1.757]],["body/components/PostComponent.html",[3,0.032,4,0.037,5,0.037,7,0.248,8,0.502,10,0.61,13,0.764,14,0.529,15,0.007,16,0.037,19,0.004,20,0.004,21,1.248,22,1.27,23,1.994,24,1.358,25,1.328,26,1.358,28,1.498,29,2.695,31,1.078,32,3.553,33,2.774,34,2.385,36,1.95,39,1.223,41,2.995,45,0.814,46,1.535,48,2.409,49,2.064,55,0.814,56,1.245,58,0.8,59,1.618,63,1.718,64,0.497,66,0.432,67,0.312,77,1.298,78,2.039,79,1.994,80,1.27,81,2.722,82,1.358,83,1.358,84,1.243,85,1.358,86,1.328,87,3.167,88,1.358,89,1.27,90,1.358,91,1.27,92,1.358,93,1.243,94,1.358,95,1.27,96,1.358,97,1.27,98,1.358,99,1.27,100,1.358,101,1.243,102,1.192,103,1.358,104,1.27,105,1.358,106,1.27,107,1.358,108,2.546,109,1.358,110,1.328,111,1.168,112,1.358,113,1.27,114,1.358,115,1.243,116,1.358,117,1.867,118,2.039,119,1.27,120,1.358,121,1.27,122,1.358,123,1.243,124,1.358,125,1.243,126,1.358,127,1.243,128,1.328,129,1.243,130,1.328,131,1.358,133,1.819,136,2.647,140,3.586,145,2.106,153,2.565,154,4.946,157,4.338,225,1.39,273,1.579,284,3.509,418,1.121,777,1.946,893,1.458,1012,6.002,2109,3.367,2110,6.071,2111,5.056,2112,7.233,2113,4.956,2114,5.056,2115,3.367,2116,3.367,2117,3.367,2118,3.367,2119,3.367,2120,5.399,2121,2.748,2122,2.994,2123,2.994,2124,2.994,2125,2.994,2126,3.367,2127,3.367,2128,3.367,2129,3.367,2130,3.367,2131,3.367,2132,3.367,2133,3.367,2134,3.367,2135,3.367,2136,3.367,2137,3.367,2138,3.367]],["title/modules/PostModule.html",[353,1.719,2139,3.546]],["body/modules/PostModule.html",[3,0.057,4,0.066,5,0.066,15,0.007,16,0.066,19,0.005,20,0.005,21,1.545,64,0.744,66,0.766,67,0.553,108,3.52,225,2.463,273,1.552,355,2.069,356,3.102,368,3.253,369,2.522,370,2.251,372,2.963,373,2.203,375,2.775,376,2.963,377,2.157,443,3.031,444,4.179,448,3.511,681,4.343,682,3.449,954,4.688,959,3.124,2139,6.921,2140,5.305,2141,5.305,2142,5.966,2143,5.966,2144,5.966]],["title/modules/PostRoutingModule.html",[353,1.719,459,3.546]],["body/modules/PostRoutingModule.html",[3,0.062,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,64,0.698,66,0.83,67,0.599,225,2.667,273,1.681,355,2.241,373,2.386,375,2.915,376,3.113,377,2.336,434,2.798,442,4.031,443,4.011,444,4.331,448,3.019,459,6.014,959,3.383,962,4.407,1719,4.922,2145,6.461,2146,6.461,2147,6.461]],["title/components/ProfileComponent.html",[21,0.957,110,1.836]],["body/components/ProfileComponent.html",[3,0.034,4,0.04,5,0.04,7,0.265,8,0.527,13,0.668,14,0.25,15,0.007,16,0.04,19,0.004,20,0.004,21,1.297,22,1.355,23,2.092,24,1.449,25,1.416,26,1.449,28,1.572,29,2.8,31,1.15,32,3.577,33,2.794,34,2.442,36,2.046,39,1.283,41,3.092,45,1.526,46,1.229,48,1.196,49,1.025,56,1.371,58,0.853,59,1.698,64,0.434,66,0.461,67,0.333,73,2.242,77,1.385,78,2.14,79,2.092,80,1.355,81,2.81,82,1.449,83,1.449,84,1.326,85,1.449,86,1.416,87,3.115,88,1.449,89,1.355,90,1.449,91,1.355,92,1.449,93,1.326,94,1.449,95,1.355,96,1.449,97,1.355,98,1.449,99,1.355,100,1.449,101,1.326,102,1.271,103,1.449,104,1.355,105,1.449,106,1.355,107,1.449,108,1.355,109,1.449,110,2.747,111,2.188,112,1.449,113,1.355,114,1.449,115,1.326,116,1.449,117,1.959,118,2.14,119,1.355,120,1.449,121,1.355,122,1.449,123,1.326,124,1.449,125,1.326,126,1.449,127,1.326,128,1.416,129,1.326,130,1.416,131,1.449,133,1.94,136,2.777,140,2.604,165,4.346,197,5.004,248,3.89,452,4.178,508,3.309,509,2.479,589,2.547,635,5.004,702,4.33,787,4.805,2148,3.591,2149,5.926,2150,6.308,2151,5.305,2152,6.308,2153,3.591,2154,3.591,2155,6.308,2156,5.305,2157,6.195,2158,6.308,2159,5.305,2160,5.305,2161,5.305,2162,3.591,2163,3.193,2164,3.193,2165,5.305,2166,5.305,2167,8.261,2168,6.967,2169,6.195]],["title/interfaces/ProfileState.html",[0,0.211,2170,3.8]],["body/interfaces/ProfileState.html",[0,0.256,2,1.14,3,0.054,4,0.062,5,0.062,7,0.416,8,0.721,13,1.198,14,0.624,15,0.007,16,0.062,19,0.005,20,0.005,56,1.338,162,2.638,195,2.569,430,3.755,435,4.055,509,4.089,607,2.861,661,4.608,700,4.301,1365,5.02,1450,4.608,1604,4.608,2149,5.526,2170,5.922,2171,5.646,2172,8.46,2173,8.46,2174,8.46,2175,8.46,2176,7.254,2177,5.646,2178,5.646,2179,5.646,2180,5.646,2181,5.646,2182,5.646,2183,5.646,2184,5.02,2185,5.646,2186,4.301,2187,5.646]],["title/interfaces/QueryKeyIn.html",[0,0.211,2188,3.8]],["body/interfaces/QueryKeyIn.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,2188,6.789,2189,7.046,2190,9.141]],["title/interfaces/QueryKeyOut.html",[0,0.211,2191,3.8]],["body/interfaces/QueryKeyOut.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,607,3.604,2191,6.789,2192,7.046]],["title/pipes/RemoveTrailingZerosPipe.html",[1246,2.016,2027,3.546]],["body/pipes/RemoveTrailingZerosPipe.html",[3,0.055,4,0.064,5,0.064,10,1.045,14,0.402,15,0.007,16,0.064,19,0.005,20,0.005,28,1.71,31,1.847,39,1.395,45,1.395,46,1.124,49,2.434,55,1.395,56,1.494,58,1.37,63,1.961,64,0.473,66,0.741,67,0.534,73,3.723,217,2.752,297,2.022,453,2.776,878,4.252,1246,3.185,1557,3.335,1560,3.46,1561,5.604,1562,7.201,1564,3.935,1565,4.589,1795,5.13,2027,5.604,2193,5.769,2194,7.356,2195,5.769,2196,5.769,2197,7.356,2198,5.769,2199,7.356,2200,5.769]],["title/interfaces/Response.html",[0,0.211,1194,3.546]],["body/interfaces/Response.html",[0,0.262,2,1.168,3,0.055,4,0.064,5,0.064,7,0.426,8,0.732,13,1.135,14,0.565,15,0.007,16,0.081,19,0.005,20,0.005,63,1.966,180,3.766,195,2.048,273,2.109,297,2.229,688,4.763,880,4.407,978,7.592,980,6.504,1194,5.614,1595,6.969,1708,4.722,2201,5.785,2202,5.785,2203,8.817,2204,5.785,2205,4.407,2206,4.722,2207,5.785,2208,5.785,2209,5.785,2210,5.785,2211,5.785,2212,5.785,2213,5.785]],["title/components/RestoreComponent.html",[21,0.957,113,1.757]],["body/components/RestoreComponent.html",[3,0.029,4,0.033,5,0.033,7,0.221,8,0.46,9,2.423,10,1.024,14,0.322,15,0.007,16,0.033,19,0.003,20,0.003,21,1.162,22,1.131,23,1.825,24,1.209,25,1.182,26,1.209,28,1.371,29,2.509,31,0.959,32,3.507,33,2.735,34,2.772,36,1.785,39,1.119,41,2.821,45,0.725,46,1.238,55,1.367,56,1.172,58,1.099,59,1.809,64,0.563,66,0.385,67,0.278,72,3.525,77,1.156,78,1.867,79,1.825,80,1.131,81,2.564,82,1.209,83,1.209,84,1.107,85,1.209,86,1.182,87,2.962,88,1.209,89,1.131,90,1.209,91,1.131,92,1.209,93,1.107,94,1.209,95,1.131,96,1.209,97,1.131,98,1.209,99,1.131,100,1.209,101,1.107,102,1.061,103,1.209,104,1.131,105,1.209,106,1.131,107,1.209,108,1.131,109,1.209,110,1.182,111,1.04,112,1.209,113,2.398,114,1.209,115,1.107,116,1.209,117,1.709,118,1.867,119,1.131,120,1.209,121,1.131,122,1.209,123,1.107,124,1.209,125,1.107,126,1.209,127,1.107,128,1.182,129,1.107,130,1.182,131,1.209,160,5.437,167,3.812,194,3.525,244,2.044,314,2.221,418,2.728,607,2.506,616,2.284,617,3.222,619,3.012,684,1.673,893,1.298,1580,3.324,1755,4.927,1939,2.665,1942,2.044,1949,2.283,1950,2.446,1951,2.665,1954,2.665,1963,4.115,1964,4.115,1965,5.188,1966,3.777,1981,2.283,2214,2.997,2215,4.627,2216,5.652,2217,4.565,2218,4.627,2219,2.997,2220,2.997,2221,5.188,2222,2.997,2223,4.115,2224,2.997,2225,4.115,2226,2.997,2227,4.115,2228,4.115,2229,2.997,2230,2.997,2231,2.997,2232,2.997,2233,2.997,2234,2.997,2235,2.997,2236,2.997,2237,2.997,2238,2.997,2239,2.997,2240,4.627,2241,4.627,2242,4.627,2243,4.627,2244,4.627,2245,4.627,2246,4.627]],["title/interfaces/RestoreWallet.html",[0,0.211,2217,3.344]],["body/interfaces/RestoreWallet.html",[0,0.205,2,0.914,3,0.043,4,0.05,5,0.079,7,0.334,8,0.622,9,4.402,10,1.635,11,2.235,13,1.18,14,0.6,15,0.007,16,0.05,17,4.644,19,0.005,20,0.005,34,2.799,56,1.155,62,2.048,63,2.128,72,5.467,145,2.686,180,2.947,194,5.899,217,2.439,240,4.27,251,4.27,314,3.005,418,2.085,453,2.922,479,4.769,595,3.755,607,3.053,616,3.822,617,3.731,758,3.755,768,5.567,1249,3.252,1447,4.497,1604,5.11,2217,4.497,2223,6.886,2225,6.886,2227,6.886,2228,6.886,2247,4.527,2248,9.026,2249,6.261,2250,6.261,2251,6.261]],["title/components/RootComponent.html",[21,0.957,115,1.719]],["body/components/RootComponent.html",[3,0.018,4,0.021,5,0.021,7,0.139,8,0.315,10,0.341,14,0.434,15,0.007,16,0.021,19,0.002,20,0.002,21,0.847,22,0.71,23,1.252,24,0.759,25,0.742,26,0.759,28,0.941,29,1.827,31,0.602,32,3.275,33,2.541,34,2.14,36,1.224,39,0.768,41,2.146,45,0.768,46,1.55,48,1.371,49,1.945,55,0.455,56,0.892,58,1.555,59,1.729,62,1.869,63,1.079,64,0.621,66,0.242,67,0.174,73,0.795,77,0.726,78,1.28,79,1.252,80,0.71,81,1.95,82,0.759,83,0.759,84,0.695,85,0.759,86,0.742,87,2.518,88,0.759,89,0.71,90,0.759,91,0.71,92,0.759,93,0.695,94,0.759,95,0.71,96,0.759,97,0.71,98,0.759,99,0.71,100,0.759,101,0.695,102,1.458,103,0.759,104,0.71,105,0.759,106,0.71,107,0.759,108,0.71,109,0.759,110,0.742,111,0.652,112,0.759,113,0.71,114,0.759,115,1.786,116,0.759,117,1.172,118,1.28,119,0.71,120,0.759,121,0.71,122,0.759,123,0.695,124,0.759,125,0.695,126,0.759,127,0.695,128,0.742,129,0.695,130,0.742,131,0.759,140,3.367,145,2.272,153,1.433,154,3.813,160,5.509,162,2.913,164,2.612,165,2.569,166,3.473,167,2.9,214,2.808,217,1.643,225,0.777,232,1.174,233,0.956,238,1.087,241,1.128,242,1.087,243,1.536,244,1.283,273,0.826,297,0.873,377,0.68,418,1.057,453,0.71,465,1.613,589,1.524,594,3.122,612,0.68,626,2.38,672,1.673,673,2.822,689,2.299,735,1.087,818,1.433,833,2.957,839,3.661,840,4.781,844,2.957,846,3.473,870,3.516,882,1.433,883,1.673,884,1.536,885,1.673,886,1.673,887,1.536,888,1.536,889,1.673,890,1.225,891,1.225,897,2.822,898,1.673,901,1.673,902,1.433,903,1.673,905,1.673,906,1.673,907,1.673,908,1.673,909,1.673,922,2.822,923,2.822,924,2.822,925,2.822,926,2.822,927,2.822,930,2.822,932,2.822,933,2.418,934,2.418,935,2.418,967,4.3,1078,1.351,1079,1.536,1150,1.673,1316,1.433,1355,2.418,1898,1.433,2120,3.661,2121,1.536,2122,1.673,2123,1.673,2124,1.673,2125,1.673,2252,1.881,2253,3.174,2254,4.117,2255,4.117,2256,4.117,2257,4.835,2258,4.835,2259,4.835,2260,4.835,2261,3.947,2262,3.174,2263,1.881,2264,1.881,2265,1.881,2266,1.881,2267,1.881,2268,1.881,2269,1.881,2270,1.881,2271,1.881,2272,1.881,2273,1.881,2274,1.881,2275,1.881,2276,1.881,2277,1.881,2278,1.881,2279,1.881,2280,1.881,2281,1.881,2282,1.881,2283,1.881,2284,1.881,2285,1.881,2286,3.174,2287,1.881,2288,1.881,2289,1.881,2290,1.881,2291,1.881,2292,1.881,2293,1.881,2294,1.881,2295,1.881,2296,1.881,2297,1.881,2298,1.673,2299,1.881,2300,3.174,2301,1.881,2302,3.174,2303,3.174,2304,3.174,2305,3.174,2306,3.174,2307,3.174,2308,3.174,2309,3.174,2310,3.174,2311,3.174,2312,3.174,2313,3.174,2314,3.174,2315,3.174,2316,3.174,2317,3.174,2318,3.174,2319,3.174,2320,3.174,2321,3.174,2322,3.174,2323,3.174,2324,3.174,2325,3.174,2326,3.174,2327,3.174,2328,3.174,2329,3.174,2330,1.673,2331,1.673]],["title/modules/RootModule.html",[353,1.719,2332,3.344]],["body/modules/RootModule.html",[3,0.049,4,0.057,5,0.057,15,0.007,16,0.057,19,0.005,20,0.005,64,0.786,66,0.663,67,0.478,115,3.227,230,3.219,231,3.219,355,1.79,356,2.824,363,5.96,367,5.452,368,2.962,369,2.181,370,1.947,372,2.698,373,2.526,375,2.526,376,2.698,377,1.866,388,4.454,389,3.36,390,5.584,391,4.212,392,4.914,393,3.707,398,3.955,399,2.983,402,4.268,403,3.095,404,2.983,411,4.589,434,2.234,681,3.955,682,2.983,890,3.36,891,3.36,951,5.584,952,6.083,953,4.212,954,4.268,955,4.212,2332,6.745,2333,4.589,2334,4.589,2335,4.589,2336,6.277,2337,5.16,2338,5.16,2339,5.584,2340,4.212,2341,5.16,2342,6.841,2343,4.589,2344,5.16]],["title/modules/RootRoutingModule.html",[353,1.719,440,3.344]],["body/modules/RootRoutingModule.html",[3,0.056,4,0.064,5,0.064,11,2.872,15,0.007,16,0.064,19,0.005,20,0.005,21,1.196,64,0.739,66,0.747,67,0.539,115,2.731,143,3.787,157,3.489,195,2.06,225,2.401,273,1.513,287,3.787,355,2.018,356,3.053,368,3.202,369,2.459,370,2.195,372,2.294,373,2.731,375,2.731,376,2.916,377,2.103,434,2.519,440,6.484,442,3.629,443,3.757,444,4.13,448,2.718,450,5.173,451,4.749,453,2.195,621,4.814,624,4.178,959,3.046,961,4.432,2332,6.484,2345,5.817,2346,5.817,2347,5.817,2348,5.817,2349,5.817,2350,5.817,2351,5.817,2352,5.817]],["title/components/SettingsComponent.html",[21,0.957,117,1.719]],["body/components/SettingsComponent.html",[3,0.039,4,0.045,5,0.045,7,0.302,8,0.58,13,0.516,14,0.286,15,0.007,16,0.045,19,0.004,20,0.004,21,1.399,22,1.548,23,2.304,24,1.655,25,1.618,26,1.655,28,1.731,29,3.02,31,1.313,32,3.623,33,2.833,34,2.557,36,2.253,39,1.413,41,3.291,45,1.646,46,1.444,48,1.367,49,1.171,56,1.255,58,1.388,59,2.374,64,0.336,66,0.527,67,0.38,77,1.582,78,2.357,79,2.304,80,1.548,81,2.991,82,1.655,83,1.655,84,1.515,85,1.655,86,1.618,87,3.22,88,1.655,89,1.548,90,1.655,91,1.548,92,1.655,93,1.515,94,1.655,95,1.548,96,1.655,97,1.548,98,1.655,99,1.548,100,1.655,101,1.515,102,1.453,103,1.655,104,1.548,105,1.655,106,1.548,107,1.655,108,1.548,109,1.655,110,1.618,111,1.423,112,1.655,113,1.548,114,1.655,115,1.515,116,1.655,117,2.894,118,2.357,119,1.548,120,1.655,121,1.548,122,1.655,123,1.515,124,1.655,125,1.515,126,1.655,127,1.515,128,1.618,129,1.515,130,1.618,131,1.655,133,2.217,136,3.059,311,3.349,508,3.645,833,4.888,846,5.326,919,3.349,2353,4.103,2354,6.805,2355,5.196,2356,6.805,2357,5.843,2358,4.103,2359,4.103,2360,5.843,2361,5.843,2362,4.103]],["title/components/SettingsComponent-1.html",[21,0.796,73,1.637,117,1.431]],["body/components/SettingsComponent-1.html",[3,0.041,4,0.047,5,0.047,7,0.316,15,0.007,16,0.047,19,0.004,20,0.004,21,1.433,22,1.618,23,2.377,24,1.729,25,1.69,26,1.729,28,1.786,29,3.094,31,1.372,32,3.637,33,2.845,34,2.72,36,2.324,39,1.458,41,3.356,45,1.686,46,1.174,56,1.286,58,1.018,59,1.929,64,0.351,66,0.551,67,0.397,73,1.812,75,4.591,77,1.653,78,2.431,79,2.377,80,1.618,81,3.05,82,1.729,83,1.729,84,1.583,85,1.729,86,1.69,87,3.333,88,1.729,89,1.618,90,1.729,91,1.618,92,1.729,93,1.583,94,1.729,95,1.618,96,1.729,97,1.618,98,1.729,99,1.618,100,1.729,101,1.583,102,1.518,103,1.729,104,1.618,105,1.729,106,1.618,107,1.729,108,1.618,109,1.729,110,1.69,111,1.487,112,1.729,113,1.618,114,1.729,115,1.583,116,1.729,117,2.942,118,2.431,119,1.618,120,1.729,121,1.618,122,1.729,123,1.583,124,1.729,125,1.583,126,1.729,127,1.583,128,1.69,129,1.583,130,1.69,131,1.729,430,2.675,508,4.718,509,2.816,748,4.92,749,4.92,750,4.92,751,5.36,752,3.812,753,3.812,2355,5.36,2363,4.287,2364,4.287,2365,4.287]],["title/injectables/SettingsEffects.html",[481,1.328,2366,4.14]],["body/injectables/SettingsEffects.html",[3,0.051,4,0.059,5,0.059,7,0.394,8,0.695,10,0.968,13,1.043,14,0.544,15,0.007,16,0.059,19,0.005,20,0.005,45,1.292,46,1.364,48,1.78,49,1.525,55,1.292,56,0.986,64,0.679,66,0.687,67,0.495,145,1.854,147,6.943,160,4.683,161,6.763,177,5.715,178,4.789,179,5.333,229,4.071,230,3.334,231,3.334,297,1.924,481,1.998,483,2.314,612,2.531,893,2.314,1214,3.839,1215,6.019,1217,6.373,1218,5.715,1244,4.362,1258,4.362,1259,3.479,2366,6.225,2367,5.344,2368,5.344,2369,7.001,2370,6.225,2371,7.001,2372,5.344]],["title/modules/SettingsModule.html",[353,1.719,2373,3.546]],["body/modules/SettingsModule.html",[3,0.048,4,0.056,5,0.056,11,2.486,15,0.007,16,0.056,19,0.005,20,0.005,21,1.036,33,1.493,64,0.775,66,0.647,67,0.467,117,3.273,143,3.279,157,3.021,195,1.783,225,2.079,273,1.31,287,3.279,355,1.747,356,2.779,368,2.915,369,2.129,370,1.9,372,2.655,373,2.486,375,2.486,376,2.655,377,1.821,388,4.382,389,3.279,392,4.835,393,3.618,394,4.835,395,3.618,398,3.891,399,2.912,402,4.2,403,3.021,404,2.912,434,2.181,443,3.42,444,3.852,448,3.146,452,3.021,507,3.435,508,4.2,589,2.418,612,1.821,681,3.891,682,2.912,959,2.637,962,3.435,1771,6.234,2339,5.495,2340,4.111,2373,6.859,2374,4.479,2375,5.037,2376,4.479,2377,5.037,2378,5.986,2379,4.479,2380,4.479,2381,5.495,2382,4.111,2383,5.037,2384,5.037,2385,5.037,2386,4.479,2387,5.037,2388,5.037,2389,5.037]],["title/modules/SettingsRoutingModule.html",[353,1.719,461,3.546]],["body/modules/SettingsRoutingModule.html",[3,0.061,4,0.07,5,0.07,15,0.007,16,0.07,19,0.006,20,0.006,64,0.723,66,0.815,67,0.588,225,2.619,273,1.65,355,2.2,372,2.502,373,2.343,375,2.883,376,3.079,377,2.294,433,3.667,434,2.747,442,3.958,443,3.966,444,4.297,448,2.965,461,5.947,508,3.958,621,5.505,624,4.557,959,3.322,961,4.833,962,4.327,1717,5.641,2390,6.344,2391,6.344,2392,6.344]],["title/interfaces/SettingsState.html",[0,0.211,2393,4.14]],["body/interfaces/SettingsState.html",[0,0.255,2,1.137,3,0.054,4,0.062,5,0.062,7,0.415,8,0.719,13,1.127,14,0.643,15,0.007,16,0.062,19,0.005,20,0.005,178,5.054,200,5.202,217,3.301,863,4.044,1897,5.007,1916,5.007,2393,6.44,2394,5.63,2395,8.451,2396,8.451,2397,8.451,2398,8.451,2399,8.451,2400,8.451,2401,8.451,2402,5.63,2403,5.63]],["title/pipes/ShruggiePipe.html",[1246,2.016,2028,3.546]],["body/pipes/ShruggiePipe.html",[3,0.059,4,0.068,5,0.068,10,1.122,14,0.432,15,0.007,16,0.068,19,0.006,20,0.006,28,1.836,31,1.983,39,1.498,46,1.207,55,1.498,56,1.543,58,1.471,64,0.507,66,0.796,67,0.574,217,2.843,284,5.058,297,2.115,612,2.24,878,4.447,1246,3.331,1516,4.225,1557,3.581,1560,3.715,1564,4.225,1565,3.865,1572,5.525,1710,5.508,1713,7.44,2028,5.86,2404,6.195,2405,7.693,2406,6.195]],["title/interfaces/SplitIntegratedAddressOut.html",[0,0.211,2407,3.8]],["body/interfaces/SplitIntegratedAddressOut.html",[0,0.307,2,1.368,3,0.065,4,0.075,5,0.075,7,0.499,8,0.807,9,4.724,12,4.216,13,1.095,14,0.566,15,0.007,16,0.075,19,0.006,20,0.006,64,0.555,1782,6.023,2407,6.631,2408,6.773,2409,9.023]],["title/components/StatusComponent.html",[21,0.957,119,1.757]],["body/components/StatusComponent.html",[3,0.038,4,0.044,5,0.044,7,0.294,8,0.569,10,0.722,14,0.562,15,0.007,16,0.044,19,0.004,20,0.004,21,1.377,22,1.504,23,2.257,24,1.608,25,1.572,26,1.608,31,1.276,32,3.614,33,2.825,34,2.533,36,2.207,45,0.964,46,1.571,55,0.964,56,1.35,64,0.469,66,0.512,67,0.369,77,1.537,78,2.309,79,2.257,80,1.504,81,2.952,82,1.608,83,1.608,84,1.472,85,1.608,86,1.572,87,3.285,88,1.608,89,1.504,90,1.608,91,1.504,92,1.608,93,1.472,94,1.608,95,1.504,96,1.608,97,1.504,98,1.608,99,1.504,100,1.608,101,1.472,102,2.371,103,1.608,104,1.504,105,1.608,106,1.504,107,1.608,108,1.504,109,1.608,110,1.572,111,1.383,112,1.608,113,1.504,114,1.608,115,1.472,116,1.608,117,2.114,118,2.309,119,2.761,120,1.608,121,1.504,122,1.608,123,1.472,124,1.608,125,1.472,126,1.608,127,1.472,128,1.572,129,1.472,130,1.572,131,1.608,133,2.153,136,2.997,140,2.363,598,3.433,1546,3.037,2410,3.986,2411,6.697,2412,5.724,2413,7.319,2414,6.697,2415,6.697,2416,6.697,2417,6.697,2418,3.986,2419,7.751,2420,5.724,2421,3.986,2422,3.986,2423,3.986,2424,3.986,2425,3.986,2426,5.724,2427,5.724,2428,5.724,2429,7.319,2430,7.319]],["title/modules/StatusModule.html",[353,1.719,366,3.344]],["body/modules/StatusModule.html",[3,0.055,4,0.064,5,0.064,15,0.007,16,0.064,19,0.005,20,0.005,64,0.766,66,0.739,67,0.533,101,3.324,119,3.599,197,4.133,355,1.996,356,3.031,366,6.718,368,3.179,369,2.432,370,2.171,372,2.896,373,2.125,375,2.712,376,2.896,377,2.08,388,4.781,389,3.746,398,4.245,399,3.326,400,5.594,401,4.383,434,3.179,681,4.245,682,3.326,1546,4.383,2431,5.116,2432,5.116,2433,5.116,2434,5.754,2435,5.754,2436,7.343,2437,5.754,2438,5.754]],["title/interfaces/StoreOut.html",[0,0.211,2439,3.8]],["body/interfaces/StoreOut.html",[0,0.333,2,1.482,3,0.07,4,0.081,5,0.081,15,0.007,16,0.081,19,0.006,20,0.006,2439,6.954,2440,7.341]],["title/interfaces/SweepAllIn.html",[0,0.211,2441,3.8]],["body/interfaces/SweepAllIn.html",[0,0.194,2,0.866,3,0.041,4,0.047,5,0.047,7,0.316,8,0.599,9,4.327,10,1.739,11,2.116,12,3.534,13,1.124,14,0.614,15,0.007,16,0.047,19,0.004,20,0.004,35,3.156,62,2.667,63,2.57,140,2.488,180,2.791,217,2.993,297,2.079,540,4.591,566,3.365,582,3.256,583,3.256,587,4.535,588,3.76,589,2.893,590,3.76,591,3.76,592,3.76,593,4.535,594,3.484,595,3.615,596,3.615,597,3.615,598,3.615,599,3.484,600,3.615,601,3.76,602,3.615,603,4.718,604,3.76,605,4.085,608,3.76,868,4.111,1249,3.079,2441,4.92,2442,4.287,2443,3.812,2444,7.562,2445,7.562,2446,7.562,2447,7.562,2448,7.562,2449,6.027]],["title/interfaces/SweepAllOut.html",[0,0.211,2450,3.8]],["body/interfaces/SweepAllOut.html",[0,0.301,2,1.342,3,0.063,4,0.073,5,0.073,7,0.49,8,0.798,13,1.207,14,0.601,15,0.007,16,0.073,19,0.006,20,0.006,2450,6.555,2451,6.645,2452,8.965,2453,7.318,2454,8.965]],["title/interfaces/SweepDustOut.html",[0,0.211,2455,4.14]],["body/interfaces/SweepDustOut.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,2453,7.461,2455,7.395,2456,7.046]],["title/interfaces/Task.html",[0,0.211,2457,3.8]],["body/interfaces/Task.html",[0,0.178,2,0.793,3,0.037,4,0.043,5,0.063,7,0.289,8,0.562,13,1.01,14,0.463,15,0.007,16,0.063,19,0.004,20,0.004,21,1.164,32,1.482,33,1.164,36,1.514,45,0.95,56,1.421,64,0.678,66,0.504,67,0.364,102,2.728,111,1.964,123,1.45,136,2.056,145,2.521,154,4.323,164,3.059,195,1.39,217,2.257,225,1.621,241,2.355,242,2.27,273,2.088,418,2.821,421,3.205,453,1.482,468,2.556,487,2.678,489,3.205,494,2.82,495,2.991,496,2.991,540,4.313,589,1.885,607,1.548,612,2.047,617,3.563,625,4.529,626,3.273,639,4.814,671,2.556,676,3.862,684,2.192,688,2.121,689,2.192,691,4.769,733,3.205,734,3.205,735,4.987,1120,2.991,1476,3.205,1505,4.622,1719,2.991,1748,5.933,1755,5.386,1762,2.991,1763,3.205,2149,2.991,2186,2.991,2221,4.622,2457,5.933,2458,3.492,2459,6.852,2460,3.492,2461,3.492,2462,3.492,2463,3.492,2464,3.492,2465,3.492,2466,3.492,2467,3.492,2468,3.492,2469,3.492,2470,3.492,2471,3.492,2472,3.492,2473,6.852,2474,3.492,2475,3.492,2476,3.492,2477,3.492,2478,3.492,2479,5.905,2480,5.035,2481,5.035,2482,5.035,2483,3.492,2484,3.492,2485,3.205,2486,3.492,2487,3.492,2488,3.492,2489,3.492,2490,3.492,2491,3.492,2492,3.492,2493,3.492,2494,3.492,2495,3.492,2496,3.492,2497,3.492,2498,3.492,2499,3.492,2500,3.492]],["title/pipes/TimeAgoPipe.html",[1246,2.016,2029,3.546]],["body/pipes/TimeAgoPipe.html",[3,0.051,4,0.059,5,0.059,10,0.975,13,0.678,14,0.375,15,0.007,16,0.059,19,0.005,20,0.005,28,1.596,31,1.724,39,1.302,45,1.302,46,1.049,49,1.537,55,1.302,56,1.445,58,1.279,62,2.236,64,0.441,66,0.692,67,0.499,273,2.376,297,1.934,418,2.343,612,1.947,665,4.789,878,4.067,935,5.36,1246,3.046,1316,5.36,1557,3.113,1560,3.23,1561,5.36,1565,3.36,1894,4.789,2029,5.36,2501,5.385,2502,5.385,2503,5.385,2504,5.385,2505,7.036,2506,5.385,2507,5.385,2508,5.385,2509,5.385,2510,5.385,2511,7.036,2512,5.385,2513,5.385,2514,5.385,2515,5.385,2516,5.385,2517,5.385,2518,7.036,2519,5.385,2520,7.837,2521,5.385,2522,5.385,2523,5.385,2524,5.385]],["title/pipes/ToCoinPipe.html",[1246,2.016,2030,3.546]],["body/pipes/ToCoinPipe.html",[3,0.06,4,0.069,5,0.069,10,1.135,14,0.437,15,0.007,16,0.069,19,0.006,20,0.006,28,1.858,31,2.007,39,1.516,46,1.221,48,2.088,49,1.789,55,1.516,56,1.551,58,1.489,62,2.4,64,0.513,66,0.805,67,0.581,284,4.862,297,1.723,612,3.041,878,4.48,934,5.903,1246,3.355,1557,3.624,1560,4.648,1565,3.911,1572,4.502,2030,5.903,2525,6.268,2526,8.412,2527,6.268,2528,6.268]],["title/interfaces/Transactions.html",[0,0.211,868,3.175]],["body/interfaces/Transactions.html",[0,0.29,2,1.293,3,0.061,4,0.071,5,0.071,7,0.472,8,0.78,10,1.674,13,1.199,14,0.617,15,0.007,16,0.071,19,0.006,20,0.006,102,3.134,868,5.354,2529,6.402,2530,8.852,2531,8.852,2532,8.852]],["title/components/TransactionsComponent.html",[21,0.957,121,1.757]],["body/components/TransactionsComponent.html",[3,0.027,4,0.031,5,0.031,7,0.205,8,0.433,10,0.503,13,0.549,14,0.531,15,0.007,16,0.031,19,0.003,20,0.003,21,1.108,22,1.049,23,1.721,24,1.121,25,1.096,26,1.121,28,1.293,29,2.391,31,0.89,32,3.474,33,2.708,34,2.518,36,1.683,39,1.055,41,2.708,43,2.976,45,0.672,46,1.592,48,2.451,49,2.333,55,0.672,56,1.692,58,1.036,59,1.397,64,0.624,65,3.507,66,0.357,67,0.257,77,1.072,78,1.76,79,1.721,80,1.049,81,2.461,82,1.121,83,1.121,84,1.026,85,1.121,86,1.096,87,2.894,88,1.121,89,1.049,90,1.121,91,1.049,92,1.121,93,1.026,94,1.121,95,1.049,96,1.121,97,1.049,98,1.121,99,1.049,100,1.121,101,1.026,102,0.984,103,1.121,104,1.049,105,1.121,106,1.049,107,1.121,108,1.049,109,1.121,110,1.096,111,0.964,112,1.121,113,1.049,114,1.121,115,1.026,116,1.121,117,1.611,118,1.76,119,1.049,120,1.121,121,2.302,122,1.121,123,1.026,124,1.121,125,1.026,126,1.121,127,1.026,128,1.096,129,1.026,130,1.096,131,1.121,145,2.116,160,2.617,162,3.439,214,3.674,232,1.734,233,1.412,238,1.607,314,2.095,370,1.646,418,2.032,453,3.026,581,2.522,616,2.659,617,2.391,684,1.552,688,2.357,689,3.008,735,1.607,831,3.324,840,5.744,841,4.397,868,4.162,870,1.809,890,1.809,891,1.809,893,1.203,902,2.117,934,3.324,935,3.324,1355,3.324,1537,2.976,1678,2.976,1684,3.674,1687,2.976,1691,3.134,1692,3.324,1695,3.507,1755,4.317,1890,3.88,1942,4.162,1949,2.117,1981,2.117,1988,3.88,1994,2.269,2113,4.397,2330,2.471,2331,2.471,2533,2.779,2534,4.363,2535,5.387,2536,6.102,2537,4.79,2538,4.363,2539,2.779,2540,2.779,2541,2.779,2542,2.779,2543,2.779,2544,3.88,2545,3.562,2546,2.779,2547,2.779,2548,2.779,2549,2.779,2550,1.809,2551,2.779,2552,2.779,2553,2.779,2554,4.363,2555,2.779,2556,2.779,2557,2.779,2558,2.779,2559,2.471,2560,2.779,2561,4.363]],["title/interfaces/Transfer.html",[0,0.211,1697,3.175]],["body/interfaces/Transfer.html",[0,0.264,2,1.175,3,0.056,4,0.064,5,0.064,7,0.429,8,0.735,12,3.998,13,1.203,14,0.666,15,0.007,16,0.064,19,0.005,20,0.005,62,2.726,314,4.107,581,4.945,831,6.517,1537,5.835,1697,5.044,2544,7.607,2545,6.983,2562,5.817]],["title/interfaces/TransferIn.html",[0,0.211,2563,3.8]],["body/interfaces/TransferIn.html",[0,0.239,2,1.066,3,0.05,4,0.058,5,0.058,7,0.389,8,0.69,10,1.647,12,3.853,13,1.078,14,0.613,15,0.007,16,0.058,19,0.005,20,0.005,35,2.763,62,2.671,63,2.36,64,0.432,217,2.802,297,1.451,566,4.603,567,3.292,580,5.367,581,4.766,582,4.192,583,4.192,584,3.292,585,3.435,586,3.435,587,4.945,588,3.292,589,2.533,590,3.292,591,3.292,592,3.292,593,4.945,594,3.05,595,3.165,596,3.165,597,3.165,598,3.165,599,3.05,600,3.165,601,3.292,602,3.165,603,3.292,604,3.292,605,3.751,606,5.143,607,2.081,608,3.292,2563,5.667,2564,5.277,2565,5.277]],["title/interfaces/TransferOut.html",[0,0.211,2566,3.8]],["body/interfaces/TransferOut.html",[0,0.283,2,1.258,3,0.059,4,0.069,5,0.069,7,0.459,8,0.767,13,1.194,14,0.585,15,0.007,16,0.069,19,0.006,20,0.006,49,1.778,62,2.394,453,2.351,581,5.21,605,4.171,606,3.888,607,2.457,823,4.476,1707,5.541,1730,7.158,1783,5.541,2566,6.302,2567,6.231,2568,8.769,2569,6.231,2570,6.231,2571,6.231,2572,6.231,2573,6.231]],["title/interfaces/TransferSplitIn.html",[0,0.211,579,2.904]],["body/interfaces/TransferSplitIn.html",[0,0.339,2,0.845,3,0.04,4,0.046,5,0.046,7,0.308,8,0.589,10,1.608,12,3.496,13,1.118,14,0.587,15,0.007,16,0.093,17,2.51,19,0.004,20,0.004,33,1.756,35,2.191,62,2.588,63,2.014,64,0.563,67,0.549,178,3.425,217,2.927,248,2.336,273,1.088,297,1.15,418,2.291,453,1.579,509,1.955,556,3.554,558,2.854,559,3.857,560,4.692,561,2.854,562,2.854,565,2.724,566,4.177,567,2.611,568,3.554,569,2.854,570,2.854,571,3.857,572,2.611,573,2.724,574,2.854,575,2.854,576,2.854,577,2.854,578,2.854,579,3.697,580,4.871,581,4.325,582,3.716,583,3.716,584,3.697,585,2.724,586,2.724,587,4.487,588,2.611,589,2.009,590,2.611,591,2.611,592,2.611,593,4.487,594,2.419,595,2.51,596,2.51,597,2.51,598,2.51,599,2.419,600,2.51,601,2.611,602,2.51,603,2.611,604,2.611,605,3.716,606,4.667,607,1.65,608,2.611,609,5.103,610,2.854,611,2.724,612,1.513,613,2.611,614,2.51,615,2.261,616,2.925,617,2.63,618,2.51,619,2.724]],["title/interfaces/TransferSplitOut.html",[0,0.211,2574,3.8]],["body/interfaces/TransferSplitOut.html",[0,0.31,2,1.381,3,0.065,4,0.076,5,0.076,7,0.504,8,0.812,13,1.1,14,0.569,15,0.007,16,0.076,19,0.006,20,0.006,62,2.493,2453,7.389,2574,6.67,2575,6.84,2576,9.052]],["title/modules/TranslateModule.html",[353,1.719,367,2.904]],["body/modules/TranslateModule.html",[3,0.065,4,0.075,5,0.075,15,0.007,16,0.075,19,0.006,20,0.006,64,0.714,66,0.873,67,0.629,226,4.424,227,4.239,355,2.357,367,5.078,372,2.68,373,2.509,375,3.006,376,3.21,377,2.457,378,7.238,2577,6.795]],["title/interfaces/Uri.html",[0,0.211,614,2.792]],["body/interfaces/Uri.html",[0,0.32,2,1.423,3,0.067,4,0.078,5,0.078,7,0.519,8,0.826,13,1.114,14,0.491,15,0.007,16,0.078,19,0.006,20,0.006,614,5.669,2578,7.046]],["title/components/UserComponent.html",[21,0.957,123,1.719]],["body/components/UserComponent.html",[0,0.096,3,0.02,4,0.023,5,0.039,7,0.157,8,0.349,10,0.385,13,0.442,14,0.245,15,0.007,16,0.039,19,0.003,20,0.003,21,0.924,22,0.802,23,1.386,24,0.857,25,0.838,26,0.857,31,0.68,32,3.343,33,2.598,34,1.955,36,1.355,39,0.85,45,0.85,46,1.343,48,2.074,49,1.777,55,0.514,56,1.216,58,0.505,64,0.54,66,0.273,67,0.197,77,0.819,78,1.417,79,1.386,80,0.802,81,2.105,82,0.857,83,0.857,84,0.785,85,0.857,86,0.838,87,2.64,88,0.857,89,0.802,90,0.857,91,0.802,92,0.857,93,0.785,94,0.857,95,0.802,96,0.857,97,0.802,98,0.857,99,0.802,100,0.857,101,0.785,102,1.848,103,0.857,104,0.802,105,0.857,106,0.802,107,0.857,108,0.802,109,0.857,110,0.838,111,2.772,112,0.857,113,0.802,114,0.857,115,0.785,116,0.857,117,1.298,118,1.417,119,0.802,120,0.857,121,0.802,122,0.857,123,1.928,124,0.857,125,0.785,126,0.857,127,0.785,128,0.838,129,0.785,130,0.838,131,0.857,133,1.148,136,1.84,145,1.81,154,4.291,164,2.82,195,2.94,208,2.524,217,0.722,225,0.877,241,1.274,242,1.228,248,2.914,273,1.62,418,2.765,421,2.868,435,3.749,449,2.524,452,2.107,453,0.802,468,1.383,487,1.449,489,1.734,494,1.526,495,1.619,496,1.619,540,3.976,541,2.868,545,2.677,589,1.687,605,1.898,607,2.28,612,1.887,617,3.49,625,4.495,626,3.017,639,4.53,652,3.124,654,3.124,657,2.868,660,3.124,661,2.868,671,1.383,676,2.396,684,1.186,688,1.148,689,2.508,690,1.889,691,4.473,700,3.976,706,4.641,733,1.734,734,1.734,735,4.132,868,2.396,980,2.677,1120,1.619,1222,2.524,1423,4.641,1443,3.124,1447,2.524,1450,4.261,1476,1.734,1505,2.868,1719,1.619,1748,5.38,1755,5.119,1762,1.619,1763,1.734,1966,2.868,1974,4.641,2149,3.422,2186,1.619,2221,3.667,2457,5.083,2458,1.889,2459,3.995,2460,1.889,2461,3.124,2462,3.995,2463,3.995,2464,3.995,2465,4.641,2466,1.889,2467,1.889,2468,1.889,2469,1.889,2470,1.889,2471,1.889,2472,1.889,2473,5.141,2474,1.889,2475,1.889,2476,1.889,2477,1.889,2478,1.889,2479,3.995,2480,3.124,2481,3.124,2482,3.124,2483,1.889,2484,1.889,2485,1.734,2486,1.889,2487,1.889,2488,1.889,2489,1.889,2490,1.889,2491,1.889,2492,1.889,2493,1.889,2494,1.889,2495,1.889,2496,1.889,2497,1.889,2498,1.889,2499,1.889,2500,1.889,2579,3.514,2580,2.125,2581,2.125,2582,2.125,2583,2.125,2584,2.125,2585,2.125,2586,3.514,2587,5.22,2588,2.125,2589,3.514,2590,3.514,2591,3.514,2592,3.514,2593,2.125,2594,3.514,2595,5.22,2596,3.514,2597,3.514,2598,3.514,2599,6.227,2600,3.514,2601,3.514,2602,3.514,2603,3.514,2604,3.514,2605,3.514,2606,3.514,2607,5.22,2608,2.125,2609,3.514,2610,3.514,2611,3.514,2612,3.514,2613,3.124,2614,3.514,2615,3.514,2616,3.514,2617,2.868,2618,3.514,2619,3.514,2620,3.514,2621,3.514,2622,3.514,2623,3.514,2624,2.125,2625,3.514,2626,3.124,2627,3.514,2628,3.514,2629,3.514,2630,3.514,2631,3.514,2632,3.514,2633,3.514,2634,3.514,2635,3.514,2636,3.514,2637,3.514,2638,2.125,2639,2.125,2640,2.125]],["title/interfaces/UserMeta.html",[0,0.211,2641,3.546]],["body/interfaces/UserMeta.html",[0,0.387,2,1.305,3,0.062,4,0.071,5,0.071,7,0.476,8,0.784,13,1.166,14,0.45,15,0.007,16,0.094,19,0.006,20,0.006,64,0.529,159,4.922,430,2.868,639,3.875,655,4.031,688,4.265,2641,6.494,2642,5.274,2643,7.248,2644,5.671,2645,5.274,2646,4.922,2647,6.014]],["title/modules/UserModule.html",[353,1.719,2648,3.546]],["body/modules/UserModule.html",[3,0.049,4,0.056,5,0.056,11,2.51,15,0.007,16,0.056,19,0.005,20,0.005,21,1.046,33,2.008,64,0.785,66,0.653,67,0.471,111,2.643,123,3.28,143,3.311,157,3.05,195,1.801,225,2.099,273,1.323,287,3.311,355,1.764,356,2.797,368,2.934,369,2.149,370,1.919,372,2.672,373,1.878,375,2.502,376,2.672,377,1.839,388,4.411,389,3.311,390,5.53,391,4.151,394,4.866,395,3.653,398,3.916,399,2.94,402,4.227,403,3.05,404,2.94,418,2.538,443,2.584,444,3.871,448,2.376,452,4.063,612,1.839,681,3.916,682,2.94,683,5.53,684,2.839,685,5.53,686,4.151,959,2.663,2343,4.522,2378,6.025,2379,4.522,2380,4.522,2381,5.53,2382,4.151,2386,4.522,2648,6.63,2649,4.522,2650,4.522,2651,5.086,2652,6.775,2653,5.086,2654,5.086,2655,6.025,2656,4.522,2657,6.775,2658,5.086,2659,5.086]],["title/interfaces/UserOptions.html",[0,0.211,2644,3.344]],["body/interfaces/UserOptions.html",[0,0.31,2,1.381,3,0.065,4,0.076,5,0.076,7,0.504,8,0.812,14,0.477,15,0.007,16,0.09,19,0.006,20,0.006,73,2.891,617,3.036,2049,5.583,2644,5.869,2660,6.082,2661,9.052,2662,8.049,2663,6.082]],["title/modules/UserRoutingModule.html",[353,1.719,460,3.546]],["body/modules/UserRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,64,0.726,66,0.825,67,0.595,111,2.227,225,2.651,273,1.67,355,2.227,372,2.532,373,2.371,375,2.905,376,3.102,377,2.322,433,3.712,434,2.78,442,4.006,443,3.996,444,4.32,448,3.001,460,5.992,621,5.12,959,3.362,962,4.38,2664,6.422,2665,6.422,2666,6.422,2667,6.422]],["title/interfaces/UserState.html",[0,0.211,2647,3.546]],["body/interfaces/UserState.html",[0,0.376,2,1.226,3,0.058,4,0.067,5,0.067,7,0.447,8,0.755,13,1.178,14,0.605,15,0.007,16,0.092,19,0.005,20,0.005,64,0.497,159,6.618,430,3.856,639,5.21,655,3.787,688,4.832,2641,6.618,2642,4.954,2643,4.954,2644,6.24,2645,4.954,2646,4.624,2647,6.315]],["title/interfaces/UsersState.html",[0,0.211,2646,3.546]],["body/interfaces/UsersState.html",[0,0.386,2,1.297,3,0.061,4,0.071,5,0.071,7,0.473,8,0.781,13,1.115,14,0.592,15,0.007,16,0.094,19,0.006,20,0.006,64,0.526,159,4.892,430,2.85,639,3.851,655,5.528,688,4.249,1669,5.992,2641,5.992,2642,5.242,2643,5.242,2644,5.649,2645,5.242,2646,5.992,2647,5.992]],["title/components/VpnComponent.html",[21,0.957,125,1.719]],["body/components/VpnComponent.html",[3,0.037,4,0.043,5,0.043,7,0.285,15,0.007,16,0.043,19,0.004,20,0.004,21,1.354,22,1.46,23,2.209,24,1.561,25,1.526,26,1.561,28,1.66,29,2.922,31,1.238,32,3.603,33,2.816,34,2.507,36,2.16,39,1.355,41,3.204,45,1.592,46,1.091,56,1.214,58,0.919,59,1.793,64,0.317,66,0.497,67,0.358,77,1.492,78,2.26,79,2.209,80,1.46,81,2.912,82,1.561,83,1.561,84,1.429,85,1.561,86,1.526,87,3.174,88,1.561,89,1.46,90,1.561,91,1.46,92,1.561,93,1.429,94,1.561,95,1.46,96,1.561,97,1.46,98,1.561,99,1.46,100,1.561,101,1.429,102,1.37,103,1.561,104,1.46,105,1.561,106,1.46,107,1.561,108,1.46,109,1.561,110,1.526,111,1.342,112,1.561,113,1.46,114,1.561,115,1.429,116,1.561,117,2.069,118,2.26,119,1.46,120,1.561,121,1.46,122,1.561,123,1.429,124,1.561,125,2.666,126,1.561,127,1.429,128,1.526,129,1.429,130,1.526,131,1.561,133,2.09,136,2.933,198,5.184,418,1.866,431,4.023,467,3.647,589,3.465,635,4.023,1162,4.981,1397,4.572,2169,4.981,2186,4.267,2613,4.981,2617,5.892,2668,3.869,2669,6.585,2670,5.602,2671,3.869,2672,3.869,2673,5.602,2674,7.218,2675,4.981,2676,5.602,2677,5.602,2678,5.602,2679,7.986,2680,5.602,2681,5.602,2682,5.602,2683,5.602,2684,5.602,2685,5.602,2686,5.602,2687,7.218,2688,7.218]],["title/modules/VpnModule.html",[353,1.719,2689,3.546]],["body/modules/VpnModule.html",[3,0.058,4,0.068,5,0.068,15,0.007,16,0.068,19,0.005,20,0.005,64,0.749,66,0.786,67,0.567,125,3.377,355,2.123,356,3.152,368,3.307,369,2.588,370,2.31,372,3.011,373,2.261,375,2.82,376,3.011,377,2.214,398,4.414,399,3.539,402,4.764,403,3.672,404,3.539,681,4.414,682,3.539,2689,6.966,2690,5.444,2691,5.444,2692,6.122,2693,5.444]],["title/modules/VpnRoutingModule.html",[353,1.719,2694,3.8]],["body/modules/VpnRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,21,1.316,64,0.725,66,0.822,67,0.593,125,2.899,225,2.643,273,1.665,355,2.22,372,2.525,373,2.364,375,2.899,376,3.096,377,2.315,434,2.772,442,3.994,443,3.989,444,4.314,448,2.992,959,3.352,2617,5.226,2693,5.693,2694,6.408,2695,6.402]],["title/components/WalletComponent.html",[21,0.957,127,1.719]],["body/components/WalletComponent.html",[3,0.022,4,0.026,5,0.026,7,0.172,8,0.376,10,0.999,13,0.863,14,0.529,15,0.007,16,0.026,19,0.003,20,0.003,21,0.985,22,0.879,23,1.494,24,0.94,25,0.919,26,0.94,28,1.123,29,2.126,31,0.746,32,3.391,33,2.638,34,2.603,36,1.461,39,0.916,41,2.449,45,0.563,46,1.634,48,2.167,49,1.857,55,1.334,56,1.363,58,1.629,59,1.944,63,0.792,64,0.605,66,0.299,67,0.216,73,1.601,75,2.886,77,0.898,78,1.528,79,1.494,80,0.879,81,2.226,82,0.94,83,0.94,84,0.86,85,0.94,86,0.919,87,2.871,88,0.94,89,0.879,90,0.94,91,0.879,92,0.94,93,0.86,94,0.94,95,0.879,96,0.94,97,2.588,98,0.94,99,0.879,100,0.94,101,0.86,102,1.696,103,0.94,104,0.879,105,0.94,106,0.879,107,0.94,108,0.879,109,0.94,110,0.919,111,0.808,112,0.94,113,0.879,114,0.94,115,0.86,116,0.94,117,1.399,118,1.528,119,0.879,120,0.94,121,0.879,122,0.94,123,0.86,124,0.94,125,0.86,126,0.94,127,2.038,128,0.919,129,0.86,130,0.919,131,0.94,133,1.259,135,3.648,136,1.984,140,3.725,145,2.379,149,4.203,162,3.205,167,3.309,195,1.342,202,3.093,210,1.673,214,3.267,217,1.288,222,1.775,232,1.453,233,1.184,238,1.347,244,1.589,250,2.886,297,0.64,370,1.43,453,2.866,508,2.364,509,2.837,607,1.494,612,1.995,615,2.047,667,2.19,689,3.633,735,2.19,748,3.093,749,3.093,750,3.093,754,4.438,833,3.44,841,3.093,844,1.673,845,3.369,846,3.963,850,3.369,852,3.369,855,3.369,893,1.009,902,1.775,919,1.902,1516,3.763,1687,3.763,1688,3.369,1689,3.369,1690,3.369,1691,3.963,1692,4.203,1735,3.369,1812,3.369,1858,2.071,1981,1.775,1994,3.093,1995,1.902,2041,3.648,2043,3.093,2044,3.093,2045,3.093,2046,1.775,2113,3.909,2550,1.517,2696,2.329,2697,4.789,2698,3.789,2699,4.789,2700,4.789,2701,4.789,2702,4.789,2703,4.504,2704,3.789,2705,2.329,2706,2.329,2707,2.329,2708,2.329,2709,2.329,2710,3.789,2711,2.329,2712,2.329,2713,2.329,2714,2.329,2715,2.329,2716,5.518,2717,5.518,2718,3.789,2719,3.789,2720,3.789,2721,2.329,2722,2.329,2723,2.329,2724,2.329,2725,2.329,2726,2.071,2727,2.329,2728,2.329,2729,2.329,2730,2.071,2731,2.329,2732,2.329,2733,2.329,2734,2.329,2735,2.329,2736,2.329,2737,2.329,2738,2.329,2739,2.329,2740,2.329,2741,2.329,2742,2.329,2743,2.329,2744,4.789,2745,3.789]],["title/injectables/WalletEffects.html",[481,1.328,2746,4.14]],["body/injectables/WalletEffects.html",[3,0.027,4,0.031,5,0.031,7,0.21,8,0.442,9,3.724,10,0.516,13,0.779,14,0.382,15,0.007,16,0.031,19,0.003,20,0.003,34,2.332,45,0.689,46,1.385,48,2.235,49,1.915,50,3.197,55,0.689,56,0.526,64,0.71,66,0.366,67,0.264,145,2.577,160,3.284,161,5.051,162,3.472,167,3.711,177,3.633,228,3.633,229,2.172,230,1.779,231,1.779,232,1.779,233,1.448,238,1.648,244,1.944,297,2.221,370,1.679,382,3.86,384,1.856,453,3.048,481,1.27,483,1.234,612,2.571,615,2.958,616,2.197,617,2.746,754,4.577,758,1.71,880,2.172,881,2.172,888,3.633,893,1.234,976,3.735,1131,5.478,1214,2.048,1215,5.243,1217,6.448,1218,6.275,1220,2.327,1222,3.197,1231,2.535,1237,3.958,1238,3.958,1239,3.958,1243,2.535,1244,4.469,1246,3.08,1251,3.958,1252,3.958,1258,2.327,1259,1.856,1260,2.535,1263,2.535,1266,3.958,1684,3.735,1686,3.197,1687,3.036,1691,3.197,1695,3.565,2000,3.958,2370,3.958,2550,1.856,2726,2.535,2746,3.958,2747,2.851,2748,5.475,2749,5.475,2750,5.475,2751,5.475,2752,4.451,2753,4.451,2754,4.451,2755,4.451,2756,2.851,2757,4.451,2758,7.112,2759,4.451,2760,2.851,2761,4.451,2762,4.451,2763,2.851,2764,4.451,2765,4.451,2766,6.711,2767,4.451,2768,5.475,2769,6.188,2770,4.451,2771,6.188,2772,6.188,2773,4.451,2774,6.188,2775,6.188,2776,4.451,2777,4.451,2778,4.451,2779,4.451,2780,4.451,2781,2.851,2782,2.851,2783,2.851,2784,2.851,2785,2.851]],["title/modules/WalletModule.html",[353,1.719,2336,3.344]],["body/modules/WalletModule.html",[3,0.035,4,0.041,5,0.041,11,1.822,15,0.007,16,0.041,19,0.004,20,0.004,21,0.759,22,3.303,64,0.779,66,0.474,67,0.342,99,3.303,104,3.303,113,3.303,121,3.303,127,2.998,143,2.404,157,2.214,195,1.307,225,1.524,230,2.303,231,2.303,273,0.96,287,2.404,355,1.281,356,2.235,367,4.902,368,2.344,369,1.56,370,1.393,372,2.135,373,1.999,375,1.999,376,2.135,377,1.335,388,3.525,389,2.404,392,3.889,393,2.652,394,3.889,395,2.652,398,3.13,399,2.134,400,4.124,401,2.813,402,3.378,403,2.214,404,2.134,434,2.344,443,1.876,444,3.257,448,1.725,453,1.393,509,1.725,681,3.13,682,2.134,683,4.419,684,2.061,685,4.419,686,3.014,890,2.404,891,2.404,951,4.419,954,3.378,955,3.014,959,1.933,1853,5.643,2336,6.811,2339,4.419,2340,3.014,2381,4.419,2382,3.014,2655,4.814,2656,3.283,2786,3.283,2787,3.283,2788,3.283,2789,3.692,2790,3.692,2791,3.692,2792,5.414,2793,3.692,2794,3.692,2795,3.692,2796,3.692,2797,3.692,2798,3.692,2799,3.692,2800,3.692,2801,3.692,2802,3.692,2803,3.692]],["title/modules/WalletRoutingModule.html",[353,1.719,462,3.546]],["body/modules/WalletRoutingModule.html",[3,0.061,4,0.071,5,0.071,15,0.007,16,0.071,19,0.006,20,0.006,34,2.004,64,0.724,66,0.82,67,0.591,225,2.635,273,1.66,355,2.214,372,2.517,373,2.357,375,2.894,376,3.09,377,2.308,433,3.69,434,2.764,442,3.982,443,3.981,444,4.308,448,2.983,462,5.969,621,5.52,624,4.584,959,3.342,961,4.862,962,4.353,2804,6.383,2805,6.383,2806,6.383]],["title/injectables/WalletRpcService.html",[481,1.328,1942,3.175]],["body/injectables/WalletRpcService.html",[1,4.719,3,0.015,4,0.018,5,0.018,7,0.271,8,0.277,9,1.923,10,1.468,13,0.728,14,0.598,15,0.007,16,0.018,19,0.002,20,0.002,34,1.693,39,0.674,45,0.39,46,1.671,48,0.538,49,0.461,55,1.96,56,1.495,58,2.195,62,1.247,64,0.473,66,0.207,67,0.15,145,1.274,162,2.042,165,1.737,180,2.391,190,1.899,198,2,238,1.61,245,4.686,263,2.476,273,0.955,284,0.933,297,2.332,314,1.763,382,2.727,384,1.051,418,0.538,430,1.236,465,0.82,481,0.795,483,0.699,497,0.845,568,2.958,579,3.077,605,1.505,612,0.584,613,1.737,614,2.958,615,3.123,618,3.467,667,5.436,688,1.505,701,1.159,754,2.505,758,0.968,761,2.476,805,7.601,870,1.051,881,1.23,893,0.699,974,1.317,976,1.899,980,2.122,1001,2.273,1004,1.317,1005,1.317,1006,1.317,1007,1.317,1008,1.317,1009,1.317,1010,1.23,1011,1.23,1012,2.798,1014,1.317,1015,1.317,1016,1.435,1538,4.796,1564,1.101,1666,1.317,1668,2.476,1669,4.109,1670,4.026,1676,1.317,1680,4.026,1682,1.317,1684,3.364,1695,1.051,1697,3.364,1708,2.998,1723,4.026,1727,1.317,1737,4.026,1777,4.026,1942,1.899,2188,4.026,2191,1.317,2205,1.23,2206,1.317,2217,4.152,2261,3.567,2407,1.317,2439,1.317,2441,4.026,2443,2.476,2450,1.317,2545,2.273,2550,1.051,2563,4.026,2566,1.317,2574,1.317,2703,3.567,2807,1.614,2808,2.785,2809,4.37,2810,2.785,2811,2.785,2812,4.37,2813,2.785,2814,2.785,2815,2.785,2816,3.673,2817,3.673,2818,2.785,2819,2.785,2820,3.673,2821,4.37,2822,4.37,2823,2.785,2824,2.785,2825,2.785,2826,1.614,2827,2.785,2828,1.614,2829,2.785,2830,1.614,2831,1.614,2832,2.785,2833,1.614,2834,1.614,2835,2.785,2836,2.785,2837,1.614,2838,1.614,2839,2.785,2840,1.614,2841,2.785,2842,1.614,2843,2.785,2844,2.785,2845,1.614,2846,1.614,2847,1.614,2848,1.614,2849,1.614,2850,2.785,2851,1.614,2852,2.785,2853,1.614,2854,2.785,2855,4.932,2856,1.614,2857,2.785,2858,1.614,2859,2.785,2860,1.614,2861,2.785,2862,1.614,2863,1.614,2864,1.614,2865,1.614,2866,2.476,2867,1.614,2868,1.614,2869,2.785,2870,1.614,2871,1.614,2872,2.785,2873,1.614,2874,2.785,2875,1.614,2876,2.785,2877,1.614,2878,1.614,2879,1.614,2880,1.614,2881,1.614,2882,1.614,2883,1.614,2884,1.614,2885,1.614,2886,1.614,2887,1.614,2888,1.614,2889,1.614,2890,1.614,2891,1.614,2892,1.614,2893,1.614,2894,1.614,2895,1.614,2896,1.614,2897,1.614,2898,1.614,2899,1.614,2900,1.614,2901,1.614,2902,1.614,2903,1.614,2904,1.614,2905,1.614,2906,1.614,2907,1.614]],["title/injectables/WalletService.html",[167,2.792,481,1.328]],["body/injectables/WalletService.html",[3,0.033,4,0.039,5,0.069,7,0.258,8,0.518,10,1.247,13,0.783,14,0.537,15,0.007,16,0.039,19,0.004,20,0.004,34,2.632,35,1.836,39,1.261,45,0.848,46,1.633,48,1.168,49,1.001,50,3.744,55,1.666,56,1.27,58,2.123,63,1.771,64,0.603,66,0.451,67,0.483,72,3.971,145,2.389,163,4.255,164,3.721,167,3.126,173,3.744,190,3.555,195,1.242,198,3.744,238,2.027,241,2.103,242,2.027,245,3.596,297,2.195,418,1.168,465,1.782,467,3.393,481,1.487,483,1.519,497,1.836,509,3.834,615,4.315,667,4.458,754,4.697,758,3.731,870,2.283,893,1.519,1020,3.119,1129,4.635,1684,4.697,1942,4.697,1949,2.672,1992,6.124,1995,4.255,2217,5.736,2261,5.622,2537,3.119,2550,2.283,2559,3.119,2703,5.622,2730,3.119,2866,6.545,2908,3.507,2909,6.887,2910,5.213,2911,6.887,2912,3.507,2913,5.213,2914,3.507,2915,3.507,2916,5.213,2917,3.507,2918,5.213,2919,3.507,2920,5.213,2921,3.507,2922,3.507,2923,3.507,2924,5.213,2925,3.507,2926,3.507,2927,3.507,2928,3.507,2929,3.507,2930,3.507,2931,3.507,2932,3.507,2933,3.507,2934,3.507,2935,3.507,2936,3.507,2937,3.507,2938,3.507,2939,3.507]],["title/classes/WalletState.html",[67,0.431,2940,3.8]],["body/classes/WalletState.html",[0,0.309,3,0.049,4,0.057,5,0.057,7,0.377,8,0.676,13,1.12,14,0.533,15,0.007,16,0.09,19,0.005,20,0.005,28,2.266,34,2.663,46,1.489,48,2.547,49,2.182,56,1.256,62,2.182,64,0.558,67,0.631,314,3.268,418,1.706,430,3.022,509,3.808,557,3.494,607,2.02,777,2.961,808,3.196,1061,5.557,1201,3.072,1686,3.679,1695,4.432,1697,3.494,1898,3.902,2005,5.492,2550,3.335,2940,5.557,2941,4.555,2942,6.242,2943,7.246,2944,7.246,2945,5.123,2946,5.123,2947,5.123,2948,4.555,2949,6.054,2950,6.054,2951,4.555,2952,4.555,2953,4.555]],["title/interfaces/WalletsState.html",[0,0.211,2942,3.8]],["body/interfaces/WalletsState.html",[0,0.315,2,1.066,3,0.05,4,0.058,5,0.058,7,0.389,8,0.69,13,1.169,14,0.597,15,0.007,16,0.091,19,0.005,20,0.005,28,2.057,34,2.689,56,1.281,62,2.214,64,0.569,67,0.643,314,3.333,418,1.758,430,3.081,509,4.003,607,2.081,808,3.292,1061,5.667,1201,3.165,1669,5.289,1686,3.79,1695,4.52,1697,3.599,1898,4.02,2005,5.573,2550,3.435,2940,4.308,2941,4.693,2942,6.334,2943,7.617,2944,7.617,2948,4.693,2949,6.174,2950,6.174,2951,4.693,2952,4.693,2953,4.693]],["title/injectables/WebStorageService.html",[481,1.328,528,3.8]],["body/injectables/WebStorageService.html",[3,0.033,4,0.038,5,0.038,7,0.255,8,0.512,10,1.325,13,1.147,14,0.534,15,0.007,16,0.038,19,0.004,20,0.004,28,1.024,33,1.024,39,1.247,46,1.656,48,2.054,49,2.268,55,1.769,56,1.349,58,1.888,59,1.65,62,1.759,63,2.096,64,0.422,66,0.444,67,0.32,87,1.276,145,3.063,162,2.409,195,1.223,245,2.98,273,1.604,297,2.246,465,1.756,468,4.014,481,1.471,483,1.496,497,1.809,528,4.208,549,3.073,571,4.014,607,3.293,644,5.581,671,4.014,676,3.516,777,4.434,1201,3.698,1249,4.91,1516,5.695,1610,4.584,1641,5.483,1656,3.073,1657,3.073,1658,3.073,1743,2.821,2205,2.632,2206,2.821,2954,8.627,2955,3.455,2956,6.166,2957,6.166,2958,6.837,2959,5.155,2960,5.155,2961,5.155,2962,3.455,2963,3.455,2964,5.155,2965,5.155,2966,5.155,2967,3.455,2968,5.155,2969,3.455,2970,3.455,2971,3.455,2972,5.155,2973,3.455,2974,5.155,2975,3.455,2976,5.155,2977,3.455,2978,3.455,2979,3.455,2980,3.455,2981,3.455,2982,6.837,2983,3.455,2984,5.155,2985,5.155,2986,3.455,2987,3.455,2988,3.455,2989,3.455,2990,3.455,2991,3.455,2992,3.455,2993,3.455,2994,3.455,2995,3.455,2996,3.455,2997,3.455,2998,3.455,2999,3.455,3000,3.455,3001,3.455,3002,3.455,3003,3.455]],["title/injectables/WebsocketService.html",[481,1.328,1293,3.8]],["body/injectables/WebsocketService.html",[3,0.045,4,0.052,5,0.052,7,0.348,8,0.64,10,0.855,13,0.923,14,0.449,15,0.007,16,0.071,19,0.005,20,0.005,39,1.558,45,1.774,46,1.658,55,1.141,56,0.871,58,1.872,59,2.062,64,0.601,66,0.606,67,0.437,140,3.515,145,2.544,273,1.676,297,1.771,465,2.398,479,3.596,481,1.838,483,2.044,497,2.471,798,3.596,1201,2.831,1256,4.197,1293,5.259,1420,3.853,1499,3.853,1633,3.853,3004,4.72,3005,6.523,3006,7.881,3007,7.881,3008,7.881,3009,6.443,3010,6.443,3011,4.72,3012,4.72,3013,8.249,3014,4.72,3015,6.443,3016,4.72,3017,7.335,3018,4.72,3019,4.72,3020,7.335,3021,6.443,3022,7.335,3023,4.72,3024,4.72,3025,4.72,3026,4.72,3027,4.72,3028,4.72,3029,4.72,3030,4.72,3031,4.72,3032,7.335,3033,4.72,3034,4.72,3035,4.72,3036,4.72,3037,4.72,3038,4.72,3039,4.72,3040,4.72,3041,4.72]],["title/contributing.html",[3042,3.445,3043,3.445,3044,3.874]],["body/contributing.html",[15,0.006,19,0.006,20,0.006,1412,6.644,2485,6.099,2626,6.644,3045,7.472,3046,7.472,3047,7.472]],["title/dependencies.html",[356,2.314,3048,3.874]],["body/dependencies.html",[15,0.007,19,0.004,20,0.004,34,1.319,66,0.54,162,3.222,170,3.2,200,3.018,225,1.734,226,4.488,227,3.707,230,4.301,231,2.621,233,2.135,238,2.429,239,5.112,240,2.865,252,3.429,356,1.734,374,4.053,377,1.519,403,2.52,404,2.429,410,3.736,414,3.429,479,3.2,485,3.736,487,2.865,494,3.018,495,3.2,496,3.2,503,6.131,522,3.736,523,5.284,565,2.735,599,2.429,684,2.346,758,2.52,793,3.429,890,2.735,891,2.735,953,4.85,1136,3.736,1145,3.736,1146,3.736,1147,5.284,1149,3.736,1259,2.735,1311,3.429,1363,3.736,1523,3.736,1525,3.736,1794,3.736,1815,3.736,2064,3.429,2121,3.429,2157,3.736,2163,3.736,2164,3.736,2205,3.2,3005,5.284,3049,4.201,3050,8.888,3051,4.201,3052,8.888,3053,4.201,3054,4.201,3055,4.201,3056,4.201,3057,4.201,3058,4.201,3059,4.201,3060,4.201,3061,4.201,3062,4.201,3063,4.201,3064,4.201,3065,4.201,3066,4.201,3067,4.201,3068,4.201,3069,4.201,3070,4.201,3071,4.201,3072,4.201,3073,4.201,3074,4.201,3075,4.201,3076,4.201,3077,4.201,3078,4.201,3079,4.201,3080,4.201,3081,4.201,3082,4.201,3083,4.201,3084,4.201,3085,4.201,3086,4.201,3087,4.201,3088,4.201,3089,4.201,3090,5.942,3091,4.201,3092,4.201,3093,4.201,3094,4.201,3095,4.201,3096,4.201,3097,4.201,3098,4.201,3099,4.201,3100,4.201,3101,4.201,3102,4.201,3103,4.201,3104,4.201,3105,4.201,3106,4.201,3107,4.201,3108,4.201,3109,4.201,3110,4.201,3111,4.201,3112,5.942,3113,4.201,3114,4.201,3115,4.201,3116,4.201,3117,4.201,3118,4.201]],["title/miscellaneous/enumerations.html",[3119,2.951,3120,4.986]],["body/miscellaneous/enumerations.html",[3,0.063,7,0.485,15,0.007,19,0.006,20,0.006,49,2.612,63,2.237,71,4.285,73,3.375,349,5.014,617,2.922,870,4.285,1201,3.948,1220,5.373,1262,6.518,1466,5.014,2042,5.373,2046,6.083,2050,5.373,2051,5.373,2052,5.373,2660,5.853,2662,7.1,2663,5.853,3119,5.014,3120,5.853,3121,6.583,3122,6.583,3123,5.853,3124,5.853,3125,5.853,3126,6.583,3127,6.583,3128,6.583]],["title/miscellaneous/functions.html",[3119,2.951,3129,4.986]],["body/miscellaneous/functions.html",[7,0.345,10,1.675,14,0.548,15,0.007,19,0.005,20,0.005,55,2.237,56,1.706,58,1.523,371,4.169,374,4.986,382,4.001,417,4.169,426,5.703,505,4.169,516,6.5,538,5.703,539,8.444,542,6.362,636,4.169,976,3.198,1222,6.845,1262,5.235,1270,4.169,1277,7.876,1950,5.235,2170,5.235,3119,3.572,3123,4.169,3124,4.169,3125,4.169,3129,4.169,3130,4.688,3131,4.688,3132,4.688,3133,4.688,3134,8.699,3135,4.688,3136,6.413,3137,4.688,3138,4.688,3139,4.688,3140,4.688,3141,4.688,3142,4.688,3143,4.688,3144,4.688,3145,4.688,3146,4.688,3147,4.688,3148,4.688,3149,4.688,3150,4.688,3151,4.688,3152,6.413,3153,4.688,3154,4.688,3155,4.688,3156,4.688]],["title/index.html",[7,0.285,3042,3.445,3043,3.445]],["body/index.html",[0,0.305,15,0.006,19,0.006,20,0.006,431,4.834,435,4.834,452,4.853,635,6.719,1633,5.494,1975,7.717,2184,5.985,3157,8.092,3158,6.73,3159,6.73,3160,6.73,3161,6.73,3162,8.092,3163,9.541,3164,6.73,3165,6.73,3166,6.73,3167,6.73,3168,6.73]],["title/modules.html",[355,2.214]],["body/modules.html",[15,0.005,19,0.005,20,0.005,227,6.029,250,6.911,354,3.743,355,1.808,361,3.743,362,3.743,363,3.555,364,3.743,365,3.743,366,3.743,367,3.251,439,3.743,440,3.743,459,3.97,460,3.97,461,3.97,462,3.97,473,3.97,943,3.97,947,3.743,954,3.251,1771,3.743,1853,3.743,2139,3.97,2332,3.743,2336,3.743,2373,3.97,2648,3.97,2675,8.717,2689,3.97,2694,4.254,3169,9.664,3170,9.664,3171,9.072]],["title/overview.html",[3172,5.675]],["body/overview.html",[2,0.532,15,0.007,19,0.003,20,0.003,22,2.721,23,1.04,73,1.769,80,0.995,84,2.846,89,2.439,91,2.721,93,1.922,95,2.721,97,2.721,99,2.721,101,1.922,104,2.721,106,2.721,108,1.964,113,2.721,115,1.922,117,1.922,119,2.721,121,2.721,123,1.922,125,1.922,127,1.922,129,2.846,354,6.379,355,0.914,356,1.728,357,2.344,358,2.344,359,2.344,360,2.344,361,5.18,362,4.643,363,4.918,364,3.738,365,5.374,366,5.374,367,4.292,368,1.812,369,1.114,370,0.995,437,2.344,438,2.344,439,3.738,440,4.643,473,4.924,474,2.344,483,1.141,557,1.798,620,2.344,677,2.344,678,2.344,834,4.208,848,4.918,943,5.7,944,2.344,945,2.344,946,2.344,947,5.374,954,5.764,1100,2.344,1101,2.344,1103,2.344,1369,2.344,1370,2.344,1371,2.344,1556,5.493,1557,1.524,1569,5.493,1699,5.493,1771,4.941,1772,2.344,1773,2.344,1774,2.344,1789,5.493,1853,4.941,1854,2.344,1855,2.344,1856,2.344,2024,2.344,2025,2.344,2026,2.344,2027,5.493,2028,5.493,2029,5.493,2030,5.493,2058,3.738,2074,2.344,2075,2.344,2076,2.344,2077,2.344,2139,4.514,2140,2.344,2141,2.344,2298,2.344,2332,5.789,2333,2.344,2334,2.344,2335,2.344,2336,6.514,2373,5.241,2374,2.344,2376,2.344,2431,2.344,2432,2.344,2433,2.344,2648,4.514,2649,2.344,2650,2.344,2689,4.514,2690,2.344,2691,2.344,2786,2.344,2787,2.344,2788,2.344,3172,2.344,3173,2.636,3174,2.636,3175,2.636,3176,2.636,3177,2.636,3178,2.636]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":63,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["0\">{{error",{"_index":1765,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.1",{"_index":1914,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["0.1.2",{"_index":3084,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":3061,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3118,"title":{},"body":{"dependencies.html":{}}}],["0.2.4",{"_index":3091,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":3074,"title":{},"body":{"dependencies.html":{}}}],["0.3.3",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3116,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":803,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["0000000000000000000000000000000000000000000000000000000000000000",{"_index":18,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["1",{"_index":73,"title":{"injectables/Effects-1.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RootComponent.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserOptions.html":{},"components/WalletComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":3078,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3086,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3060,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":3063,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":3079,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1898,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/RootComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["10.0.0",{"_index":3064,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["1000",{"_index":1316,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/HashRatePipe.html":{},"components/RootComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["10000",{"_index":2951,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100000000).tofixed((8",{"_index":2528,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["100vh",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["12.0.0",{"_index":3055,"title":{},"body":{"dependencies.html":{}}}],["12.0.1",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":1936,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["13",{"_index":1350,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["13.0.0",{"_index":3050,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":3052,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":3054,"title":{},"body":{"dependencies.html":{}}}],["130",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["14.0.0",{"_index":3068,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2012,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["151",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":572,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"pipes/HashLinkPipe.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["179211/@${slug}`).then(function",{"_index":2130,"title":{},"body":{"components/PostComponent.html":{}}}],["181",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["1c9ea3",{"_index":1926,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["2",{"_index":71,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":2204,"title":{},"body":{"interfaces/Response.html":{}}}],["2.0.0",{"_index":3073,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":3108,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3113,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3176,"title":{},"body":{"overview.html":{}}}],["20.0.0",{"_index":3070,"title":{},"body":{"dependencies.html":{}}}],["2017",{"_index":2590,"title":{},"body":{"components/UserComponent.html":{}}}],["210px",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["23",{"_index":3175,"title":{},"body":{"overview.html":{}}}],["24",{"_index":2516,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["242",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["242628",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":904,"title":{},"body":{"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["255",{"_index":1913,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["256",{"_index":1480,"title":{},"body":{"injectables/CryptService.html":{}}}],["25vh",{"_index":1090,"title":{},"body":{"directives/ChartDirective.html":{}}}],["27",{"_index":3174,"title":{},"body":{"overview.html":{}}}],["298px",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1466,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":3077,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2014,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["30.416",{"_index":2519,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["30000",{"_index":1062,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["30vh",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["32",{"_index":600,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["365",{"_index":2521,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["36963",{"_index":2879,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["4",{"_index":1468,"title":{},"body":{"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["4.1.0",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":3080,"title":{},"body":{"dependencies.html":{}}}],["4.15.2",{"_index":3082,"title":{},"body":{"dependencies.html":{}}}],["4.4.4",{"_index":3110,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":3076,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":3111,"title":{},"body":{"dependencies.html":{}}}],["4096",{"_index":1485,"title":{},"body":{"injectables/CryptService.html":{}}}],["5",{"_index":2298,"title":{},"body":{"components/RootComponent.html":{},"overview.html":{}}}],["5.0.0",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1925,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["545",{"_index":2523,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["54px",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["58",{"_index":3178,"title":{},"body":{"overview.html":{}}}],["6.1.1",{"_index":3075,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2511,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["64",{"_index":573,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["64px",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1472,"title":{},"body":{"injectables/CryptService.html":{}}}],["7.0.0",{"_index":3069,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":3106,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1355,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{}}}],["838488",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":3177,"title":{},"body":{"overview.html":{}}}],["9.1.0",{"_index":3071,"title":{},"body":{"dependencies.html":{}}}],["9px",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["_(ツ)_",{"_index":1710,"title":{},"body":{"pipes/HashLinkPipe.html":{},"pipes/ShruggiePipe.html":{}}}],["access",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["accessibility",{"_index":2402,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["accessors",{"_index":1610,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebStorageService.html":{}}}],["account_balance_wallet",{"_index":749,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["accounts",{"_index":1423,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["action",{"_index":1222,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/UserComponent.html":{},"injectables/WalletEffects.html":{},"miscellaneous/functions.html":{}}}],["actionreducer",{"_index":516,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":517,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":1215,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["actionsblocklist",{"_index":1532,"title":{},"body":{"modules/DataModule.html":{}}}],["activatedroute",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroute.firstchild",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["acts",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["adapter",{"_index":1146,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["add",{"_index":35,"title":{},"body":{"components/AddComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/FileSystemService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/PluginsService.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{}}}],["add'},{'name",{"_index":83,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["add.component.html",{"_index":37,"title":{},"body":{"components/AddComponent.html":{}}}],["add_box",{"_index":74,"title":{},"body":{"components/AddComponent.html":{}}}],["addaddressbook",{"_index":1,"title":{"interfaces/AddAddressBook.html":{}},"body":{"interfaces/AddAddressBook.html":{},"injectables/WalletRpcService.html":{}}}],["addaddressbook(x",{"_index":2825,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["addcomponent",{"_index":22,"title":{"components/AddComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["adding",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["addon",{"_index":3114,"title":{},"body":{"dependencies.html":{}}}],["addoptions",{"_index":772,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["addoptions(overrides",{"_index":776,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["address",{"_index":9,"title":{"interfaces/Address.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["adds",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adduser",{"_index":2465,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["addwallet",{"_index":1993,"title":{},"body":{"components/OpenComponent.html":{}}}],["adjust",{"_index":3151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adjustments",{"_index":1124,"title":{},"body":{"injectables/ChartService.html":{}}}],["afterviewinit",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["again",{"_index":1764,"title":{},"body":{"components/LoginComponent.html":{}}}],["ago",{"_index":2524,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["algorithm",{"_index":611,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["alias",{"_index":2172,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["allcolumns",{"_index":837,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["allow",{"_index":1411,"title":{},"body":{"injectables/CryptService.html":{}}}],["alpha(0.2",{"_index":1171,"title":{},"body":{"injectables/ChartService.html":{}}}],["already",{"_index":1964,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["alt_blocks_count",{"_index":1038,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["always",{"_index":1396,"title":{},"body":{"injectables/CryptService.html":{}}}],["amount",{"_index":1537,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["amp",{"_index":2588,"title":{},"body":{"components/UserComponent.html":{}}}],["angular",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/OpenComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":3049,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3051,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["angular/compiler",{"_index":3053,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":66,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2064,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":684,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3057,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":3058,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/card",{"_index":682,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/checkbox",{"_index":2656,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/core",{"_index":2653,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/dialog",{"_index":1546,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{}}}],["angular/material/divider",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/expansion",{"_index":2793,"title":{},"body":{"modules/WalletModule.html":{}}}],["angular/material/form",{"_index":2379,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/input",{"_index":686,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/list",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/menu",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["angular/material/progress",{"_index":2343,"title":{},"body":{"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":2382,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/sidenav",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":2340,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/toolbar",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/tooltip",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["angular/platform",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":1543,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["animation",{"_index":789,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animationduration",{"_index":791,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animations",{"_index":793,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"dependencies.html":{}}}],["ansi",{"_index":3105,"title":{},"body":{"dependencies.html":{}}}],["any):string|null",{"_index":2997,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["anyone",{"_index":2620,"title":{},"body":{"components/UserComponent.html":{}}}],["anything",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1633,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebsocketService.html":{},"index.html":{}}}],["apiurl",{"_index":1641,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["app",{"_index":87,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["app'},{'name",{"_index":85,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["app.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":480,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app.service",{"_index":1461,"title":{},"body":{"injectables/CryptService.html":{}}}],["app/pipes/crypto/hashlink.pipe",{"_index":2040,"title":{},"body":{"modules/PipesModule.html":{}}}],["app/pipes/crypto/hashrate.pipe",{"_index":892,"title":{},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{}}}],["app/pipes/crypto/tocoin.pipe",{"_index":2039,"title":{},"body":{"modules/PipesModule.html":{}}}],["app/pipes/pipes.module",{"_index":955,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["app/plugins/plugins.component",{"_index":2079,"title":{},"body":{"modules/PluginsModule.html":{}}}],["app_config",{"_index":492,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["app_config.production",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/DataModule.html":{}}}],["appcomponent",{"_index":84,"title":{"components/AppComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["appfilesystem",{"_index":1614,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["application",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{},"index.html":{}}}],["application/x",{"_index":1005,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["applicationref",{"_index":2083,"title":{},"body":{"injectables/PluginsService.html":{}}}],["applies",{"_index":1122,"title":{},"body":{"injectables/ChartService.html":{}}}],["appmodule",{"_index":354,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":361,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":473,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":482,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CryptService.html":{}}}],["appstate",{"_index":504,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{}}}],["arg",{"_index":2855,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["args",{"_index":1792,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["armored",{"_index":1490,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredkey",{"_index":1503,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredmessage",{"_index":1509,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoured",{"_index":1386,"title":{},"body":{"injectables/CryptService.html":{}}}],["array",{"_index":1453,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{}}}],["assert",{"_index":3072,"title":{},"body":{"dependencies.html":{}}}],["async",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["atob",{"_index":1656,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["atob(dat",{"_index":1662,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["atob(data[1",{"_index":1320,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["atob(state",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{}}}],["atomic",{"_index":556,"title":{"classes/Atomic.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["atomic(this.times(1e8",{"_index":576,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["attach",{"_index":1291,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/PluginsService.html":{}}}],["attached",{"_index":2180,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["auth",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":2460,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auth/route.guard",{"_index":2665,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["authenticated",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2612,"title":{},"body":{"components/UserComponent.html":{}}}],["authguard",{"_index":621,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["authmodule",{"_index":362,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2112,"title":{},"body":{"components/PostComponent.html":{}}}],["authservice",{"_index":625,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auto",{"_index":1365,"title":{},"body":{"components/ConsoleComponent.html":{},"interfaces/ProfileState.html":{}}}],["automatically",{"_index":585,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["autosave_current",{"_index":2225,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["available",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IncomingTransfersIn.html":{},"components/WalletComponent.html":{},"modules.html":{}}}],["avatar",{"_index":2173,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["await",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["aware",{"_index":1400,"title":{},"body":{"injectables/CryptService.html":{}}}],["away",{"_index":2499,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["axios",{"_index":2205,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["axios.post(`${this.apiurl}/${cmd",{"_index":2998,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["axios.post(url",{"_index":2207,"title":{},"body":{"interfaces/Response.html":{}}}],["b",{"_index":1359,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["backend",{"_index":2958,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd",{"_index":2962,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd:string",{"_index":2996,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["background",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["backgroundcolor",{"_index":1869,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["backup",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"components/BackupComponent.html":{}}}],["backup'},{'name",{"_index":88,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["backup.component.html",{"_index":745,"title":{},"body":{"components/BackupComponent.html":{}}}],["backupcomponent",{"_index":86,"title":{"components/BackupComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["balance",{"_index":754,"title":{"interfaces/Balance.html":{}},"body":{"interfaces/Balance.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["bar",{"_index":2658,"title":{},"body":{"modules/UserModule.html":{}}}],["basechartconfigservice",{"_index":769,"title":{"injectables/BaseChartConfigService.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:12",{"_index":1878,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:121",{"_index":1866,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:16",{"_index":1872,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:17",{"_index":1877,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:18",{"_index":1871,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:31",{"_index":1864,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:61",{"_index":1867,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["before",{"_index":595,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["below",{"_index":2604,"title":{},"body":{"components/UserComponent.html":{}}}],["below_amount",{"_index":2444,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["benefit",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta.35",{"_index":3056,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1156,"title":{},"body":{"injectables/ChartService.html":{}}}],["big",{"_index":560,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["big.js",{"_index":565,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["bigger",{"_index":1434,"title":{},"body":{"injectables/CryptService.html":{}}}],["biggercontentfont",{"_index":2395,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["binaries",{"_index":983,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["binary",{"_index":1492,"title":{},"body":{"injectables/CryptService.html":{}}}],["black",{"_index":1566,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["blank",{"_index":2573,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["block",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/RestoreWallet.html":{},"dependencies.html":{}}}],["block_height",{"_index":2023,"title":{},"body":{"interfaces/Payment.html":{}}}],["block_size",{"_index":820,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["blockchain",{"_index":589,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["blockchain.component",{"_index":949,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["blockchain.component.html",{"_index":836,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchain.component.scss",{"_index":835,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchaincomponent",{"_index":89,"title":{"components/BlockchainComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["blockchainmodule",{"_index":943,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainroutingmodule",{"_index":439,"title":{"modules/BlockchainRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":166,"title":{"injectables/BlockchainService.html":{}},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["blockheader",{"_index":818,"title":{"interfaces/BlockHeader.html":{}},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["blocks",{"_index":594,"title":{},"body":{"classes/Atomic.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["blockui",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["blockuimodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["blockuimodule.forroot",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["boolean",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["bootstrap",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["bootstrap#readme",{"_index":2719,"title":{},"body":{"components/WalletComponent.html":{}}}],["bootstrap.git",{"_index":2718,"title":{},"body":{"components/WalletComponent.html":{}}}],["bootstrap/ng",{"_index":1815,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{}}}],["border",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["bordercolor",{"_index":1870,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["borderwidth",{"_index":802,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["bottom",{"_index":1889,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["bounds",{"_index":1903,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["box",{"_index":938,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["brain",{"_index":1428,"title":{},"body":{"injectables/CryptService.html":{}}}],["browse",{"_index":2675,"title":{},"body":{"components/VpnComponent.html":{},"modules.html":{}}}],["browser",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{},"components/PluginsComponent.html":{},"modules/TranslateModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["browserify",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/TranslateModule.html":{}}}],["browsermodule.withservertransition({appid",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa",{"_index":1657,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["btoa(data",{"_index":1664,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["btoa(state",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{}}}],["build",{"_index":3162,"title":{},"body":{"index.html":{}}}],["builddocumentation",{"_index":3166,"title":{},"body":{"index.html":{}}}],["building",{"_index":2634,"title":{},"body":{"components/UserComponent.html":{}}}],["buildtype",{"_index":838,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["button.install",{"_index":2306,"title":{},"body":{"components/RootComponent.html":{}}}],["bypassed",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{}}}],["byte/64",{"_index":601,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["bytebuffer",{"_index":1658,"title":{},"body":{"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["c.name",{"_index":913,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["calc(99vh",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["calculated",{"_index":586,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["call",{"_index":2965,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["callback",{"_index":807,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["callbacks",{"_index":812,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["called",{"_index":3032,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["canactivate",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["canactivate(route",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cant",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canvas",{"_index":1368,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["capital",{"_index":2160,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["caretsize",{"_index":1918,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["catch",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["catcherror",{"_index":1260,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["catcherror((error",{"_index":1251,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["chain",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{}}}],["chain'},{'name",{"_index":90,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["chain.chainstate",{"_index":510,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain.reducer",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain/explorer/${type}/${content",{"_index":1709,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["chaingetinfo",{"_index":882,"title":{"interfaces/ChainGetInfo.html":{}},"body":{"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/RootComponent.html":{}}}],["chaininfo",{"_index":839,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["chainrpc",{"_index":966,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainrpc(method",{"_index":977,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainsetblocks",{"_index":1002,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainsetgetinfo",{"_index":884,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["chainsettransactions",{"_index":1003,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chance",{"_index":1515,"title":{},"body":{"injectables/CryptService.html":{}}}],["change",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{}}}],["changed",{"_index":1759,"title":{},"body":{"components/LoginComponent.html":{}}}],["changedetection",{"_index":1280,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy",{"_index":1309,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1281,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectorref",{"_index":1295,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changelanguage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["changelanguage(lang",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":57,"title":{},"body":{"components/AddComponent.html":{}}}],["changestream",{"_index":1289,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel",{"_index":1299,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel:string",{"_index":1334,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["channel",{"_index":1301,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["character",{"_index":602,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["charged",{"_index":2569,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["chart",{"_index":524,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BaseChartConfigService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chart(`lthn",{"_index":1183,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.chartseffects",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.chartsstate",{"_index":511,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.directive",{"_index":1105,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.js",{"_index":1136,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chart.reducer",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.register(...registerables",{"_index":1163,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.service",{"_index":1081,"title":{},"body":{"directives/ChartDirective.html":{},"modules/ChartModule.html":{}}}],["chartconfiginterface",{"_index":1049,"title":{"interfaces/ChartConfigInterface.html":{}},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartdata",{"_index":1107,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartdifficulty",{"_index":1056,"title":{"interfaces/ChartDifficulty.html":{}},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartsEffects.html":{}}}],["chartdifficultyreducer",{"_index":1274,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultyreducer(state",{"_index":1278,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultystate",{"_index":1060,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{}}}],["chartdirective",{"_index":129,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["chartelement",{"_index":1064,"title":{},"body":{"directives/ChartDirective.html":{}}}],["chartinstances",{"_index":1108,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartjs",{"_index":1145,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chartmeta",{"_index":1109,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartmodule",{"_index":947,"title":{"modules/ChartModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartnetworkdifficulty",{"_index":1255,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultyloadrequested",{"_index":1230,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystartpolling",{"_index":1209,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystoppolling",{"_index":1210,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["charts",{"_index":506,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ChartService.html":{}}}],["chartsactions",{"_index":1261,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultyloadfailure",{"_index":1253,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadrequested",{"_index":1224,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadsuccess",{"_index":1250,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["chartsactions.chartnetworkdifficultystartpolling",{"_index":1873,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultystoppedpolling",{"_index":1227,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultystoppolling",{"_index":1875,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartseffects",{"_index":1207,"title":{"injectables/ChartsEffects.html":{}},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty",{"_index":1242,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty$.next(true",{"_index":1223,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartservice",{"_index":834,"title":{"injectables/ChartService.html":{}},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"overview.html":{}}}],["chartsstate",{"_index":1269,"title":{"interfaces/ChartsState.html":{}},"body":{"interfaces/ChartsState.html":{}}}],["chartsubscriptions",{"_index":1110,"title":{},"body":{"injectables/ChartService.html":{}}}],["check",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{}}}],["checks",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1287,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["circumstances",{"_index":2622,"title":{},"body":{"components/UserComponent.html":{}}}],["class",{"_index":67,"title":{"classes/Atomic.html":{},"classes/LTHN.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["classes",{"_index":557,"title":{},"body":{"classes/Atomic.html":{},"classes/LTHN.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"overview.html":{}}}],["clear",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/WebStorageService.html":{}}}],["cleartext",{"_index":2610,"title":{},"body":{"components/UserComponent.html":{}}}],["cli",{"_index":1322,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["client",{"_index":2120,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["client.database",{"_index":2293,"title":{},"body":{"components/RootComponent.html":{}}}],["client.database.getstate(`/hive",{"_index":2129,"title":{},"body":{"components/PostComponent.html":{}}}],["close",{"_index":933,"title":{},"body":{"components/BlockchainComponent.html":{},"components/ModalComponent.html":{},"injectables/PluginsService.html":{},"components/RootComponent.html":{}}}],["closebuttonlabel",{"_index":1834,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["closeconnection",{"_index":3006,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closed",{"_index":3040,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["cloud",{"_index":2426,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_download",{"_index":75,"title":{},"body":{"components/AddComponent.html":{},"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cloud_off",{"_index":2427,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_upload",{"_index":750,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cluster_appmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":474,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":476,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":475,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":677,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":678,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule",{"_index":944,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_blockchaincomponent_providers",{"_index":945,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_declarations",{"_index":3173,"title":{},"body":{"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":946,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":1100,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_declarations",{"_index":1103,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_exports",{"_index":1101,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_providers",{"_index":1102,"title":{},"body":{"modules/ChartModule.html":{}}}],["cluster_consolemodule",{"_index":1369,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_declarations",{"_index":1371,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_exports",{"_index":1370,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":1772,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_declarations",{"_index":1773,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":1774,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":1854,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":1856,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":1855,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":2024,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":2026,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":2025,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule",{"_index":2074,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_declarations",{"_index":2075,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_exports",{"_index":2076,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_pluginsmodule_providers",{"_index":2077,"title":{},"body":{"modules/PluginsModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":2140,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_declarations",{"_index":2141,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_rootmodule",{"_index":2333,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_declarations",{"_index":2334,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_imports",{"_index":2335,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootroutingmodule",{"_index":2345,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_rootroutingmodule_imports",{"_index":2346,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_settingsmodule",{"_index":2374,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2376,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2375,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_statusmodule",{"_index":2431,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_declarations",{"_index":2433,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":2432,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2649,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2650,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_vpnmodule",{"_index":2690,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_vpnmodule_declarations",{"_index":2691,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":2786,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_declarations",{"_index":2787,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_exports",{"_index":2788,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":2789,"title":{},"body":{"modules/WalletModule.html":{}}}],["cmd",{"_index":2966,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["code",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["codesign",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["col",{"_index":852,"title":{},"body":{"components/BlockchainComponent.html":{},"components/WalletComponent.html":{}}}],["col.default",{"_index":895,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["col.name",{"_index":914,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["color",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["colorlib",{"_index":1148,"title":{},"body":{"injectables/ChartService.html":{}}}],["colors",{"_index":787,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{}}}],["colour",{"_index":1123,"title":{},"body":{"injectables/ChartService.html":{}}}],["columnmode",{"_index":840,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{}}}],["columns",{"_index":841,"title":{},"body":{"components/BlockchainComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["command",{"_index":1288,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["commonmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["community",{"_index":2674,"title":{},"body":{"components/VpnComponent.html":{}}}],["completed",{"_index":2459,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["component",{"_index":21,"title":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{}}}],["component_template",{"_index":82,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["componentfactoryresolver",{"_index":2084,"title":{},"body":{"injectables/PluginsService.html":{}}}],["components",{"_index":23,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["components/add.component",{"_index":2799,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/new.component",{"_index":2794,"title":{},"body":{"modules/WalletModule.html":{}}}],["components/restore.component",{"_index":2795,"title":{},"body":{"modules/WalletModule.html":{}}}],["componentshow",{"_index":2073,"title":{},"body":{"components/PluginsComponent.html":{}}}],["conf/app.ini",{"_index":2474,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["confidentiality",{"_index":2607,"title":{},"body":{"components/UserComponent.html":{}}}],["confidentially",{"_index":2589,"title":{},"body":{"components/UserComponent.html":{}}}],["config",{"_index":494,"title":{},"body":{"injectables/AppService.html":{},"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["config.interface",{"_index":1883,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.interface.ts",{"_index":1051,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:7",{"_index":1055,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:9",{"_index":1054,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.service",{"_index":1881,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.service.ts",{"_index":771,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:12",{"_index":813,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:50",{"_index":775,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:57",{"_index":781,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:59",{"_index":780,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:61",{"_index":778,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:7",{"_index":784,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:8",{"_index":814,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:9",{"_index":783,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["configiniparser",{"_index":489,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser('\\r\\n",{"_index":2469,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configiniparser.errors.errorduplicatesectionerror",{"_index":2476,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["configs",{"_index":1160,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurations",{"_index":1141,"title":{},"body":{"injectables/ChartService.html":{}}}],["configureoptions",{"_index":773,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["configures",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm",{"_index":1966,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/UserComponent.html":{}}}],["connect",{"_index":3007,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connection",{"_index":3039,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["considered",{"_index":766,"title":{},"body":{"interfaces/Balance.html":{}}}],["console",{"_index":1284,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console'},{'name",{"_index":92,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["console.component",{"_index":1373,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["console.component.html",{"_index":1286,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":1285,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.error('duplicated",{"_index":2477,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.error(error",{"_index":1252,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["console.log",{"_index":1958,"title":{},"body":{"components/NewComponent.html":{}}}],["console.log('blockchaincomponent",{"_index":918,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["console.log('cleaning",{"_index":2497,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('complete",{"_index":3038,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('creating",{"_index":2480,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('done",{"_index":2498,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('e",{"_index":1665,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log('getitem",{"_index":2989,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('http",{"_index":3003,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('keyboard",{"_index":1340,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log('keys",{"_index":2484,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('message",{"_index":3030,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('saving",{"_index":2486,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('setitem",{"_index":2991,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('settingscomponent",{"_index":2361,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log('walletcomponent",{"_index":2739,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.log(`cmd:letheand:${this.command.join",{"_index":1351,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(dat",{"_index":1016,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{}}}],["console.log(data",{"_index":2209,"title":{},"body":{"interfaces/Response.html":{}}}],["console.log(err",{"_index":3035,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":1202,"title":{},"body":{"injectables/ChartService.html":{}}}],["console.log(post",{"_index":2138,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.command.join",{"_index":1362,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(this.router.routerstate.snapshot.url",{"_index":2128,"title":{},"body":{"components/PostComponent.html":{}}}],["console.log(this.rows",{"_index":2560,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["consolecomponent",{"_index":91,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["consolemodule",{"_index":363,"title":{"modules/ConsoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["construction",{"_index":610,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["constructor",{"_index":45,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(actions",{"_index":1214,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["constructor(appfilesystem",{"_index":1611,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["constructor(appservice",{"_index":1382,"title":{},"body":{"injectables/CryptService.html":{}}}],["constructor(authservice",{"_index":1751,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cryptservice",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor(dialog",{"_index":2418,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(dialogref",{"_index":1968,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["constructor(filesystem",{"_index":847,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["constructor(fs",{"_index":2912,"title":{},"body":{"injectables/WalletService.html":{}}}],["constructor(http",{"_index":974,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["constructor(injector",{"_index":2056,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["constructor(modalservice",{"_index":1803,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(name",{"_index":2952,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["constructor(private",{"_index":893,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["constructor(public",{"_index":2425,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(renderer",{"_index":1066,"title":{},"body":{"directives/ChartDirective.html":{}}}],["constructor(router",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["constructor(store",{"_index":1114,"title":{},"body":{"injectables/ChartService.html":{}}}],["constructor(wallet",{"_index":1981,"title":{},"body":{"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(walletrpc",{"_index":1941,"title":{},"body":{"components/NewComponent.html":{}}}],["constructor(ws",{"_index":1292,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["container",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["content",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockchainService.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/PostComponent.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletRpcService.html":{}}}],["content.tofixed(2",{"_index":1720,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["content/html.pipe",{"_index":2034,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/markdown.pipe",{"_index":2037,"title":{},"body":{"modules/PipesModule.html":{}}}],["content/shruggie.pipe",{"_index":2035,"title":{},"body":{"modules/PipesModule.html":{}}}],["contents",{"_index":1592,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["context",{"_index":1931,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["contributing",{"_index":3044,"title":{"contributing.html":{}},"body":{}}],["conversion",{"_index":1395,"title":{},"body":{"injectables/CryptService.html":{}}}],["convert",{"_index":2066,"title":{},"body":{"components/PluginsComponent.html":{}}}],["converted",{"_index":1459,"title":{},"body":{"injectables/CryptService.html":{}}}],["cost",{"_index":2688,"title":{},"body":{"components/VpnComponent.html":{}}}],["count",{"_index":2956,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["create",{"_index":1447,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/PluginsService.html":{},"interfaces/RestoreWallet.html":{},"components/UserComponent.html":{}}}],["createchart",{"_index":1111,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchart(name",{"_index":1117,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchartelement",{"_index":1065,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createchartelement(name",{"_index":1074,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createcustomelement",{"_index":2063,"title":{},"body":{"components/PluginsComponent.html":{}}}],["createcustomelement(walletcomponent",{"_index":2069,"title":{},"body":{"components/PluginsComponent.html":{}}}],["created",{"_index":2485,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"contributing.html":{}}}],["createeffect",{"_index":1217,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["createopenpgp",{"_index":1376,"title":{},"body":{"injectables/CryptService.html":{}}}],["createopenpgp(username",{"_index":1384,"title":{},"body":{"injectables/CryptService.html":{}}}],["createreducer",{"_index":1271,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["creates",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["createsalt",{"_index":1377,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(input",{"_index":1390,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(username",{"_index":2495,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createwallet",{"_index":618,"title":{"interfaces/CreateWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["createwallet(x",{"_index":2827,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["creation",{"_index":2636,"title":{},"body":{"components/UserComponent.html":{}}}],["crypto",{"_index":485,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["crypto/effort.pipe",{"_index":2038,"title":{},"body":{"modules/PipesModule.html":{}}}],["crypto/hashrate.pipe",{"_index":2032,"title":{},"body":{"modules/PipesModule.html":{}}}],["cryptservice",{"_index":691,"title":{"injectables/CryptService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["cryptservice.sha256salty(username",{"_index":1431,"title":{},"body":{"injectables/CryptService.html":{}}}],["current",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/RestoreWallet.html":{}}}],["currentflag",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["currentlanguage",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{},"components/PluginsComponent.html":{}}}],["customelements.define('lthn",{"_index":2071,"title":{},"body":{"components/PluginsComponent.html":{}}}],["cutmiddle",{"_index":1702,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["cutmiddle(string",{"_index":1703,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["d",{"_index":1894,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"pipes/TimeAgoPipe.html":{}}}],["d.gettime",{"_index":2508,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["daemon",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/ProfileComponent.html":{},"modules/StatusModule.html":{}}}],["daemon'},{'name",{"_index":103,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["daltonism",{"_index":2396,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["darkmode",{"_index":2397,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["dat",{"_index":1020,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletService.html":{}}}],["dat.endswith('.keys",{"_index":2934,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.endswith('.txt",{"_index":2935,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.length",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["data",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"modules/BlockchainModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/ProfileState.html":{},"interfaces/Response.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["data.data",{"_index":3000,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["data.description",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["data.hasownproperty(\"txs_as_json",{"_index":1030,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["data.heading",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["data.height",{"_index":905,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["data.length",{"_index":2730,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["data.map((n",{"_index":1933,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["data.result",{"_index":1026,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["data.robots",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["data.txs_as_json",{"_index":1031,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["data/data.module",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["data/debug.rxjs",{"_index":1263,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["data/interface/pagination",{"_index":2948,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["data/plugins",{"_index":2725,"title":{},"body":{"components/WalletComponent.html":{}}}],["data['data",{"_index":2211,"title":{},"body":{"interfaces/Response.html":{}}}],["data['data'].result",{"_index":2213,"title":{},"body":{"interfaces/Response.html":{}}}],["data['in",{"_index":2555,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data['out",{"_index":2556,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data[0",{"_index":1319,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["database",{"_index":2187,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["datamap",{"_index":1052,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamap(data",{"_index":1053,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamodule",{"_index":364,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["dataset",{"_index":1868,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dataset.backgroundcolor",{"_index":1169,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.bordercolor",{"_index":1173,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.yaxisid",{"_index":1180,"title":{},"body":{"injectables/ChartService.html":{}}}],["datasets",{"_index":782,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datastore",{"_index":1130,"title":{},"body":{"injectables/ChartService.html":{}}}],["datatable",{"_index":891,"title":{},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["dataupdates",{"_index":3008,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["date",{"_index":2504,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date(value",{"_index":2503,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date/timeago.pipe",{"_index":2033,"title":{},"body":{"modules/PipesModule.html":{}}}],["day",{"_index":1893,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["days",{"_index":2514,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["dealing",{"_index":2926,"title":{},"body":{"injectables/WalletService.html":{}}}],["debug",{"_index":1220,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{},"miscellaneous/enumerations.html":{}}}],["debug(rxjslogginglevel.debug",{"_index":1248,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["decimation",{"_index":1921,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["declaration",{"_index":2592,"title":{},"body":{"components/UserComponent.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["decode_as_json",{"_index":1029,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["decodeasjson",{"_index":996,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["decorator",{"_index":1713,"title":{},"body":{"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{}}}],["decorators",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/WalletComponent.html":{}}}],["decrypt",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["decrypted",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["decrypted.id",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["decrypted.username",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["decryption",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["decryptionkey",{"_index":2643,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["decryptionkeys",{"_index":1512,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle",{"_index":1378,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle(id",{"_index":1416,"title":{},"body":{"injectables/CryptService.html":{}}}],["deep",{"_index":764,"title":{},"body":{"interfaces/Balance.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["defaultlanguage",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":17,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/TransferSplitIn.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["delete",{"_index":2992,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["deleteaddressbook",{"_index":2808,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["deleteaddressbook(x",{"_index":2829,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dependencies",{"_index":356,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2680,"title":{},"body":{"components/VpnComponent.html":{}}}],["deprecated",{"_index":498,"title":{},"body":{"injectables/AppService.html":{}}}],["deps",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["depth",{"_index":821,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["describes",{"_index":1429,"title":{},"body":{"injectables/CryptService.html":{}}}],["describing",{"_index":1787,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["description_short",{"_index":2043,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["designed",{"_index":2594,"title":{},"body":{"components/UserComponent.html":{}}}],["desktop",{"_index":3157,"title":{},"body":{"index.html":{}}}],["destination",{"_index":566,"title":{"interfaces/Destination.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destinations",{"_index":580,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destroy",{"_index":919,"title":{},"body":{"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["destroysubscriptions",{"_index":1112,"title":{},"body":{"injectables/ChartService.html":{}}}],["destroysubscriptions(name",{"_index":1125,"title":{},"body":{"injectables/ChartService.html":{}}}],["details",{"_index":2628,"title":{},"body":{"components/UserComponent.html":{}}}],["detector",{"_index":2105,"title":{},"body":{"injectables/PluginsService.html":{}}}],["dev:setup",{"_index":3164,"title":{},"body":{"index.html":{}}}],["develop",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{}}}],["development",{"_index":3161,"title":{},"body":{"index.html":{}}}],["devices",{"_index":1438,"title":{},"body":{"injectables/CryptService.html":{}}}],["devproduction",{"_index":3165,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1520,"title":{},"body":{"modules/DataModule.html":{}}}],["di",{"_index":1158,"title":{},"body":{"injectables/ChartService.html":{}}}],["dialog",{"_index":2413,"title":{},"body":{"components/StatusComponent.html":{}}}],["dialog/no",{"_index":2437,"title":{},"body":{"modules/StatusModule.html":{}}}],["dialogdata",{"_index":1540,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dialogref",{"_index":1548,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dictionaries",{"_index":2156,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diff",{"_index":1058,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["difficulty",{"_index":822,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{}}}],["digital",{"_index":2596,"title":{},"body":{"components/UserComponent.html":{}}}],["dir",{"_index":985,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{}}}],["directive",{"_index":80,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["directives",{"_index":128,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["directory",{"_index":1617,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["dirname",{"_index":1589,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["disableclosebutton",{"_index":1837,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disabled",{"_index":2050,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["disabledismissbutton",{"_index":1838,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disablerpclogin",{"_index":2880,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["discussions",{"_index":2300,"title":{},"body":{"components/RootComponent.html":{}}}],["dismiss",{"_index":1802,"title":{},"body":{"components/ModalComponent.html":{}}}],["dismissbuttonlabel",{"_index":1835,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["dispatch",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["display",{"_index":810,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["displaycolors",{"_index":1920,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["displayformats",{"_index":1892,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dkey",{"_index":2174,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["do_not_relay",{"_index":2445,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["doc",{"_index":3167,"title":{},"body":{"index.html":{}}}],["doc:serve",{"_index":3168,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(popup",{"_index":2108,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.body.appendchild(popupel",{"_index":2098,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.body.removechild(popupel",{"_index":2096,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.createelement('lthn",{"_index":2093,"title":{},"body":{"injectables/PluginsService.html":{}}}],["document.getelementbyid(name",{"_index":1998,"title":{},"body":{"components/OpenComponent.html":{}}}],["dom",{"_index":25,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["domsanitizer",{"_index":1574,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashRatePipe.html":{}}}],["don't",{"_index":2608,"title":{},"body":{"components/UserComponent.html":{}}}],["don\\'t",{"_index":2639,"title":{},"body":{"components/UserComponent.html":{}}}],["done",{"_index":932,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["dont",{"_index":2626,"title":{},"body":{"components/UserComponent.html":{},"contributing.html":{}}}],["download",{"_index":982,"title":{},"body":{"injectables/BlockchainService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["downloadcli",{"_index":967,"title":{},"body":{"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["downloadingcli",{"_index":2254,"title":{},"body":{"components/RootComponent.html":{}}}],["drawborder",{"_index":1907,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dto/makeuriin",{"_index":569,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["duration",{"_index":792,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["during",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["dvpn",{"_index":2296,"title":{},"body":{"components/RootComponent.html":{}}}],["dynamic",{"_index":3059,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FileSystemService.html":{},"pipes/HashRatePipe.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["e.domevent",{"_index":1344,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.domevent.keycode",{"_index":1341,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.key",{"_index":1342,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e2e2e2",{"_index":788,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["each",{"_index":1142,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Destination.html":{}}}],["easier",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["ecc",{"_index":1483,"title":{},"body":{"injectables/CryptService.html":{}}}],["effects",{"_index":552,"title":{"injectables/Effects.html":{},"injectables/Effects-1.html":{}},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{}}}],["effectsmodule",{"_index":1521,"title":{},"body":{"modules/DataModule.html":{}}}],["effectsmodule.forroot([...effects",{"_index":1533,"title":{},"body":{"modules/DataModule.html":{}}}],["effort",{"_index":1559,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["effortpipe",{"_index":1556,"title":{"pipes/EffortPipe.html":{}},"body":{"pipes/EffortPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["ekey",{"_index":2175,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["elementref",{"_index":1069,"title":{},"body":{"directives/ChartDirective.html":{}}}],["elements",{"_index":797,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["elmref",{"_index":1068,"title":{},"body":{"directives/ChartDirective.html":{}}}],["empty",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["en",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["enable",{"_index":1976,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["enabled",{"_index":1922,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["enabledblocking",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encapsulation",{"_index":1282,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encoded",{"_index":2449,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["encrypt",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["encrypted",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryption",{"_index":1450,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryptionkey",{"_index":1493,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkey.length",{"_index":1496,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkeys",{"_index":1501,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle",{"_index":1379,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle(id",{"_index":1432,"title":{},"body":{"injectables/CryptService.html":{}}}],["end_height",{"_index":991,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["endpoints",{"_index":3160,"title":{},"body":{"index.html":{}}}],["engine",{"_index":3067,"title":{},"body":{"dependencies.html":{}}}],["engineering",{"_index":2166,"title":{},"body":{"components/ProfileComponent.html":{}}}],["english",{"_index":1961,"title":{},"body":{"components/NewComponent.html":{}}}],["enough",{"_index":765,"title":{},"body":{"interfaces/Balance.html":{}}}],["entity",{"_index":1527,"title":{},"body":{"modules/DataModule.html":{}}}],["entityconfig",{"_index":1526,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule",{"_index":1524,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule.forroot(entityconfig",{"_index":1535,"title":{},"body":{"modules/DataModule.html":{}}}],["entries",{"_index":1668,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["enum",{"_index":2049,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/UserOptions.html":{}}}],["enumerations",{"_index":3120,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":493,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"modules/DataModule.html":{}}}],["err",{"_index":3034,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["error",{"_index":1201,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["error(`chart",{"_index":1167,"title":{},"body":{"injectables/ChartService.html":{}}}],["error(`failed",{"_index":1497,"title":{},"body":{"injectables/CryptService.html":{}}}],["escapehtmlpipe",{"_index":1569,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["etc",{"_index":2182,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["ev",{"_index":1343,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.altkey",{"_index":1346,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.ctrlkey",{"_index":1347,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.keycode",{"_index":1349,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.metakey",{"_index":1348,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["even",{"_index":1440,"title":{},"body":{"injectables/CryptService.html":{},"injectables/PluginsService.html":{}}}],["event",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"injectables/PluginsService.html":{}}}],["exactly",{"_index":2685,"title":{},"body":{"components/VpnComponent.html":{}}}],["exists",{"_index":1580,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["exists(pathname",{"_index":1615,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(type",{"_index":1584,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["exitnode",{"_index":2681,"title":{},"body":{"components/VpnComponent.html":{}}}],["explorer",{"_index":921,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["exportchain",{"_index":968,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["exports",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["expose",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["express",{"_index":3081,"title":{},"body":{"dependencies.html":{}}}],["exsist",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exsists",{"_index":1587,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["extends",{"_index":559,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["extra",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["factory",{"_index":2101,"title":{},"body":{"injectables/PluginsService.html":{}}}],["factory.create(this.injector",{"_index":2104,"title":{},"body":{"injectables/PluginsService.html":{}}}],["fail",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":1687,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["false",{"_index":612,"title":{},"body":{"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["family",{"_index":1899,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["favourites",{"_index":2678,"title":{},"body":{"components/VpnComponent.html":{}}}],["feature",{"_index":1977,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["fee",{"_index":581,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["fee_list",{"_index":2576,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["feedback",{"_index":1439,"title":{},"body":{"injectables/CryptService.html":{}}}],["field",{"_index":2380,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["file_open",{"_index":76,"title":{},"body":{"components/AddComponent.html":{}}}],["filename",{"_index":616,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{}}}],["files",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileSystemService.html":{}}}],["filesystem",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["filesystem/file",{"_index":1462,"title":{},"body":{"injectables/CryptService.html":{}}}],["filesysteminterface",{"_index":1577,"title":{"interfaces/FileSystemInterface.html":{}},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["filesystemservice",{"_index":164,"title":{"injectables/FileSystemService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["filesystemwebservice",{"_index":1612,"title":{"injectables/FileSystemWebService.html":{}},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["fill",{"_index":937,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["filled",{"_index":941,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["filter",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GetTransfersIn.html":{},"injectables/WalletEffects.html":{}}}],["filter_by_height",{"_index":1688,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["find",{"_index":1155,"title":{},"body":{"injectables/ChartService.html":{}}}],["first",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{}}}],["flexmodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["folder",{"_index":1591,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["follow,index",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":1897,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["forget",{"_index":2627,"title":{},"body":{"components/UserComponent.html":{}}}],["form",{"_index":1007,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["format",{"_index":989,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{}}}],["formcontrol",{"_index":1755,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["formcontrol('0",{"_index":2224,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(false",{"_index":2230,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(true",{"_index":2226,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formgroup",{"_index":2221,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["framework",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["free",{"_index":2599,"title":{},"body":{"components/UserComponent.html":{}}}],["friendly",{"_index":2176,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["fs",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileSystemService.html":{},"injectables/WalletService.html":{}}}],["full",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"modules/RootRoutingModule.html":{}}}],["function",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["functionality",{"_index":1973,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["functions",{"_index":3129,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funds",{"_index":761,"title":{},"body":{"interfaces/Balance.html":{},"injectables/WalletRpcService.html":{}}}],["g",{"_index":1568,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{}}}],["general",{"_index":2360,"title":{},"body":{"components/SettingsComponent.html":{}}}],["generated",{"_index":2177,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["generatekey",{"_index":1380,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatekey(input",{"_index":1445,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatepaymentid",{"_index":570,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["generating",{"_index":2250,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["generator",{"_index":2164,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["get_tx_hex",{"_index":2446,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["get_tx_key",{"_index":606,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["get_tx_keys",{"_index":2447,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["getaddress",{"_index":2809,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook",{"_index":2810,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook(x",{"_index":2832,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbookout",{"_index":1666,"title":{"interfaces/GetAddressBookOut.html":{}},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["getauthstatus",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getbalance",{"_index":2703,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["getblocks",{"_index":969,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getblocks(start_height",{"_index":990,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getbulkpayments",{"_index":2811,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpayments(x",{"_index":2836,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsin",{"_index":1670,"title":{"interfaces/GetBulkPaymentsIn.html":{}},"body":{"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsout",{"_index":1676,"title":{"interfaces/GetBulkPaymentsOut.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["getchainblocks",{"_index":885,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["getchaininfo",{"_index":886,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["getchild",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(activatedroute",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["getdiscussions('trending",{"_index":2294,"title":{},"body":{"components/RootComponent.html":{}}}],["getfilesystem",{"_index":1627,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["getheight",{"_index":2812,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getinfo",{"_index":970,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getitem",{"_index":2959,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getitem(key",{"_index":2968,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getlength",{"_index":2980,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getpayments",{"_index":2813,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpayments(x",{"_index":2839,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpaymentsin",{"_index":1680,"title":{"interfaces/GetPaymentsIn.html":{}},"body":{"interfaces/GetPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getpaymentsout",{"_index":1682,"title":{"interfaces/GetPaymentsOut.html":{}},"body":{"interfaces/GetPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["gets",{"_index":1129,"title":{},"body":{"injectables/ChartService.html":{},"injectables/WalletService.html":{}}}],["getsub",{"_index":1290,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["getting",{"_index":3042,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["gettransactions",{"_index":971,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["gettransactions(txshashes",{"_index":995,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["gettransferbytxid",{"_index":2814,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransferbytxid(x",{"_index":2841,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers",{"_index":2815,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers(x",{"_index":2844,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfersin",{"_index":1684,"title":{"interfaces/GetTransfersIn.html":{}},"body":{"interfaces/GetTransfersIn.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["gettransfersout",{"_index":1695,"title":{"interfaces/GetTransfersOut.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["getwalletdata",{"_index":2727,"title":{},"body":{"components/WalletComponent.html":{}}}],["getwalletlist",{"_index":2909,"title":{},"body":{"injectables/WalletService.html":{}}}],["git_repo",{"_index":2044,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["github",{"_index":1402,"title":{},"body":{"injectables/CryptService.html":{}}}],["give",{"_index":1159,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["global",{"_index":2403,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["global_index",{"_index":1729,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["globalfontsize",{"_index":2398,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["go",{"_index":2500,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["good",{"_index":1404,"title":{},"body":{"injectables/CryptService.html":{}}}],["grade",{"_index":2631,"title":{},"body":{"components/UserComponent.html":{}}}],["gradient(circle",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":3171,"title":{},"body":{"modules.html":{}}}],["grey_peerlist_size",{"_index":1039,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["gridlines",{"_index":1905,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["group",{"_index":1743,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"injectables/WebStorageService.html":{}}}],["guard",{"_index":620,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handles",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handling",{"_index":2591,"title":{},"body":{"components/UserComponent.html":{}}}],["happen",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["hascli",{"_index":2255,"title":{},"body":{"components/RootComponent.html":{}}}],["hash",{"_index":823,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/TransferOut.html":{}}}],["hashlink",{"_index":1701,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["hashlinkpipe",{"_index":1699,"title":{"pipes/HashLinkPipe.html":{}},"body":{"pipes/HashLinkPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashrate",{"_index":931,"title":{},"body":{"components/BlockchainComponent.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart",{"_index":1153,"title":{},"body":{"injectables/ChartService.html":{}}}],["hashrate.chart.ts",{"_index":1860,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:12",{"_index":1874,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:132",{"_index":1865,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:14",{"_index":1876,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate:true",{"_index":2329,"title":{},"body":{"components/RootComponent.html":{}}}],["hashratepipe",{"_index":848,"title":{"pipes/HashRatePipe.html":{}},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"pipes/HashRatePipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["headers",{"_index":1004,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["heading",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["height",{"_index":314,"title":{"interfaces/Height.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"directives/ChartDirective.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Height.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["height:40vh",{"_index":1095,"title":{},"body":{"directives/ChartDirective.html":{}}}],["helper",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["helps",{"_index":2682,"title":{},"body":{"components/VpnComponent.html":{}}}],["here",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["hex",{"_index":603,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["hexadecimal",{"_index":1785,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["hidden",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["hideclosebutton",{"_index":1839,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidedismissbutton",{"_index":1840,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidenavigation",{"_index":2399,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highcontrasttext",{"_index":2400,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highlight",{"_index":2605,"title":{},"body":{"components/UserComponent.html":{}}}],["history",{"_index":2619,"title":{},"body":{"components/UserComponent.html":{}}}],["hiveio/dhive",{"_index":2121,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{},"dependencies.html":{}}}],["hold",{"_index":2609,"title":{},"body":{"components/UserComponent.html":{}}}],["holds",{"_index":1133,"title":{},"body":{"injectables/ChartService.html":{}}}],["home",{"_index":984,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["host",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent.html":{}}}],["hours",{"_index":2512,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["hover",{"_index":790,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hovering",{"_index":794,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hsm/encrypted",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["html.dark",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":976,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclient",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1001,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["httploaderfactory",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["https",{"_index":3159,"title":{},"body":{"index.html":{}}}],["https://anyx.io",{"_index":2124,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1245,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["https://api.hive.blog",{"_index":2122,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.hivekings.com",{"_index":2123,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://api.openhive.network",{"_index":2125,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["https://github.com/snider/plugin",{"_index":2717,"title":{},"body":{"components/WalletComponent.html":{}}}],["https://localhost:36911/daemon/chain/export",{"_index":1017,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/import",{"_index":1018,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/chain/start",{"_index":1013,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["https://localhost:36911/daemon/wallet/json_rpc",{"_index":2876,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/daemon/wallet/rpc",{"_index":2881,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["https://localhost:36911/filesystem",{"_index":1653,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["https://localhost:36911/object",{"_index":2976,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["id",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{},"directives/ChartDirective.html":{},"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Response.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{}}}],["id's",{"_index":2179,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["idea",{"_index":1405,"title":{},"body":{"injectables/CryptService.html":{}}}],["identifiable",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["identify",{"_index":604,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["ids",{"_index":1488,"title":{},"body":{"injectables/CryptService.html":{}}}],["if(dat.length",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["if(data",{"_index":902,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["if(data['data",{"_index":2212,"title":{},"body":{"interfaces/Response.html":{}}}],["if(data['data'].error",{"_index":2210,"title":{},"body":{"interfaces/Response.html":{}}}],["if(data[0",{"_index":1321,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154",{"_index":1324,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(parts.length",{"_index":1327,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(ret",{"_index":2987,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["if(this.attach",{"_index":1318,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(this.child.keyeventinput",{"_index":1338,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(wallet",{"_index":2733,"title":{},"body":{"components/WalletComponent.html":{}}}],["ignored",{"_index":584,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["im",{"_index":1399,"title":{},"body":{"injectables/CryptService.html":{}}}],["image",{"_index":2178,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["img",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":2927,"title":{},"body":{"injectables/WalletService.html":{}}}],["implements",{"_index":28,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["import",{"_index":64,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["import('./blockchain.module').then((m",{"_index":963,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["import('./logs/logs.module').then((m",{"_index":2388,"title":{},"body":{"modules/SettingsModule.html":{}}}],["import('./post.module').then((m",{"_index":2146,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["import('./settings.module').then",{"_index":2391,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["import('./user.module').then((m",{"_index":2666,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["import('./wallet.module').then((m",{"_index":2805,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["important",{"_index":1366,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["importchain",{"_index":972,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imports",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["impose",{"_index":2601,"title":{},"body":{"components/UserComponent.html":{}}}],["inactivitythreshold",{"_index":2949,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["include",{"_index":942,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["including",{"_index":1624,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["incoming",{"_index":1735,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"components/WalletComponent.html":{}}}],["incoming_connections_count",{"_index":1040,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["incomingtransfers",{"_index":2816,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfers(x",{"_index":2846,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfersin",{"_index":1723,"title":{"interfaces/IncomingTransfersIn.html":{}},"body":{"interfaces/IncomingTransfersIn.html":{},"injectables/WalletRpcService.html":{}}}],["incomingtransfersout",{"_index":1727,"title":{"interfaces/IncomingTransfersOut.html":{}},"body":{"interfaces/IncomingTransfersOut.html":{},"injectables/WalletRpcService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["info.alt_blocks_count",{"_index":2311,"title":{},"body":{"components/RootComponent.html":{}}}],["info.difficulty",{"_index":2313,"title":{},"body":{"components/RootComponent.html":{}}}],["info.grey_peerlist_size",{"_index":927,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["info.height",{"_index":923,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["info.incoming_connections_count",{"_index":2315,"title":{},"body":{"components/RootComponent.html":{}}}],["info.outgoing_connections_count",{"_index":2317,"title":{},"body":{"components/RootComponent.html":{}}}],["info.status",{"_index":2319,"title":{},"body":{"components/RootComponent.html":{}}}],["info.target",{"_index":2321,"title":{},"body":{"components/RootComponent.html":{}}}],["info.target_height",{"_index":925,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["info.testnet",{"_index":2323,"title":{},"body":{"components/RootComponent.html":{}}}],["info.tx_count",{"_index":2325,"title":{},"body":{"components/RootComponent.html":{}}}],["info.tx_pool_size",{"_index":2309,"title":{},"body":{"components/RootComponent.html":{}}}],["info.white_peerlist_size",{"_index":2327,"title":{},"body":{"components/RootComponent.html":{}}}],["informed",{"_index":2632,"title":{},"body":{"components/UserComponent.html":{}}}],["inherited",{"_index":1863,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ini",{"_index":495,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["init",{"_index":2362,"title":{},"body":{"components/SettingsComponent.html":{}}}],["initialnavigation",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":1272,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["inject",{"_index":1078,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/RootComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1549,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(platform_id",{"_index":1082,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["injectable",{"_index":481,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["injectable({providedin",{"_index":1818,"title":{},"body":{"components/ModalComponent.html":{}}}],["injectables",{"_index":483,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/PluginsService.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["injector",{"_index":2057,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["input",{"_index":65,"title":{},"body":{"components/AddComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["inputchanged",{"_index":1749,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputs",{"_index":43,"title":{},"body":{"components/AddComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["install",{"_index":1975,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"index.html":{}}}],["instance",{"_index":1121,"title":{},"body":{"injectables/ChartService.html":{}}}],["instanceof",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["instances",{"_index":1137,"title":{},"body":{"injectables/ChartService.html":{}}}],["int",{"_index":583,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["integer",{"_index":1783,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/TransferOut.html":{}}}],["integrated_address",{"_index":1739,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["integratedaddress",{"_index":1737,"title":{"interfaces/IntegratedAddress.html":{}},"body":{"interfaces/IntegratedAddress.html":{},"injectables/WalletRpcService.html":{}}}],["interact",{"_index":1422,"title":{},"body":{"injectables/CryptService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["interface/file",{"_index":1654,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{},"overview.html":{}}}],["interfaces/difficulty.state",{"_index":1264,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["interfaces/user.options",{"_index":2645,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["internal",{"_index":1733,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["intersect",{"_index":1917,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["interval",{"_index":888,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{},"injectables/WalletEffects.html":{}}}],["interval(1000).subscribe(n",{"_index":2283,"title":{},"body":{"components/RootComponent.html":{}}}],["interval(15000).subscribe(n",{"_index":899,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["io",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["isauthenticated",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ischecked",{"_index":845,"title":{},"body":{"components/BlockchainComponent.html":{},"components/WalletComponent.html":{}}}],["ischecked(col",{"_index":850,"title":{},"body":{"components/BlockchainComponent.html":{},"components/WalletComponent.html":{}}}],["isn't",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":1080,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1083,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformserver",{"_index":1150,"title":{},"body":{"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["isplatformserver(this.platformid",{"_index":1199,"title":{},"body":{"injectables/ChartService.html":{}}}],["ispollingactivestats",{"_index":2748,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["issue",{"_index":1403,"title":{},"body":{"injectables/CryptService.html":{}}}],["issues",{"_index":1401,"title":{},"body":{"injectables/CryptService.html":{}}}],["it'll",{"_index":1436,"title":{},"body":{"injectables/CryptService.html":{}}}],["it's",{"_index":2624,"title":{},"body":{"components/UserComponent.html":{}}}],["it\\'s",{"_index":2640,"title":{},"body":{"components/UserComponent.html":{}}}],["item",{"_index":795,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["items",{"_index":2957,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["itself",{"_index":1458,"title":{},"body":{"injectables/CryptService.html":{}}}],["js",{"_index":503,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["json",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["json.parse",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(dat",{"_index":1660,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["json.parse(data.txs_as_json",{"_index":1032,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["json.parse(ret",{"_index":2988,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["json.stringify",{"_index":2492,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["json.stringify(rpcbody('get_transfers')({in",{"_index":2776,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody('getbalance",{"_index":2770,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody(method)(params",{"_index":1022,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["json.stringify(rpcbody(method)(params))).then((data",{"_index":2208,"title":{},"body":{"interfaces/Response.html":{}}}],["jsonrpc",{"_index":2203,"title":{},"body":{"interfaces/Response.html":{}}}],["jszmq",{"_index":3083,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1716,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["keep",{"_index":2676,"title":{},"body":{"components/VpnComponent.html":{}}}],["keephtml",{"_index":1571,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["kept",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":607,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["key(key",{"_index":2970,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key(key:number",{"_index":2983,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key_type",{"_index":2190,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["keys",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["keysize",{"_index":1479,"title":{},"body":{"injectables/CryptService.html":{}}}],["kind",{"_index":3037,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["know",{"_index":2924,"title":{},"body":{"injectables/WalletService.html":{}}}],["knowledge",{"_index":1406,"title":{},"body":{"injectables/CryptService.html":{}}}],["known",{"_index":1992,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletService.html":{}}}],["known_wallets",{"_index":2943,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["knows",{"_index":2106,"title":{},"body":{"injectables/PluginsService.html":{}}}],["kurkle/color",{"_index":1149,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["l337",{"_index":1394,"title":{},"body":{"injectables/CryptService.html":{}}}],["label",{"_index":1175,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["lang",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.de",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.en",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.es",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.fr",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.ru",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.zh",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/NewComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/TransferSplitIn.html":{}}}],["last",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BlockchainComponent.html":{}}}],["last_update_check",{"_index":2047,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["later",{"_index":1415,"title":{},"body":{"injectables/CryptService.html":{}}}],["layout",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"injectables/NetworkHashrateChart.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leave",{"_index":1513,"title":{},"body":{"injectables/CryptService.html":{}}}],["left",{"_index":1887,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["legacy",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["length",{"_index":571,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WebStorageService.html":{}}}],["less",{"_index":1407,"title":{},"body":{"injectables/CryptService.html":{}}}],["lethean",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{},"modules/SettingsModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"index.html":{}}}],["lethean's",{"_index":2593,"title":{},"body":{"components/UserComponent.html":{}}}],["lethean/cli",{"_index":986,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["lethean/users",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{}}}],["lethean\\'s",{"_index":2638,"title":{},"body":{"components/UserComponent.html":{}}}],["letheanconfig",{"_index":486,"title":{},"body":{"injectables/AppService.html":{}}}],["level",{"_index":3152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["levels",{"_index":3126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["limit",{"_index":2297,"title":{},"body":{"components/RootComponent.html":{}}}],["limitations",{"_index":2602,"title":{},"body":{"components/UserComponent.html":{}}}],["line",{"_index":800,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/ConsoleComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:305",{"_index":1329,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["line.split(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154",{"_index":1326,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["linewidth",{"_index":1906,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["lingual",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["links",{"_index":3115,"title":{},"body":{"dependencies.html":{}}}],["list",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"components/VpnComponent.html":{},"injectables/WalletService.html":{}}}],["list(dirname",{"_index":1644,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["list(type",{"_index":1588,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["listen",{"_index":2094,"title":{},"body":{"injectables/PluginsService.html":{}}}],["listfiles",{"_index":1607,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["listfiles(dirname",{"_index":1618,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["lists",{"_index":1991,"title":{},"body":{"components/OpenComponent.html":{}}}],["lite",{"_index":1393,"title":{},"body":{"injectables/CryptService.html":{}}}],["literal",{"_index":1669,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"interfaces/WalletsState.html":{}}}],["live",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":1444,"title":{},"body":{"injectables/CryptService.html":{}}}],["loadchildren",{"_index":962,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["loaded",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OpenComponent.html":{}}}],["loaded_keys",{"_index":2048,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["loaded_wallet",{"_index":2944,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["loader",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["loading",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["loadrequestedchartdifficulty",{"_index":1211,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["loads",{"_index":1119,"title":{},"body":{"injectables/ChartService.html":{}}}],["loadtransactions",{"_index":2536,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["loadtransfers",{"_index":2910,"title":{},"body":{"injectables/WalletService.html":{}}}],["loadtransfers(opts",{"_index":2916,"title":{},"body":{"injectables/WalletService.html":{}}}],["local",{"_index":2186,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["localstorage",{"_index":523,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":521,"title":{},"body":{"interfaces/AppState.html":{}}}],["localstoragesyncreducer",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reducer",{"_index":3138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lock",{"_index":598,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["lock_open",{"_index":2428,"title":{},"body":{"components/StatusComponent.html":{}}}],["locked",{"_index":2629,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":1744,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logentry",{"_index":1741,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logged",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logging",{"_index":3125,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login'},{'name",{"_index":94,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["login(username",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":680,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":1747,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":93,"title":{"components/LoginComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["loginmethod",{"_index":2661,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["loginmethods",{"_index":2662,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["logo",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["logonly",{"_index":1531,"title":{},"body":{"modules/DataModule.html":{}}}],["logout",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["logs",{"_index":507,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/LogEntry.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"modules/SettingsModule.html":{}}}],["logs'},{'name",{"_index":96,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["logs.component",{"_index":1776,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.component.html",{"_index":1768,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1767,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.logsstate",{"_index":512,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs.reducer",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs/logs.module",{"_index":2383,"title":{},"body":{"modules/SettingsModule.html":{}}}],["logscomponent",{"_index":95,"title":{"components/LogsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["logsmodule",{"_index":1771,"title":{"modules/LogsModule.html":{}},"body":{"modules/LogsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsstate",{"_index":1745,"title":{"interfaces/LogsState.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["longer",{"_index":1435,"title":{},"body":{"injectables/CryptService.html":{}}}],["looking",{"_index":1674,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["lthn",{"_index":33,"title":{"classes/LTHN.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/DialogData.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["lthn(this.div(1e8",{"_index":577,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["lthn/rxjs",{"_index":3062,"title":{},"body":{"dependencies.html":{}}}],["lthnchart",{"_index":130,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["lttb",{"_index":1923,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["m",{"_index":1717,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/SettingsRoutingModule.html":{}}}],["m.blockchainmodule",{"_index":964,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["m.logsmodule",{"_index":2389,"title":{},"body":{"modules/SettingsModule.html":{}}}],["m.postmodule",{"_index":2147,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2392,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["m.usermodule",{"_index":2667,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["m.walletmodule",{"_index":2806,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["made",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["magic",{"_index":2621,"title":{},"body":{"components/UserComponent.html":{}}}],["main",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["maintainaspectratio",{"_index":785,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["major",{"_index":865,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["major_version",{"_index":824,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["make",{"_index":463,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{}}}],["makeintegratedaddress",{"_index":2817,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddress(x",{"_index":2848,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddressin",{"_index":1777,"title":{"interfaces/MakeIntegratedAddressIn.html":{}},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"injectables/WalletRpcService.html":{}}}],["makes",{"_index":2683,"title":{},"body":{"components/VpnComponent.html":{}}}],["makeuri",{"_index":2818,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuri(x",{"_index":2850,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuriin",{"_index":568,"title":{"interfaces/MakeUriIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["making",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":748,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["map",{"_index":1131,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["map((payload",{"_index":2778,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["map((res",{"_index":2771,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["markdown",{"_index":1791,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["markdownpipe",{"_index":1789,"title":{"pipes/MarkdownPipe.html":{}},"body":{"pipes/MarkdownPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["marked",{"_index":1794,"title":{},"body":{"pipes/MarkdownPipe.html":{},"dependencies.html":{}}}],["marked(value",{"_index":1796,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["marketplace",{"_index":2673,"title":{},"body":{"components/VpnComponent.html":{}}}],["mat",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{}}}],["mat_dialog_data",{"_index":1544,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matbuttonmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["matcardmodule",{"_index":681,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["match",{"_index":1176,"title":{},"body":{"injectables/ChartService.html":{}}}],["matcheckboxmodule",{"_index":2655,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matdialog",{"_index":2419,"title":{},"body":{"components/StatusComponent.html":{}}}],["matdialogmodule",{"_index":2436,"title":{},"body":{"modules/StatusModule.html":{}}}],["matdialogref",{"_index":1545,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matdividermodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["matexpansionmodule",{"_index":2792,"title":{},"body":{"modules/WalletModule.html":{}}}],["matformfieldmodule",{"_index":2378,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["math.abs((now.gettime",{"_index":2507,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.floor(n.diff",{"_index":1935,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["math.round",{"_index":2506,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(days",{"_index":2518,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(hours",{"_index":2515,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(minutes",{"_index":2513,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(seconds",{"_index":2510,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math/removetrailingzeros.pipe",{"_index":2036,"title":{},"body":{"modules/PipesModule.html":{}}}],["maticonmodule",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matinputmodule",{"_index":685,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matlistmodule",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["matmenumodule",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["matoptionmodule",{"_index":2652,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":2657,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressspinnermodule",{"_index":2342,"title":{},"body":{"modules/RootModule.html":{}}}],["matselectmodule",{"_index":2381,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matsidenav",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":2339,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["mattoolbarmodule",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["mattooltipmodule",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["max",{"_index":1694,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["max_height",{"_index":1689,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["maxage",{"_index":1530,"title":{},"body":{"modules/DataModule.html":{}}}],["maxlength",{"_index":1704,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["maxrotation",{"_index":1904,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["maybe",{"_index":1410,"title":{},"body":{"injectables/CryptService.html":{}}}],["meaningless",{"_index":2611,"title":{},"body":{"components/UserComponent.html":{}}}],["means",{"_index":591,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["member",{"_index":2684,"title":{},"body":{"components/VpnComponent.html":{}}}],["menu",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.blockchain",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.dashboard",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.settings",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.wallet",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["menu_open",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":2766,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["message",{"_index":1499,"title":{},"body":{"injectables/CryptService.html":{},"injectables/PluginsService.html":{},"injectables/WebsocketService.html":{}}}],["meta",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["metadata",{"_index":31,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"modules/DataModule.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["metareducer",{"_index":518,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["metaservice",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":980,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/Response.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["mid",{"_index":1567,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["military",{"_index":2630,"title":{},"body":{"components/UserComponent.html":{}}}],["min",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{}}}],["min_block_height",{"_index":1672,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["min_height",{"_index":1690,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"components/WalletComponent.html":{}}}],["mine",{"_index":751,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["minor",{"_index":867,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["minor_version",{"_index":825,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["minutes",{"_index":2509,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["mirror",{"_index":1911,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["miscellaneous",{"_index":3119,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["missed_tx",{"_index":2530,"title":{},"body":{"interfaces/Transactions.html":{}}}],["mix",{"_index":590,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixin",{"_index":587,"title":{},"body":{"classes/Atomic.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixing",{"_index":592,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mkdir",{"_index":1581,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(dirname",{"_index":1620,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(type",{"_index":1593,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["mmm",{"_index":1895,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modal",{"_index":1798,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":98,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["modal.component.html",{"_index":1799,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":97,"title":{"components/ModalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["modalconfig",{"_index":1816,"title":{"interfaces/ModalConfig.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{}}}],["modalconfig.closebuttonlabel",{"_index":1832,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.dismissbuttonlabel",{"_index":1831,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.modaltitle",{"_index":1830,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":1800,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalmodule",{"_index":1853,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["modalref",{"_index":1801,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalservice",{"_index":1806,"title":{},"body":{"components/ModalComponent.html":{}}}],["modaltitle",{"_index":1836,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["mode",{"_index":1916,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["modify",{"_index":2600,"title":{},"body":{"components/UserComponent.html":{}}}],["module",{"_index":353,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}},"body":{}}],["module/auth/auth.module",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/login.component",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/auth/route.guard",{"_index":961,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/chart/base",{"_index":1880,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart",{"_index":1882,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart.module",{"_index":950,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chart/chart.service",{"_index":879,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["module/chart/data/actions",{"_index":1879,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/root",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/root.component",{"_index":2348,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/root.module",{"_index":2349,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/settings/data",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["module/status/status.module",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":355,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/chart/data",{"_index":525,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/settings/data",{"_index":519,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/user/data/user",{"_index":520,"title":{},"body":{"interfaces/AppState.html":{}}}],["moment",{"_index":1147,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["monero",{"_index":596,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["months",{"_index":2517,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["more",{"_index":1174,"title":{},"body":{"injectables/ChartService.html":{}}}],["mostly",{"_index":1732,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["msg",{"_index":3017,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["much",{"_index":2598,"title":{},"body":{"components/UserComponent.html":{}}}],["multi",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["multiple",{"_index":1424,"title":{},"body":{"injectables/CryptService.html":{}}}],["n.ts",{"_index":1934,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["namelist",{"_index":3141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator",{"_index":1950,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"miscellaneous/functions.html":{}}}],["namenottakenvalidator(namelist",{"_index":3140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator(this.wallet.walletlist",{"_index":1954,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["names",{"_index":2157,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["navigationend",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":929,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["nbsp;&nbsp",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["nearest",{"_index":1915,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["need",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["network",{"_index":2613,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["network/chart/difficulty",{"_index":1247,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["networkdifficulty",{"_index":1138,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["networkerror",{"_index":3002,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["networkhashratechart",{"_index":1115,"title":{"injectables/NetworkHashrateChart.html":{}},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["never",{"_index":2603,"title":{},"body":{"components/UserComponent.html":{}}}],["new",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["new'},{'name",{"_index":100,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["new.component.html",{"_index":1938,"title":{},"body":{"components/NewComponent.html":{}}}],["new_algorithm",{"_index":609,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["newcomponent",{"_index":99,"title":{"components/NewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["newcomponent,restorecomponent,transactionscomponent,opencomponent,routermodule,addcomponent",{"_index":2803,"title":{},"body":{"modules/WalletModule.html":{}}}],["ng",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["ngblockui",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["ngbmodal",{"_index":1804,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodalref",{"_index":1814,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngelement",{"_index":2090,"title":{},"body":{"injectables/PluginsService.html":{}}}],["ngmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["ngonchanges",{"_index":40,"title":{},"body":{"components/AddComponent.html":{}}}],["ngonchanges(changes",{"_index":52,"title":{},"body":{"components/AddComponent.html":{}}}],["ngondestroy",{"_index":846,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["ngrx",{"_index":522,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/component",{"_index":953,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"dependencies.html":{}}}],["ngrx/data",{"_index":1525,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1259,"title":{},"body":{"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":3065,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1523,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"modules/DataModule.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngterminal",{"_index":1305,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ngterminalmodule",{"_index":1374,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["nguniversal/express",{"_index":3066,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":951,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["nodaemonrunningdialog",{"_index":101,"title":{"components/NoDaemonRunningDialog.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["node",{"_index":3095,"title":{},"body":{"dependencies.html":{}}}],["nodes",{"_index":2169,"title":{},"body":{"components/ProfileComponent.html":{},"components/VpnComponent.html":{}}}],["nofollow,noindex",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["nonce",{"_index":826,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["none",{"_index":3128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["normalized",{"_index":786,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["note",{"_index":2544,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["nothing",{"_index":1514,"title":{},"body":{"injectables/CryptService.html":{}}}],["notifier",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"components/OpenComponent.html":{},"dependencies.html":{}}}],["notifiermodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["notifiermodule.withconfig",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["notifierservice",{"_index":1982,"title":{},"body":{"components/OpenComponent.html":{}}}],["now",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/TimeAgoPipe.html":{}}}],["npm",{"_index":3163,"title":{},"body":{"index.html":{}}}],["null",{"_index":1516,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"pipes/ShruggiePipe.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{}}}],["num_txes",{"_index":827,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["number",{"_index":62,"title":{},"body":{"components/AddComponent.html":{},"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["number(this",{"_index":578,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["number.isnan(seconds",{"_index":2522,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["number:'1.0",{"_index":2330,"title":{},"body":{"components/RootComponent.html":{},"components/TransactionsComponent.html":{}}}],["number:\\'1.0",{"_index":2331,"title":{},"body":{"components/RootComponent.html":{},"components/TransactionsComponent.html":{}}}],["object",{"_index":777,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["object.values(data).flat",{"_index":2559,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["observable",{"_index":870,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{}}}],["observables",{"_index":1134,"title":{},"body":{"injectables/ChartService.html":{}}}],["of(chartsactions.chartnetworkdifficultyloadfailure({error",{"_index":1268,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["of(walletactions.walletfailure({error",{"_index":2780,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["offsetgridlines",{"_index":1909,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["oftype",{"_index":1258,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["oftype('[settings",{"_index":2369,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype('[wallet",{"_index":2753,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultyloadrequested",{"_index":1229,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystartpolling",{"_index":1219,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystoppolling",{"_index":1226,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(walletactions.walletloaddata",{"_index":2764,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstartpolling",{"_index":2757,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstoppolling",{"_index":2761,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["omit",{"_index":2251,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["on(chartsactions.chartnetworkdifficultyloadfailure",{"_index":1276,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["onchanges",{"_index":30,"title":{},"body":{"components/AddComponent.html":{}}}],["onclose",{"_index":1841,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["ondestroy",{"_index":833,"title":{},"body":{"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/WalletComponent.html":{}}}],["ondismiss",{"_index":1842,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["one",{"_index":647,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["onnoclick",{"_index":1550,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["open",{"_index":50,"title":{},"body":{"components/AddComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["open'},{'name",{"_index":105,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["open.component.html",{"_index":1979,"title":{},"body":{"components/OpenComponent.html":{}}}],["opencomponent",{"_index":104,"title":{"components/OpenComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["opened",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/WalletRpcService.html":{}}}],["openedwallet",{"_index":2699,"title":{},"body":{"components/WalletComponent.html":{}}}],["openned",{"_index":2835,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openpgp",{"_index":487,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["openwallet",{"_index":615,"title":{"interfaces/OpenWallet.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["openwallet(key",{"_index":2710,"title":{},"body":{"components/WalletComponent.html":{}}}],["openwallet(req",{"_index":2918,"title":{},"body":{"injectables/WalletService.html":{}}}],["openwallet(x",{"_index":2852,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["option",{"_index":1235,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["options.pollinginterval).pipe",{"_index":1240,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["opts",{"_index":2537,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["orchestrates",{"_index":2925,"title":{},"body":{"injectables/WalletService.html":{}}}],["orphan_status",{"_index":828,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["other(method",{"_index":2854,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["otherwise",{"_index":2572,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["out",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["outdated",{"_index":2052,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["outgoing_connections_count",{"_index":1041,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["outpouts",{"_index":588,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["output",{"_index":1491,"title":{},"body":{"injectables/CryptService.html":{}}}],["outputs",{"_index":2565,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["overflow",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["overlay",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":779,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["overview",{"_index":3172,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1719,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/PostRoutingModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.addsection('daemon",{"_index":2470,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.set('daemon",{"_index":2471,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["p.stringify('\\r\\n",{"_index":2475,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["package",{"_index":3048,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["page",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/UserComponent.html":{}}}],["pagenumber",{"_index":2008,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pages",{"_index":2017,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pagination",{"_index":2950,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptions",{"_index":2005,"title":{"classes/PaginatorOptions.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptionsinterface",{"_index":2007,"title":{"classes/PaginatorOptionsInterface.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["panel",{"_index":2386,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["param",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":978,"title":{},"body":{"injectables/BlockchainService.html":{},"interfaces/Response.html":{}}}],["parseint(value",{"_index":2198,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["parser",{"_index":496,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["parseuri",{"_index":613,"title":{"interfaces/ParseUri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["parseuri(x",{"_index":2857,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["parsing",{"_index":1885,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["parts",{"_index":1325,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["pass",{"_index":1487,"title":{},"body":{"injectables/CryptService.html":{}}}],["pass')).value",{"_index":1999,"title":{},"body":{"components/OpenComponent.html":{}}}],["passphrase",{"_index":1417,"title":{},"body":{"injectables/CryptService.html":{}}}],["password",{"_index":617,"title":{},"body":{"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"interfaces/UserOptions.html":{},"injectables/WalletEffects.html":{},"miscellaneous/enumerations.html":{}}}],["password_confirm",{"_index":1939,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["passwordless",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordrepeat",{"_index":1748,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["path",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["path(filename",{"_index":1647,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["path(type",{"_index":1596,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["pathmatch",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["pathname",{"_index":1585,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["payload",{"_index":1249,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WebStorageService.html":{}}}],["payload}).then((data",{"_index":2999,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payment",{"_index":1678,"title":{"interfaces/Payment.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{}}}],["payment_id",{"_index":12,"title":{},"body":{"interfaces/AddAddressBook.html":{},"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["payment_ids",{"_index":1673,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["payments",{"_index":1675,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["pbkdf2",{"_index":1449,"title":{},"body":{"injectables/CryptService.html":{}}}],["pending",{"_index":1691,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["people",{"_index":1412,"title":{},"body":{"injectables/CryptService.html":{},"contributing.html":{}}}],["per",{"_index":2615,"title":{},"body":{"components/UserComponent.html":{}}}],["perform",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["performs",{"_index":2964,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["persist",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["person_add",{"_index":2165,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personality",{"_index":1425,"title":{},"body":{"injectables/CryptService.html":{}}}],["pi4",{"_index":1442,"title":{},"body":{"injectables/CryptService.html":{}}}],["pipe",{"_index":1246,"title":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}},"body":{"injectables/ChartsEffects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletEffects.html":{}}}],["pipe(filter((event",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["pipehashrate",{"_index":842,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["pipes",{"_index":1557,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["pipes/pipes.module",{"_index":2144,"title":{},"body":{"modules/PostModule.html":{}}}],["pipesmodule",{"_index":954,"title":{"modules/PipesModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":878,"title":{},"body":{"components/BlockchainComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["placeholder",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1079,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{}}}],["platformid",{"_index":1070,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["please",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["plugin.lthn.chain.table.th.depth",{"_index":864,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.th.difficulty",{"_index":858,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.th.hash",{"_index":859,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.th.height",{"_index":857,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.th.orphan_status",{"_index":860,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.th.reward",{"_index":861,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.th.timestamp",{"_index":862,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.title.blockchain",{"_index":920,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["plugin.lthn.chain.table.title.chain",{"_index":2307,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.table.title.recent",{"_index":930,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.alt_blocks",{"_index":2310,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.difficulty",{"_index":2312,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.grey_peerlist_size",{"_index":926,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.height",{"_index":922,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.incoming_connections_count",{"_index":2314,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.outgoing_connections_count",{"_index":2316,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.status",{"_index":2318,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.target",{"_index":2320,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.target_height",{"_index":924,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.testnet",{"_index":2322,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.top_block_hash",{"_index":2328,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.tx_count",{"_index":2324,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.tx_pool",{"_index":2308,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.chain.words.white_peerlist_size",{"_index":2326,"title":{},"body":{"components/RootComponent.html":{}}}],["plugin.lthn.wallet.button.create",{"_index":1967,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.button.restore",{"_index":2246,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.button.unlock",{"_index":2004,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.label.address",{"_index":2241,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.autosave",{"_index":2245,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.filename",{"_index":1963,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.restore",{"_index":2244,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.spend",{"_index":2242,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.view",{"_index":2243,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.label.wallet",{"_index":1965,"title":{},"body":{"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.new",{"_index":1962,"title":{},"body":{"components/NewComponent.html":{}}}],["plugin.lthn.wallet.titles.restore",{"_index":2240,"title":{},"body":{"components/RestoreComponent.html":{}}}],["plugin.lthn.wallet.titles.unlock",{"_index":2002,"title":{},"body":{"components/OpenComponent.html":{}}}],["plugin.lthn.wallet.titles.wallet",{"_index":2561,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["plugin/console/console.module",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{}}}],["plugin/hashvault/charts/network",{"_index":1152,"title":{},"body":{"injectables/ChartService.html":{}}}],["plugin/lthn/chain/blockchain",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["plugin/lthn/chain/blockchain.service",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/chain/data",{"_index":887,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/chain/interfaces/props/get_info",{"_index":883,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/chain/interfaces/types/blockheader",{"_index":889,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["plugin/lthn/wallet/components/open.component",{"_index":2796,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/components/transactions.component",{"_index":2798,"title":{},"body":{"modules/WalletModule.html":{}}}],["plugin/lthn/wallet/data",{"_index":1994,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["plugin/lthn/wallet/interfaces",{"_index":2550,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["plugin/lthn/wallet/interfaces/requests/restorewallet",{"_index":2877,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["plugin/lthn/wallet/wallet.component",{"_index":2065,"title":{},"body":{"components/PluginsComponent.html":{},"injectables/PluginsService.html":{}}}],["plugin/lthn/wallet/wallet.module",{"_index":2341,"title":{},"body":{"modules/RootModule.html":{}}}],["plugin/lthn/wallet/wallet.service",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["plugin/plugins.module",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin/plugins.service",{"_index":2062,"title":{},"body":{"components/PluginsComponent.html":{},"modules/PluginsModule.html":{}}}],["pluginconfig",{"_index":2700,"title":{},"body":{"components/WalletComponent.html":{}}}],["plugindefinition",{"_index":2041,"title":{"interfaces/PluginDefinition.html":{}},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["plugins",{"_index":174,"title":{"interfaces/Plugins.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{}}}],["plugins'},{'name",{"_index":107,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["plugins.component.html",{"_index":2055,"title":{},"body":{"components/PluginsComponent.html":{}}}],["plugins.component.scss",{"_index":2054,"title":{},"body":{"components/PluginsComponent.html":{}}}],["plugins/lthn/chain/data",{"_index":527,"title":{},"body":{"interfaces/AppState.html":{}}}],["plugins/lthn/wallet/data",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{}}}],["pluginscomponent",{"_index":106,"title":{"components/PluginsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["pluginsmodule",{"_index":365,"title":{"modules/PluginsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginsservice",{"_index":2058,"title":{"injectables/PluginsService.html":{}},"body":{"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"overview.html":{}}}],["pluginstatus",{"_index":2046,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pluginstatus.active",{"_index":2720,"title":{},"body":{"components/WalletComponent.html":{}}}],["point",{"_index":798,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WebsocketService.html":{}}}],["polling",{"_index":1238,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["pollinginterval",{"_index":1061,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["pollingstartaction",{"_index":1861,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollingstopaction",{"_index":1862,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollinguntil",{"_index":1213,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["polyfill",{"_index":3085,"title":{},"body":{"dependencies.html":{}}}],["pool",{"_index":1692,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["poolstatsstate",{"_index":1273,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["popup",{"_index":2099,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupcomponent",{"_index":2067,"title":{},"body":{"components/PluginsComponent.html":{}}}],["popupcomponentref",{"_index":2103,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel",{"_index":2092,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel.addeventlistener('closed",{"_index":2095,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupel.message",{"_index":2097,"title":{},"body":{"injectables/PluginsService.html":{}}}],["popupelement",{"_index":2068,"title":{},"body":{"components/PluginsComponent.html":{}}}],["position",{"_index":1093,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["possible",{"_index":2625,"title":{},"body":{"components/UserComponent.html":{}}}],["post",{"_index":1012,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"injectables/WalletRpcService.html":{}}}],["post'},{'name",{"_index":109,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["post('https://localhost:36911/daemon/chain/json_rpc",{"_index":1021,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["post(`${this.apiurl}/list",{"_index":1659,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/read",{"_index":1661,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`https://localhost:36911/update/cli",{"_index":1019,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["post.component",{"_index":2143,"title":{},"body":{"modules/PostModule.html":{}}}],["post.component.html",{"_index":2111,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.scss",{"_index":2110,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].author",{"_index":2137,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].body",{"_index":2133,"title":{},"body":{"components/PostComponent.html":{}}}],["post.content[slug].title",{"_index":2135,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":108,"title":{"components/PostComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["postmodule",{"_index":2139,"title":{"modules/PostModule.html":{}},"body":{"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["postroutingmodule",{"_index":459,"title":{"modules/PostRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules.html":{}}}],["posts",{"_index":2256,"title":{},"body":{"components/RootComponent.html":{}}}],["prefrences",{"_index":2181,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["prev_hash",{"_index":829,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["primary",{"_index":2249,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["printable",{"_index":1345,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["priority",{"_index":2448,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["privacy",{"_index":2587,"title":{},"body":{"components/UserComponent.html":{}}}],["private",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["privatekey",{"_index":1505,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pro",{"_index":1901,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["processingform",{"_index":2464,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile",{"_index":2149,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile'},{'name",{"_index":112,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profile.component.html",{"_index":2151,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":2150,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["profiles",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{}}}],["profilestate",{"_index":2170,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["promise(f",{"_index":2287,"title":{},"body":{"components/RootComponent.html":{}}}],["promise(resolve",{"_index":1819,"title":{},"body":{"components/ModalComponent.html":{}}}],["prop",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainComponent.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["protect",{"_index":2595,"title":{},"body":{"components/UserComponent.html":{}}}],["protected",{"_index":1387,"title":{},"body":{"injectables/CryptService.html":{}}}],["protecting",{"_index":2586,"title":{},"body":{"components/UserComponent.html":{}}}],["protects",{"_index":1489,"title":{},"body":{"injectables/CryptService.html":{}}}],["provide",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{}}}],["provided",{"_index":1132,"title":{},"body":{"injectables/ChartService.html":{}}}],["providedin",{"_index":497,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["provider",{"_index":2679,"title":{},"body":{"components/VpnComponent.html":{}}}],["providers",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"modules/PluginsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["public",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["publically",{"_index":2570,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["publickey",{"_index":2481,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["purchase",{"_index":2618,"title":{},"body":{"components/UserComponent.html":{}}}],["pure",{"_index":1565,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["purposes",{"_index":1451,"title":{},"body":{"injectables/CryptService.html":{}}}],["querykey",{"_index":2819,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykey(x",{"_index":2859,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykeyin",{"_index":2188,"title":{"interfaces/QueryKeyIn.html":{}},"body":{"interfaces/QueryKeyIn.html":{},"injectables/WalletRpcService.html":{}}}],["querykeyout",{"_index":2191,"title":{"interfaces/QueryKeyOut.html":{}},"body":{"interfaces/QueryKeyOut.html":{},"injectables/WalletRpcService.html":{}}}],["quick",{"_index":1441,"title":{},"body":{"injectables/CryptService.html":{}}}],["r",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"pipes/EffortPipe.html":{}}}],["radial",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":799,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["random",{"_index":599,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["random.hex(false)(random.engines.nativemath",{"_index":574,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["randomalias",{"_index":2152,"title":{},"body":{"components/ProfileComponent.html":{}}}],["raw",{"_index":988,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["reactivecomponentmodule",{"_index":952,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{}}}],["reactiveformsmodule",{"_index":683,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["read",{"_index":1582,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["read(filename",{"_index":1649,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["read(type",{"_index":1599,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["readfile",{"_index":1608,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readfile(filename",{"_index":1622,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readme_list",{"_index":2045,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/WalletComponent.html":{}}}],["reason",{"_index":1420,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"injectables/WebsocketService.html":{}}}],["receive",{"_index":1784,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["received",{"_index":3031,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["recenttxs",{"_index":843,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["recipient",{"_index":1786,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recipient_name",{"_index":1780,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recover",{"_index":2623,"title":{},"body":{"components/UserComponent.html":{}}}],["redirected",{"_index":2635,"title":{},"body":{"components/UserComponent.html":{}}}],["reducer",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1277,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["ref",{"_index":1294,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["refrence",{"_index":3158,"title":{},"body":{"index.html":{}}}],["region",{"_index":2687,"title":{},"body":{"components/VpnComponent.html":{}}}],["register",{"_index":2070,"title":{},"body":{"components/PluginsComponent.html":{}}}],["registerables",{"_index":1144,"title":{},"body":{"injectables/ChartService.html":{}}}],["rehydrate",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{}}}],["relative",{"_index":1094,"title":{},"body":{"directives/ChartDirective.html":{}}}],["relativelinkresolution",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remote",{"_index":2168,"title":{},"body":{"components/ProfileComponent.html":{}}}],["removeitem",{"_index":2960,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeitem(key",{"_index":2972,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeonundefined",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{}}}],["removetrailingzero",{"_index":2194,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["removetrailingzerospipe",{"_index":2027,"title":{"pipes/RemoveTrailingZerosPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"overview.html":{}}}],["renderappview",{"_index":2257,"title":{},"body":{"components/RootComponent.html":{}}}],["renderer",{"_index":1072,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderer2",{"_index":1067,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderfirstrunview",{"_index":2258,"title":{},"body":{"components/RootComponent.html":{}}}],["renderwebview",{"_index":2259,"title":{},"body":{"components/RootComponent.html":{}}}],["replace('o",{"_index":1463,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/a/gi",{"_index":1467,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/e/gi",{"_index":1465,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/l/gi",{"_index":1464,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/s/gi",{"_index":1469,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/t/gi",{"_index":1471,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducable",{"_index":1460,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducible",{"_index":1408,"title":{},"body":{"injectables/CryptService.html":{}}}],["req",{"_index":2866,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["req.address",{"_index":2754,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["req.password",{"_index":2755,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["request",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["request(this.url)('add_address_book",{"_index":2902,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('create_wallet",{"_index":2905,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('delete_address_book",{"_index":2903,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('generate_from_keys",{"_index":2906,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_address_book",{"_index":2901,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_bulk_payments",{"_index":2891,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_payments",{"_index":2890,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfer_by_txid",{"_index":2893,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfers",{"_index":2892,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getaddress",{"_index":2883,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getbalance",{"_index":2882,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getheight",{"_index":2884,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('incoming_transfers",{"_index":2894,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_integrated_address",{"_index":2896,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_uri",{"_index":2899,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('open_wallet",{"_index":2904,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('parse_uri",{"_index":2900,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('query_key",{"_index":2895,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('split_integrated_address",{"_index":2897,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('stop_wallet",{"_index":2898,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('store",{"_index":2889,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_all",{"_index":2888,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_dust",{"_index":2887,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer",{"_index":2885,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer_split",{"_index":2886,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)(method",{"_index":2907,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["requested",{"_index":1598,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["require('axios').default",{"_index":2206,"title":{},"body":{"interfaces/Response.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{}}}],["require('crypto",{"_index":502,"title":{},"body":{"injectables/AppService.html":{}}}],["require('openpgp",{"_index":500,"title":{},"body":{"injectables/AppService.html":{}}}],["required",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["requires",{"_index":1419,"title":{},"body":{"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["res['result",{"_index":2775,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["reset",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":1823,"title":{},"body":{"components/ModalComponent.html":{}}}],["response",{"_index":1194,"title":{"interfaces/Response.html":{}},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/Response.html":{}}}],["responsetype",{"_index":1009,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["responsiveanimationduration",{"_index":796,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["restore",{"_index":72,"title":{},"body":{"components/AddComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletService.html":{}}}],["restore'},{'name",{"_index":114,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["restore.component.html",{"_index":2215,"title":{},"body":{"components/RestoreComponent.html":{}}}],["restore_height",{"_index":2223,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["restorecomponent",{"_index":113,"title":{"components/RestoreComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["restorewallet",{"_index":2217,"title":{"interfaces/RestoreWallet.html":{}},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["restorewallet(req",{"_index":2920,"title":{},"body":{"injectables/WalletService.html":{}}}],["restorewallet(x",{"_index":2861,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["restorewalletform",{"_index":2216,"title":{},"body":{"components/RestoreComponent.html":{}}}],["result",{"_index":1595,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"components/ModalComponent.html":{},"interfaces/Response.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":2985,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["ret.data",{"_index":3001,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["return",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["revocationcertificate",{"_index":2482,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["reward",{"_index":830,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{}}}],["rgba(21",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":1912,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(255,255,255,0.5",{"_index":1919,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(8",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["rgbstring",{"_index":1172,"title":{},"body":{"injectables/ChartService.html":{}}}],["rick's",{"_index":752,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["rick\\'s",{"_index":753,"title":{},"body":{"components/BackupComponent.html":{},"components/SettingsComponent-1.html":{}}}],["right",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["robots",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["root",{"_index":465,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["root.component",{"_index":2338,"title":{},"body":{"modules/RootModule.html":{}}}],["root.component.html",{"_index":2253,"title":{},"body":{"components/RootComponent.html":{}}}],["rootcomponent",{"_index":115,"title":{"components/RootComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["rootmodule",{"_index":2332,"title":{"modules/RootModule.html":{}},"body":{"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rootroutingmodule",{"_index":440,"title":{"modules/RootRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["route",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["routermodule",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":959,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routing",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["routing.module",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["row",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":2535,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rpc",{"_index":758,"title":{},"body":{"interfaces/Balance.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rpc.ts",{"_index":2202,"title":{},"body":{"interfaces/Response.html":{}}}],["rpcbindport",{"_index":2878,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["rpcbody",{"_index":880,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/Response.html":{},"injectables/WalletEffects.html":{}}}],["rsa",{"_index":1482,"title":{},"body":{"injectables/CryptService.html":{}}}],["rsabits",{"_index":1484,"title":{},"body":{"injectables/CryptService.html":{}}}],["rt",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["rt.data.subscribe((data",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":2401,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["run",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/PluginsService.html":{},"components/ProfileComponent.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["running.component",{"_index":2438,"title":{},"body":{"modules/StatusModule.html":{}}}],["running.component.html",{"_index":1547,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts",{"_index":1542,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:13",{"_index":1969,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:15",{"_index":1972,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:16",{"_index":1971,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:19",{"_index":1970,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["runtime",{"_index":3153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxjs",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"injectables/ChartsEffects.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["rxjs/websocket",{"_index":3021,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rxjslogginglevel",{"_index":1262,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rxjslogginglevel.debug",{"_index":1234,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["rxjslogginglevel.info",{"_index":1221,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["s.unsubscribe",{"_index":2278,"title":{},"body":{"components/RootComponent.html":{}}}],["safe",{"_index":767,"title":{},"body":{"interfaces/Balance.html":{}}}],["salt",{"_index":1398,"title":{},"body":{"injectables/CryptService.html":{}}}],["salted",{"_index":1448,"title":{},"body":{"injectables/CryptService.html":{}}}],["salter",{"_index":1413,"title":{},"body":{"injectables/CryptService.html":{}}}],["salts",{"_index":1409,"title":{},"body":{"injectables/CryptService.html":{}}}],["same",{"_index":1397,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"components/VpnComponent.html":{}}}],["samples",{"_index":1924,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sanitizer",{"_index":1575,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["sans",{"_index":1900,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["save",{"_index":1604,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"interfaces/ProfileState.html":{},"interfaces/RestoreWallet.html":{}}}],["scales",{"_index":804,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["scared",{"_index":3045,"title":{},"body":{"contributing.html":{}}}],["screen",{"_index":1367,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["searchable",{"_index":2571,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["seconds",{"_index":2505,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["secret",{"_index":2614,"title":{},"body":{"components/UserComponent.html":{}}}],["section",{"_index":2478,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["security",{"_index":2597,"title":{},"body":{"components/UserComponent.html":{}}}],["seed",{"_index":619,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["select",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["select(selectchartdata(this.chartmeta[name].key",{"_index":1190,"title":{},"body":{"injectables/ChartService.html":{}}}],["select(selectchartoptions('networkdifficulty",{"_index":1233,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectchartdata",{"_index":1151,"title":{},"body":{"injectables/ChartService.html":{}}}],["selectchartoptions",{"_index":1265,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selecthashrateminersoptions",{"_index":1236,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectlanguage",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenuvisibility",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["selectopenedwalletdata",{"_index":2783,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["selector",{"_index":32,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["selectors",{"_index":1266,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["selectwalletdata",{"_index":2784,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["selectwallettransactions",{"_index":2551,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["send",{"_index":1538,"title":{},"body":{"interfaces/Destination.html":{},"injectables/WalletRpcService.html":{}}}],["sending",{"_index":608,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["sendmessage",{"_index":3009,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmessage(msg",{"_index":3015,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sent",{"_index":2745,"title":{},"body":{"components/WalletComponent.html":{}}}],["separator",{"_index":2161,"title":{},"body":{"components/ProfileComponent.html":{}}}],["server",{"_index":479,"title":{},"body":{"modules/AppServerModule.html":{},"interfaces/RestoreWallet.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["servermodule",{"_index":478,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["service/crypt.service",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["service/filesystem/file",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["service/json",{"_index":881,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["service/ui/modal/modal.component",{"_index":1858,"title":{},"body":{"modules/ModalModule.html":{},"components/WalletComponent.html":{}}}],["service/ui/modal/modal.module",{"_index":2797,"title":{},"body":{"modules/WalletModule.html":{}}}],["service/ui/modal/modalconfig",{"_index":1817,"title":{},"body":{"components/ModalComponent.html":{}}}],["service/wallet.rpc.service",{"_index":1949,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["service/web",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{}}}],["service/websocket.service",{"_index":1312,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["services",{"_index":1162,"title":{},"body":{"injectables/ChartService.html":{},"components/VpnComponent.html":{}}}],["session",{"_index":759,"title":{},"body":{"interfaces/Balance.html":{}}}],["set",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"injectables/PluginsService.html":{}}}],["setinterval",{"_index":1314,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["setitem",{"_index":2961,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setitem(key",{"_index":2974,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setrxjslogginglevel",{"_index":3136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(0",{"_index":3155,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(4",{"_index":3154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(level",{"_index":3150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settargettabindex",{"_index":42,"title":{},"body":{"components/AddComponent.html":{}}}],["settimeout(f",{"_index":2288,"title":{},"body":{"components/RootComponent.html":{}}}],["setting",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["setting_tab",{"_index":2356,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":508,"title":{},"body":{"interfaces/AppState.html":{},"components/BackupComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/WalletComponent.html":{}}}],["settings'},{'name",{"_index":118,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["settings.component",{"_index":2384,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":2355,"title":{},"body":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}}}],["settings.component.scss",{"_index":2354,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.reducer",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingseffects",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingsstate",{"_index":513,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingscomponent",{"_index":117,"title":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["settingseffects",{"_index":2366,"title":{"injectables/SettingsEffects.html":{}},"body":{"injectables/SettingsEffects.html":{}}}],["settingsmodule",{"_index":2373,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":461,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{}}}],["settingsstate",{"_index":2393,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/SettingsState.html":{}}}],["setup",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["setupcallbacks",{"_index":774,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["setupdatasubscription",{"_index":1113,"title":{},"body":{"injectables/ChartService.html":{}}}],["setupdatasubscription(name",{"_index":1127,"title":{},"body":{"injectables/ChartService.html":{}}}],["several",{"_index":1734,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["sha256",{"_index":1456,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256(input",{"_index":1474,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty",{"_index":1381,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty(input",{"_index":1454,"title":{},"body":{"injectables/CryptService.html":{}}}],["share",{"_index":1736,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["shared",{"_index":2185,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["shell/bootstrap",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldclose",{"_index":1843,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shoulddismiss",{"_index":1844,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["show",{"_index":2072,"title":{},"body":{"components/PluginsComponent.html":{}}}],["showascomponent",{"_index":2081,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showascomponent(message",{"_index":2086,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showaselement",{"_index":2082,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showaselement(message",{"_index":2088,"title":{},"body":{"injectables/PluginsService.html":{}}}],["showtx",{"_index":2701,"title":{},"body":{"components/WalletComponent.html":{}}}],["shrug",{"_index":2405,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["shruggiepipe",{"_index":2028,"title":{"pipes/ShruggiePipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ShruggiePipe.html":{},"overview.html":{}}}],["sidenav",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["signals",{"_index":3036,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signatures",{"_index":1510,"title":{},"body":{"injectables/CryptService.html":{}}}],["simplechanges",{"_index":53,"title":{},"body":{"components/AddComponent.html":{}}}],["simply",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":863,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/SettingsState.html":{}}}],["sizing",{"_index":939,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["slow",{"_index":1437,"title":{},"body":{"injectables/CryptService.html":{}}}],["slug",{"_index":2126,"title":{},"body":{"components/PostComponent.html":{}}}],["smarter",{"_index":3047,"title":{},"body":{"contributing.html":{}}}],["socket",{"_index":3005,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["software",{"_index":1974,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"components/UserComponent.html":{}}}],["something",{"_index":1414,"title":{},"body":{"injectables/CryptService.html":{}}}],["soon",{"_index":2637,"title":{},"body":{"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"modules/PluginsModule.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["spangaps",{"_index":1886,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["spend",{"_index":768,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/RestoreWallet.html":{}}}],["spendkey",{"_index":2227,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spent",{"_index":597,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["spinner",{"_index":2344,"title":{},"body":{"modules/RootModule.html":{}}}],["split",{"_index":1427,"title":{},"body":{"injectables/CryptService.html":{}}}],["splitintegratedaddress",{"_index":2820,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddress(x",{"_index":2863,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddressout",{"_index":2407,"title":{"interfaces/SplitIntegratedAddressOut.html":{}},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"injectables/WalletRpcService.html":{}}}],["src/.../app.module.ts",{"_index":3131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug.rxjs.ts",{"_index":3123,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":3132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducer.ts",{"_index":3134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.reducer.ts",{"_index":3135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../state.ts",{"_index":3122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.options.ts",{"_index":3121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":3133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:106",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:113",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:156",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:174",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:99",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.server.module.ts",{"_index":477,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.service.ts",{"_index":484,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:16",{"_index":490,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:17",{"_index":491,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:18",{"_index":488,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/data/data.module.ts",{"_index":1517,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/debug.rxjs.ts",{"_index":3124,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/interface/pagination.ts",{"_index":2006,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:10",{"_index":2018,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:14",{"_index":2013,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:15",{"_index":2015,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:16",{"_index":2016,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:17",{"_index":2011,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:4",{"_index":2019,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:6",{"_index":2020,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:8",{"_index":2021,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/logs/reducer.ts",{"_index":3143,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/logs/state.ts",{"_index":1742,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["src/app/data/plugins/reducer.ts",{"_index":3144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/plugins/state.ts",{"_index":2042,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/reducers/index.ts",{"_index":505,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["src/app/interfaces/file",{"_index":1578,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:11",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:30",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:46",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:60",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/login.component.ts",{"_index":1746,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:11",{"_index":1758,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:12",{"_index":1756,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:13",{"_index":1757,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:14",{"_index":1752,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:19",{"_index":1753,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:24",{"_index":1754,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/route.guard.ts",{"_index":623,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:34",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:8",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/chart/base",{"_index":770,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["src/app/modules/chart/chart",{"_index":1050,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["src/app/modules/chart/chart.directive.ts",{"_index":1063,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:10",{"_index":1073,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:11",{"_index":1071,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:21",{"_index":1076,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:28",{"_index":1075,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:46",{"_index":1077,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.module.ts",{"_index":1104,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/app/modules/chart/chart.service.ts",{"_index":1106,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:125",{"_index":1126,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:19",{"_index":1135,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:20",{"_index":1143,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:26",{"_index":1140,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:34",{"_index":1116,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:54",{"_index":1118,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:98",{"_index":1128,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/data/effects.ts",{"_index":1208,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:112",{"_index":1228,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:124",{"_index":1216,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:14",{"_index":1257,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:39",{"_index":1254,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:99",{"_index":1225,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/interfaces/difficulty.state.ts",{"_index":1057,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["src/app/modules/chart/data/reducer.ts",{"_index":1270,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["src/app/modules/root",{"_index":2347,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["src/app/modules/root.component.ts",{"_index":2252,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:20",{"_index":2276,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:22",{"_index":2275,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:23",{"_index":2274,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:24",{"_index":2272,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:25",{"_index":2273,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:26",{"_index":2271,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:27",{"_index":2262,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:39",{"_index":2264,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:43",{"_index":2265,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:65",{"_index":2266,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:71",{"_index":2267,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:75",{"_index":2263,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:84",{"_index":2269,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:88",{"_index":2270,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:92",{"_index":2268,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.module.ts",{"_index":2337,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/settings/data/settings.effects.ts",{"_index":2367,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:17",{"_index":2368,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:8",{"_index":2372,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.reducer.ts",{"_index":3145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/settings/data/settingsstate.ts",{"_index":2394,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/modules/settings/logs/logs.component.ts",{"_index":1766,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:11",{"_index":1770,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:8",{"_index":1769,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.module.ts",{"_index":1775,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/app/modules/settings/settings",{"_index":2390,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2353,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:13",{"_index":2359,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:17",{"_index":2358,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:9",{"_index":2357,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2377,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/status/dialog/no",{"_index":1541,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["src/app/modules/status/status.component.ts",{"_index":2410,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:10",{"_index":2422,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:11",{"_index":2424,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:12",{"_index":2423,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:13",{"_index":2420,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:15",{"_index":2421,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.module.ts",{"_index":2434,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/app/modules/user/data/profile/effects.ts",{"_index":1552,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/effects.ts:5",{"_index":1553,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/reducer.ts",{"_index":3146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/profile/state.ts",{"_index":2171,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["src/app/modules/user/data/user/effects.ts",{"_index":1554,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/effects.ts:5",{"_index":1555,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/interfaces/user.options.ts",{"_index":2660,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/data/user/reducer.ts",{"_index":3147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/user/state.ts",{"_index":2642,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["src/app/modules/user/profile.component.ts",{"_index":2148,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:15",{"_index":2162,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:19",{"_index":2153,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:23",{"_index":2154,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/user",{"_index":2664,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2458,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:21",{"_index":2583,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:27",{"_index":2584,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:33",{"_index":2585,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:34",{"_index":2581,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:35",{"_index":2582,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:36",{"_index":2579,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:46",{"_index":2580,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2651,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/pipes/content/html.pipe.ts",{"_index":1570,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/html.pipe.ts:8",{"_index":1573,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts",{"_index":1790,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/markdown.pipe.ts:8",{"_index":1793,"title":{},"body":{"pipes/MarkdownPipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts",{"_index":2404,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts:5",{"_index":2406,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts",{"_index":1558,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts:7",{"_index":1563,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts",{"_index":1700,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts:15",{"_index":1705,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts:7",{"_index":1706,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts",{"_index":1712,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts:8",{"_index":1714,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts",{"_index":2525,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts:7",{"_index":2527,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts",{"_index":2501,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:10",{"_index":2502,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts",{"_index":2193,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts:7",{"_index":2195,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":2031,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/plugins/console/console.component.ts",{"_index":1279,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:16",{"_index":1307,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:18",{"_index":1298,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:19",{"_index":1308,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:20",{"_index":1296,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:29",{"_index":1304,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:57",{"_index":1302,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:61",{"_index":1300,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.component.ts:66",{"_index":1303,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/plugins/console/console.module.ts",{"_index":1372,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/plugins/hashvault/charts/network",{"_index":1859,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["src/app/plugins/hive/post/post",{"_index":2145,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["src/app/plugins/hive/post/post.component.ts",{"_index":2109,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:11",{"_index":2118,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:12",{"_index":2119,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:13",{"_index":2117,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:14",{"_index":2116,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:15",{"_index":2114,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.component.ts:19",{"_index":2115,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/plugins/hive/post/post.module.ts",{"_index":2142,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain",{"_index":960,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts",{"_index":832,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:103",{"_index":853,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:24",{"_index":875,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:26",{"_index":869,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:41",{"_index":874,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:42",{"_index":871,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:43",{"_index":873,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:45",{"_index":877,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:46",{"_index":872,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:47",{"_index":849,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:50",{"_index":876,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:63",{"_index":854,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:83",{"_index":856,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.component.ts:95",{"_index":851,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/plugins/lthn/chain/blockchain.module.ts",{"_index":948,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts",{"_index":965,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:10",{"_index":975,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:102",{"_index":997,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:112",{"_index":992,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:13",{"_index":1000,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:34",{"_index":987,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:55",{"_index":999,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:78",{"_index":981,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:91",{"_index":979,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/blockchain.service.ts:96",{"_index":994,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/plugins/lthn/chain/data/reducer.ts",{"_index":3148,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/chain/interfaces/props/get_info.ts",{"_index":1037,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["src/app/plugins/lthn/chain/interfaces/props/transactions.ts",{"_index":2529,"title":{},"body":{"interfaces/Transactions.html":{}}}],["src/app/plugins/lthn/chain/interfaces/types/blockheader.ts",{"_index":819,"title":{},"body":{"interfaces/BlockHeader.html":{}}}],["src/app/plugins/lthn/vpn/vpn",{"_index":2695,"title":{},"body":{"modules/VpnRoutingModule.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts",{"_index":2668,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:11",{"_index":2672,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.component.ts:8",{"_index":2671,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/plugins/lthn/vpn/vpn.module.ts",{"_index":2692,"title":{},"body":{"modules/VpnModule.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts",{"_index":27,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:13",{"_index":60,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:17",{"_index":61,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:27",{"_index":54,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:8",{"_index":51,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/add.component.ts:9",{"_index":47,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts",{"_index":744,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:10",{"_index":747,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/backup.component.ts:7",{"_index":746,"title":{},"body":{"components/BackupComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts",{"_index":1937,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:14",{"_index":1948,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:15",{"_index":1947,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:16",{"_index":1943,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:19",{"_index":1946,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/new.component.ts:25",{"_index":1945,"title":{},"body":{"components/NewComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts",{"_index":1978,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:14",{"_index":1984,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:16",{"_index":1989,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:17",{"_index":1990,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:23",{"_index":1983,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:33",{"_index":1985,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/open.component.ts:42",{"_index":1987,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts",{"_index":2214,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:13",{"_index":2218,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:18",{"_index":2219,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/restore.component.ts:32",{"_index":2220,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts",{"_index":2363,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:10",{"_index":2365,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/settings.component.ts:7",{"_index":2364,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts",{"_index":2533,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:16",{"_index":2539,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:17",{"_index":2540,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:25",{"_index":2547,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:26",{"_index":2548,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:28",{"_index":2549,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:32",{"_index":2546,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:36",{"_index":2543,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:37",{"_index":2538,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:42",{"_index":2542,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/components/transactions.component.ts:51",{"_index":2541,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts",{"_index":2747,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:103",{"_index":2752,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:19",{"_index":2756,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:33",{"_index":2781,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:86",{"_index":2760,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/effects.ts:94",{"_index":2763,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/plugins/lthn/wallet/data/reducer.ts",{"_index":3149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts",{"_index":2941,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:12",{"_index":2946,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:13",{"_index":2945,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/data/state.ts:14",{"_index":2947,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getaddressbookout.ts",{"_index":1667,"title":{},"body":{"interfaces/GetAddressBookOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsin.ts",{"_index":1671,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getbulkpaymentsout.ts",{"_index":1677,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsin.ts",{"_index":1681,"title":{},"body":{"interfaces/GetPaymentsIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/getpaymentsout.ts",{"_index":1683,"title":{},"body":{"interfaces/GetPaymentsOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersin.ts",{"_index":1685,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/gettransfersout.ts",{"_index":1696,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersin.ts",{"_index":1724,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/incomingtransfersout.ts",{"_index":1728,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeintegratedaddressin.ts",{"_index":1778,"title":{},"body":{"interfaces/MakeIntegratedAddressIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/makeuriin.ts",{"_index":1779,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyin.ts",{"_index":2189,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/querykeyout.ts",{"_index":2192,"title":{},"body":{"interfaces/QueryKeyOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/splitintegratedaddressout.ts",{"_index":2408,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/storeout.ts",{"_index":2440,"title":{},"body":{"interfaces/StoreOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallin.ts",{"_index":2442,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepallout.ts",{"_index":2451,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/sweepdustout.ts",{"_index":2456,"title":{},"body":{"interfaces/SweepDustOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferin.ts",{"_index":2564,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transferout.ts",{"_index":2567,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/dto/transfersplitout.ts",{"_index":2575,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/requests/restorewallet.ts",{"_index":2247,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/addaddressbook.ts",{"_index":6,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/address.ts",{"_index":132,"title":{},"body":{"interfaces/Address.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/balance.ts",{"_index":755,"title":{},"body":{"interfaces/Balance.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/destination.ts",{"_index":1536,"title":{},"body":{"interfaces/Destination.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/height.ts",{"_index":1722,"title":{},"body":{"interfaces/Height.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/integratedaddress.ts",{"_index":1738,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/payment.ts",{"_index":2022,"title":{},"body":{"interfaces/Payment.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/transfer.ts",{"_index":2562,"title":{},"body":{"interfaces/Transfer.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/types/uri.ts",{"_index":2578,"title":{},"body":{"interfaces/Uri.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts",{"_index":558,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:13",{"_index":563,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:14",{"_index":564,"title":{},"body":{"classes/Atomic.html":{}}}],["src/app/plugins/lthn/wallet/interfaces/wallet.ts:9",{"_index":1740,"title":{},"body":{"classes/LTHN.html":{}}}],["src/app/plugins/lthn/wallet/validators.ts",{"_index":3139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/plugins/lthn/wallet/wallet",{"_index":2804,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts",{"_index":2696,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:17",{"_index":2721,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:24",{"_index":2713,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:26",{"_index":2724,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:28",{"_index":2714,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:29",{"_index":2715,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:30",{"_index":2722,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:31",{"_index":2723,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:41",{"_index":2704,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:44",{"_index":2709,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:61",{"_index":2707,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:65",{"_index":2708,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:73",{"_index":2711,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:77",{"_index":2705,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:81",{"_index":2712,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.component.ts:86",{"_index":2706,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/plugins/lthn/wallet/wallet.module.ts",{"_index":2790,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts",{"_index":2908,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:14",{"_index":2913,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:24",{"_index":2922,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:34",{"_index":2921,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:44",{"_index":2919,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:54",{"_index":2914,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:60",{"_index":2915,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:78",{"_index":2923,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/lthn/wallet/wallet.service.ts:85",{"_index":2917,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/plugins/plugins.component.ts",{"_index":2053,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:11",{"_index":2059,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:13",{"_index":2061,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.component.ts:20",{"_index":2060,"title":{},"body":{"components/PluginsComponent.html":{}}}],["src/app/plugins/plugins.module.ts",{"_index":2078,"title":{},"body":{"modules/PluginsModule.html":{}}}],["src/app/plugins/plugins.service.ts",{"_index":2080,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:15",{"_index":2089,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:29",{"_index":2087,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/plugins/plugins.service.ts:7",{"_index":2085,"title":{},"body":{"injectables/PluginsService.html":{}}}],["src/app/services/crypt.service.ts",{"_index":1375,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:121",{"_index":1418,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:25",{"_index":1391,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:44",{"_index":1455,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:56",{"_index":1446,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:71",{"_index":1385,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:8",{"_index":1383,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:92",{"_index":1433,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/filesystem/file",{"_index":1605,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["src/app/services/i18n/translate/translate.module.ts",{"_index":2577,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/app/services/json",{"_index":2201,"title":{},"body":{"interfaces/Response.html":{}}}],["src/app/services/ui/modal/modal.component.ts",{"_index":1797,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:14",{"_index":1813,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:15",{"_index":1805,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:19",{"_index":1809,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:21",{"_index":1810,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:28",{"_index":1807,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:35",{"_index":1808,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.module.ts",{"_index":1857,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/services/ui/modal/modalconfig.ts",{"_index":1833,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:10",{"_index":1849,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:12",{"_index":1850,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:14",{"_index":1845,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:16",{"_index":1846,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:18",{"_index":1847,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:20",{"_index":1848,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:6",{"_index":1851,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:8",{"_index":1852,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/wallet.rpc.service.ts",{"_index":2807,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:107",{"_index":2870,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:115",{"_index":2868,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:124",{"_index":2840,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:133",{"_index":2837,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:142",{"_index":2845,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:152",{"_index":2842,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:161",{"_index":2847,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:172",{"_index":2860,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:18",{"_index":2824,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:181",{"_index":2849,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:192",{"_index":2864,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:202",{"_index":2867,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:211",{"_index":2851,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:220",{"_index":2858,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:229",{"_index":2833,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:238",{"_index":2826,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:247",{"_index":2830,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:256",{"_index":2853,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:265",{"_index":2828,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:274",{"_index":2862,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:28",{"_index":2865,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:284",{"_index":2856,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:53",{"_index":2834,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:62",{"_index":2831,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:71",{"_index":2838,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:81",{"_index":2873,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:90",{"_index":2875,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:98",{"_index":2871,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/web",{"_index":2954,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["src/app/services/websocket.service.ts",{"_index":3004,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:10",{"_index":3010,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:14",{"_index":3012,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:21",{"_index":3014,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:25",{"_index":3011,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:29",{"_index":3016,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/main.ts",{"_index":3137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssh_pem",{"_index":2663,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["standard",{"_index":2616,"title":{},"body":{"components/UserComponent.html":{}}}],["standard_address",{"_index":2409,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["start",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["start_height",{"_index":993,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["start_height:start_height,end_height:end_height}).subscribe((data",{"_index":1035,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["start_on_boot",{"_index":2472,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["startblockchain",{"_index":2260,"title":{},"body":{"components/RootComponent.html":{}}}],["startchain",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["startdaemon",{"_index":973,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["started",{"_index":3043,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["startpollingwallet",{"_index":2749,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["starts",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["startwallet",{"_index":2261,"title":{},"body":{"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["starwars",{"_index":2158,"title":{},"body":{"components/ProfileComponent.html":{}}}],["state",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["state.networkdifficulty",{"_index":1275,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["static",{"_index":1212,"title":{},"body":{"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{}}}],["stats",{"_index":2387,"title":{},"body":{"modules/SettingsModule.html":{}}}],["status",{"_index":102,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status'},{'name",{"_index":120,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["status.component",{"_index":2435,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.component.html",{"_index":2412,"title":{},"body":{"components/StatusComponent.html":{}}}],["status.component.scss",{"_index":2411,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_annon",{"_index":2414,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_daemon",{"_index":2415,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_private",{"_index":2416,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_secure",{"_index":2417,"title":{},"body":{"components/StatusComponent.html":{}}}],["statuscomponent",{"_index":119,"title":{"components/StatusComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["statusmodule",{"_index":366,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["steps",{"_index":2606,"title":{},"body":{"components/UserComponent.html":{}}}],["stoppollingwallet",{"_index":2750,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["stopwallet",{"_index":2821,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["storage",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["storage.service",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{}}}],["storage.service.ts",{"_index":2955,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:10",{"_index":2978,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:11",{"_index":2977,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:13",{"_index":2981,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:17",{"_index":2971,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:21",{"_index":2969,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:33",{"_index":2975,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:44",{"_index":2973,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:50",{"_index":2967,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:64",{"_index":2963,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:9",{"_index":2979,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["store",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"components/OpenComponent.html":{},"interfaces/ProfileState.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["stored",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["storedevtoolsmodule",{"_index":1519,"title":{},"body":{"modules/DataModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":1529,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule",{"_index":1518,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule.forroot(reducers",{"_index":1528,"title":{},"body":{"modules/DataModule.html":{}}}],["storeout",{"_index":2439,"title":{"interfaces/StoreOut.html":{}},"body":{"interfaces/StoreOut.html":{},"injectables/WalletRpcService.html":{}}}],["storerouterconnectingmodule",{"_index":1522,"title":{},"body":{"modules/DataModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":1534,"title":{},"body":{"modules/DataModule.html":{}}}],["stream",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetPaymentsIn.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"classes/LTHN.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/Response.html":{},"interfaces/RestoreWallet.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["strip",{"_index":3104,"title":{},"body":{"dependencies.html":{}}}],["style",{"_index":2159,"title":{},"body":{"components/ProfileComponent.html":{}}}],["styles",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["styleurls",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LogsComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["sub",{"_index":844,"title":{},"body":{"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["sub.unsubscribe",{"_index":2737,"title":{},"body":{"components/WalletComponent.html":{}}}],["subject",{"_index":1256,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WebsocketService.html":{}}}],["subject.subscribe",{"_index":3029,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["submit",{"_index":1750,"title":{},"body":{"components/LoginComponent.html":{}}}],["subs",{"_index":2113,"title":{},"body":{"components/PostComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["subscribe",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((data",{"_index":1024,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["subscription",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["subscriptions",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["sufficiently",{"_index":763,"title":{},"body":{"interfaces/Balance.html":{}}}],["supplied",{"_index":1388,"title":{},"body":{"injectables/CryptService.html":{}}}],["support",{"_index":3169,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":464,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["svg",{"_index":3170,"title":{},"body":{"modules.html":{}}}],["sweepall",{"_index":2443,"title":{},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepall(x",{"_index":2869,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepallin",{"_index":2441,"title":{"interfaces/SweepAllIn.html":{}},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepallout",{"_index":2450,"title":{"interfaces/SweepAllOut.html":{}},"body":{"interfaces/SweepAllOut.html":{},"injectables/WalletRpcService.html":{}}}],["sweepdust",{"_index":2822,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepdustout",{"_index":2455,"title":{"interfaces/SweepDustOut.html":{}},"body":{"interfaces/SweepDustOut.html":{}}}],["swimlane/ngx",{"_index":890,"title":{},"body":{"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["switchmap",{"_index":1244,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap(([action",{"_index":1237,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap((req",{"_index":2370,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["symbol",{"_index":2526,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["sync",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["syndrome",{"_index":1426,"title":{},"body":{"injectables/CryptService.html":{}}}],["system",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{}}}],["system.interface",{"_index":1655,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["system.interface.ts",{"_index":1579,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:16",{"_index":1600,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:25",{"_index":1602,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:33",{"_index":1590,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:41",{"_index":1594,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:49",{"_index":1586,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:8",{"_index":1597,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.service",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["system.service.ts",{"_index":1606,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:17",{"_index":1628,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:27",{"_index":1619,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:41",{"_index":1623,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:51",{"_index":1626,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:61",{"_index":1621,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:71",{"_index":1616,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:8",{"_index":1613,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["t",{"_index":1718,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["tag",{"_index":2295,"title":{},"body":{"components/RootComponent.html":{}}}],["take",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["takes",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["takeuntil",{"_index":1241,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["takewhile",{"_index":2768,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["target",{"_index":1042,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["target_height",{"_index":1043,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["targetaddform",{"_index":44,"title":{},"body":{"components/AddComponent.html":{}}}],["targettabindex",{"_index":38,"title":{},"body":{"components/AddComponent.html":{}}}],["task",{"_index":2457,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["templateref",{"_index":1811,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":36,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tension",{"_index":801,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["terminal",{"_index":1311,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"dependencies.html":{}}}],["test",{"_index":2716,"title":{},"body":{"components/WalletComponent.html":{}}}],["testnet",{"_index":1044,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["text",{"_index":1010,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["that.author",{"_index":2136,"title":{},"body":{"components/PostComponent.html":{}}}],["that.content",{"_index":2132,"title":{},"body":{"components/PostComponent.html":{}}}],["that.post",{"_index":2131,"title":{},"body":{"components/PostComponent.html":{}}}],["that.posts",{"_index":2301,"title":{},"body":{"components/RootComponent.html":{}}}],["that.ref.markforcheck",{"_index":1331,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["that.title",{"_index":2134,"title":{},"body":{"components/PostComponent.html":{}}}],["that.ws.sendmessage(`cmd:letheand:${this.command.join('')}\\n",{"_index":1352,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["theme",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["themselves",{"_index":1161,"title":{},"body":{"injectables/ChartService.html":{}}}],["then((dat",{"_index":1015,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["then(function",{"_index":2299,"title":{},"body":{"components/RootComponent.html":{}}}],["this.actions$.pipe",{"_index":1218,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["this.addoptions",{"_index":1884,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.allcolumns.foreach((col",{"_index":894,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.apiurl}/write",{"_index":1663,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.appfilesystem",{"_index":1634,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.applicationref.attachview(popupcomponentref.hostview",{"_index":2107,"title":{},"body":{"injectables/PluginsService.html":{}}}],["this.appservice.crypto",{"_index":1473,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.lib.wordarray.random(128",{"_index":1477,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.crypto.pbkdf2(input",{"_index":1478,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.createmessage",{"_index":1500,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decrypt",{"_index":1511,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.decryptkey",{"_index":1506,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.encrypt",{"_index":1498,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.generatekey",{"_index":1481,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readkey",{"_index":1502,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readmessage",{"_index":1508,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.appservice.openpgp.readprivatekey",{"_index":1507,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.authservice.getauthstatus",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(this.username.value",{"_index":1761,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(username",{"_index":2496,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.backend('clear",{"_index":2995,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('get",{"_index":2986,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('remove",{"_index":2993,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('set",{"_index":2990,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.balance",{"_index":2741,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.blocks",{"_index":908,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.blockui.start(res",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["this.blockui.stop",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chain.downloadcli().then((data",{"_index":2289,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.getblocks(data.height",{"_index":903,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.chain.getinfo",{"_index":897,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.chain.startdaemon",{"_index":2291,"title":{},"body":{"components/RootComponent.html":{}}}],["this.chain.startdaemon().then((data",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chaininfo",{"_index":906,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.chainrpc('get_info",{"_index":1023,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('get_transaction",{"_index":1027,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('getblockheadersrange",{"_index":1034,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.changestream(this.attach",{"_index":1332,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.chartdata$[name",{"_index":1188,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartdata$[name].subscribe",{"_index":1193,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartelement",{"_index":1086,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartinstances[name",{"_index":1206,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets.map((item",{"_index":1195,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets[i].data",{"_index":1196,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].destroy",{"_index":1205,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].update",{"_index":1198,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartmeta[name].datamap(response",{"_index":1197,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartservice.createchart(this.lthnchart",{"_index":1085,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartservice.destroysubscriptions(this.lthnchart",{"_index":1099,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartsubscriptions[name",{"_index":1192,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartsubscriptions[name].unsubscribe",{"_index":1204,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.child.keyeventinput.subscribe((e",{"_index":1339,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.buffer.active.cursorx",{"_index":1357,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.write('\\b",{"_index":1358,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln",{"_index":1354,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(data[1",{"_index":1323,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(line.trim",{"_index":1330,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(parts[1].trim",{"_index":1328,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write",{"_index":1337,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write(e.key",{"_index":1361,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.columns",{"_index":911,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.columns.filter(c",{"_index":912,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.columns.find(c",{"_index":916,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.columns.push",{"_index":896,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.columns.push(col",{"_index":915,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.command",{"_index":1353,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.pop",{"_index":1356,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.push(e.key",{"_index":1360,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(walletcomponent",{"_index":2102,"title":{},"body":{"injectables/PluginsService.html":{}}}],["this.configureoptions",{"_index":815,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.connect().asobservable",{"_index":3025,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connect().complete",{"_index":3026,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.count",{"_index":2982,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.createchartelement(this.lthnchart",{"_index":1084,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.createsalt(input",{"_index":1475,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.crypto",{"_index":501,"title":{},"body":{"injectables/AppService.html":{}}}],["this.cryptservice",{"_index":2494,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.createopenpgp(usernamehash",{"_index":2483,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.decryptpgpsingle(id",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.encryptpgpsingle",{"_index":2491,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.generatekey",{"_index":2493,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sha256salty(username",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.currentlanguage",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cutmiddle(content",{"_index":1711,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["this.destroysubscriptions(name",{"_index":1200,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.dialogref.close",{"_index":1551,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["this.downloadingcli",{"_index":2286,"title":{},"body":{"components/RootComponent.html":{}}}],["this.elmref.nativeelement",{"_index":1092,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.error",{"_index":1760,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filesystem.exists(pathname",{"_index":1639,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.list(dirname",{"_index":1635,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.listfiles('/cli').then((dat",{"_index":898,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.filesystem.listfiles('/users').then((dat",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["this.filesystem.mkdir(dirname",{"_index":1638,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.read(filename",{"_index":1636,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.readfile",{"_index":1494,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.filesystem.readfile(`users/${id}.lthn",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filesystem.write(filename",{"_index":1637,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.writefile",{"_index":2473,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.fs.listfiles('/cli').then((dat",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fs.listfiles('/wallets').then((data",{"_index":2932,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getchild(activatedroute.firstchild",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getchild(this.activatedroute",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getwalletlist",{"_index":2938,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.hascli",{"_index":2281,"title":{},"body":{"components/RootComponent.html":{}}}],["this.heading",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http",{"_index":1011,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1267,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.http.post(`https://localhost:36911/daemon/wallet/json_rpc",{"_index":2769,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.id",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ischecked(col",{"_index":910,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.ispollingactivestats",{"_index":2758,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.items",{"_index":2994,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.items[key",{"_index":2984,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.loadtransactions",{"_index":2557,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.menu",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.removetag(\"name='description",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.updatetag",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalconfig.onclose",{"_index":1825,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.ondismiss",{"_index":1828,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shouldclose",{"_index":1824,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shoulddismiss",{"_index":1827,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref",{"_index":1820,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.close(result",{"_index":1826,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.dismiss(result",{"_index":1829,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.result.then(resolve",{"_index":1822,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.open(this.modalcontent",{"_index":1821,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.name",{"_index":2953,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["this.networkhashratechart",{"_index":1139,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.notifierservice.notify('success",{"_index":2001,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.openedwallet",{"_index":2734,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.openpgp",{"_index":499,"title":{},"body":{"injectables/AppService.html":{}}}],["this.options",{"_index":817,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.options.plugins.tooltip.callbacks",{"_index":1930,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.options.scales.y.ticks.callback",{"_index":1927,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.password",{"_index":1955,"title":{},"body":{"components/NewComponent.html":{}}}],["this.password.value",{"_index":1762,"title":{},"body":{"components/LoginComponent.html":{},"components/NewComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.password_confirm",{"_index":1956,"title":{},"body":{"components/NewComponent.html":{}}}],["this.password_confirm.value",{"_index":1957,"title":{},"body":{"components/NewComponent.html":{}}}],["this.passwordrepeat.value",{"_index":2468,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.processingform",{"_index":2466,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.ref.detach",{"_index":1313,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.detectchanges",{"_index":1315,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.markforcheck",{"_index":1336,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.renderappview",{"_index":2279,"title":{},"body":{"components/RootComponent.html":{}}}],["this.renderer.appendchild(this.elmref.nativeelement",{"_index":1097,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.createelement('canvas",{"_index":1087,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.removechild",{"_index":1098,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setattribute",{"_index":1088,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle",{"_index":1091,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle(this.elmref.nativeelement",{"_index":1089,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderfirstrunview",{"_index":2280,"title":{},"body":{"components/RootComponent.html":{}}}],["this.restorewalletform",{"_index":2222,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.address",{"_index":2233,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.autosave_current",{"_index":2235,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.filename",{"_index":2232,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.password",{"_index":2236,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.restore_height",{"_index":2234,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.spendkey",{"_index":2238,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewkey",{"_index":2239,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewonly_wallet",{"_index":2237,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.router.events",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/login",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/user",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":1763,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.router.navigatebyurl('/chain",{"_index":2290,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.navigatebyurl('/user",{"_index":2285,"title":{},"body":{"components/RootComponent.html":{}}}],["this.router.routerstate.snapshot.url.replace('/p",{"_index":2127,"title":{},"body":{"components/PostComponent.html":{}}}],["this.rows",{"_index":2554,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.rpc.getbalance",{"_index":2931,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.gettransfers(opts).then((data",{"_index":2939,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.openwallet(req",{"_index":2930,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.restorewallet(req",{"_index":2929,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.startwallet",{"_index":2928,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(content",{"_index":1576,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["this.settargettabindex",{"_index":68,"title":{},"body":{"components/AddComponent.html":{}}}],["this.setupcallbacks",{"_index":816,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.sidenav.toggle",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["this.socket",{"_index":3022,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.closed",{"_index":3023,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.next(msg",{"_index":3027,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.startchain",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store$.pipe",{"_index":1232,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.store.dispatch",{"_index":2772,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.store.dispatch(chainsetblocks({blocks",{"_index":1036,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.store.dispatch(chainsetgetinfo({info",{"_index":1025,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.store.dispatch(chainsettransactions({transactions",{"_index":1033,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.store.dispatch(changelanguage({language",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(openwallet({address",{"_index":1997,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstartaction",{"_index":1191,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstopaction",{"_index":1203,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(togglehidenavigation",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(walletactions.switchwallet({address",{"_index":2740,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.dispatch(walletactions.walletstartpolling",{"_index":2735,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.dispatch(walletactions.walletstoppolling",{"_index":2738,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.pipe",{"_index":1189,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe(select(getchainblocks",{"_index":909,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.store.pipe(select(getchaininfo",{"_index":907,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.store.pipe(select(getchaininfo)).subscribe((data",{"_index":901,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{}}}],["this.store.pipe(select(selectlanguage)).subscribe((lang",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectmenuvisibility)).subscribe((opened",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectwallettransactions)).subscribe((data",{"_index":2553,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.store.pipe(select(walletactions.selectopenedwallet)).subscribe((wallet",{"_index":2732,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.store.pipe(select(walletactions.selectwallets)).subscribe((data",{"_index":2729,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.sub",{"_index":900,"title":{},"body":{"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{}}}],["this.sub.foreach((s",{"_index":2277,"title":{},"body":{"components/RootComponent.html":{}}}],["this.sub.unsubscribe",{"_index":917,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["this.sub['info",{"_index":2284,"title":{},"body":{"components/RootComponent.html":{}}}],["this.sub['interval",{"_index":2282,"title":{},"body":{"components/RootComponent.html":{}}}],["this.subs",{"_index":2736,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.subs$['openedwallet",{"_index":2731,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.subs$['txn",{"_index":2552,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.subs$['wallets",{"_index":2728,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.targetaddform",{"_index":69,"title":{},"body":{"components/AddComponent.html":{}}}],["this.targettabindex",{"_index":70,"title":{},"body":{"components/AddComponent.html":{}}}],["this.titleservice.settitle(res",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.get('words.states.loading').subscribe((res",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.get(data.description).subscribe((res",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.get(data.title).subscribe((res",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(req.language",{"_index":2371,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.txnselection[col",{"_index":2744,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.updatemeta",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.length",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username.value",{"_index":2467,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.wallet.getbalance().then((data",{"_index":2742,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.gettransfers(this.opts).then((data",{"_index":2558,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.wallet.getwalletlist",{"_index":1996,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.wallet.loadtransfers(this.txnselection",{"_index":2743,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.openwallet",{"_index":2000,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletEffects.html":{}}}],["this.wallet.restorewallet",{"_index":2231,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.wallet.startwallet",{"_index":2292,"title":{},"body":{"components/RootComponent.html":{}}}],["this.wallet.startwallet().then(r",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["this.wallet_name",{"_index":1953,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallet_name.value",{"_index":1960,"title":{},"body":{"components/NewComponent.html":{}}}],["this.walletrpc.createwallet",{"_index":1959,"title":{},"body":{"components/NewComponent.html":{}}}],["this.wallets",{"_index":1995,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["this.wallets.includes(dat",{"_index":2933,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.length",{"_index":2937,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.push(dat",{"_index":2936,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.ws.connect",{"_index":1333,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect().subscribe((data",{"_index":1317,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.sendmessage(channel",{"_index":1335,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["those",{"_index":762,"title":{},"body":{"interfaces/Balance.html":{}}}],["throw",{"_index":1166,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["tickmarklength",{"_index":1910,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ticks",{"_index":806,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["ticks.color",{"_index":1181,"title":{},"body":{"injectables/ChartService.html":{}}}],["time",{"_index":1890,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/TransactionsComponent.html":{}}}],["timeago",{"_index":935,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{}}}],["timeagopipe",{"_index":2029,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TimeAgoPipe.html":{},"overview.html":{}}}],["timed",{"_index":2051,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["timer",{"_index":1243,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timer(0",{"_index":1239,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timeseries",{"_index":1891,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["timestamp",{"_index":831,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["title",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/PostComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["titleservice",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["tmi",{"_index":3156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["toatomic",{"_index":575,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tocoin",{"_index":934,"title":{},"body":{"components/BlockchainComponent.html":{},"components/RootComponent.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{}}}],["tocoinpipe",{"_index":2030,"title":{"pipes/ToCoinPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["todo",{"_index":1154,"title":{},"body":{"injectables/ChartService.html":{},"injectables/FileSystemService.html":{}}}],["toggle",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/WalletComponent.html":{}}}],["toggle(col",{"_index":855,"title":{},"body":{"components/BlockchainComponent.html":{},"components/WalletComponent.html":{}}}],["togglehidenavigation",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["togglemenu",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["tolthn",{"_index":561,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["tonumber",{"_index":562,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["toolbar",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":811,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top",{"_index":1888,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["top_block_hash",{"_index":1045,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["topromise",{"_index":1014,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["torrents",{"_index":2686,"title":{},"body":{"components/VpnComponent.html":{}}}],["tostring",{"_index":1476,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["tot",{"_index":1603,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["total",{"_index":757,"title":{},"body":{"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalelements",{"_index":2009,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalpages",{"_index":2010,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["trace",{"_index":3127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":2677,"title":{},"body":{"components/VpnComponent.html":{}}}],["transactin",{"_index":2843,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transaction",{"_index":605,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"injectables/WalletRpcService.html":{}}}],["transactions",{"_index":868,"title":{"interfaces/Transactions.html":{}},"body":{"components/BlockchainComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["transactions'},{'name",{"_index":122,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["transactions.component.html",{"_index":2534,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":121,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["transfer",{"_index":1697,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfer(x",{"_index":2872,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfer_type",{"_index":1725,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["transferin",{"_index":2563,"title":{"interfaces/TransferIn.html":{}},"body":{"interfaces/TransferIn.html":{},"injectables/WalletRpcService.html":{}}}],["transferout",{"_index":2566,"title":{"interfaces/TransferOut.html":{}},"body":{"interfaces/TransferOut.html":{},"injectables/WalletRpcService.html":{}}}],["transfers",{"_index":1686,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"injectables/WalletEffects.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfersplit",{"_index":2823,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplit(x",{"_index":2874,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplitin",{"_index":579,"title":{"interfaces/TransferSplitIn.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transfersplitout",{"_index":2574,"title":{"interfaces/TransferSplitOut.html":{}},"body":{"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{}}}],["transform",{"_index":1560,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(content",{"_index":1572,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(value",{"_index":1561,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transforms",{"_index":1392,"title":{},"body":{"injectables/CryptService.html":{}}}],["translate",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["translate.getbrowserlang",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use(lang",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":367,"title":{"modules/TranslateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/TranslateModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["tree",{"_index":26,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["tries",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/Atomic.html":{},"guards/AuthGuard.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{}}}],["try",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WebStorageService.html":{}}}],["ts",{"_index":1059,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["tslib",{"_index":3107,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tx",{"_index":1788,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx's",{"_index":1693,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["tx_blob_list",{"_index":2452,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_count",{"_index":1046,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_description",{"_index":1781,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx_hash",{"_index":1730,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"interfaces/Payment.html":{},"interfaces/TransferOut.html":{}}}],["tx_hash_list",{"_index":2453,"title":{},"body":{"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/TransferSplitOut.html":{}}}],["tx_key",{"_index":2568,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["tx_key_list",{"_index":2454,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_pool_size",{"_index":1047,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_size",{"_index":1731,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["txid",{"_index":2545,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{}}}],["txn",{"_index":1707,"title":{},"body":{"pipes/HashLinkPipe.html":{},"interfaces/TransferOut.html":{}}}],["txnselection",{"_index":2702,"title":{},"body":{"components/WalletComponent.html":{}}}],["txs_as_hex",{"_index":2531,"title":{},"body":{"interfaces/Transactions.html":{}}}],["txs_as_json",{"_index":2532,"title":{},"body":{"interfaces/Transactions.html":{}}}],["txs_hashes",{"_index":1028,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["txshashes",{"_index":998,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"pipes/MarkdownPipe.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/Response.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":1715,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["types/address",{"_index":1782,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/SplitIntegratedAddressOut.html":{}}}],["types/destination",{"_index":567,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["types/payment",{"_index":1679,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["types/transfer",{"_index":1698,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["typescript",{"_index":3109,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CryptService.html":{},"interfaces/SettingsState.html":{},"dependencies.html":{}}}],["unavailable",{"_index":1726,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["unblock",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":808,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"pipes/HashLinkPipe.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["under",{"_index":1443,"title":{},"body":{"injectables/CryptService.html":{},"components/UserComponent.html":{}}}],["unified",{"_index":2385,"title":{},"body":{"modules/SettingsModule.html":{}}}],["unique",{"_index":2163,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["uniquenamesgenerator",{"_index":2155,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":1896,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["units",{"_index":1539,"title":{},"body":{"interfaces/Destination.html":{},"pipes/HashRatePipe.html":{},"interfaces/MakeUriIn.html":{}}}],["units[i]}h",{"_index":1721,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["unknown",{"_index":1389,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["unlock",{"_index":1988,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["unlock_time",{"_index":593,"title":{},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["unlocked",{"_index":760,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlocked_balance",{"_index":756,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlockwallet",{"_index":1980,"title":{},"body":{"components/OpenComponent.html":{}}}],["unlockwallet(name",{"_index":1986,"title":{},"body":{"components/OpenComponent.html":{}}}],["unsigned",{"_index":582,"title":{},"body":{"classes/Atomic.html":{},"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["up",{"_index":1120,"title":{},"body":{"injectables/ChartService.html":{},"injectables/PluginsService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["update",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConsoleComponent.html":{}}}],["updatemeta",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["uri",{"_index":614,"title":{"interfaces/Uri.html":{}},"body":{"classes/Atomic.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/Uri.html":{},"injectables/WalletRpcService.html":{}}}],["url",{"_index":1708,"title":{},"body":{"pipes/HashLinkPipe.html":{},"interfaces/Response.html":{},"injectables/WalletRpcService.html":{}}}],["urlencoded",{"_index":1008,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["use",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"classes/LTHN.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{}}}],["used",{"_index":2183,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["usefactory",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":111,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user'},{'name",{"_index":124,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["user.component",{"_index":2654,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":2461,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.component.scss",{"_index":2462,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.reducer",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{}}}],["user.usersstate",{"_index":514,"title":{},"body":{"interfaces/AppState.html":{}}}],["usercomponent",{"_index":123,"title":{"components/UserComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["userform",{"_index":2463,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["userids",{"_index":1486,"title":{},"body":{"injectables/CryptService.html":{}}}],["usermeta",{"_index":2641,"title":{"interfaces/UserMeta.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usermodule",{"_index":2648,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usernamehash",{"_index":2479,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["useroptions",{"_index":2644,"title":{"interfaces/UserOptions.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userroutingmodule",{"_index":460,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{}}}],["users",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["users/${id}.lthn.private.asc",{"_index":1504,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${id}.lthn.public.asc",{"_index":1495,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${usernamehash}.lthn",{"_index":2490,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.private.asc",{"_index":2487,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.public.asc",{"_index":2488,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.revoke.asc",{"_index":2489,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["usersstate",{"_index":2646,"title":{"interfaces/UsersState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userstate",{"_index":2647,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["uses",{"_index":1457,"title":{},"body":{"injectables/CryptService.html":{}}}],["using",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["valid",{"_index":1562,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["validatorfn",{"_index":3142,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1951,"title":{},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"classes/Atomic.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"classes/LTHN.html":{},"components/LoginComponent.html":{},"pipes/MarkdownPipe.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferOut.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["value.indexof",{"_index":2197,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.length",{"_index":1795,"title":{},"body":{"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.slice",{"_index":2199,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.substr(0",{"_index":2200,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.tostring",{"_index":2196,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["values",{"_index":1928,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["variable",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verified_user",{"_index":2430,"title":{},"body":{"components/StatusComponent.html":{}}}],["version",{"_index":866,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["vertical",{"_index":936,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["vertically",{"_index":940,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["view",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/PluginsService.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["view.chain.description",{"_index":958,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.heading",{"_index":957,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.chain.title",{"_index":956,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["view.dashboard.description",{"_index":2352,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.heading",{"_index":2351,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.title",{"_index":2350,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.wallets.description",{"_index":2802,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.heading",{"_index":2801,"title":{},"body":{"modules/WalletModule.html":{}}}],["view.wallets.title",{"_index":2800,"title":{},"body":{"modules/WalletModule.html":{}}}],["view_column",{"_index":928,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["viewchild",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('modal",{"_index":1812,"title":{},"body":{"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["viewchild('sidenav",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('term",{"_index":1306,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation",{"_index":1310,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.none",{"_index":1283,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewkey",{"_index":2228,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["viewonly_wallet",{"_index":2229,"title":{},"body":{"components/RestoreComponent.html":{}}}],["viewport",{"_index":1364,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["visibility_off",{"_index":2429,"title":{},"body":{"components/StatusComponent.html":{}}}],["vm",{"_index":1164,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["vm.chartinstances[name",{"_index":1182,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name",{"_index":1165,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data",{"_index":1185,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.length",{"_index":1177,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.map((dataset",{"_index":1168,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options",{"_index":1186,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.colors[i",{"_index":1170,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales",{"_index":1179,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales[dataset.yaxisid",{"_index":1178,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].type",{"_index":1184,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.hashratepipe.transform(context.parsed.y",{"_index":1932,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.hashratepipe.transform(value",{"_index":1929,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.setupdatasubscription(name",{"_index":1187,"title":{},"body":{"injectables/ChartService.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BackupComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/TransactionsComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["vpn",{"_index":2617,"title":{},"body":{"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn'},{'name",{"_index":126,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["vpn.component",{"_index":2693,"title":{},"body":{"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn.component.html",{"_index":2670,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpn.component.scss",{"_index":2669,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpncomponent",{"_index":125,"title":{"components/VpnComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"overview.html":{}}}],["vpnmodule",{"_index":2689,"title":{"modules/VpnModule.html":{}},"body":{"modules/VpnModule.html":{},"modules.html":{},"overview.html":{}}}],["vpnroutingmodule",{"_index":2694,"title":{"modules/VpnRoutingModule.html":{}},"body":{"modules/VpnRoutingModule.html":{},"modules.html":{}}}],["wall",{"_index":2003,"title":{},"body":{"components/OpenComponent.html":{}}}],["wallet",{"_index":34,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BackupComponent.html":{},"interfaces/Balance.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/GetTransfersIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"dependencies.html":{}}}],["wallet's",{"_index":2248,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["wallet.component",{"_index":2791,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.component.html",{"_index":2698,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.component.scss",{"_index":2697,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.name",{"_index":2774,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.options.pollinginterval).pipe",{"_index":2767,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.reducer",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.service",{"_index":1952,"title":{},"body":{"components/NewComponent.html":{}}}],["wallet.walleteffects",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walletsstate",{"_index":515,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet_name",{"_index":1940,"title":{},"body":{"components/NewComponent.html":{}}}],["walletactions",{"_index":2726,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["walletactions.walletbalance",{"_index":2773,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaddata",{"_index":2759,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaded",{"_index":2779,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletstoppedpolling",{"_index":2762,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.wallettransfers",{"_index":2777,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletcomponent",{"_index":127,"title":{"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BackupComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NewComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PluginsComponent.html":{},"injectables/PluginsService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["walleteffects",{"_index":2746,"title":{"injectables/WalletEffects.html":{}},"body":{"injectables/WalletEffects.html":{}}}],["walletlist",{"_index":2911,"title":{},"body":{"injectables/WalletService.html":{}}}],["walletloaddata",{"_index":2751,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletmodule",{"_index":2336,"title":{"modules/WalletModule.html":{}},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletroutingmodule",{"_index":462,"title":{"modules/WalletRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{}}}],["walletrpc",{"_index":1944,"title":{},"body":{"components/NewComponent.html":{}}}],["walletrpcservice",{"_index":1942,"title":{"injectables/WalletRpcService.html":{}},"body":{"components/NewComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["wallets",{"_index":509,"title":{},"body":{"interfaces/AppState.html":{},"classes/Atomic.html":{},"components/BackupComponent.html":{},"interfaces/CreateWallet.html":{},"classes/LTHN.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletselectors",{"_index":2782,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletservice",{"_index":167,"title":{"injectables/WalletService.html":{}},"body":{"components/AppComponent.html":{},"components/NewComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["walletsstate",{"_index":2942,"title":{"interfaces/WalletsState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletstate",{"_index":2940,"title":{"classes/WalletState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["wallettransfers",{"_index":2785,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["want",{"_index":1421,"title":{},"body":{"injectables/CryptService.html":{}}}],["watcher",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["way",{"_index":1157,"title":{},"body":{"injectables/ChartService.html":{}}}],["ways",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{}}}],["web",{"_index":3112,"title":{},"body":{"dependencies.html":{}}}],["web.service",{"_index":1631,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["web.service.ts",{"_index":1640,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:10",{"_index":1642,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:15",{"_index":1643,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:19",{"_index":1645,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:32",{"_index":1646,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:35",{"_index":1648,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:39",{"_index":1650,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:52",{"_index":1652,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["webfilesystem",{"_index":1632,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["websocket",{"_index":3020,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(\"ws://localhost:8081",{"_index":3028,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(ws_endpoint",{"_index":3024,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketservice",{"_index":1293,"title":{"injectables/WebsocketService.html":{}},"body":{"components/ConsoleComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketsubject",{"_index":3013,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["webstorageservice",{"_index":528,"title":{"injectables/WebStorageService.html":{}},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["welcome",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["well",{"_index":1430,"title":{},"body":{"injectables/CryptService.html":{}}}],["whatever",{"_index":3041,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["whenever",{"_index":3033,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["white",{"_index":1902,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["white_peerlist_size",{"_index":1048,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["width",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{}}}],["width:80vw",{"_index":1096,"title":{},"body":{"directives/ChartDirective.html":{}}}],["wire",{"_index":2100,"title":{},"body":{"injectables/PluginsService.html":{}}}],["wish",{"_index":2633,"title":{},"body":{"components/UserComponent.html":{}}}],["within",{"_index":2184,"title":{},"body":{"interfaces/ProfileState.html":{},"index.html":{}}}],["withlatestfrom",{"_index":1231,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(walletselectors.selectopenedwalletdata",{"_index":2765,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["without",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{}}}],["withproperties",{"_index":2091,"title":{},"body":{"injectables/PluginsService.html":{}}}],["wizard",{"_index":2659,"title":{},"body":{"modules/UserModule.html":{}}}],["wont",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["word",{"_index":1452,"title":{},"body":{"injectables/CryptService.html":{}}}],["words.states.installing",{"_index":2303,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.installing_desc",{"_index":2305,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.not_installed",{"_index":2302,"title":{},"body":{"components/RootComponent.html":{}}}],["words.states.not_installed_desc",{"_index":2304,"title":{},"body":{"components/RootComponent.html":{}}}],["working",{"_index":1629,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["works",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":3046,"title":{},"body":{"contributing.html":{}}}],["worst",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrapper",{"_index":1630,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["write",{"_index":1583,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["write(filename",{"_index":1651,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["write(type",{"_index":1601,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["writefile",{"_index":1609,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["writefile(filename",{"_index":1625,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["ws",{"_index":1297,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ws://localhost:36909",{"_index":3019,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws_endpoint",{"_index":3018,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["www",{"_index":1006,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["x",{"_index":805,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["xterm",{"_index":1363,"title":{},"body":{"components/ConsoleComponent.html":{},"dependencies.html":{}}}],["y",{"_index":809,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["years",{"_index":2520,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["yes",{"_index":1564,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/MarkdownPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletRpcService.html":{}}}],["yes/no",{"_index":2167,"title":{},"body":{"components/ProfileComponent.html":{}}}],["z",{"_index":1470,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["zerolinewidth",{"_index":1908,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["zone.js",{"_index":3117,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PluginsModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddAddressBook.html":{"url":"interfaces/AddAddressBook.html","title":"interface - AddAddressBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddAddressBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/addAddressBook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddAddressBook {\n\taddress: string;\n\tpayment_id?: string; // (optional) string, defaults to \"0000000000000000000000000000000000000000000000000000000000000000\";\n\tdescription?: string; // (optional) string, defaults to \"\";\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddComponent.html":{"url":"components/AddComponent.html","title":"component - AddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-add\n            \n\n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTargetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                targetAddForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/add.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        targetAddForm\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTargetTabIndex\n                        \n                    \n                \n            \n            \n                \nsetTargetTabIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/add.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetTabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/add.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-wallet-add',\n\ttemplateUrl: './add.component.html'\n})\nexport class AddComponent implements OnInit, OnChanges {\n\t@Input() targetAddForm: string = 'open';\n\ttargetTabIndex: number = 0;\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tthis.setTargetTabIndex();\n\t}\n\n\tsetTargetTabIndex(): void {\n\t\tif (this.targetAddForm === \"open\") {\n\t\t\tthis.targetTabIndex = 2;\n\t\t}else if (this.targetAddForm === \"restore\") {\n\t\t\tthis.targetTabIndex = 1;\n\t\t}else{\n\t\t\tthis.targetTabIndex = 0;\n\t\t}\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.setTargetTabIndex();\n\t}\n\n}\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\t\n\t\t\t\tadd_box\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tcloud_download\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tfile_open\n\t\t\t\n\t\t\n\t\t\n\t\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\tadd_box\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloud_download\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile_open\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\taddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockUI\n                            \n                            \n                                    Public\n                                currentFlag\n                            \n                            \n                                    Public\n                                currentLanguage\n                            \n                            \n                                    Public\n                                currentLanguage$\n                            \n                            \n                                    Public\n                                heading\n                            \n                            \n                                    Public\n                                menu\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getChild\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                startChain\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, metaService: Meta, translate: TranslateService, store: Store, fs: FileSystemService, chain: BlockchainService, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                            Starts the Angular framework and configures system plugins\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:99\n                \n            \n\n\n            \n                \n                    Dispatch a language change request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChild\n                        \n                    \n                \n            \n            \n                \ngetChild(activatedRoute: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:174\n                \n            \n\n\n            \n                \n                    Angular router helper\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:85\n                \n            \n\n\n            \n                \n                    Setup watcher for sidenav menu user setting\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:67\n                \n            \n\n\n            \n                \n                    Start loading overlay\nSetup language setting watcher\nUpdate View Meta data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startChain\n                        \n                    \n                \n            \n            \n                \nstartChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:156\n                \n            \n\n\n            \n                \n                    Start chain daemon and wallet service\nunblock UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:106\n                \n            \n\n\n            \n                \n                    Dispatch a Menu toggle request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMeta\n                        \n                    \n                \n            \n            \n                \nupdateMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:113\n                \n            \n\n\n            \n                \n                    creates subscriptions for multi lingual page meta\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockUI\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgBlockUI\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BlockUI()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        heading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menu$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {select, Store} from '@ngrx/store';\nimport {changeLanguage, selectLanguage, selectMenuVisibility, toggleHideNavigation} from '@module/settings/data';\nimport {Subscription} from 'rxjs';\nimport {BlockUI, NgBlockUI} from 'ng-block-ui';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\n\n@Component({\n\tselector: 'lthn-app',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\tpublic menu: boolean;\n\tpublic heading = '';\n\n\t@BlockUI() blockUI: NgBlockUI;\n\t@ViewChild('sidenav') public sidenav: MatSidenav;\n\tpublic currentFlag: any;\n\tpublic currentLanguage$: Subscription;\n\tpublic currentLanguage: string;\n\tprivate menu$: Subscription;\n\n\t/**\n\t * Starts the Angular framework and configures system plugins\n\t *\n\t * @param {Router} router\n\t * @param {ActivatedRoute} activatedRoute\n\t * @param {Title} titleService\n\t * @param {Meta} metaService\n\t * @param {TranslateService} translate\n\t * @param {Store} store\n\t * @param {FileSystemService} fs\n\t * @param {BlockchainService} chain\n\t * @param {WalletService} wallet\n\t */\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate translate: TranslateService,\n\t\tprivate store: Store,\n\t\tprivate fs: FileSystemService,\n\t\tprivate chain: BlockchainService,\n\t\tprivate wallet: WalletService,\n\t) {\n\n\t\ttranslate.setDefaultLang('en');\n\t\tlet lang = translate.getBrowserLang()\n\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\ttranslate.use(lang ? lang : 'en');\n\t}\n\n\t/**\n\t * Start loading overlay\n\t * Setup language setting watcher\n\t * Update View Meta data\n\t */\n\tngOnInit(): void {\n\n\t\tthis.translate.get('words.states.loading').subscribe((res: string) => {\n\t\t\tthis.blockUI.start(res);\n\t\t});\n\n\t\t// setup language watcher\n\t\tthis.currentLanguage$ = this.store.pipe(select(selectLanguage)).subscribe((lang) => {\n\t\t\tthis.currentLanguage = lang;\n\t\t\tthis.translate.use(lang)\n\t\t})\n\n\t\tthis.updateMeta();\n\t}\n\n\t/**\n\t * Setup watcher for sidenav menu user setting\n\t */\n\tngAfterViewInit() {\n\t\tthis.menu$ = this.store.pipe(select(selectMenuVisibility)).subscribe((opened) => {\n\t\t\tthis.menu = opened\n\t\t\tthis.sidenav.toggle();\n\t\t})\n\t\tthis.startChain();\n\n\t}\n\n\t/**\n\t * Dispatch a language change request\n\t *\n\t * @param {string} lang\n\t */\n\tchangeLanguage(lang: string){\n\t\tthis.store.dispatch(changeLanguage({language: lang}))\n\t}\n\n\t/**\n\t * Dispatch a Menu toggle request\n\t */\n\ttoggleMenu() {\n\t\tthis.store.dispatch(toggleHideNavigation())\n\t}\n\n\t/**\n\t * creates subscriptions for multi lingual page meta\n\t */\n\tupdateMeta() {\n\t\tthis.router.events\n\t\t\t.pipe(filter((event) => event instanceof NavigationEnd))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst rt = this.getChild(this.activatedRoute);\n\t\t\t\trt.data.subscribe((data) => {\n\t\t\t\t\tthis.translate.get(data.title).subscribe((res: string) => {\n\t\t\t\t\t\tthis.titleService.setTitle(res)\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.heading = data.heading;\n\t\t\t\t\tif (data.description) {\n\n\t\t\t\t\t\tthis.translate.get(data.description).subscribe((res: string) => {\n\t\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\t\tcontent: data.description\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.removeTag(\"name='description'\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!data.robots) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'nofollow,noindex'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'follow,index'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * Start chain daemon and wallet service\n\t * unblock UI\n\t */\n\tstartChain() {\n\t\tthis.fs.listFiles('/cli').then((dat: any) => {\n\t\t\tif(dat.length > 2){\n\t\t\t\tthis.chain.startDaemon().then((data) => {\n\t\t\t\t\tthis.blockUI.stop();\n\t\t\t\t\tthis.wallet.startWallet().then(r => r);\n\t\t\t\t})\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Angular router helper\n\t *\n\t * @param {ActivatedRoute} activatedRoute\n\t * @returns {any}\n\t */\n\tgetChild(activatedRoute: ActivatedRoute) {\n\t\tif (activatedRoute.firstChild) {\n\t\t\treturn this.getChild(activatedRoute.firstChild);\n\t\t} else {\n\t\t\treturn activatedRoute;\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                menu\n            \n        \n\n        \n        \n            {{ 'menu.text.dashboard' | translate }}\n            {{ 'menu.text.blockchain' | translate }}\n{{ 'menu.text.wallet' | translate }}-->\n{{ 'menu.text.settings' | translate }}-->\n        \n        \n        \n    \n\n    \n        \n            \n\n                \n                    menu_open\n                \n                {{heading | translate}}\n                \n                \n                    \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.en' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.ru' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.zh' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.es' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.de' | translate }}\n                            \n                        \n                        \n                            \n                                &nbsp;&nbsp;{{ 'lang.fr' | translate }}\n                            \n                        \n\n\n                    \n                \n\n                \n                    \n                \n            \n        \n        \n            \n        \n    \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  .main-container {\n    height: 100vh;\n    width: 100%;\n    min-height: calc(99vh - 54px);\n    overflow: hidden;\n    background: radial-gradient(circle, rgba(8, 242, 181, 1) 0%, rgba(21, 130, 151, 1) 100%);\n\n    mat-card {\n      mat-card-content {\n        img {\n          height: 30vh;\n        }\n      }\n    }\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 64px;\n  }\n\n  mat-sidenav {\n    width: 298px;\n\n    .logo {\n      border: 0;\n      padding: 9px;\n      width: 210px;\n    }\n  }\n\n  html.dark-theme .made-by {\n    --active-background-color: #242628;\n    color: #838488;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                menu                                                {{ \\'menu.text.dashboard\\' | translate }}            {{ \\'menu.text.blockchain\\' | translate }}{{ \\'menu.text.wallet\\' | translate }}-->{{ \\'menu.text.settings\\' | translate }}-->                                                                                        menu_open                                {{heading | translate}}                                                                                                                                          {{ \\'lang.en\\' | translate }}                                                                                                                                          {{ \\'lang.ru\\' | translate }}                                                                                                                                          {{ \\'lang.zh\\' | translate }}                                                                                                                                          {{ \\'lang.es\\' | translate }}                                                                                                                                          {{ \\'lang.de\\' | translate }}                                                                                                                                          {{ \\'lang.fr\\' | translate }}                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nPluginsModule\n\nPluginsModule\n\nAppModule -->\n\nPluginsModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            PluginsModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule, BrowserTransferStateModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {DataModule} from '@data/data.module';\nimport {StatusModule} from '@module/status/status.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexModule} from '@angular/flex-layout';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {PluginsModule} from '@plugin/plugins.module';\nimport {NotifierModule} from 'angular-notifier';\nimport {BlockUIModule} from 'ng-block-ui';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\treturn new TranslateHttpLoader(http);\n}\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tCommonModule,\n\t\tBrowserModule.withServerTransition({appId: 'lthn-data-sync'}),\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tTranslateModule.forRoot({\n\t\t\tdefaultLanguage: 'en',\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t}\n\t\t}),\n\t\tAppRoutingModule,\n\n\t\tDataModule,\n\t\tStatusModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatDividerModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatMenuModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tFlexModule,\n\t\tAuthModule,\n\t\tConsoleModule,\n\t\tPluginsModule,\n\t\tNotifierModule.withConfig({\n\t\t\t// Custom options in here\n\t\t}),\n\t\tBlockUIModule.forRoot()\n\n\t],\n\tproviders: [],\n\texports: [\n\t],\n\tbootstrap: [AppComponent]\n})\n/**\n * Application shell/bootstrap\n */\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BlockchainRoutingModule\n                        \n                        \n                            RootRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BlockchainRoutingModule} from '@plugin/lthn/chain/blockchain-routing.module';\nimport {RootRoutingModule} from '@module/root-routing.module';\nimport {LoginComponent} from '@module/auth/login.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'Login - Lethean (LTHN)',\n\t\t\theading: 'Login',\n\t\t\tdescription: 'Lethean (LTHN) Login',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, { relativeLinkResolution: 'legacy', initialNavigation: 'enabledBlocking' }),\n\t\t//PostRoutingModule,\n\t\tBlockchainRoutingModule,\n\t\t//UserRoutingModule,\n\t\t//SettingsRoutingModule,\n\t\t//WalletRoutingModule,\n\t\t// Make sure Root is the last in the list, it has a catch all\n\t\tRootRoutingModule\n\t],\n\texports: [RouterModule]\n})\n/**\n * Application routing bootstrap file, adds all routes as lazy loaded modules\n */\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crypto\n                            \n                            \n                                    Public\n                                letheanConfig\n                            \n                            \n                                openpgp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.service.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        letheanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigIniParser\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openpgp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n\nimport {APP_CONFIG} from '@env/environment';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * @deprecated\n */\nexport class AppService {\n\n\tpublic letheanConfig: ConfigIniParser;\n\topenpgp: any;\n\tcrypto: any;\n\n\tconstructor() {\n\n\t\t\tthis.openpgp = require('openpgp');\n\t\t\tthis.crypto = require('crypto-js');\n\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chain\n                                        \n                                \n                                \n                                        \n                                            charts\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            settings\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chain:     Chain.ChainState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Chain.ChainState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charts:         Chart.ChartsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chart.ChartsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         Logs.LogsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Logs.LogsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         Settings.SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Settings.SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User.UsersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User.UsersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         Wallet.WalletsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wallet.WalletsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {APP_CONFIG} from '@env/environment';\nimport * as Settings from '../../modules/settings/data';\nimport * as User from '../../modules/user/data/user';\nimport {localStorageSync} from 'ngrx-store-localstorage';\nimport * as Chart from '../../modules/chart/data';\nimport * as Wallet from '../../plugins/lthn/wallet/data';\nimport * as Chain from '../../plugins/lthn/chain/data';\nimport * as Logs from '../logs';\nimport {WebStorageService} from '@service/web-storage.service';\n\nexport interface AppState {\n\tsettings: Settings.SettingsState;\n\tcharts: Chart.ChartsState;\n\tuser: User.UsersState;\n\tlogs: Logs.LogsState;\n\twallets: Wallet.WalletsState;\n\tchain: Chain.ChainState\n}\n\nexport const reducers: ActionReducerMap = {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer,\n\twallets: Wallet.reducer,\n\tchain: Chain.reducer\n};\n\nexport function localStorageSyncReducer(\n\treducer: ActionReducer\n): ActionReducer {\n\treturn localStorageSync({\n\t\tkeys: [\n\t\t\t'settings',\n\t\t\t'wallets',\n\t\t\t{\n\t\t\t\tuser: {\n\t\t\t\t\tencrypt: (state: string) => btoa(state), // placeholder\n\t\t\t\t\tdecrypt: (state: string) => atob(state) // placeholder\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\trehydrate: true,\n\t\tremoveOnUndefined: true,\n\t\t//storage:  new WebStorageService()\n\t})(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !APP_CONFIG.production\n\t? []\n\t: [localStorageSyncReducer];\n\nexport const effects = [Chart.ChartsEffects, Settings.SettingsEffects, Wallet.WalletEffects ];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Atomic.html":{"url":"classes/Atomic.html","title":"class - Atomic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Atomic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toLTHN\n                            \n                            \n                                toNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toLTHN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/auth/route.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/route.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/route.guard.ts:34\n                \n            \n\n\n            \n                \n                    Handles logged out access\nRun during routing to check if the user is logged in or not, we do this check if\ngetAuthStatus() returns true, the username variable is set, to logout simply clear the username\nIf the user is not authenticated this function acts in one of two ways\n\nif ~/Lethean/users is empty perform first run / welcome\nif users do exsist, take to the /login page\n\nif APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\nyou may or may not have to login to develop, for now at least\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\n\t/**\n\t * Handles logged out access\n\t * Run during routing to check if the user is logged in or not, we do this check if\n\t * getAuthStatus() returns true, the username variable is set, to logout simply clear the username\n\t *\n\t * If the user is not authenticated this function acts in one of two ways\n\t *\n\t * 1) if ~/Lethean/users is empty perform first run / welcome\n\t * 2) if users do exsist, take to the /login page\n\t *\n\t * if APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\n\t * you may or may not have to login to develop, for now at least\n\t *\n\t * @param {ActivatedRouteSnapshot} route\n\t * @param {RouterStateSnapshot} state\n\t * @returns {boolean | Promise}\n\t */\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): boolean | Promise {\n\t\tlet isAuthenticated = this.authService.getAuthStatus();\n\t\tif (!isAuthenticated) {\n\t\t\ttry {\n\t\t\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\t\t\tif (dat.length > 0) {\n\t\t\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.router.navigate(['/user']);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}catch (e) {\n\t\t\t\tisAuthenticated = false\n\t\t\t}\n\n\t\t}\n\t\treturn isAuthenticated;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [LoginComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule\n\t]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthStatus\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthStatus\n                        \n                    \n                \n            \n            \n                \ngetAuthStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n                    User auth check is (this.user.length > 0) we only need to store how to access the data.\nPlease do not add identifiable data or anything here, data like that should live in the users encrypted\njson profiles.\nIf extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\nnot because it would just be easier to code\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n                    Takes a username and password and tries to decrypt data files with a name id matching\nIt either works and that was the right password, or it does not and then it wont.\nWe are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\nso if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n                    Clear the user prop by setting to a empty string, making auth checks fail.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {APP_CONFIG} from '@env/environment';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate user = '';\n\tprivate id = '';\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * User auth check is (this.user.length > 0) we only need to store how to access the data.\n\t *\n\t * Please do not add identifiable data or anything here, data like that should live in the users encrypted\n\t * json profiles.\n\t *\n\t * If extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\n\t * not because it would just be easier to code\n\t *\n\t * @returns {boolean}\n\t */\n\tgetAuthStatus() {\n\t\treturn this.user.length > 0;\n\t}\n\n\t/**\n\t * Takes a username and password and tries to decrypt data files with a name id matching\n\t *\n\t * It either works and that was the right password, or it does not and then it wont.\n\t *\n\t * We are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\n\t * so if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync login(username, password) {\n\t\tconst id = this.cryptService.sha256Salty(username);\n\t\tconst data = await this.fileSystem.readFile(`users/${id}.lthn`);\n\n\t\tconst decrypted = JSON.parse(\n\t\t\tawait this.cryptService.decryptPGPSingle(id, password, data)\n\t\t);\n\t\tthis.user = decrypted.username;\n\t\tthis.id = decrypted.id;\n\t}\n\n\t/**\n\t * Clear the user prop by setting to a empty string, making auth checks fail.\n\t */\n\tlogout() {\n\t\tthis.user = '';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackupComponent.html":{"url":"components/BackupComponent.html","title":"component - BackupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/backup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-backup\n            \n\n\n\n\n            \n                templateUrl\n                ./backup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/backup.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-backup',\n\ttemplateUrl: './backup.component.html'\n})\nexport class BackupComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BackupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/balance.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            unlocked_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlocked_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlocked_balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Balance {\n\tbalance: number; // - unsigned int; The total balance of the current monero-wallet-rpc in session.\n\tunlocked_balance: number; // - unsigned int; Unlocked funds are those funds that are sufficiently deep enough in the Monero blockchain to be considered safe to spend.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseChartConfigService.html":{"url":"injectables/BaseChartConfigService.html","title":"injectable - BaseChartConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/base-chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOptions\n                            \n                            \n                                configureOptions\n                            \n                            \n                                setupCallbacks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: []\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class BaseChartConfigService {\n\tpublic key = '';\n\tpublic type = '';\n\tpublic data: any = {\n\t\tdatasets: []\n\t};\n\tpublic options = {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.configureOptions();\n\t\tthis.setupCallbacks();\n\t}\n\n\tsetupCallbacks() {}\n\n\tconfigureOptions() {}\n\n\taddOptions(overrides: object) {\n\t\tthis.options = { ...this.options, ...overrides };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockHeader.html":{"url":"interfaces/BlockHeader.html","title":"interface - BlockHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/interfaces/types/blockHeader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block_size\n                                        \n                                \n                                \n                                        \n                                            depth\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            major_version\n                                        \n                                \n                                \n                                        \n                                            minor_version\n                                        \n                                \n                                \n                                        \n                                            nonce\n                                        \n                                \n                                \n                                        \n                                            num_txes\n                                        \n                                \n                                \n                                        \n                                            orphan_status\n                                        \n                                \n                                \n                                        \n                                            prev_hash\n                                        \n                                \n                                \n                                        \n                                            reward\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        depth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        depth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        major_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        major_version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minor_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minor_version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonce:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num_txes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num_txes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orphan_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orphan_status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reward:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockHeader {\n\tblock_size: number;\n\tdepth: number;\n\tdifficulty: number;\n\thash: string;\n\theight: number;\n\tmajor_version: number;\n\tminor_version: number;\n\tnonce: number;\n\tnum_txes: number;\n\torphan_status: boolean;\n\tprev_hash: string;\n\treward: number;\n\ttimestamp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainComponent.html":{"url":"components/BlockchainComponent.html","title":"component - BlockchainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/chain/blockchain.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ChartService\n                \n            \n\n\n            \n                selector\n                lthn-chain\n            \n\n            \n                styleUrls\n                ./blockchain.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./blockchain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allColumns\n                            \n                            \n                                    Public\n                                blocks\n                            \n                            \n                                    Public\n                                buildType\n                            \n                            \n                                    Public\n                                chainInfo\n                            \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                    Public\n                                pipeHashrate\n                            \n                            \n                                    Public\n                                recentTxs\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystem: FileSystemService, store: Store, chain: BlockchainService, pipeHashrate: HashRatePipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pipeHashrate\n                                                  \n                                                        \n                                                                    HashRatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{ prop: 'height', name: 'plugin.lthn.chain.table.th.height', default: true},\n\t\t{ prop: 'difficulty', name: 'plugin.lthn.chain.table.th.difficulty', default: true },\n\t\t{ prop: 'hash', name: 'plugin.lthn.chain.table.th.hash', default: true  },\n\t\t{ prop: 'orphan_status', name: 'plugin.lthn.chain.table.th.orphan_status', default: true },\n\t\t{ prop: 'reward', name: 'plugin.lthn.chain.table.th.reward', default: true },\n\t\t{ prop: 'timestamp', name: 'plugin.lthn.chain.table.th.timestamp', default: true },\n\t//\t{ prop: 'block_size', name: 'Block Size', default: true },\n\t\t{ prop: 'depth', name: 'plugin.lthn.chain.table.th.depth', default: true },\n\t\t//{ prop: 'major_version', name: 'Block Major Version', default: true },\n\t//\t{ prop: 'minor_version', name: 'Block Minor Version', default: false },\n\t//\t{ prop: 'nonce', name: 'Block Nonce', default: false },\n\t//\t{ prop: 'num_txes', name: 'Transactions', default: true },\n\t//\t{ prop: 'prev_hash', name: 'Last Hash', default: true },\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buildType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pipeHashrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HashRatePipe\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        recentTxs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/chain/blockchain.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, PipeTransform} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ChartService} from '@module/chart/chart.service';\nimport {APP_CONFIG} from '@env/environment';\nimport {rpcBody} from '@service/json-rpc';\nimport {ChainGetInfo} from '@plugin/lthn/chain/interfaces/props/get_info';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {select, Store} from '@ngrx/store';\nimport {ChainSetGetInfo, getChainBlocks, getChainInfo} from '@plugin/lthn/chain/data';\nimport {interval, Observable, Subscription} from 'rxjs';\nimport {BlockHeader} from '@plugin/lthn/chain/interfaces/types/blockHeader';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {HashRatePipe} from 'app/pipes/crypto/hashrate.pipe';\n\n@Component({\n\tselector: 'lthn-chain',\n\ttemplateUrl: './blockchain.component.html',\n\tstyleUrls: ['./blockchain.component.scss'],\n\tproviders: [ChartService]\n})\nexport class BlockchainComponent implements OnInit, OnDestroy {\n\n\tcolumns: any = []\n\n\tpublic allColumns = [\n\t\t{ prop: 'height', name: 'plugin.lthn.chain.table.th.height', default: true},\n\t\t{ prop: 'difficulty', name: 'plugin.lthn.chain.table.th.difficulty', default: true },\n\t\t{ prop: 'hash', name: 'plugin.lthn.chain.table.th.hash', default: true  },\n\t\t{ prop: 'orphan_status', name: 'plugin.lthn.chain.table.th.orphan_status', default: true },\n\t\t{ prop: 'reward', name: 'plugin.lthn.chain.table.th.reward', default: true },\n\t\t{ prop: 'timestamp', name: 'plugin.lthn.chain.table.th.timestamp', default: true },\n\t//\t{ prop: 'block_size', name: 'Block Size', default: true },\n\t\t{ prop: 'depth', name: 'plugin.lthn.chain.table.th.depth', default: true },\n\t\t//{ prop: 'major_version', name: 'Block Major Version', default: true },\n\t//\t{ prop: 'minor_version', name: 'Block Minor Version', default: false },\n\t//\t{ prop: 'nonce', name: 'Block Nonce', default: false },\n\t//\t{ prop: 'num_txes', name: 'Transactions', default: true },\n\t//\t{ prop: 'prev_hash', name: 'Last Hash', default: true },\n\t]\n\tColumnMode = ColumnMode;\n\tpublic blocks: Observable;\n\tpublic chainInfo: Observable;\n\n\tpublic recentTxs: any;\n\tpublic buildType: string;\n\tprivate sub: Subscription;\n\n\tconstructor(private fileSystem: FileSystemService, private store: Store, private chain: BlockchainService,\n\t\t\t\tpublic pipeHashrate: HashRatePipe) {\n\n\t\tthis.allColumns.forEach((col) => {\n\t\t\tif (col.default){\n\n\t\t\t\tthis.columns.push(\n\t\t\t\t\tcol\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n\n\n\tngOnInit(): void {\n\n\t\tthis.chain.getInfo()\n\n\t\tthis.fileSystem.listFiles('/cli').then((dat: any) => {\n\t\t\tthis.chain.getInfo()\n\t\t\tinterval(15000).subscribe(n => {\n\t\t\t\tthis.chain.getInfo()\n\t\t\t});\n\n\t\t});\n\n\t\tthis.sub = this.store.pipe(select(getChainInfo)).subscribe((data) => {\n\t\t\tif(data) this.chain.getBlocks(data.height-25, data.height-1)\n\t\t})\n\t\tthis.chainInfo = this.store.pipe(select(getChainInfo))\n\t\tthis.blocks = this.store.pipe(select(getChainBlocks))\n\n\t}\n\n\ttoggle(col) {\n\t\tconst isChecked = this.isChecked(col);\n\n\t\tif (isChecked) {\n\t\t\tthis.columns = this.columns.filter(c => {\n\t\t\t\treturn c.name !== col.name;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push(col);\n\t\t}\n\t}\n\n\tisChecked(col) {\n\t\treturn (\n\t\t\tthis.columns.find(c => {\n\t\t\t\treturn c.name === col.name;\n\t\t\t}) !== undefined\n\t\t);\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.sub.unsubscribe()\n\t\tconsole.log('BlockchainComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n\n  \n    {{ 'plugin.lthn.chain.table.title.blockchain-explorer' | translate }}\n\n    \n      \n           {{'plugin.lthn.chain.words.height' | translate }}: {{info.height | number }}\n\n          {{'plugin.lthn.chain.words.target_height' | translate }}: {{info.target_height | number}}\n          {{'plugin.lthn.chain.words.grey_peerlist_size' | translate }}: {{info.grey_peerlist_size | number}}\n\n          \n      \n\n\n    \n      view_column\n    \n    \n      \n        &nbsp;\n        {{ col.name | translate }}\n      \n    \n\n  \n\n\n\n\n    \n        {{ 'plugin.lthn.chain.table.title.recent-blocks' | translate }}\n        \n            \n                \n\n                        \n                          {{ value | hashrate}}\n                          {{ value | number }}\n                          \n                          \n                            done\n                            close\n                          \n                          {{ value | toCoin }}\n                          {{ value | timeAgo }}\n                          {{ value | number }}\n                          {{ value | number }}\n                          {{ value  }}\n                          {{ value | number }}\n                          {{ value  }}\n                          {{ value | number }}\n                          {{ value }}\n                        \n\n                \n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./blockchain.component.scss\n                \n                :host {\n\n}\n\n@mixin vertical-fill {\n\tbox-sizing: border-box;\n\theight: 100%;\n}\n\n.vertically-filled-mat-card-container {\n\tmat-card {\n\t\t@include vertical-fill;\n\t}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'plugin.lthn.chain.table.title.blockchain-explorer\\' | translate }}                     {{\\'plugin.lthn.chain.words.height\\' | translate }}: {{info.height | number }}          {{\\'plugin.lthn.chain.words.target_height\\' | translate }}: {{info.target_height | number}}          {{\\'plugin.lthn.chain.words.grey_peerlist_size\\' | translate }}: {{info.grey_peerlist_size | number}}                          view_column                               {{ col.name | translate }}                        {{ \\'plugin.lthn.chain.table.title.recent-blocks\\' | translate }}                                                                                      {{ value | hashrate}}                          {{ value | number }}                                                                                done                            close                                                    {{ value | toCoin }}                          {{ value | timeAgo }}                          {{ value | number }}                          {{ value | number }}                          {{ value  }}                          {{ value | number }}                          {{ value  }}                          {{ value | number }}                          {{ value }}                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockchainComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockchainComponent} from './blockchain.component';\nimport {ChartModule} from '@module/chart/chart.module';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {PipesModule} from 'app/pipes/pipes.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HashRatePipe} from 'app/pipes/crypto/hashrate.pipe';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: BlockchainComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [BlockchainComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tChartModule,\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tTranslateModule,\n\t\tNgxDatatableModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule,\n\t\tMatIconModule,\n\t\tMatToolbarModule,\n\t\tMatTooltipModule,\n\t\tMatMenuModule\n\t],\n\texports: [RouterModule],\n\tproviders: [HashRatePipe]\n})\nexport class BlockchainModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainRoutingModule.html":{"url":"modules/BlockchainRoutingModule.html","title":"module - BlockchainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'chain',\n\t\t//canActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./blockchain.module').then((m) => m.BlockchainModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class BlockchainRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chainRpc\n                            \n                            \n                                downloadCLI\n                            \n                            \n                                exportChain\n                            \n                            \n                                getBlocks\n                            \n                            \n                                getInfo\n                            \n                            \n                                getTransactions\n                            \n                            \n                                importChain\n                            \n                            \n                                startDaemon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/chain/blockchain.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chainRpc\n                        \n                    \n                \n            \n            \n                \nchainRpc(method: string, params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \ndownloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:78\n                \n            \n\n\n            \n                \n                    Download Lethean binaries to the users home dir\n~/Lethean/cli\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportChain\n                        \n                    \n                \n            \n            \n                \nexportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:34\n                \n            \n\n\n            \n                \n                    Export chain to a raw format\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBlocks\n                        \n                    \n                \n            \n            \n                \ngetBlocks(start_height: number, end_height: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start_height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end_height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInfo\n                        \n                    \n                \n            \n            \n                \ngetInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransactions\n                        \n                    \n                \n            \n            \n                \ngetTransactions(txsHashes: string[], decodeAsJson: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    txsHashes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    decodeAsJson\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importChain\n                        \n                    \n                \n            \n            \n                \nimportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:55\n                \n            \n\n\n            \n                \n                    Import raw chain data file\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDaemon\n                        \n                    \n                \n            \n            \n                \nstartDaemon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/chain/blockchain.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {ChainSetBlocks, ChainSetGetInfo, ChainSetTransactions} from '@plugin/lthn/chain/data';\nimport {Store} from '@ngrx/store';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BlockchainService {\n\tconstructor(private http: HttpClient, private store: Store) {}\n\n\tstartDaemon() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/start`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Export chain to a raw format\n\t *\n\t */\n\texportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/export`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Import raw chain data file\n\t *\n\t */\n\timportChain() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/chain/import`,\n\t\t\t\t{},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Download Lethean binaries to the users home dir\n\t * ~/Lethean/cli\n\t *\n\t * @returns {Promise}\n\t */\n\tdownloadCLI() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn this.http\n\t\t\t.post(`https://localhost:36911/update/cli`, {}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => dat);\n\t}\n\n\tchainRpc(method: string, params: any) {\n\t\treturn this.http\n\t\t\t.post('https://localhost:36911/daemon/chain/json_rpc', JSON.stringify(rpcBody(method)(params)));\n\t}\n\n\tgetInfo(){\n\t\tthis.chainRpc('get_info', '').subscribe((data) => {\n\t\t\tthis.store.dispatch(ChainSetGetInfo({info: data.result}))\n\t\t})\n\t}\n\n\tgetTransactions(txsHashes: string[], decodeAsJson: boolean = true){\n\n\t\tthis.chainRpc('get_transaction', { txs_hashes: txsHashes, decode_as_json: decodeAsJson }).subscribe((data) => {\n\t\t\tif (decodeAsJson && data.hasOwnProperty(\"txs_as_json\")) {\n\t\t\t\tdata.txs_as_json = JSON.parse(data.txs_as_json);\n\t\t\t}\n\t\t\tthis.store.dispatch(ChainSetTransactions({transactions: data.result}))\n\t\t})\n\t}\n\n\tgetBlocks(start_height: number, end_height: number){\n\n\t\tthis.chainRpc('getblockheadersrange', {start_height:start_height,end_height:end_height}).subscribe((data) => {\n\n\t\t\tthis.store.dispatch(ChainSetBlocks({blocks: data.result}))\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChainGetInfo.html":{"url":"interfaces/ChainGetInfo.html","title":"interface - ChainGetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChainGetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/interfaces/props/get_info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alt_blocks_count\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            grey_peerlist_size\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            incoming_connections_count\n                                        \n                                \n                                \n                                        \n                                            outgoing_connections_count\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            target_height\n                                        \n                                \n                                \n                                        \n                                            testnet\n                                        \n                                \n                                \n                                        \n                                            top_block_hash\n                                        \n                                \n                                \n                                        \n                                            tx_count\n                                        \n                                \n                                \n                                        \n                                            tx_pool_size\n                                        \n                                \n                                \n                                        \n                                            white_peerlist_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alt_blocks_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alt_blocks_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grey_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grey_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incoming_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incoming_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outgoing_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outgoing_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testnet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testnet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_block_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_block_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_pool_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_pool_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        white_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        white_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChainGetInfo {\n\talt_blocks_count: number;\n\tdifficulty: number;\n\tgrey_peerlist_size: number;\n\theight: number;\n\tincoming_connections_count: number;\n\toutgoing_connections_count: number;\n\tstatus: string;\n\ttarget: number;\n\ttarget_height: number;\n\ttestnet: boolean;\n\ttop_block_hash: string;\n\ttx_count: number;\n\ttx_pool_size: number;\n\twhite_peerlist_size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartConfigInterface.html":{"url":"interfaces/ChartConfigInterface.html","title":"interface - ChartConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dataMap\n                                    \n                                \n                                \n                                    \n                                        setupCallbacks\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartConfigInterface {\n\tkey: string;\n\ttype: string;\n\tdata: object;\n\toptions: object;\n\n\tsetupCallbacks(): void;\n\n\tdataMap(data: any, i: number): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDifficulty.html":{"url":"interfaces/ChartDifficulty.html","title":"interface - ChartDifficulty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartDifficulty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/interfaces/difficulty.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diff\n                                        \n                                \n                                \n                                        \n                                            ts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDifficultyState {\n\toptions: {\n\t\tpollingInterval: number;\n\t};\n\tdata: ChartDifficulty[];\n}\n\nexport class ChartDifficultyState implements ChartDifficultyState {\n\tdata: ChartDifficulty[] = [];\n\toptions: { pollingInterval: number } = { pollingInterval: 30000 };\n}\n\nexport interface ChartDifficulty {\n\tts: string;\n\tdiff: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChartDirective.html":{"url":"directives/ChartDirective.html","title":"directive - ChartDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ChartDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ChartService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [lthnChart]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChartElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lthnChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elmRef: ElementRef, chartService: ChartService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        ChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        lthnChart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chart/chart.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChartElement\n                        \n                    \n                \n            \n            \n                \ncreateChartElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, PLATFORM_ID, Renderer2} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {ChartService} from './chart.service';\n\n@Directive({\n\tselector: '[lthnChart]',\n\tproviders: [ChartService]\n})\nexport class ChartDirective implements AfterViewInit, OnDestroy {\n\t@Input() lthnChart: string;\n\tprivate chartElement: any;\n\n\tconstructor(\n\t\tprivate renderer: Renderer2,\n\t\tprivate elmRef: ElementRef,\n\t\tprivate chartService: ChartService,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.createChartElement(this.lthnChart);\n\t\t\tthis.chartService.createChart(this.lthnChart);\n\t\t}\n\t}\n\n\tcreateChartElement(name: string) {\n\t\tthis.chartElement = this.renderer.createElement('canvas');\n\t\tthis.renderer.setAttribute(\n\t\t\tthis.chartElement,\n\t\t\t'id',\n\t\t\t`lthn-chart-${name}`\n\t\t);\n\t\tthis.renderer.setStyle(this.elmRef.nativeElement, 'height', '25vh');\n\t\tthis.renderer.setStyle(\n\t\t\tthis.elmRef.nativeElement,\n\t\t\t'position',\n\t\t\t'relative'\n\t\t);\n\n\t\t// position: relative; height:40vh; width:80vw\n\t\tthis.renderer.appendChild(this.elmRef.nativeElement, this.chartElement);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.renderer.removeChild(\n\t\t\t\tthis.elmRef.nativeElement,\n\t\t\t\tthis.chartElement\n\t\t\t);\n\t\t}\n\t\tthis.chartService.destroySubscriptions(this.lthnChart);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ChartModule_providers\n\n\n\ncluster_ChartModule_declarations\n\n\n\n\nChartDirective\n\nChartDirective\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartService\n\nChartService\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDirective} from './chart.directive';\nimport {ChartService} from './chart.service';\n\n@NgModule({\n\tdeclarations: [ChartDirective],\n\timports: [CommonModule],\n\tproviders: [ChartService],\n\texports: [ChartDirective]\n})\nexport class ChartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData$\n                            \n                            \n                                    Private\n                                chartInstances\n                            \n                            \n                                    Private\n                                chartMeta\n                            \n                            \n                                    Private\n                                chartSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                destroySubscriptions\n                            \n                            \n                                setupDataSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, platformId: Object, NetworkHashrateChart: NetworkHashrateChart)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        NetworkHashrateChart\n                                                  \n                                                        \n                                                                        NetworkHashrateChart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:54\n                \n            \n\n\n            \n                \n                    Loads up a new chart instance,\napplies colour adjustments\ncreates data subscription\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroySubscriptions\n                        \n                    \n                \n            \n            \n                \ndestroySubscriptions(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDataSubscription\n                        \n                    \n                \n            \n            \n                \nsetupDataSubscription(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:98\n                \n            \n\n\n            \n                \n                    Gets the observable for the chart key from the datastore\ncreates the data subscription, the map function is provided by the\nchart config service as a function dataMap(data)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                        \n                    \n\n            \n                \n                    holds all the data observables for all charts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:19\n                        \n                    \n\n            \n                \n                    holds the chart.js instances\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:26\n                        \n                    \n\n            \n                \n                    holds the configurations for each chart type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {Chart, registerables} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport {select, Store} from '@ngrx/store';\nimport colorLib from '@kurkle/color';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {selectChartData} from './data';\nimport {NetworkHashrateChart} from '@plugin/hashvault/charts/network-hashrate.chart';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChartService {\n\t/**\n\t * holds the chart.js instances\n\t *\n\t * @private\n\t */\n\tprivate chartInstances: object = {};\n\tprivate chartSubscriptions: object = {};\n\t/**\n\t * holds the configurations for each chart type\n\t *\n\t * @private\n\t */\n\tprivate chartMeta = {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t};\n\t/**\n\t * holds all the data observables for all charts\n\t *\n\t * @private\n\t */\n\tprivate chartData$: object = {};\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t//@TODO try and find a better way than get DI to give us configs, so they can themselves use services\n\t\tprivate NetworkHashrateChart: NetworkHashrateChart\n\t) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tChart.register(...registerables);\n\t\t}\n\t}\n\n\t/**\n\t * Loads up a new chart instance,\n\t * applies colour adjustments\n\t * creates data subscription\n\t *\n\t * @param name\n\t */\n\tcreateChart(name: string) {\n\t\tconst vm = this;\n\t\tif (!vm.chartMeta[name]) {\n\t\t\tthrow new Error(`Chart Not Defined: ${name}`);\n\t\t}\n\n\t\tvm.chartMeta[name].data.datasets.map((dataset, i) => {\n\t\t\tdataset.backgroundColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t)\n\t\t\t\t.alpha(0.2)\n\t\t\t\t.rgbString();\n\t\t\tdataset.borderColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t).rgbString();\n\t\t\t// if we have more than one data point, change label colors to match data\n\t\t\tif (vm.chartMeta[name].data.datasets.length > 1) {\n\t\t\t\tif (\n\t\t\t\t\tvm.chartMeta[name].options.scales[dataset.yAxisID]\n\t\t\t\t\t\t.position === 'right'\n\t\t\t\t) {\n\t\t\t\t\tvm.chartMeta[name].options.scales[\n\t\t\t\t\t\tdataset.yAxisID\n\t\t\t\t\t\t].ticks.color = dataset.borderColor;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvm.chartInstances[name] = new Chart(`lthn-chart-${name}`, {\n\t\t\ttype: vm.chartMeta[name].type,\n\t\t\tdata: vm.chartMeta[name].data,\n\t\t\toptions: vm.chartMeta[name].options\n\t\t});\n\n\t\tvm.setupDataSubscription(name);\n\t}\n\n\t/**\n\t * Gets the observable for the chart key from the datastore\n\t * creates the data subscription, the map function is provided by the\n\t * chart config service as a function dataMap(data)\n\t *\n\t * @param name\n\t */\n\tsetupDataSubscription(name: string) {\n\t\t//let vm = this\n\t\tthis.chartData$[name] = this.store.pipe(\n\t\t\tselect(selectChartData(this.chartMeta[name].key))\n\t\t);\n\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStartAction);\n\n\t\tthis.chartSubscriptions[name] = this.chartData$[name].subscribe(\n\t\t\t(response) => {\n\t\t\t\tif (response != undefined) {\n\t\t\t\t\tthis.chartInstances[name].data.datasets.map((item, i) => {\n\t\t\t\t\t\tthis.chartInstances[name].data.datasets[i].data =\n\t\t\t\t\t\t\tthis.chartMeta[name].dataMap(response, i);\n\t\t\t\t\t});\n\t\t\t\t\tthis.chartInstances[name].update();\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.destroySubscriptions(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\t//console.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroySubscriptions(name: string): void {\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStopAction);\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.chartSubscriptions[name].unsubscribe();\n\t\t\tthis.chartInstances[name].destroy();\n\t\t\tthis.chartInstances[name] = void 0;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartsEffects.html":{"url":"injectables/ChartsEffects.html","title":"injectable - ChartsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChartsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChartNetworkDifficultyStartPolling$\n                            \n                            \n                                ChartNetworkDifficultyStopPolling$\n                            \n                            \n                                LoadRequestedChartDifficulty$\n                            \n                            \n                                    Private\n                                    Static\n                                pollingUntil$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store>, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/data/effects.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                    Store>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStartPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStopPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRequestedChartDifficulty$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pollingUntil$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tChartNetworkDifficulty$: new Subject()\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport * as ChartsActions from './actions';\nimport {of, Subject, timer} from 'rxjs';\nimport {select, State, Store} from '@ngrx/store';\nimport {HttpClient} from '@angular/common/http';\nimport {debug, RxJsLoggingLevel} from '@data/debug.rxjs';\nimport {ChartDifficulty} from './interfaces/difficulty.state';\nimport {selectChartOptions} from './selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\tprivate static pollingUntil$ = {\n\t\tChartNetworkDifficulty$: new Subject()\n\t};\n\t// LoadRequestedChartDifficulty$ = createEffect(() =>\n\t//     this.actions$.pipe(\n\t//         ofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t//         switchMap(() =>\n\t//             this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`)\n\t//                 .pipe(\n\t//                     map(\n\t//                         (networkDifficulty) => ChartsActions.chartNetworkDifficultyLoadSuccess({\n\t//                                 networkDifficulty,\n\t//                             }\n\t//                         ),\n\t//                         catchError((error) => {\n\t//                                 console.error(error);\n\t//                                 return of(ChartsActions.chartNetworkDifficultyLoadFailure({error}));\n\t//                             }\n\t//                         )\n\t//                     )\n\t//                 )\n\t//         )\n\t//     )\n\t// );\n\n\tLoadRequestedChartDifficulty$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tChartNetworkDifficultyStartPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t);\n\tChartNetworkDifficultyStopPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate store$: Store>,\n\t\tprivate http: HttpClient\n\t) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartsState.html":{"url":"interfaces/ChartsState.html","title":"interface - ChartsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            networkDifficulty\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        networkDifficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkDifficulty:         ChartDifficultyState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartDifficultyState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createReducer, on} from '@ngrx/store';\nimport * as ChartsActions from './actions';\nimport {ChartDifficultyState} from './interfaces/difficulty.state';\n\n// export const initialState = PoolStatsState;\nexport const initialState: ChartsState = {\n\tnetworkDifficulty: new ChartDifficultyState()\n};\n\nconst chartDifficultyReducer = createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n);\n\nexport function reducer(state, action) {\n\treturn chartDifficultyReducer(state, action);\n}\n\nexport interface ChartsState {\n\tnetworkDifficulty?: ChartDifficultyState;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/console/console.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-console\n            \n\n            \n                styleUrls\n                ./console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                child\n                            \n                            \n                                    Private\n                                command\n                            \n                            \n                                    Private\n                                sub$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStream\n                            \n                            \n                                getSub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ws: WebsocketService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/console/console.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        attach\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lethean-wallet-rpc'\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/console/console.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStream\n                        \n                    \n                \n            \n            \n                \nchangeStream(channel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSub\n                        \n                    \n                \n            \n            \n                \ngetSub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/console/console.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        child\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgTerminal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('term', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub$\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/plugins/console/console.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NgTerminal} from 'ng-terminal';\nimport {WebsocketService} from '@service/websocket.service';\n\n\n@Component({\n\tselector: 'lthn-app-console',\n\ttemplateUrl: './console.component.html',\n\tstyleUrls: ['./console.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n\n\n})\nexport class ConsoleComponent implements OnInit, AfterViewInit {\n\t@ViewChild('term', { static: true }) child: NgTerminal;\n\n\t@Input() attach  = 'lethean-wallet-rpc';\n\tprivate command: string[] = []\n\tprivate sub$;\n\tconstructor(private ws: WebsocketService, private ref: ChangeDetectorRef) {\n\t\tthis.ref.detach()\n\t\tsetInterval(() => {\n\t\t\tthis.ref.detectChanges();\n\t\t}, 1000);\n\n\t}\n\n\tngOnInit(): void {\n\t\tlet that = this;\n\n\t\tthis.ref.detectChanges();\n\t\tthis.ws.connect().subscribe((data) => {\n\t\t\tif(this.attach === data[0]) {\n\t\t\t\tlet line  = atob(data[1]);\n\t\t\t\tif(data[0] === 'update-cli'){\n\t\t\t\t\tthis.child.underlying.writeln(data[1]);\n\t\t\t\t}else if(line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154\")){\n\t\t\t\t\tlet parts: string[] = line.split(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:1154\");\n\t\t\t\t\tif(parts.length > 0){\n\t\t\t\t\t\tthis.child.underlying.writeln(parts[1].trim());\n\t\t\t\t\t}\n\t\t\t\t}else if (line.includes(\"src/cryptonote_protocol/cryptonote_protocol_handler.inl:305\")){\n\n\t\t\t\t}else{\n\t\t\t\t\tthis.child.underlying.writeln(line.trim());\n\t\t\t\t}\n\n\t\t\t\tthat.ref.markForCheck()\n\t\t\t}\n\n\t\t})\n\n\t\t\tthis.changeStream(this.attach)\n    }\n\n\tgetSub(){\n\t\tthis.sub$ = this.ws.connect();\n\t}\n\n\tchangeStream(channel:string){\n\t\tthis.ws.sendMessage(channel)\n\t\tthis.ref.markForCheck()\n\t}\n\n\tngAfterViewInit() {\n\t\tconst that = this;\n\t\tthis.child.write('$ ');\n\t\tif(this.child.keyEventInput) {\n\n\t\t\tthis.child.keyEventInput.subscribe((e) => {\n\t\t\t\t//console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n\n\t\t\t\tconst ev = e.domEvent;\n\t\t\t\tconst printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n\t\t\t\tif (ev.keyCode === 13) {\n\n\t\t\t\t\t//console.log(`cmd:letheand:${this.command.join('')}`)\n\t\t\t\t\tthat.ws.sendMessage(`cmd:letheand:${this.command.join('')}\\n`)\n\t\t\t\t\tthis.command = []\n\t\t\t\t\tthis.child.underlying.writeln(\"$\");\n\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t} else if (ev.keyCode === 8) {\n\t\t\t\t\t this.command.pop()\n\t\t\t\t\tif (this.child.underlying.buffer.active.cursorX > 0) {\n\t\t\t\t\t\tthis.child.underlying.write('\\b \\b');\n\t\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tthis.command.push(e.key);\n\t\t\t\t\tthis.child.write(e.key);\n\t\t\t\t\t//this.ref.detectChanges();\n\t\t\t\t}\n\t\t\t\t//console.log(this.command.join(\"\"))\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./console.component.scss\n                \n                //.xterm-viewport {\n//\twidth: auto !important;\n//}\n//\n//.xterm-screen {\n//\twidth: auto !important;\n//\t> canvas {\n//\t\twidth: 100% !important;\n//\t}\n//}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleModule.html":{"url":"modules/ConsoleModule.html","title":"module - ConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\n\n\nConsoleModule\n\nConsoleModule\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleComponent } from './console.component';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NgTerminalModule} from 'ng-terminal';\nimport {FlexModule} from '@angular/flex-layout';\n\n\n@NgModule({\n\tdeclarations: [ConsoleComponent],\n\texports: [\n\t\tConsoleComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tNgTerminalModule,\n\t\tFlexModule\n\t]\n})\nexport class ConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateWallet.html":{"url":"interfaces/CreateWallet.html","title":"interface - CreateWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptService.html":{"url":"injectables/CryptService.html","title":"injectable - CryptService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOpenPGP\n                            \n                            \n                                createSalt\n                            \n                            \n                                    Async\n                                decryptPGPSingle\n                            \n                            \n                                    Async\n                                encryptPGPSingle\n                            \n                            \n                                generateKey\n                            \n                            \n                                sha256Salty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypt.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOpenPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOpenPGP(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:71\n                \n            \n\n\n            \n                \n                    Creates a Armoured OpenPGP key for the username protected with the password supplied\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalt\n                        \n                    \n                \n            \n            \n                \ncreateSalt(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:25\n                \n            \n\n\n            \n                \n                    Transforms the input string with a lite l337 conversion\nthis will always give you the same salt, im aware of the issues here\nPlease start a GitHub issue if you have a good idea for knowledge-less reproducible salts\nMaybe allow people to set a custom salter? something for later.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGPSingle(id: string, passphrase: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:121\n                \n            \n\n\n            \n                \n                    Requires the users password, for this reason, you might want to make or interact with profiles\nthey are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPGPSingle(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:92\n                \n            \n\n\n            \n                \n                    Using a Lethean user public key, encrypt the supplied data\nBigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\"quick for you\" it wont be on a Pi4 under load\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateKey\n                        \n                    \n                \n            \n            \n                \ngenerateKey(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:56\n                \n            \n\n\n            \n                \n                    Create a salted PBKDF2 key for encryption purposes using a random word array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Salty\n                        \n                    \n                \n            \n            \n                \nsha256Salty(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:44\n                \n            \n\n\n            \n                \n                    sha256 hash that uses itself converted as a reproducable salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AppService} from '../app.service';\nimport {FileSystemService} from './filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CryptService {\n\tconstructor(\n\t\tprivate appService: AppService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\t/**\n\t * Transforms the input string with a lite l337 conversion\n\t * this will always give you the same salt, im aware of the issues here\n\t * Please start a GitHub issue if you have a good idea for knowledge-less reproducible salts\n\t *\n\t * Maybe allow people to set a custom salter? something for later.\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSalt(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\t\treturn input\n\t\t\t.replace('o', '0')\n\t\t\t.replace(/l/gi, '1')\n\t\t\t.replace(/e/gi, '3')\n\t\t\t.replace(/a/gi, '4')\n\t\t\t.replace(/s/gi, 'z')\n\t\t\t.replace(/t/gi, '7');\n\t}\n\n\t/**\n\t * sha256 hash that uses itself converted as a reproducable salt\n\t *\n\t * @param input\n\t * @returns {string}\n\t */\n\tsha256Salty(input): string {\n\t\treturn this.appService.crypto\n\t\t\t.SHA256(input + this.createSalt(input))\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Create a salted PBKDF2 key for encryption purposes using a random word array\n\t *\n\t * @param input\n\t * @returns {any}\n\t */\n\tgenerateKey(input) {\n\t\tconst salt = this.appService.crypto.lib.WordArray.random(128 / 8);\n\t\treturn this.appService.crypto.PBKDF2(input, salt, {\n\t\t\tkeySize: 256 / 32\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a Armoured OpenPGP key for the username protected with the password supplied\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync createOpenPGP(username, password) {\n\t\treturn await this.appService.openpgp.generateKey({\n\t\t\ttype: 'rsa', // Type of the key, defaults to ECC\n\t\t\trsaBits: 4096,\n\t\t\tuserIDs: [{name: username}], // you can pass multiple user IDs\n\t\t\tpassphrase: password, // protects the private key\n\t\t\tformat: 'armored' // output key format, defaults to 'armored' (other options: 'binary' or 'object')\n\t\t});\n\t}\n\n\n\t/**\n\t * Using a Lethean user public key, encrypt the supplied data\n\t *\n\t * Bigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\t * \"quick for you\" it wont be on a Pi4 under load\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} data\n\t * @returns {Promise}\n\t */\n\tasync encryptPGPSingle(id: string, data: string) {\n\t\tconst encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.public.asc`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\tconst encrypted = await this.appService.openpgp.encrypt({\n\t\t\tmessage: await this.appService.openpgp.createMessage({\n\t\t\t\ttext: data\n\t\t\t}), // input as Message object\n\t\t\tencryptionKeys: await this.appService.openpgp.readKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t})\n\t\t});\n\n\t\treturn encrypted;\n\t}\n\n\t/**\n\t * Requires the users password, for this reason, you might want to make or interact with profiles\n\t * they are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} passphrase\n\t * @param {string} encrypted\n\t * @returns {Promise}\n\t */\n\tasync decryptPGPSingle(id: string, passphrase: string, encrypted: string) {\n\t\t/**\n\t\t * @type string OpenPGP Armoured private key\n\t\t */\n\t\tlet encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.private.asc`\n\t\t);\n\t\t// decrypt the private key\n\t\tlet privateKey = await this.appService.openpgp.decryptKey({\n\t\t\tprivateKey: await this.appService.openpgp.readPrivateKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t}),\n\t\t\tpassphrase\n\t\t});\n\n\t\tlet message = await this.appService.openpgp.readMessage({\n\t\t\tarmoredMessage: encrypted\n\t\t})\n\n\t\tconst {data: decrypted, signatures} =\n\t\t\tawait this.appService.openpgp.decrypt({\n\t\t\t\tmessage,\n\t\t\t\tdecryptionKeys: privateKey\n\t\t\t});\n\t\t// Leave nothing to chance\n\t\tprivateKey = null\n\t\tencryptionKey = ''\n\t\tmessage = null\n\n\t\treturn decrypted;\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {effects, metaReducers, reducers} from './reducers';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {APP_CONFIG} from '@env/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {EntityDataModule} from '@ngrx/data';\nimport {entityConfig} from './entity-metadata';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forRoot(reducers, {\n\t\t\tmetaReducers\n\t\t}),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25,\n\t\t\tlogOnly: APP_CONFIG.production,\n\t\t\tactionsBlocklist: ['@ngrx/router*']\n\t\t}),\n\t\tEffectsModule.forRoot([...effects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tEntityDataModule.forRoot(entityConfig)\n\t]\n})\nexport class DataModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/destination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface Destination {\n\tamount: number; // - unsigned int; Amount to send to each destination, in atomic units.\n\taddress: Address; // - string; Destination public address.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/status/dialog/no-daemon-running.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            animal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/profile/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects-1.html":{"url":"injectables/Effects-1.html","title":"injectable - Effects-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/user/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EffortPipe.html":{"url":"pipes/EffortPipe.html","title":"pipe - EffortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EffortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/effort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        effort\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/effort.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'effort', pure: false })\nexport class EffortPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tif (valid === false) {\n\t\t\treturn 'black';\n\t\t}\n\t\tconst mid = 100;\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tconst b = 0;\n\t\tif (value \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keepHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(content);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystemInterface.html":{"url":"interfaces/FileSystemInterface.html","title":"interface - FileSystemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileSystemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-system.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        mkdir\n                                    \n                                \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        write\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(type, pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:49\n                \n            \n\n\n            \n                \n                    check if a path.. dir or filename exsists in the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:33\n                \n            \n\n\n            \n                \n                    returns a json list of folder contents\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:41\n                \n            \n\n\n            \n                \n                    make a dir, return result as a boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:8\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:16\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(type, filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:25\n                \n            \n\n\n            \n                \n                    write the string value tot he request filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string value to save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileSystemInterface {\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tpath(type, filename);\n\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tread(type, filename);\n\n\t/**\n\t * write the string value tot he request filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t * @param data string value to save\n\t */\n\twrite(type, filename, data): void;\n\n\t/**\n\t * returns a json list of folder contents\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tlist(type, dirname): any;\n\n\t/**\n\t * make a dir, return result as a boolean\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tmkdir(type, dirname): void;\n\n\t/**\n\t * check if a path.. dir or filename exsists in the filesystem\n\t *\n\t * @param type\n\t * @param pathname full system path\n\t */\n\texists(type, pathname): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemService.html":{"url":"injectables/FileSystemService.html","title":"injectable - FileSystemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exists\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                mkDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileSystem\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appFilesystem: FileSystemWebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appFilesystem\n                                                  \n                                                        \n                                                                        FileSystemWebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:71\n                \n            \n\n\n            \n                \n                    check if a file or directory exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    listFiles(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:27\n                \n            \n\n\n            \n                \n                    List files in the directory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkDir\n                        \n                    \n                \n            \n            \n                \nmkDir(dirname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a directory on the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the string value of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Including system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filename: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:51\n                \n            \n\n\n            \n                \n                    write a file to the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileSystem\n                    \n                \n\n                \n                    \n                        getfileSystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filesystem/file-system.service.ts:17\n                                \n                            \n                    \n                        \n                                returns a working FS wrapper\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemWebService} from './file-system-web.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemService {\n\tpublic type: string;\n\n\tconstructor(private appFilesystem: FileSystemWebService) {\n\t}\n\n\t/**\n\t * returns a working FS wrapper\n\t * @todo add WebFileSystem API wrapper\n\t */\n\tget fileSystem() {\n\t\treturn this.appFilesystem;\n\t}\n\n\t/**\n\t * List files in the directory\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tasync listFiles(dirname) {\n\t\ttry {\n\t\t\treturn await this.fileSystem.list(dirname);\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the string value of a file\n\t *\n\t * @param filename Including system path\n\t */\n\tasync readFile(filename: string) {\n\t\treturn await this.fileSystem.read(filename);\n\t}\n\n\t/**\n\t * write a file to the filesystem\n\t *\n\t * @param filename\n\t * @param data\n\t */\n\twriteFile(filename: string, data: any) {\n\t\treturn this.fileSystem.write(filename, data);\n\t}\n\n\t/**\n\t * Create a directory on the filesystem\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tmkDir(dirname: string) {\n\t\treturn this.fileSystem.mkdir(dirname);\n\t}\n\n\t/**\n\t * check if a file or directory exists\n\t *\n\t * @param pathname\n\t * @returns\n\t */\n\texists(pathname: string) {\n\t\treturn this.fileSystem.exists(pathname);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemWebService.html":{"url":"injectables/FileSystemWebService.html","title":"injectable - FileSystemWebService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemWebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system-web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exists\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                            \n                                    Public\n                                mkdir\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mkdir\n                        \n                    \n                \n            \n            \n                \n                    \n                    mkdir(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        path\n                        \n                    \n                \n            \n            \n                \n                    \n                    path(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                    \n                    write(filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/filesystem'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileSystemInterface} from '@interface/file-system.interface';\nimport {atob, btoa} from 'bytebuffer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemWebService implements FileSystemInterface {\n\tprivate apiUrl = 'https://localhost:36911/filesystem';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\tpublic exists(pathname): boolean {\n\t\treturn false;\n\t}\n\n\tpublic async list(dirname) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/list`, {path: dirname}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat));\n\t}\n\n\tpublic mkdir(dirname): void {\n\t}\n\n\tpublic path(filename) {\n\t}\n\n\n\tpublic async read(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/read`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => atob(dat));\n\t}\n\n\tpublic async write(filename, data) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t})\n\t\t};\n\n\t\treturn await this.http\n\t\t\t.post(\n\t\t\t\t`${this.apiUrl}/write`,\n\t\t\t\t{path: filename, data: btoa(data)},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log('e'));\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAddressBookOut.html":{"url":"interfaces/GetAddressBookOut.html","title":"interface - GetAddressBookOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAddressBookOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getAddressBookOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetAddressBookOut {\n\tentries: {\n\t\taddress: string;\n\t\tdescription: string;\n\t\tindex: number;\n\t\tpayment_id: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsIn.html":{"url":"interfaces/GetBulkPaymentsIn.html","title":"interface - GetBulkPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            min_block_height\n                                        \n                                \n                                \n                                        \n                                            payment_ids\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        min_block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetBulkPaymentsIn {\n\tpayment_ids: string[]; // - array of: string\n\tmin_block_height: number; // - unsigned int; The block height at which to start looking for payments.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsOut.html":{"url":"interfaces/GetBulkPaymentsOut.html","title":"interface - GetBulkPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getBulkPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetBulkPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsIn.html":{"url":"interfaces/GetPaymentsIn.html","title":"interface - GetPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetPaymentsIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsOut.html":{"url":"interfaces/GetPaymentsOut.html","title":"interface - GetPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from '../types/payment';\n\nexport interface GetPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersIn.html":{"url":"interfaces/GetTransfersIn.html","title":"interface - GetTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersIn.ts\n        \n\n\n            \n                Description\n            \n            \n                Get wallet transfers request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter_by_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers FAILED\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter_by_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter_by_height:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter TX's\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers IN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    max height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    min height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers OUT\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers PENDING\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers POOL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GetTransfersIn {\n\t/** transfers IN */\n\tin?: boolean;\n\t/** transfers OUT */\n\tout?: boolean;\n\t/** transfers PENDING */\n\tpending?: boolean;\n\t/** transfers FAILED */\n\tfailed?: boolean;\n\t/** transfers POOL */\n\tpool?: boolean;\n\t/** Filter TX's */\n\tfilter_by_height?: boolean;\n\t/** min height */\n\tmin_height?: number;\n\t/** max height */\n\tmax_height?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersOut.html":{"url":"interfaces/GetTransfersOut.html","title":"interface - GetTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/getTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Transfer} from '../types/transfer';\nimport {Destination} from '../types/destination';\n\nexport interface GetTransfersOut {\n\tin?: Transfer[] & Destination[]; // - boolean;\n\tout?: Transfer[]; // - boolean;\n\tpending?: Transfer[]; // - boolean;\n\tfailed?: Transfer[]; // - boolean;\n\tpool?: Transfer[]; // - boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashLinkPipe.html":{"url":"pipes/HashLinkPipe.html","title":"pipe - HashLinkPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashLinkPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashLink.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashLink\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        cutMiddle\n                        \n                    \n                \n            \n            \n                \n                    \n                    cutMiddle(string, maxLength)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashLink.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashLink.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'txn'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: \"hashLink\", pure: false })\nexport class HashLinkPipe implements PipeTransform {\n  constructor() {}\n\n  transform(content, type: string = 'txn') {\n    let url = `/chain/explorer/${type}/${content}`;\n\n    return content === undefined\n      ? \"¯\\\\_(ツ)_/¯\"\n      : `${this.cutMiddle(content, 16)}`;\n  }\n\n  private cutMiddle(string, maxLength) {\n    if (!string) return string;\n    if (maxLength \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashRatePipe.html":{"url":"pipes/HashRatePipe.html","title":"pipe - HashRatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashRatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number | string, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashrate.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'hashrate', pure: false })\nexport class HashRatePipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(content: number | string = 0, decorator?: boolean) {\n\t\tif (typeof content == 'string' || content === null) {\n\t\t\tcontent = 0;\n\t\t}\n\t\tlet i = 0;\n\t\tconst units = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z'];\n\t\twhile (content > 1000) {\n\t\t\tcontent /= 1000;\n\t\t\ti++;\n\t\t}\n\t\tif (decorator === false) {\n\t\t\treturn content.toFixed(2);\n\t\t} else {\n\t\t\treturn `${content.toFixed(2)} ${units[i]}H`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/height.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n\theight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersIn.html":{"url":"interfaces/IncomingTransfersIn.html","title":"interface - IncomingTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            transfer_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_type:     \"all\" | \"available\" | \"unavailable\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"all\" | \"available\" | \"unavailable\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersIn {\n\ttransfer_type: 'all' | 'available' | 'unavailable';\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersOut.html":{"url":"interfaces/IncomingTransfersOut.html","title":"interface - IncomingTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/incomingTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            global_index\n                                        \n                                \n                                \n                                        \n                                            spent\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersOut {\n\tamount: number; // - unsigned int\n\tspent: boolean; // - boolean\n\tglobal_index: number; // - unsigned int; Mostly internal use, can be ignored by most users.\n\ttx_hash: string; // - string; Several incoming transfers may share the same hash if they were in the same transaction.\n\ttx_size: number; // - unsigned int\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntegratedAddress.html":{"url":"interfaces/IntegratedAddress.html","title":"interface - IntegratedAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IntegratedAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/integratedAddress.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            integrated_address\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from './address';\n\nexport interface IntegratedAddress {\n\tintegrated_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LTHN.html":{"url":"classes/LTHN.html","title":"class - LTHN","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LTHN\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Big\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toAtomic\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toAtomic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/interfaces/wallet.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputChanged\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        inputChanged\n                        \n                    \n                \n            \n            \n                \ninputChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-login',\n\ttemplateUrl: './login.component.html'\n})\nexport class LoginComponent {\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\terror = '';\n\n\tconstructor(private authService: AuthService, private router: Router) {\n\t}\n\n\tinputChanged(){\n\t\t// Reset error after inputs are changed\n\t\tthis.error = '';\n\t}\n\n\tasync submit() {\n\t\tthis.authService.login(this.username.value, this.password.value)\n\t\t.then(() => {\n\t\t\tif (this.authService.getAuthStatus()) {\n\t\t\t\tthis.router.navigateByUrl('/');\n\t\t\t} else {\n\t\t\t\tthis.error = 'Login Failed, try again.';\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tthis.error = 'Login Failed, try again.';\n\t\t})\n\t}\n}\n\n    \n\n    \n        \n    \n        Login\n        \n             0\">{{error}}\n            \n                Username\n                \n            \n            \n                Password\n                \n            \n\n            Login\n\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Login                     0\">{{error}}                            Username                                                        Password                                        Login            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-logs\n            \n\n            \n                styleUrls\n                ./logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/logs/logs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/logs/logs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-logs',\n\ttemplateUrl: './logs.component.html',\n\tstyleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./logs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogsComponent} from './logs.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'logs',\n\t\tcomponent: LogsComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [LogsComponent],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule, LogsComponent]\n})\nexport class LogsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsState.html":{"url":"interfaces/LogsState.html","title":"interface - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeIntegratedAddressIn.html":{"url":"interfaces/MakeIntegratedAddressIn.html","title":"interface - MakeIntegratedAddressIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeIntegratedAddressIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MakeIntegratedAddressIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeUriIn.html":{"url":"interfaces/MakeUriIn.html","title":"interface - MakeUriIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeUriIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/makeUriIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipient_name\n                                        \n                                \n                                \n                                        \n                                            tx_description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface MakeUriIn {\n\taddress: Address;\n\tamount?: number; // (optional) - the integer amount to receive, in atomic units\n\tpayment_id?: string; // (optional) - 16 or 64 character hexadecimal payment id string\n\trecipient_name?: string; // (optional) - string name of the payment recipient\n\ttx_description: string; // (optional) - string describing the reason for the tx\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkdownPipe.html":{"url":"pipes/MarkdownPipe.html","title":"pipe - MarkdownPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkdownPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/markdown.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        markdown\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/markdown.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {marked} from 'marked';\n\n@Pipe({\n\tname: 'markdown'\n})\nexport class MarkdownPipe implements PipeTransform {\n\ttransform(value: any, args?: any[]): any {\n\t\tif (value && value.length > 0) {\n\t\t\treturn marked(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/services/ui/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalContent\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injectable, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\n\n@Component({\n\tselector: 'modal',\n\ttemplateUrl: './modal.component.html'\n})\n@Injectable({providedIn: 'root'})\nexport class ModalComponent implements OnInit {\n\n\t@Input() public modalConfig: ModalConfig\n\n\t@ViewChild('modal') private modalContent: TemplateRef\n\tprivate modalRef: NgbModalRef\n\n\tconstructor(private modalService: NgbModal) { }\n\n\tngOnInit(): void { }\n\n\topen(): Promise {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.modalRef = this.modalService.open(this.modalContent)\n\t\t\tthis.modalRef.result.then(resolve, resolve)\n\t\t})\n\t}\n\n\tasync close(): Promise {\n\t\tif (this.modalConfig.shouldClose === undefined || (await this.modalConfig.shouldClose())) {\n\t\t\tconst result = this.modalConfig.onClose === undefined || (await this.modalConfig.onClose())\n\t\t\tthis.modalRef.close(result)\n\t\t}\n\t}\n\n\tasync dismiss(): Promise {\n\t\tif (this.modalConfig.shouldDismiss === undefined || (await this.modalConfig.shouldDismiss())) {\n\t\t\tconst result = this.modalConfig.onDismiss === undefined || (await this.modalConfig.onDismiss())\n\t\t\tthis.modalRef.dismiss(result)\n\t\t}\n\t}\n}\n\n\n\n\n\n\n    \n\n    \n        \n    \n        {{ modalConfig.modalTitle }}\n    \n    \n        \n    \n    \n        \n            {{ modalConfig.dismissButtonLabel }}\n        \n        \n            {{ modalConfig.closeButtonLabel }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ modalConfig.modalTitle }}                                            {{ modalConfig.dismissButtonLabel }}                            {{ modalConfig.closeButtonLabel }}            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ui/modal/modalConfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closeButtonLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissButtonLabel\n                                        \n                                \n                                \n                                        \n                                            modalTitle\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        disableCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        disableDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onDismiss\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldDismiss\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableCloseButton\n                        \n                    \n                \n            \n            \n                \ndisableCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableDismissButton\n                        \n                    \n                \n            \n            \n                \ndisableDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideCloseButton\n                        \n                    \n                \n            \n            \n                \nhideCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideDismissButton\n                        \n                    \n                \n            \n            \n                \nhideDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onDismiss\n                        \n                    \n                \n            \n            \n                \nonDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldClose\n                        \n                    \n                \n            \n            \n                \nshouldClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldDismiss\n                        \n                    \n                \n            \n            \n                \nshouldDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modalTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modalTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalConfig {\n\tmodalTitle: string;\n\tdismissButtonLabel?: string;\n\tcloseButtonLabel?: string;\n\n\tshouldClose?(): Promise | boolean;\n\n\tshouldDismiss?(): Promise | boolean;\n\n\tonClose?(): Promise | boolean;\n\n\tonDismiss?(): Promise | boolean;\n\n\tdisableCloseButton?(): boolean;\n\n\tdisableDismissButton?(): boolean;\n\n\thideCloseButton?(): boolean;\n\n\thideDismissButton?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_ModalModule_declarations\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/ui/modal/modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n\n\n@NgModule({\n  declarations: [ModalComponent],\n  exports: [\n    ModalComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkHashrateChart.html":{"url":"injectables/NetworkHashrateChart.html","title":"injectable - NetworkHashrateChart","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkHashrateChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/hashvault/charts/network-hashrate.chart.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseChartConfigService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                pollingStartAction\n                            \n                            \n                                    Public\n                                pollingStopAction\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureOptions\n                            \n                            \n                                dataMap\n                            \n                            \n                                setupCallbacks\n                            \n                            \n                                addOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data, i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'networkDifficulty'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStartAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStartPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStopAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStopPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hashvault/charts/network-hashrate.chart.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'line'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as ChartsActions from '@module/chart/data/actions';\nimport {BaseChartConfigService} from '@module/chart/base-chart-config.service';\nimport {ChartConfigInterface} from '@module/chart/chart-config.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class NetworkHashrateChart\n\textends BaseChartConfigService\n\timplements ChartConfigInterface {\n\tpublic pollingStartAction =\n\t\tChartsActions.chartNetworkDifficultyStartPolling();\n\tpublic pollingStopAction =\n\t\tChartsActions.chartNetworkDifficultyStopPolling();\n\tpublic key = 'networkDifficulty';\n\tpublic type = 'line';\n\tpublic data = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconfigureOptions() {\n\t\tthis.addOptions({\n\t\t\tparsing: false,\n\t\t\tspanGaps: true,\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tx: {\n\t\t\t\t\ttitle: 'time',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tday: 'D MMM'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunit: 'day'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsource: 'data',\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\tbounds: 'data',\n\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\toffsetGridLines: false,\n\t\t\t\t\t\ttickMarkLength: 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\ttitle: 'hashrate',\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: null,\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro',\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tmirror: true,\n\t\t\t\t\t\tpadding: 4\n\t\t\t\t\t},\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\ttickMarkLength: 0,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tposition: 'nearest',\n\t\t\t\t\tmode: 'index',\n\t\t\t\t\tintersect: false,\n\t\t\t\t\tcaretSize: 4,\n\t\t\t\t\tbackgroundColor: 'e2e2e2',\n\t\t\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t},\n\t\t\t\tdecimation: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\talgorithm: 'lttb',\n\t\t\t\t\tsamples: 50\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolors: ['#1c9ea3']\n\t\t});\n\t}\n\n\tsetupCallbacks() {\n\t\tconst vm = this;\n\t\t// this.options.scales.y.ticks.callback = function (value, index, values) {\n\t\t//     return vm.hashratePipe.transform(value);\n\t\t// };\n\t\t//\n\t\t// this.options.plugins.tooltip.callbacks = {\n\t\t//     label: context => `Hashrate: ${vm.hashratePipe.transform(context.parsed.y)}`\n\t\t// };\n\t}\n\n\tdataMap(data, i) {\n\t\tconst vm = this;\n\t\treturn data.map((n: any) => ({\n\t\t\tx: n.ts,\n\t\t\ty: Math.floor(n.diff / 120)\n\t\t}));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewComponent.html":{"url":"components/NewComponent.html","title":"component - NewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/new.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-new\n            \n\n\n\n\n            \n                templateUrl\n                ./new.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                password_confirm\n                            \n                            \n                                wallet_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWallet\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletRpc: WalletRpcService, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletRpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/new.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_confirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/new.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\nimport { WalletRpcService } from '@service/wallet.rpc.service';\n\nimport { nameNotTakenValidator } from '../validators'\nimport { WalletService } from '../wallet.service'\n\n@Component({\n\tselector: 'lthn-wallet-new',\n\ttemplateUrl: './new.component.html'\n})\nexport class NewComponent implements OnInit {\n\twallet_name: FormControl;\n\tpassword: FormControl;\n\tpassword_confirm: FormControl;\n\tconstructor(private walletRpc: WalletRpcService, private wallet: WalletService) {}\n\n\tngOnInit(): void {\n\t\tthis.wallet_name = new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]);\n\t\tthis.password = new FormControl('')\n\t\tthis.password_confirm = new FormControl('')\n\t}\n\n\tcreateWallet() {\n\t\tif (this.password.value === this.password_confirm.value) {\n\t\t\tconsole.log(\n\t\t\t\tthis.walletRpc.createWallet({\n\t\t\t\t\tfilename: this.wallet_name.value,\n\t\t\t\t\tpassword: this.password.value,\n\t\t\t\t\tlanguage: 'English'\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.new-wallet' | translate }}\n    \n\n        \n            {{ 'plugin.lthn.wallet.label.filename' | translate }}\n            \n\t\t\tWallet already exists\n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        \n            {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n            \n        \n        {{ 'plugin.lthn.wallet.button.create-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.new-wallet\\' | translate }}                        {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}            \t\t\tWallet already exists                            {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                            {{ \\'plugin.lthn.wallet.button.create-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoDaemonRunningDialog.html":{"url":"components/NoDaemonRunningDialog.html","title":"component - NoDaemonRunningDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoDaemonRunningDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/dialog/no-daemon-running.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status-no-daemon\n            \n\n\n\n\n            \n                templateUrl\n                no-daemon-running.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n    \n        \n  Please Download Our App\n  \n    The blockchain functionality requires extra software, please install our app to enable this feature.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Download Our App      The blockchain functionality requires extra software, please install our app to enable this feature.  '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoDaemonRunningDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-open\n            \n\n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlockWallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, store: Store, notifierService: NotifierService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifierService\n                                                  \n                                                        \n                                                                    NotifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:33\n                \n            \n\n\n            \n                \n                    get list of filesystem wallets\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockWallet\n                        \n                    \n                \n            \n            \n                \nunlockWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/open.component.ts:42\n                \n            \n\n\n            \n                \n                    Unlock wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/open.component.ts:23\n                        \n                    \n\n            \n                \n                    Lists the wallets known\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {NotifierService} from 'angular-notifier';\nimport {addWallet, openWallet} from '@plugin/lthn/wallet/data';\nimport {Store} from '@ngrx/store';\n\n@Component({\n\tselector: 'lthn-wallet-open',\n\ttemplateUrl: './open.component.html'\n})\nexport class OpenComponent implements OnInit {\n\t@Input() name?: string = '';\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\t/**\n\t * Lists the wallets known\n\t *\n\t * @type {string[]}\n\t */\n\tpublic wallets: string[];\n\n\n\tconstructor(private wallet: WalletService, private store: Store, private notifierService: NotifierService) {\n\n\t}\n\n\t/**\n\t * get list of filesystem wallets\n\t */\n\tngOnInit(): void {\n\t\tthis.wallets = this.wallet.getWalletList()\n\t}\n\n\t/**\n\t * Unlock wallet\n\t *\n\t * @returns {Promise>}\n\t */\n\tunlockWallet(name: string) {\n\t\tthis.store.dispatch(openWallet({address: name, password: (document.getElementById(name + '-pass')).value}))\n//\t\treturn this.wallet.openWallet({\n//\t\t\tfilename: name,\n//\t\t\tpassword:\n//\t\t}).then(() => this.notifierService.notify('success', 'Loaded Wallet: ' + name));\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.unlock-wallet' | translate }}\n    \n        \n            \n            \n                {{wall}}\n                \n                    \n                        {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                        \n                    \n                    {{ 'plugin.lthn.wallet.button.unlock-wallet' | translate }}\n\n                \n            \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.unlock-wallet\\' | translate }}                                                    {{wall}}                                                            {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                {{ \\'plugin.lthn.wallet.button.unlock-wallet\\' | translate }}                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenWallet.html":{"url":"interfaces/OpenWallet.html","title":"interface - OpenWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptions.html":{"url":"classes/PaginatorOptions.html","title":"class - PaginatorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PaginatorOptionsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptionsInterface.html":{"url":"classes/PaginatorOptionsInterface.html","title":"class - PaginatorOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParseUri.html":{"url":"interfaces/ParseUri.html","title":"interface - ParseUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParseUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         MakeUriIn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MakeUriIn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Payment {\n\tamount: number;\n\tblock_height: number;\n\tpayment_id: string;\n\ttx_hash: string;\n\tunlock_time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            MarkdownPipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HashRatePipe} from './crypto/hashrate.pipe';\nimport {TimeAgoPipe} from './date/timeAgo.pipe';\nimport {EscapeHtmlPipe} from './content/html.pipe';\nimport {ShruggiePipe} from './content/shruggie.pipe';\nimport {RemoveTrailingZerosPipe} from './math/removeTrailingZeros.pipe';\nimport {MarkdownPipe} from './content/markdown.pipe';\nimport {EffortPipe} from './crypto/effort.pipe';\nimport {ToCoinPipe} from 'app/pipes/crypto/toCoin.pipe';\nimport {HashLinkPipe} from 'app/pipes/crypto/hashLink.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe,\n\t\tToCoinPipe,\n\t\tHashLinkPipe\n\t],\n\texports: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tMarkdownPipe,\n\t\tToCoinPipe,\n\t\tHashLinkPipe\n\t],\n\timports: [CommonModule]\n})\nexport class PipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginDefinition.html":{"url":"interfaces/PluginDefinition.html","title":"interface - PluginDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluginDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description_short\n                                        \n                                \n                                \n                                        \n                                            git_repo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            readme_list\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description_short\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_short:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git_repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        git_repo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readme_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readme_list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PluginStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plugins.html":{"url":"interfaces/Plugins.html","title":"interface - Plugins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plugins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_update_check\n                                        \n                                \n                                \n                                        \n                                            loaded_keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_update_check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_update_check:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_keys:         PluginDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PluginsComponent.html":{"url":"components/PluginsComponent.html","title":"component - PluginsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PluginsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/plugins.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-plugins\n            \n\n            \n                styleUrls\n                ./plugins.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./plugins.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, wallet: PluginsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/plugins.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        PluginsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluginsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/plugins.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injector, OnInit} from '@angular/core';\nimport {PluginsService} from '@plugin/plugins.service';\nimport {createCustomElement} from '@angular/elements';\nimport {WalletComponent} from '@plugin/lthn/wallet/wallet.component';\n\n@Component({\n  selector: 'lthn-app-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrls: ['./plugins.component.scss']\n})\nexport class PluginsComponent implements OnInit {\n\n  constructor(injector: Injector, public wallet: PluginsService) {\n    // Convert `PopupComponent` to a custom element.\n    const PopupElement = createCustomElement(WalletComponent, {injector});\n    // Register the custom element with the browser.\n    customElements.define('lthn-app-wallet', PopupElement);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \nShow as component\nShow as element\n\n    \n\n    \n                \n                    ./plugins.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Show as componentShow as element'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PluginsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginsModule.html":{"url":"modules/PluginsModule.html","title":"module - PluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PluginsModule\n\n\n\ncluster_PluginsModule_declarations\n\n\n\ncluster_PluginsModule_exports\n\n\n\ncluster_PluginsModule_providers\n\n\n\n\nPluginsComponent\n\nPluginsComponent\n\n\n\nPluginsModule\n\nPluginsModule\n\nPluginsModule -->\n\nPluginsComponent->PluginsModule\n\n\n\n\n\nPluginsComponent \n\nPluginsComponent \n\nPluginsComponent  -->\n\nPluginsModule->PluginsComponent \n\n\n\n\n\nPluginsService\n\nPluginsService\n\nPluginsModule -->\n\nPluginsService->PluginsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/plugins.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PluginsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PluginsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PluginsComponent } from 'app/plugins/plugins.component';\nimport {PluginsService} from '@plugin/plugins.service';\n\n\n\n@NgModule({\n  declarations: [\n    PluginsComponent\n  ],\n  exports: [\n    PluginsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    PluginsService\n  ]\n})\nexport class PluginsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginsService.html":{"url":"injectables/PluginsService.html","title":"injectable - PluginsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/plugins.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showAsComponent\n                            \n                            \n                                showAsElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, applicationRef: ApplicationRef, componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/plugins.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showAsComponent\n                        \n                    \n                \n            \n            \n                \nshowAsComponent(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAsElement\n                        \n                    \n                \n            \n            \n                \nshowAsElement(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/plugins.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ApplicationRef, ComponentFactoryResolver, Injectable, Injector} from '@angular/core';\nimport {WalletComponent} from '@plugin/lthn/wallet/wallet.component';\nimport {NgElement, WithProperties} from '@angular/elements';\n\n\n@Injectable()\nexport class PluginsService {\n\n  constructor(\n      private injector: Injector,\n      private applicationRef: ApplicationRef,\n      private componentFactoryResolver: ComponentFactoryResolver\n  ) { }\n\n  showAsElement(message: string) {\n    // Create element\n    const popupEl: NgElement & WithProperties = document.createElement('lthn-app-wallet') as any;\n\n    // Listen to the close event\n   // popupEl.addEventListener('closed', () => document.body.removeChild(popupEl));\n\n    // Set the message\n   // popupEl.message = message;\n\n    // Add to the DOM\n    document.body.appendChild(popupEl);\n  }\n\n  showAsComponent(message: string) {\n    // Create element\n    const popup = document.createElement('lthn-app-wallet');\n\n    // Create the component and wire it up with the element\n    const factory = this.componentFactoryResolver.resolveComponentFactory(WalletComponent);\n    const popupComponentRef = factory.create(this.injector, [], popup);\n\n    // Attach to the view so that the change detector knows to run\n    this.applicationRef.attachView(popupComponentRef.hostView);\n\n    // Listen to the close even\n    // Add to the DOM\n    document.body.appendChild(popup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/hive/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/hive/post/post.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/hive/post/post.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client } from '@hiveio/dhive';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'lthn-app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\tpublic post = {};\n\tpublic title = '';\n\tpublic content = '';\n\tpublic author = '';\n\tprivate subs: any = {};\n\n\tconstructor(private router: Router) {}\n\n\tngOnInit(): void {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst slug = this.router.routerState.snapshot.url.replace('/p/', '');\n\t\tconst that = this;\n\t\tconsole.log(this.router.routerState.snapshot.url);\n\n\t\tclient.database.getState(`/hive-179211/@${slug}`).then(function (post) {\n\t\t\tthat.post = post;\n\n\t\t\tthat.content = post.content[slug].body;\n\t\t\tthat.title = post.content[slug].title;\n\t\t\tthat.author = post.content[slug].author;\n\t\t\tconsole.log(post);\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n  0\">\n    \n      \n      {{title}}\n      {{author}}\n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">                {{title}}      {{author}}                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PostComponent} from './post.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {PipesModule} from '../../../pipes/pipes.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: PostComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: PostComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [PostComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tPipesModule\n\t]\n})\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostRoutingModule.html":{"url":"modules/PostRoutingModule.html","title":"module - PostRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/hive/post/post-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'p',\n\t\tloadChildren: () => \"import('./post.module').then((m) => m.PostModule)\"\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class PostRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                randomAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/profile.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        randomAlias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n\tcolors,\n\tnames,\n\tstarWars,\n\tuniqueNamesGenerator\n} from 'unique-names-generator';\n\n@Component({\n\tselector: 'lthn-user-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\tpublic randomAlias: string = uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t});\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Profiles\n            \n              Profile 1\n              -->\n              \n              -->\n            \n          \n\n          \n          \n            \n              person_add\n            \n          \n          \n            engineering\n          \n        \n      \n\n\n    \n    \n    \n      \n        Profile\n        \n          \n            Name\n          \n        \n      \n      \n        Blockchain Settings\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n      \n        Wallets\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Profiles                          Profile 1              -->                            -->                                                                    person_add                                            engineering                                                  Profile                              Name                                      Blockchain Settings                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                            Wallets                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            dkey\n                                        \n                                \n                                \n                                        \n                                            ekey\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ekey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ekey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileState {\n\t// Friendly name for the profile\n\talias: string;\n\t// auto generated image from the friendly name\n\tavatar: string;\n\t// id's to attached wallets\n\twallets: any;\n\t// application prefrences etc\n\toptions: any;\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: string;\n\t// Encryption Key, to save data\n\tekey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyIn.html":{"url":"interfaces/QueryKeyIn.html","title":"interface - QueryKeyIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyIn {\n\tkey_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyOut.html":{"url":"interfaces/QueryKeyOut.html","title":"interface - QueryKeyOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/queryKeyOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyOut {\n\tkey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RemoveTrailingZerosPipe.html":{"url":"pipes/RemoveTrailingZerosPipe.html","title":"pipe - RemoveTrailingZerosPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RemoveTrailingZerosPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/math/removeTrailingZeros.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        removeTrailingZero\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/math/removeTrailingZeros.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'removeTrailingZero', pure: true })\nexport class RemoveTrailingZerosPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tvalue = value.toString();\n\t\tif (value.indexOf('.') === -1) {\n\t\t\treturn parseInt(value);\n\t\t}\n\t\twhile (\n\t\t\t(value.slice(-1) === '0' || value.slice(-1) === '.') &&\n\t\t\tvalue.indexOf('.') !== -1\n\t\t) {\n\t\t\tvalue = value.substr(0, value.length - 1);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/json-rpc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            jsonrpc\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonrpc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonrpc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const rpcBody = (method) => (params) => ({\n\tjsonrpc: '2.0',\n\tid: '0',\n\tmethod: method,\n\tparams: params\n});\nconst axios = require('axios').default;\nexport const request =\n\t(url) =>\n\t (method, params = {}) =>\n\t\t axios.post(url, JSON.stringify(rpcBody(method)(params))).then((data) => {\n\t\t\t console.log(data)\n\t\t\t if(data['data'].error){\n\t\t\t\treturn data['data']\n\t\t\t } else if(data['data']) {\n\t\t\t\t return data['data'].result\n\t\t\t }else{\n\t\t\t\t return data\n\t\t\t }\n\t\t });\n\ninterface Response {\n\tid: string;\n\tjsonrpc: string;\n\tresult: any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreComponent.html":{"url":"components/RestoreComponent.html","title":"component - RestoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/restore.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-restore\n            \n\n\n\n\n            \n                templateUrl\n                ./restore.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restoreWalletForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                restoreWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWalletForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/restore.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {nameNotTakenValidator} from '../validators'\n\n@Component({\n\tselector: 'lthn-wallet-restore',\n\ttemplateUrl: './restore.component.html'\n})\n\nexport class RestoreComponent implements OnInit {\n\trestoreWalletForm : FormGroup;\n\n\tconstructor(private wallet: WalletService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.restoreWalletForm = new FormGroup({\n\t\t\tfilename: new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]),\n\t\t\taddress: new FormControl(''),\n\t\t\trestore_height: new FormControl('0'),\n\t\t\tautosave_current: new FormControl(true),\n\t\t\tpassword: new FormControl(''),\n\t\t\tpassword_confirm: new FormControl(''),\n\t\t\tspendkey: new FormControl(''),\n\t\t\tviewkey: new FormControl(''),\n\t\t\tviewonly_wallet: new FormControl(false),\n\t\t});\n\t}\n\n\trestoreWallet() {\n\n\t\tthis.wallet.restoreWallet({\n\t\t\tfilename: this.restoreWalletForm.value.filename,\n\t\t\taddress: this.restoreWalletForm.value.address,\n\t\t\trestore_height: this.restoreWalletForm.value.restore_height,\n\t\t\tautosave_current: this.restoreWalletForm.value.autosave_current,\n\t\t\tpassword: this.restoreWalletForm.value.password,\n\t\t\tspendkey:\n\t\t\t(\n\t\t\t\tthis.restoreWalletForm.value.viewonly_wallet ?\n\t\t\t\t\t'' : this.restoreWalletForm.value.spendkey\n\t\t\t)\n\t\t\t,\n\t\t\tviewkey: this.restoreWalletForm.value.viewkey\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.restore-seed' | translate }}\n    \n        \n            \n                \n                    {{ 'plugin.lthn.wallet.label.filename' | translate }}\n                    \n\t\t\t\t\tWallet already exists\n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password' | translate }}\n                    \n                \n                \n                    {{ 'plugin.lthn.wallet.label.wallet-password-confirm' | translate }}\n                    \n                \n            \n\n            \n                \n                    {{ 'plugin.lthn.wallet.label.address' | translate }}\n                    \n                \n            \n\n\n\n            \n                {{ 'plugin.lthn.wallet.label.spend-key' | translate }}\n                \n            \n\n            \n                {{ 'plugin.lthn.wallet.label.view-key' | translate }}\n                \n            \n\n            \n\n                \n                    \n                        Optional parameters\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.restore-height' | translate }}\n                    \n                \n\n                \n                    {{ 'plugin.lthn.wallet.label.autosave' | translate }}\n                \n\n                \n                    View only wallet\n                \n\n            \n\n            \n                {{ 'plugin.lthn.wallet.button.restore-wallet' | translate }}\n            \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.restore-seed\\' | translate }}                                                            {{ \\'plugin.lthn.wallet.label.filename\\' | translate }}                    \t\t\t\t\tWallet already exists                                                    {{ \\'plugin.lthn.wallet.label.wallet-password\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.wallet-password-confirm\\' | translate }}                                                                                                {{ \\'plugin.lthn.wallet.label.address\\' | translate }}                                                                            {{ \\'plugin.lthn.wallet.label.spend-key\\' | translate }}                                                        {{ \\'plugin.lthn.wallet.label.view-key\\' | translate }}                                                                                                    Optional parameters                                                                        {{ \\'plugin.lthn.wallet.label.restore-height\\' | translate }}                                                                        {{ \\'plugin.lthn.wallet.label.autosave\\' | translate }}                                                    View only wallet                                                        {{ \\'plugin.lthn.wallet.button.restore-wallet\\' | translate }}                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestoreWallet.html":{"url":"interfaces/RestoreWallet.html","title":"interface - RestoreWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestoreWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/requests/restoreWallet.ts\n        \n\n\n            \n                Description\n            \n            \n                Restore Wallet request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            autosave_current\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            restore_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendkey\n                                        \n                                \n                                \n                                        \n                                            viewkey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's primary address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosave_current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosave_current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Defaults to true) If true, save the current wallet before generating the new wallet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's file name on the RPC server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restore_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restore_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; defaults to 0) The block height to restore the wallet from.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's private view key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RestoreWallet {\n\n\t/**\n\t * The wallet's file name on the RPC server.\n\t */\n\tfilename: string;\n\n\t/**\n\t * (Optional; defaults to 0) The block height to restore the wallet from.\n\t */\n\trestore_height?: number;\n\n\t/**\n\t * The wallet's primary address.\n\t */\n\taddress: string;\n\n\t/**\n\t * (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\t */\n\tspendkey?: string;\n\n\t/**\n\t * The wallet's private view key.\n\t */\n\tviewkey: string;\n\n\t/**\n\t * The wallet's password.\n\t */\n\tpassword: string;\n\n\t/**\n\t * (Defaults to true) If true, save the current wallet before generating the new wallet.\n\t */\n\tautosave_current?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RootComponent.html":{"url":"components/RootComponent.html","title":"component - RootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/root.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-root\n            \n\n\n\n\n            \n                templateUrl\n                ./root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blocks\n                            \n                            \n                                    Public\n                                chainInfo\n                            \n                            \n                                ColumnMode\n                            \n                            \n                                    Public\n                                downloadingCLI\n                            \n                            \n                                    Public\n                                hasCLI\n                            \n                            \n                                    Public\n                                posts\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadCLI\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderAppView\n                            \n                            \n                                renderFirstRunView\n                            \n                            \n                                renderWebView\n                            \n                            \n                                startBlockchain\n                            \n                            \n                                startWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, fileSystem: FileSystemService, chain: BlockchainService, wallet: WalletService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/root.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        downloadCLI\n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadCLI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderAppView\n                        \n                    \n                \n            \n            \n                \nrenderAppView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderFirstRunView\n                        \n                    \n                \n            \n            \n                \nrenderFirstRunView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderWebView\n                        \n                    \n                \n            \n            \n                \nrenderWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startBlockchain\n                        \n                    \n                \n            \n            \n                \nstartBlockchain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadingCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit, PLATFORM_ID} from '@angular/core';\nimport {Client} from '@hiveio/dhive';\nimport {Router} from '@angular/router';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {BlockchainService} from '@plugin/lthn/chain/blockchain.service';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport { isPlatformServer} from '@angular/common';\nimport {select, Store} from '@ngrx/store';\nimport {ChainSetGetInfo, getChainBlocks, getChainInfo} from '@plugin/lthn/chain/data';\nimport {ChainGetInfo} from '@plugin/lthn/chain/interfaces/props/get_info';\nimport {interval, Observable, Subscription} from 'rxjs';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport {BlockHeader} from '@plugin/lthn/chain/interfaces/types/blockHeader';\n\n@Component({\n\tselector: 'lthn-root',\n\ttemplateUrl: './root.component.html'\n})\nexport class RootComponent implements OnInit, OnDestroy {\n\tpublic posts: any = [];\n\n\tpublic hasCLI: boolean;\n\tpublic downloadingCLI: boolean;\n\tpublic chainInfo: Observable;\n\tColumnMode = ColumnMode;\n\tpublic blocks: Observable;\n\tprivate sub: Subscription[] = [];\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate chain: BlockchainService,\n\t\tprivate wallet: WalletService,\n\t\tprivate store: Store\n\t) {\n\n\t}\n\n\tpublic ngOnDestroy() {\n\t\tthis.sub.forEach((s) => s.unsubscribe())\n\t}\n\n\tngOnInit() {\n\t\tthis.fileSystem.listFiles('/users').then((dat: any) => {\n\t\t\tif (dat.length > 0) {\n\t\t\t\tthis.renderAppView();\n\t\t\t} else {\n\t\t\t\tthis.renderFirstRunView();\n\t\t\t}\n\t\t});\n\t\tthis.fileSystem.listFiles('/cli').then((dat: any) => {\n\t\t\tthis.hasCLI = dat.length > 0;\n\t\t\tthis.chain.getInfo()\n\t\t\tthis.sub['interval'] = interval(1000).subscribe(n => this.chain.getInfo());\n\n\t\t});\n\n\t\tthis.sub['info'] = this.store.pipe(select(getChainInfo)).subscribe((data) => {\n\t\t\tif(data) this.chain.getBlocks(data.height-10, data.height-1)\n\t\t})\n\t}\n\n\n\n\trenderAppView() {\n\n\t\tthis.chainInfo = this.store.pipe(select(getChainInfo))\n\t\tthis.blocks = this.store.pipe(select(getChainBlocks))\n\t}\n\n\trenderFirstRunView() {\n\t\tthis.router.navigateByUrl('/user');\n\t}\n\n\tasync downloadCLI() {\n\t\tthis.downloadingCLI = true\n\t\tawait new Promise(f => setTimeout(f, 1000));\n\t\tthis.chain.downloadCLI().then((data) => {\n\t\t\tthis.downloadingCLI = false;\n\t\t\tthis.router.navigateByUrl('/chain')\n\t\t});\n\t}\n\n\tstartBlockchain() {\n\t\treturn this.chain.startDaemon();\n\t}\n\n\tstartWallet() {\n\t\treturn this.wallet.startWallet();\n\t}\n\n\trenderWebView() {\n\t\tconst client = new Client([\n\t\t\t'https://api.hive.blog',\n\t\t\t'https://api.hivekings.com',\n\t\t\t'https://anyx.io',\n\t\t\t'https://api.openhive.network'\n\t\t]);\n\t\tconst that = this;\n\t\tclient.database\n\t\t\t.getDiscussions('trending', {tag: 'dvpn', limit: 5})\n\t\t\t.then(function (discussions) {\n\t\t\t\tthat.posts = discussions;\n\t\t\t});\n\t}\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    {{ 'words.states.not_installed' | translate }}\n                    {{ 'words.states.installing' | translate }}\n                    \n                        {{ 'words.states.not_installed_desc' | translate }}\n                        {{ 'words.states.installing_desc' | translate }}\n                        {{ 'button.install-blockchain' | translate }}\n                        \n\n\n                    \n                \n                \n                    {{ 'plugin.lthn.chain.table.title.chain-status' | translate }}\n                    \n                        \n                            \n                                {{'plugin.lthn.chain.words.height' | translate }}\n                                 {{info.height | number }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.tx_pool' | translate }}\n                                 {{info.tx_pool_size }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.alt_blocks' | translate }}\n                                 {{info.alt_blocks_count }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.difficulty' | translate }}\n                                 {{info.difficulty | number }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.grey_peerlist_size' | translate }}\n                                 {{info.grey_peerlist_size }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.incoming_connections_count' | translate }}\n                                 {{info.incoming_connections_count }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.outgoing_connections_count' | translate }}\n                                 {{info.outgoing_connections_count }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.status' | translate }}\n                                 {{info.status }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.target' | translate }}\n                                 {{info.target }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.target_height' | translate }}:\n                                 {{info.target_height | number}} \n                            \n                            \n                                {{'plugin.lthn.chain.words.testnet' | translate }}\n                                 {{info.testnet }} \n                            \n\n                            \n                                {{'plugin.lthn.chain.words.tx_count' | translate }}\n                                 {{info.tx_count | number }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.white_peerlist_size' | translate }}\n                                 {{info.white_peerlist_size }} \n                            \n                            \n                                {{'plugin.lthn.chain.words.top_block_hash' | translate }}\n                                \n                            \n                        \n                    \n                \n            \n\n            \n                {{ 'plugin.lthn.chain.table.title.recent-blocks' | translate }}\n                \n                    \n                        \n                        \n                            \n                                {{ value | hashrate:true}}\n                            \n                        \n                        \n                            \n                                \n                            \n                        \n                        \n                            \n                                done\n                                close\n                            \n                        \n                        \n                            \n                                {{ value | toCoin | number:'1.0-8'}}\n                            \n                        \n                        \n                            \n                                {{ value | timeAgo }}\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ \\'words.states.not_installed\\' | translate }}                    {{ \\'words.states.installing\\' | translate }}                                            {{ \\'words.states.not_installed_desc\\' | translate }}                        {{ \\'words.states.installing_desc\\' | translate }}                        {{ \\'button.install-blockchain\\' | translate }}                                                                                                {{ \\'plugin.lthn.chain.table.title.chain-status\\' | translate }}                                                                                                        {{\\'plugin.lthn.chain.words.height\\' | translate }}                                 {{info.height | number }}                                                                                         {{\\'plugin.lthn.chain.words.tx_pool\\' | translate }}                                 {{info.tx_pool_size }}                                                                                         {{\\'plugin.lthn.chain.words.alt_blocks\\' | translate }}                                 {{info.alt_blocks_count }}                                                                                         {{\\'plugin.lthn.chain.words.difficulty\\' | translate }}                                 {{info.difficulty | number }}                                                                                         {{\\'plugin.lthn.chain.words.grey_peerlist_size\\' | translate }}                                 {{info.grey_peerlist_size }}                                                                                         {{\\'plugin.lthn.chain.words.incoming_connections_count\\' | translate }}                                 {{info.incoming_connections_count }}                                                                                         {{\\'plugin.lthn.chain.words.outgoing_connections_count\\' | translate }}                                 {{info.outgoing_connections_count }}                                                                                         {{\\'plugin.lthn.chain.words.status\\' | translate }}                                 {{info.status }}                                                                                         {{\\'plugin.lthn.chain.words.target\\' | translate }}                                 {{info.target }}                                                                                         {{\\'plugin.lthn.chain.words.target_height\\' | translate }}:                                 {{info.target_height | number}}                                                                                         {{\\'plugin.lthn.chain.words.testnet\\' | translate }}                                 {{info.testnet }}                                                                                         {{\\'plugin.lthn.chain.words.tx_count\\' | translate }}                                 {{info.tx_count | number }}                                                                                         {{\\'plugin.lthn.chain.words.white_peerlist_size\\' | translate }}                                 {{info.white_peerlist_size }}                                                                                         {{\\'plugin.lthn.chain.words.top_block_hash\\' | translate }}                                                                                                                                                                {{ \\'plugin.lthn.chain.table.title.recent-blocks\\' | translate }}                                                                                                                                                {{ value | hashrate:true}}                                                                                                                                                                                                                                                                                done                                close                                                                                                                                        {{ value | toCoin | number:\\'1.0-8\\'}}                                                                                                                                        {{ value | timeAgo }}                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConsoleModule\n                        \n                        \n                            TranslateModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RootComponent} from './root.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {ConsoleModule} from '@plugin/console/console.module';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {WalletModule} from '@plugin/lthn/wallet/wallet.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {PipesModule} from 'app/pipes/pipes.module';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n\tdeclarations: [RootComponent],\n\texports: [\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tMatTabsModule,\n\t\tWalletModule,\n\t\tTranslateModule,\n\t\tMatDividerModule,\n\t\tConsoleModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatListModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule,\n\t\tNgxDatatableModule,\n\t\tMatIconModule\n\t]\n})\nexport class RootModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootRoutingModule.html":{"url":"modules/RootRoutingModule.html","title":"module - RootRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RootRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootRoutingModule\n\n\n\ncluster_RootRoutingModule_imports\n\n\n\n\nRootModule\n\nRootModule\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RootModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from '@module/root.component';\nimport {AuthGuard} from '@module/auth/route.guard';\nimport {RootModule} from '@module/root.module';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: RootComponent,\n\t\t//canActivate: [AuthGuard],\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.dashboard.title',\n\t\t\theading: 'view.dashboard.heading',\n\t\t\tdescription: 'view.dashboard.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule,\n\t\tRootModule,\n\t\tRouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class RootRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                setting_tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        setting_tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'general'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\tsetting_tab = 'general';\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tconsole.log('SettingsComponent INIT');\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('SettingsComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent-1.html":{"url":"components/SettingsComponent-1.html","title":"component - SettingsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-settings',\n\ttemplateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settings.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/data/settings.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/data/settings.effects.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { switchMap } from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class SettingsEffects {\n\tchangeLanguage$ = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(private actions$: Actions, private translate: TranslateService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LogsModule} from './logs/logs.module';\nimport {SettingsComponent} from './settings.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: SettingsComponent,\n\t\tdata: {\n\t\t\ttitle: 'Settings',\n\t\t\theading: 'Unified Settings Panel',\n\t\t\tdescription: 'Lethean (LTHN) Blockchain Stats',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'logs',\n\t\tloadChildren: () =>\n\t\t\t\"import('./logs/logs.module').then((m) => m.LogsModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [SettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tFlexModule,\n\t\tMatToolbarModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatTabsModule,\n\t\tLogsModule\n\t],\n\texports: [RouterModule]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./settings.module').then(\\\n\t\t\t\t(m) => m.SettingsModule\\\n\t\t\t)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settingsState.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            biggerContentFont\n                                        \n                                \n                                \n                                        \n                                            daltonism\n                                        \n                                \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                                \n                                        \n                                            globalFontSize\n                                        \n                                \n                                \n                                        \n                                            hideNavigation\n                                        \n                                \n                                \n                                        \n                                            highContrastText\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            rtl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        biggerContentFont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biggerContentFont:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daltonism\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daltonism:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globalFontSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        globalFontSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideNavigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrastText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highContrastText:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rtl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rtl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState {\n\thideNavigation: boolean;\n\t// accessibility\n\tbiggerContentFont: boolean;\n\thighContrastText: boolean;\n\tdaltonism: boolean;\n\trtl: boolean;\n\t// global font size\n\tglobalFontSize: string;\n\t// UI Language\n\tlanguage: string;\n\t// UI mode\n\tdarkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShruggiePipe.html":{"url":"pipes/ShruggiePipe.html","title":"pipe - ShruggiePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShruggiePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/shruggie.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shrug\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/shruggie.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'shrug', pure: false })\nexport class ShruggiePipe implements PipeTransform {\n\ttransform(content, decorator?: boolean) {\n\t\tif (content === null || content === '') {\n\t\t\treturn '¯\\\\_(ツ)_/¯';\n\t\t}\n\t\treturn content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SplitIntegratedAddressOut.html":{"url":"interfaces/SplitIntegratedAddressOut.html","title":"interface - SplitIntegratedAddressOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SplitIntegratedAddressOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            standard_address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standard_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        standard_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from '../types/address';\n\nexport interface SplitIntegratedAddressOut {\n\tstandard_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/status.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status\n            \n\n            \n                styleUrls\n                ./status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                status_annon\n                            \n                            \n                                status_daemon\n                            \n                            \n                                status_private\n                            \n                            \n                                status_secure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/status.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_annon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_secure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n\tselector: 'lthn-app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent {\n\tstatus_daemon: any;\n\tstatus_secure: any;\n\tstatus_private: any;\n\tstatus_annon: any;\n\n\tconstructor(public dialog: MatDialog) {}\n}\n\n    \n\n    \n        \n    \n        \n            \n                cloud\n            \n            \n                cloud_off\n            \n            \n                lock\n            \n            \n                lock_open\n            \n            \n                visibility_off\n            \n            \n                visibility_off\n            \n            \n                verified_user\n            \n            \n                verified_user\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./status.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cloud                                        cloud_off                                        lock                                        lock_open                                        visibility_off                                        visibility_off                                        verified_user                                        verified_user                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_declarations\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/status/status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NoDaemonRunningDialog\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {NoDaemonRunningDialog} from './dialog/no-daemon-running.component';\n\n@NgModule({\n\tdeclarations: [StatusComponent, NoDaemonRunningDialog],\n\texports: [StatusComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatDialogModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule\n\t]\n})\nexport class StatusModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreOut.html":{"url":"interfaces/StoreOut.html","title":"interface - StoreOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/storeOut.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface StoreOut {\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllIn.html":{"url":"interfaces/SweepAllIn.html","title":"interface - SweepAllIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllIn.ts\n        \n\n\n            \n                Description\n            \n            \n                SweepAll request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            below_amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            do_not_relay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_keys\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination public address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        below_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        below_amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        do_not_relay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        do_not_relay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_hex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) return the transactions as hex encoded string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_keys:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Return the transaction keys after sending.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of outpouts from the blockchain to mix with (0 means no mixing).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllIn {\n\n\t/** Destination public address */\n\taddress: string;\n\n\t/** (Optional) */\n\tpriority?: number;\n\n\t/** Number of outpouts from the blockchain to mix with (0 means no mixing). */\n\tmixin: number;\n\n\t/** unsigned int; Number of blocks before the monero can be spent (0 to not add a lock). */\n\tunlock_time: number;\n\n\t/** (Optional) Random 32-byte/64-character hex string to identify a transaction. */\n\tpayment_id?: string;\n\n\t/** (Optional) Return the transaction keys after sending. */\n\tget_tx_keys?: boolean;\n\n\t/** (Optional) */\n\tbelow_amount?: number;\n\n\t/** (Optional)  */\n\tdo_not_relay?: boolean;\n\n\t/** (Optional) return the transactions as hex encoded string. */\n\tget_tx_hex?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllOut.html":{"url":"interfaces/SweepAllOut.html","title":"interface - SweepAllOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepAllOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_blob_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                                \n                                        \n                                            tx_key_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_blob_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_blob_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllOut {\n\ttx_hash_list: string[];\n\ttx_key_list: string[];\n\ttx_blob_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepDustOut.html":{"url":"interfaces/SweepDustOut.html","title":"interface - SweepDustOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepDustOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/sweepDustOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepDustOut {\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/date/timeAgo.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/date/timeAgo.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'timeAgo',\n\tpure: false\n})\nexport class TimeAgoPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value: number) {\n\t\tconst d = new Date(value * 1000);\n\t\tconst now = new Date();\n\t\tconst seconds = Math.round(\n\t\t\tMath.abs((now.getTime() - d.getTime()) / 1000)\n\t\t);\n\t\tconst minutes = Math.round(Math.abs(seconds / 60));\n\t\tconst hours = Math.round(Math.abs(minutes / 60));\n\t\tconst days = Math.round(Math.abs(hours / 24));\n\t\tconst months = Math.round(Math.abs(days / 30.416));\n\t\tconst years = Math.round(Math.abs(days / 365));\n\t\tif (Number.isNaN(seconds)) {\n\t\t\treturn '';\n\t\t} else if (seconds  545)\n\t\t\treturn years + ' years ago';\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToCoinPipe.html":{"url":"pipes/ToCoinPipe.html","title":"pipe - ToCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/toCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number, symbol)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/toCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    symbol\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({ name: 'toCoin', pure: false })\nexport class ToCoinPipe implements PipeTransform {\n\n\n  transform (content: number, symbol = false) {\n    return (content / 100000000).toFixed((8))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transactions.html":{"url":"interfaces/Transactions.html","title":"interface - Transactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/chain/interfaces/props/transactions.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            missed_tx\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txs_as_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txs_as_json\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        missed_tx\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed_tx:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txs_as_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txs_as_hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txs_as_json\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txs_as_json:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transactions {\n\tstatus: string,\n\ttxs_as_hex?: string,\n\ttxs_as_json?: any,\n\tmissed_tx?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/components/transactions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                rows\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadTransactions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                opts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opts\n                    \n                \n                \n                    \n                        Type :         GetTransfersIn\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t}\n                    \n                \n                        \n                            \n                                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetTransfersOut[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/components/transactions.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Observable, Subscription} from 'rxjs';\nimport {GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {select, Store} from '@ngrx/store';\nimport {selectWalletTransactions} from '@plugin/lthn/wallet/data';\n\n@Component({\n\tselector: 'lthn-wallet-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class TransactionsComponent implements OnInit {\n\t@Input() name?: string = '';\n\t@Input() opts: GetTransfersIn = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t};\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\trows: GetTransfersOut[];\n\n\n\n\tcolumns = [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}];\n\n\tColumnMode = ColumnMode;\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletRpcService, private store: Store) {\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.subs$['txn'] = this.store.pipe(select(selectWalletTransactions)).subscribe((data) => {\n\t\t\tif(data) {\n\t\t\t\tthis.rows = [...data['in'], ...data['out']]\n\t\t\t}\n\t\t})\n\t\t//this.loadTransactions();\n\t}\n\n\tasync loadTransactions() {\n\n\t\tthis.rows = await this.wallet.getTransfers(this.opts).then((data) => Object.values(data).flat());\n\t\tconsole.log(this.rows);\n\n\t}\n}\n\n    \n\n    \n        \n    {{ 'plugin.lthn.wallet.titles.wallet-transactions' | translate }}\n    \n\n            \n                \n                \n                    \n                        \n                    \n                \n                \n                    \n                       {{ value | toCoin | number:'1.0-8'}}\n                    \n                \n                \n                    \n                        {{ value | timeAgo }}\n                    \n                \n            \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'plugin.lthn.wallet.titles.wallet-transactions\\' | translate }}                                                                                                                                                                                           {{ value | toCoin | number:\\'1.0-8\\'}}                                                                                                {{ value | timeAgo }}                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/transfer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            txid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transfer {\n\tamount: number;\n\tfee: number;\n\theight: number;\n\tnote: string;\n\tpayment_id: string;\n\ttimestamp: number;\n\ttxid: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferIn.html":{"url":"interfaces/TransferIn.html","title":"interface - TransferIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from '../types/destination';\n\nexport interface TransferIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. Outputs:\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOut.html":{"url":"interfaces/TransferOut.html","title":"interface - TransferOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferOut {\n\tfee: number; // - Integer value of the fee charged for the txn.\n\ttx_hash: string; // - String for the publically searchable transaction hash\n\ttx_key: string; // - String for the transaction key if get_tx_key is true, otherwise, blank string.\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitIn.html":{"url":"interfaces/TransferSplitIn.html","title":"interface - TransferSplitIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            new_algorithm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        new_algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        new_algorithm:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Big from 'big.js';\nimport {Destination} from './types/destination';\nimport {MakeUriIn} from './dto/makeUriIn';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\t'Random.hex(false)(Random.engines.nativeMath, length)';\n\nexport class LTHN extends Big {\n\ttoAtomic = (): Atomic => new Atomic(this.times(1e8));\n}\n\nexport class Atomic extends Big {\n\ttoLTHN = (): LTHN => new LTHN(this.div(1e8));\n\ttoNumber = (): number => Number(this);\n}\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitOut.html":{"url":"interfaces/TransferSplitOut.html","title":"interface - TransferSplitOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/dto/transferSplitOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee_list:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferSplitOut {\n\tfee_list: number[];\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/i18n/translate/translate.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n  ]\n})\nexport class TranslateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Uri.html":{"url":"interfaces/Uri.html","title":"interface - Uri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Uri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/interfaces/types/uri.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Uri {\n\turi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                processingForm\n                            \n                            \n                                task\n                            \n                            \n                                userForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/user.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'on');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.private.asc`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.public.asc`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.revoke.asc`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(username, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Welcome To Lethean\n                    \n                        Protecting Privacy &amp; Confidentially since 2017\n                    \n                \n\n            \n        \n        \n        \n\n            \n                New User\n                \n                    \n                        \n                            Username\n                            \n                        \n                        \n                            Password\n                            \n                        \n                        \n                            Password (Confirm)\n                            \n                        \n\n                    \n                    Create User\n                \n            \n\n            \n                Data Handling Declaration\n                \n                    \n                        Lethean's designed to protect your digital security; We encrypt as much as we can.\n                    \n                    \n                        Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you\n                        use your\n                        software and never will.\n                    \n                    \n                        Below is a highlight of some of the steps we take to protect you.\n                    \n                    Data Confidentiality\n                    \n                        User accounts don't hold cleartext data.\n                        Application data is encrypted & meaningless without User authentication.\n                        Transactions on our network are Encrypted, with a secret decryption key per transaction;\n                            confidentiality\n                            is standard.\n                        \n                        There is no method to expose VPN purchase history to anyone but you.\n                        There is no magic key; we can not under any circumstances decrypt or recover your data; it's\n                            just not\n                            possible, dont forget your login details.\n                        \n                    \n                    Data Privacy\n                    \n                        Application data is locked to user accounts with military-grade encryption.\n                        You will be informed when you wish to perform an action that will expose data.\n                    \n                \n            \n        \n        \n            \n                Building Your Encryption Keys\n                \n                    You will be redirected to the profile creation page soon.\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Welcome To Lethean                                            Protecting Privacy & Confidentially since 2017                                                                                                    New User                                                                                        Username                                                                                                        Password                                                                                                        Password (Confirm)                                                                                            Create User                                                        Data Handling Declaration                                                            Lethean\\'s designed to protect your digital security; We encrypt as much as we can.                                                                Our software is Free to Own, Free to use, Free to modify; we impose no limitations on how you                        use your                        software and never will.                                                                Below is a highlight of some of the steps we take to protect you.                                        Data Confidentiality                                            User accounts don\\'t hold cleartext data.                        Application data is encrypted & meaningless without User authentication.                        Transactions on our network are Encrypted, with a secret decryption key per transaction;                            confidentiality                            is standard.                                                There is no method to expose VPN purchase history to anyone but you.                        There is no magic key; we can not under any circumstances decrypt or recover your data; it\\'s                            just not                            possible, dont forget your login details.                                                                Data Privacy                                            Application data is locked to user accounts with military-grade encryption.                        You will be informed when you wish to perform an action that will expose data.                                                                                            Building Your Encryption Keys                                    You will be redirected to the profile creation page soon.                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMeta.html":{"url":"interfaces/UserMeta.html","title":"interface - UserMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decryptionKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decryptionKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decryptionKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {UserComponent} from './user.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: UserComponent,\n\t\tdata: {\n\t\t\ttitle: 'New User - Lethean (LTHN)',\n\t\t\theading: 'New User Wizard',\n\t\t\tdescription: 'Lethean (LTHN) New User Panel',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [UserComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatOptionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatDividerModule,\n\t\tMatCardModule,\n\t\tMatInputModule,\n\t\tFlexModule,\n\t\tMatCheckboxModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressBarModule\n\t]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOptions.html":{"url":"interfaces/UserOptions.html","title":"interface - UserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/interfaces/user.options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginMethod\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginMethod:         LoginMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOptions {\n\tloginMethod: LoginMethods;\n}\n\nexport enum LoginMethods {\n\tPASSWORD = 1,\n\tSSH_PEM\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '../auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'user',\n\t\tloadChildren: () =>\n\t\t\t\"import('./user.module').then((m) => m.UserModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         UserMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMeta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         UserOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersState.html":{"url":"interfaces/UsersState.html","title":"interface - UsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VpnComponent.html":{"url":"components/VpnComponent.html","title":"component - VpnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VpnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/vpn/vpn.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-vpn\n            \n\n            \n                styleUrls\n                ./vpn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vpn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/vpn/vpn.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/vpn/vpn.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'lthn-vpn',\n\ttemplateUrl: './vpn.component.html',\n\tstyleUrls: ['./vpn.component.scss']\n})\nexport class VpnComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      VPN Marketplace\n      All nodes are community run, browse and keep track of your favourites here.\n      \n        New Provider\n        List Services\n        Deploy ExitNode\n\n      \n    \n    \n      \n        \n          local Blockchain\n          This helps the community the most, and makes you a member of the network. Exactly the same\n            as Torrents, but just our blockchain.\n          \n          \n            \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n            \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./vpn.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            VPN Marketplace      All nodes are community run, browse and keep track of your favourites here.              New Provider        List Services        Deploy ExitNode                                      local Blockchain          This helps the community the most, and makes you a member of the network. Exactly the same            as Torrents, but just our blockchain.                                                                            Region                Provider                Service                Cost                                                                        Region                Provider                Service                Cost                                                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'VpnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnModule.html":{"url":"modules/VpnModule.html","title":"module - VpnModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VpnComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VpnComponent } from './vpn.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [VpnComponent],\n\timports: [CommonModule, MatCardModule, FlexModule, MatButtonModule]\n})\nexport class VpnModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnRoutingModule.html":{"url":"modules/VpnRoutingModule.html","title":"module - VpnRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/vpn/vpn-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VpnComponent } from './vpn.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'vpn',\n\t\tcomponent: VpnComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class VpnRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletComponent.html":{"url":"components/WalletComponent.html","title":"component - WalletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/plugins/lthn/wallet/wallet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-wallet\n            \n\n            \n                styleUrls\n                ./wallet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wallet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                balance\n                            \n                            \n                                    Private\n                                modalComponent\n                            \n                            \n                                    Public\n                                openedWallet\n                            \n                            \n                                    Public\n                                pluginConfig\n                            \n                            \n                                    Public\n                                showtx\n                            \n                            \n                                    Private\n                                subs$\n                            \n                            \n                                    Public\n                                txnSelection\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBalance\n                            \n                            \n                                    Public\n                                isChecked\n                            \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWallet\n                            \n                            \n                                    Public\n                                    Async\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBalance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isChecked\n                        \n                    \n                \n            \n            \n                \n                    \n                    isChecked(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle(col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance | Promise\n\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openedWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pluginConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluginDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdescription_short: 'test',\n\t\tgit_repo: 'https://github.com/Snider/plugin-bootstrap.git',\n\t\tname: 'test',\n\t\treadme_list: 'https://github.com/Snider/plugin-bootstrap#readme',\n\t\tstatus: PluginStatus.ACTIVE\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showtx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        txnSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\nimport {Balance} from '@plugin/lthn/wallet/interfaces';\nimport {PluginDefinition, PluginStatus} from '@data/plugins';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from '@plugin/lthn/wallet/data';\nimport {Subscription} from 'rxjs';\nimport {getWalletData} from '@plugin/lthn/wallet/data';\n\n@Component({\n\tselector: 'lthn-app-wallet',\n\ttemplateUrl: './wallet.component.html',\n\tstyleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit, OnDestroy, AfterViewInit {\n\tpublic pluginConfig: PluginDefinition = {\n\t\tdescription_short: 'test',\n\t\tgit_repo: 'https://github.com/Snider/plugin-bootstrap.git',\n\t\tname: 'test',\n\t\treadme_list: 'https://github.com/Snider/plugin-bootstrap#readme',\n\t\tstatus: PluginStatus.ACTIVE\n\t}\n\tpublic balance:  Balance | Promise;\n\n\tpublic wallets: string[] = [];\n\n\t@ViewChild('modal') private modalComponent: ModalComponent\n\tpublic openedWallet: string = '';\n\tpublic showtx: boolean = false;\n\tpublic txnSelection: any = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t\tfilter_by_height: false,\n\t\tmin_height: null,\n\t\tmax_height: null\n\t};\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletService, private store: Store) {}\n\n\tngOnInit() {\n\n\t\tthis.subs$['wallets'] = this.store.pipe(select(WalletActions.selectWallets)).subscribe((data) => {\n\t\t\tif(data && data.length > 0) {\n\t\t\t\tthis.wallets = data\n\t\t\t\tthis.subs$['openedWallet'] = this.store.pipe(select(WalletActions.selectOpenedWallet)).subscribe((wallet) => {\n\t\t\t\t\tif(wallet) {\n\t\t\t\t\t\tthis.openedWallet = wallet\n\t\t\t\t\t\tthis.store.dispatch(WalletActions.WalletStartPolling())\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t}\n\t\t})\n\n\t }\n\n\tpublic ngAfterViewInit() {\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tfor (let sub of this.subs$){\n\t\t\tsub.unsubscribe();\n\t\t}\n\t\tthis.store.dispatch(WalletActions.WalletStopPolling())\n\t\tconsole.log('WalletComponent DESTROY');\n\t}\n\n\topenWallet(key: string){\n\t\tthis.store.dispatch(WalletActions.switchWallet({address: key}))\n\t}\n\n\tasync getBalance() {\n\t\tthis.balance = await this.wallet.getBalance().then((data) => data)\n\t}\n\n\tpublic async toggle(col) {\n\t\tawait this.wallet.loadTransfers(this.txnSelection);\n\t\tthis.txnSelection[col] = !!this.txnSelection[col]\n\t}\n\n\tpublic isChecked(col) {\n\t\treturn this.txnSelection[col]\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Wallet Manager\n                \n                \n                    account_balance_wallet\n                \n                \n                    cloud_download\n                \n                \n                    cloud_upload\n                \n                \n                    settings\n                \n            \n        \n        \n            \n                \n                    Wallets\n                    \n                        \n                            {{wallet}}\n                        \n                        \n                        Available Columns\n                        \n                            \n                                \n                                Incoming\n                            \n\n                            \n                                \n                                Sent\n                            \n\n                            \n                                \n                                Pending\n                            \n\n                            \n                                \n                                Failed\n                            \n\n                            \n                                \n                                Pool\n                            \n                        \n                    \n                \n            \n            \n                 1\">\n                    \n                \n                \n\n                        \n                        \n\n                \n\n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./wallet.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Wallet Manager                                                    account_balance_wallet                                                    cloud_download                                                    cloud_upload                                                    settings                                                                                            Wallets                                                                        {{wallet}}                                                                        Available Columns                                                                                                                    Incoming                                                                                                                        Sent                                                                                                                        Pending                                                                                                                        Failed                                                                                                                        Pool                                                                                                                                 1\">                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BackupComponent', 'selector': 'lthn-app-backup'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NewComponent', 'selector': 'lthn-wallet-new'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PluginsComponent', 'selector': 'lthn-app-plugins'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletEffects.html":{"url":"injectables/WalletEffects.html","title":"injectable - WalletEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isPollingActiveStats\n                            \n                            \n                                openWallet\n                            \n                            \n                                StartPollingWallet$\n                            \n                            \n                                StopPollingWallet$\n                            \n                            \n                                WalletLoadData$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, http: HttpClient, translate: TranslateService, store: Store, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:103\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isPollingActiveStats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StopPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WalletLoadData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/effects.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeWhile, withLatestFrom} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {WalletService} from '@plugin/lthn/wallet/wallet.service';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from './actions';\nimport * as WalletSelectors from './selectors';\nimport {merge, of, timer} from 'rxjs';\nimport {selectOpenedWalletData, selectWalletData} from './selectors';\nimport {HttpClient} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {Balance, GetTransfersIn, GetTransfersOut} from '@plugin/lthn/wallet/interfaces';\nimport {WalletTransfers} from './actions';\nimport {debug} from '@data/debug.rxjs';\n\n@Injectable()\nexport class WalletEffects {\n\topenWallet = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t);\n\n\tWalletLoadData$ =\n\t\tcreateEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`https://localhost:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\tStartPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t));\n\tStopPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t));\n\n\tprivate isPollingActiveStats = false;\n\n\tconstructor(private actions$: Actions, private http: HttpClient, private translate: TranslateService, private store: Store, private wallet: WalletService) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\ncluster_WalletModule_imports\n\n\n\n\nAddComponent\n\nAddComponent\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nAddComponent \n\nAddComponent \n\nAddComponent  -->\n\nWalletModule->AddComponent \n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nModalModule\n\nModalModule\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddComponent\n                        \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            WalletComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ModalModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddComponent\n                        \n                        \n                            NewComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WalletComponent } from './wallet.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NewComponent } from './components/new.component';\nimport { RestoreComponent } from './components/restore.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {OpenComponent} from '@plugin/lthn/wallet/components/open.component';\nimport {ModalModule} from '@service/ui/modal/modal.module';\nimport {TransactionsComponent} from '@plugin/lthn/wallet/components/transactions.component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatSelectModule} from '@angular/material/select';\nimport {AddComponent} from './components/add.component'\nimport {PipesModule} from 'app/pipes/pipes.module';\n\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallets',\n\t\tcomponent: WalletComponent,\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.title',\n\t\t\theading: 'view.wallets.heading',\n\t\t\tdescription: 'view.wallets.description',\n\t\t\trobots: true\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [\n\t\tWalletComponent,\n\t\tNewComponent,\n\t\tRestoreComponent,\n\t\tOpenComponent,\n\t\tTransactionsComponent,\n\t\tAddComponent\n\t],\n\texports: [\n\t\tNewComponent,RestoreComponent,TransactionsComponent,OpenComponent,RouterModule,AddComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tFlexModule,\n\t\tReactiveFormsModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatCheckboxModule,\n\t\tMatExpansionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatTooltipModule,\n\t\tMatInputModule,\n\t\tTranslateModule,\n\t\tModalModule,\n\t\tNgxDatatableModule,\n\t\tMatSelectModule,\n\t\tMatTabsModule,\n\t\tPipesModule\n\t]\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletRoutingModule.html":{"url":"modules/WalletRoutingModule.html","title":"module - WalletRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallet',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./wallet.module').then((m) => m.WalletModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class WalletRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletRpcService.html":{"url":"injectables/WalletRpcService.html","title":"injectable - WalletRpcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletRpcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.rpc.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddressBook\n                            \n                            \n                                createWallet\n                            \n                            \n                                deleteAddressBook\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressBook\n                            \n                            \n                                getBalance\n                            \n                            \n                                getBulkPayments\n                            \n                            \n                                getHeight\n                            \n                            \n                                getPayments\n                            \n                            \n                                getTransferByTxid\n                            \n                            \n                                getTransfers\n                            \n                            \n                                incomingTransfers\n                            \n                            \n                                makeIntegratedAddress\n                            \n                            \n                                makeUri\n                            \n                            \n                                openWallet\n                            \n                            \n                                other\n                            \n                            \n                                parseUri\n                            \n                            \n                                queryKey\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                splitIntegratedAddress\n                            \n                            \n                                startWallet\n                            \n                            \n                                stopWallet\n                            \n                            \n                                store\n                            \n                            \n                                sweepAll\n                            \n                            \n                                sweepDust\n                            \n                            \n                                transfer\n                            \n                            \n                                transferSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddressBook\n                        \n                    \n                \n            \n            \n                \naddAddressBook(x: AddAddressBook)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                AddAddressBook\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet(x: CreateWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                CreateWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddressBook\n                        \n                    \n                \n            \n            \n                \ndeleteAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:62\n                \n            \n\n\n            \n                \n                    Get the address of the opened wallet\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressBook\n                        \n                    \n                \n            \n            \n                \ngetAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:53\n                \n            \n\n\n            \n                \n                    Get openned wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBulkPayments\n                        \n                    \n                \n            \n            \n                \ngetBulkPayments(x: GetBulkPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetBulkPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:71\n                \n            \n\n\n            \n                \n                    Get chain height\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPayments\n                        \n                    \n                \n            \n            \n                \ngetPayments(x: GetPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransferByTxid\n                        \n                    \n                \n            \n            \n                \ngetTransferByTxid(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:152\n                \n            \n\n\n            \n                \n                    Get transfer by Transactin ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransfers\n                        \n                    \n                \n            \n            \n                \ngetTransfers(x: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incomingTransfers\n                        \n                    \n                \n            \n            \n                \nincomingTransfers(x: IncomingTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IncomingTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nmakeIntegratedAddress(x: MakeIntegratedAddressIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeIntegratedAddressIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeUri\n                        \n                    \n                \n            \n            \n                \nmakeUri(x: MakeUriIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeUriIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(x: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n            \n                \nother(method: string, arg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUri\n                        \n                    \n                \n            \n            \n                \nparseUri(x: Uri)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                Uri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKey\n                        \n                    \n                \n            \n            \n                \nqueryKey(x: QueryKeyIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                QueryKeyIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(x: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nsplitIntegratedAddress(x: IntegratedAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IntegratedAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:28\n                \n            \n\n\n            \n                \n                    Send Wallet Service start POST req\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopWallet\n                        \n                    \n                \n            \n            \n                \nstopWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepAll\n                        \n                    \n                \n            \n            \n                \nsweepAll(x: SweepAllIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:107\n                \n            \n\n\n            \n                \n                    Send all funds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                SweepAllIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepDust\n                        \n                    \n                \n            \n            \n                \nsweepDust()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n            \n                \ntransfer(x: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:81\n                \n            \n\n\n            \n                \n                    Send a transaction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferSplit\n                        \n                    \n                \n            \n            \n                \ntransferSplit(x: TransferSplitIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferSplitIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/daemon/wallet/json_rpc'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.rpc.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {request} from '@service/json-rpc';\nimport {AddAddressBook, Address, Balance, CreateWallet, GetAddressBookOut, GetBulkPaymentsIn,\n\tGetBulkPaymentsOut, GetPaymentsIn, GetPaymentsOut, GetTransfersIn, GetTransfersOut, Height, IncomingTransfersIn,\n\tIncomingTransfersOut, IntegratedAddress, MakeIntegratedAddressIn, MakeUriIn, OpenWallet, QueryKeyIn, QueryKeyOut,\n\tSplitIntegratedAddressOut, StoreOut, SweepAllIn, SweepAllOut, Transfer, TransferIn, TransferOut, TransferSplitIn,\n\tTransferSplitOut, Uri} from '@plugin/lthn/wallet/interfaces';\nimport {RestoreWallet} from '@plugin/lthn/wallet/interfaces/requests/restoreWallet';\nimport {Observable} from 'rxjs';\nimport { from } from 'rxjs';\nconst axios = require('axios').default;\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletRpcService {\n\tprivate url = 'https://localhost:36911/daemon/wallet/json_rpc';\n\n\tconstructor(private http: HttpClient) {\n\t}\n\n\t/**\n\t * Send Wallet Service start POST req\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\n\t\tconst request = {rpcBindPort: '36963', disableRpcLogin: false};\n\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`https://localhost:36911/daemon/wallet/rpc`,\n\t\t\t\trequest,\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => console.log(dat));\n\t}\n\n\t/**\n\t * Get openned wallet balance\n\t *\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn request(this.url)('getbalance');\n\t}\n\n\t/**\n\t * Get the address of the opened wallet\n\t *\n\t * @returns {Promise}\n\t */\n\tgetAddress(): Promise {\n\t\treturn request(this.url)('getaddress');\n\t}\n\n\t/**\n\t * Get chain height\n\t *\n\t * @returns {Promise}\n\t */\n\tgetHeight(): Promise {\n\t\treturn request(this.url)('getheight');\n\t}\n\n\t/**\n\t * Send a transaction\n\t *\n\t * @param {TransferIn} x\n\t * @returns {Promise}\n\t */\n\ttransfer(x: TransferIn): Promise {\n\t\treturn request(this.url)('transfer', x);\n\t}\n\n\t/**\n\t *\n\t * @param {TransferSplitIn} x\n\t * @returns {Promise}\n\t */\n\ttransferSplit(x: TransferSplitIn): Promise {\n\t\treturn request(this.url)('transfer_split', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tsweepDust() {\n\t\treturn request(this.url)('sweep_dust');\n\t}\n\n\t/**\n\t * Send all funds\n\t * @param {SweepAllIn} x\n\t * @returns {Promise}\n\t */\n\tsweepAll(x: SweepAllIn): Promise {\n\t\treturn request(this.url)('sweep_all');\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tstore(): Promise {\n\t\treturn request(this.url)('store');\n\t}\n\n\t/**\n\t *\n\t * @param {GetPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetPayments(x: GetPaymentsIn): Promise {\n\t\treturn request(this.url)('get_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetBulkPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetBulkPayments(x: GetBulkPaymentsIn): Promise {\n\t\treturn request(this.url)('get_bulk_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tgetTransfers(x: GetTransfersIn): Promise {\n\t\treturn request(this.url)('get_transfers', x);\n\t}\n\n\t/**\n\t * Get transfer by Transactin ID\n\t *\n\t * @param {{txid: string}} x\n\t * @returns {Promise}\n\t */\n\tgetTransferByTxid(x: { txid: string }): Promise {\n\t\treturn request(this.url)('get_transfer_by_txid', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IncomingTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tincomingTransfers(\n\t\tx: IncomingTransfersIn\n\t): Promise {\n\t\treturn request(this.url)('incoming_transfers', x);\n\t}\n\n\t/**\n\t *\n\t * @param {QueryKeyIn} x\n\t * @returns {Promise}\n\t */\n\tqueryKey(x: QueryKeyIn): Promise {\n\t\treturn request(this.url)('query_key', x);\n\t}\n\n\t/**\n\t *\n\t * @param {MakeIntegratedAddressIn} x\n\t * @returns {Promise}\n\t */\n\tmakeIntegratedAddress(\n\t\tx: MakeIntegratedAddressIn\n\t): Promise {\n\t\treturn request(this.url)('make_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IntegratedAddress} x\n\t * @returns {Promise}\n\t */\n\tsplitIntegratedAddress(\n\t\tx: IntegratedAddress\n\t): Promise {\n\t\treturn request(this.url)('split_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tstopWallet() {\n\t\treturn request(this.url)('stop_wallet');\n\t}\n\n\t/**\n\t *\n\t * @param {MakeUriIn} x\n\t * @returns {Promise}\n\t */\n\tmakeUri(x: MakeUriIn): Promise {\n\t\treturn request(this.url)('make_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {Uri} x\n\t * @returns {Promise}\n\t */\n\tparseUri(x: Uri): Promise {\n\t\treturn request(this.url)('parse_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{entries: number[]}} x\n\t * @returns {Promise}\n\t */\n\tgetAddressBook(x: { entries: number[] }): Promise {\n\t\treturn request(this.url)('get_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {AddAddressBook} x\n\t * @returns {Promise}\n\t */\n\taddAddressBook(x: AddAddressBook): Promise {\n\t\treturn request(this.url)('add_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{index: number}} x\n\t * @returns {Promise>}\n\t */\n\tdeleteAddressBook(x: { index: number }) {\n\t\treturn request(this.url)('delete_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {OpenWallet} x\n\t * @returns {Promise>}\n\t */\n\topenWallet(x: OpenWallet) {\n\t\treturn request(this.url)('open_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {CreateWallet} x\n\t * @returns {Promise>}\n\t */\n\tcreateWallet(x: CreateWallet) {\n\t\treturn request(this.url)('create_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {RestoreWallet} x\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(x: RestoreWallet) {\n\t\treturn request(this.url)('generate_from_keys', x);\n\t}\n\n\t/**\n\t *\n\t * @param {string} method\n\t * @param arg\n\t * @returns {Promise}\n\t */\n\tother(method: string, arg?: any): Promise {\n\t\treturn request(this.url)(method, arg);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBalance\n                            \n                            \n                                getWalletList\n                            \n                            \n                                loadTransfers\n                            \n                            \n                                openWallet\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                startWallet\n                            \n                            \n                                walletList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService, rpc: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:54\n                \n            \n\n\n            \n                \n                    Get wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWalletList\n                        \n                    \n                \n            \n            \n                \ngetWalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:60\n                \n            \n\n\n            \n                \n                    Gets the list of known wallets from the file system\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTransfers\n                        \n                    \n                \n            \n            \n                \nloadTransfers(opts: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(req: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:44\n                \n            \n\n\n            \n                \n                    Open a known wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(req: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:34\n                \n            \n\n\n            \n                \n                    Restore wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWallet\n                        \n                    \n                \n            \n            \n                \nstartWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:24\n                \n            \n\n\n            \n                \n                    Start wallet service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletList\n                        \n                    \n                \n            \n            \n                \nwalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/plugins/lthn/wallet/wallet.service.ts:78\n                \n            \n\n\n            \n                \n                    Returns the wallets we know about\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/wallet.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Balance, GetTransfersIn, OpenWallet, RestoreWallet} from '@plugin/lthn/wallet/interfaces';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * Orchestrates dealing with wallets, to add a new wallet type, implement this class\n */\nexport class WalletService {\n\tprivate wallets: string[] = [];\n\n\tconstructor(private fs: FileSystemService, private rpc: WalletRpcService) {\n\t}\n\n\t/**\n\t * Start wallet service\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWallet() {\n\t\treturn this.rpc.startWallet();\n\t}\n\n\t/**\n\t * Restore wallet\n\t *\n\t * @param {RestoreWallet} req\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(req: RestoreWallet) {\n\t\treturn this.rpc.restoreWallet(req);\n\t}\n\n\t/**\n\t * Open a known wallet\n\t *\n\t * @param {OpenWallet} req\n\t * @returns {Promise>}\n\t */\n\topenWallet(req: OpenWallet) {\n\t\treturn this.rpc.openWallet(req);\n\t}\n\n\t/**\n\t * Get wallet balance\n\t *\n\t * @param {Balance} req\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn this.rpc.getBalance()\n\t}\n\t/**\n\t * Gets the list of known wallets from the file system\n\t */\n\tgetWalletList() {\n\t\tthis.fs.listFiles('/wallets').then((data) => {\n\t\t\tif (data.length > 0) {\n\t\t\t\tfor (let dat of data) {\n\t\t\t\t\tif (!this.wallets.includes(dat) && !dat.endsWith('.keys') && !dat.endsWith('.txt')) {\n\t\t\t\t\t\tthis.wallets.push(dat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this.wallets\n\t}\n\n\t/**\n\t * Returns the wallets we know about\n\t *\n\t * @returns {string[]}\n\t */\n\twalletList() {\n\t\tif (this.wallets.length === 0) {\n\t\t\tthis.getWalletList();\n\t\t}\n\t\treturn this.wallets;\n\t}\n\n\tloadTransfers(opts: GetTransfersIn){\n\t\treturn this.rpc.getTransfers(opts).then((data) => Object.values(data).flat());\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletState.html":{"url":"classes/WalletState.html","title":"class - WalletState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/state.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            WalletsState\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                known_wallets\n                            \n                            \n                                loaded_wallet\n                            \n                            \n                                wallets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        known_wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded_wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/plugins/lthn/wallet/data/state.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut, Transfer} from '@plugin/lthn/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletsState.html":{"url":"interfaces/WalletsState.html","title":"interface - WalletsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/plugins/lthn/wallet/data/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            known_wallets\n                                        \n                                \n                                \n                                        \n                                            loaded_wallet\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        known_wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known_wallets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_wallet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_wallet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut, Transfer} from '@plugin/lthn/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebStorageService.html":{"url":"injectables/WebStorageService.html","title":"injectable - WebStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/web-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                count\n                            \n                            \n                                    Private\n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backend\n                            \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        backend\n                        \n                    \n                \n            \n            \n                \n                    \n                    backend(cmd: string, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:64\n                \n            \n\n\n            \n                \n                    Performs call to backend object store\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(key: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://localhost:36911/object'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/web-storage.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {atob, btoa} from 'bytebuffer';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebStorageService implements Storage {\n\n\tprivate items = {};\n\tprivate count = 0\n\tprivate apiUrl = 'https://localhost:36911/object';\n\n\tget length() {\n\t\treturn this.count;\n\t}\n\n\tkey(key:number): string | null {\n\t\treturn this.items[key]\n\t}\n\n\tgetItem(key): string | null {\n\t\ttry {\n\t\t\tconst ret = this.backend('get', {object: key});\n\t\t\tif(ret){\n\t\t\t\treturn JSON.parse(ret)\n\t\t\t}\n\t\t}catch (e){\n\t\t\tconsole.log('getItem Error')\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetItem(key: string, value: string) {\n\t\ttry {\n\t\t\tthis.count++\n\t\t\treturn this.backend('set', {object: key, data: value});\n\t\t}catch (e){\n\t\t\tconsole.log('setItem Error')\n\t\t}\n\t\treturn null;\n\n\t}\n\n\tremoveItem(key) {\n\t\tdelete this.items[key]\n\t\tthis.count--\n\t\tthis.backend('remove', {object: key});\n\t}\n\n\tclear() {\n\t\tthis.items ={}\n\t\tthis.count = 0\n\t\tthis.backend('clear', {});\n\t}\n\n\t/**\n\t * Performs call to backend object store\n\t *\n\t * @param {string} cmd\n\t * @param payload\n\t * @returns {string | null}\n\t * @private\n\t */\n\tprivate backend(cmd:string, payload: any):string|null {\n\t\tconst axios = require('axios').default;\n\t\ttry {\n\t\t\tconst ret = axios.post(`${this.apiUrl}/${cmd}`, {group: 'lthn-app', ...payload}).then((data) => data.data)\n\t\t\treturn ret.data;\n\t\t}catch (NetworkError) {\n\t\t\tconsole.log('HTTP Error')\n\t\t}\n\t\treturn null\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeConnection\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                dataUpdates$\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeConnection\n                        \n                    \n                \n            \n            \n                \ncloseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     WebSocketSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataUpdates$\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataUpdates$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/websocket.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nexport const WS_ENDPOINT = 'ws://localhost:36909';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$: WebSocketSubject;\n\n\tconstructor() {}\n\n\tpublic connect(): WebSocketSubject {\n\t\tif (!this.socket$ || this.socket$.closed) {\n\t\t\tthis.socket$ = webSocket(WS_ENDPOINT);\n\t\t}\n\t\treturn this.socket$;\n\t}\n\n\tpublic dataUpdates$() {\n\t\treturn this.connect().asObservable();\n\t}\n\n\tcloseConnection() {\n\t\tthis.connect().complete();\n\t}\n\n\tsendMessage(msg: string) {\n\t\tthis.socket$.next(msg);\n\t}\n\n\n\t/**\n\timport { webSocket } from \"rxjs/webSocket\";\nconst subject = webSocket(\"ws://localhost:8081\");\n\nsubject.subscribe(\n   msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n   err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n   () => console.log('complete') // Called when connection is closed (for whatever reason).\n );\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nDont be scared, the world was created by people no smarter than you.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.0\n        \n            @angular/cdk : ~13.0.1\n        \n            @angular/common : ~13.0.0\n        \n            @angular/compiler : ~13.0.0\n        \n            @angular/core : ~13.0.0\n        \n            @angular/elements : ^13.0.3\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~13.0.0\n        \n            @angular/localize : ~13.0.0\n        \n            @angular/material : ^13.0.1\n        \n            @angular/platform-browser : ~13.0.0\n        \n            @angular/platform-browser-dynamic : ~13.0.0\n        \n            @angular/platform-server : ~13.0.0\n        \n            @angular/router : ~13.0.0\n        \n            @hiveio/dhive : ^1.1.1\n        \n            @kurkle/color : ^0.1.9\n        \n            @lthn/rxjs-wallet-rpc : ^1.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            @ngrx/component : ^13.0.1\n        \n            @ngrx/component-store : ^13.0.1\n        \n            @ngrx/data : ^13.0.1\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/entity : ^13.0.1\n        \n            @ngrx/router-store : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @nguniversal/express-engine : ^13.0.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            angular-notifier : ^9.1.0\n        \n            assert : ^2.0.0\n        \n            axios : ^0.24.0\n        \n            big.js : ^6.1.1\n        \n            bootstrap : ^4.5.0\n        \n            chart.js : ^3.6.0\n        \n            chartjs-adapter-moment : ^1.0.0\n        \n            config-ini-parser : ^1.5.9\n        \n            crypto-js : ^4.1.1\n        \n            express : ^4.15.2\n        \n            jszmq : ^0.1.2\n        \n            localstorage-polyfill : ^1.0.1\n        \n            marked : ^3.0.8\n        \n            moment : ^2.29.1\n        \n            ng-block-ui : ^3.0.2\n        \n            ng-socket-io : ^0.2.4\n        \n            ng-terminal : ^3.2.0\n        \n            ngrx-store-localstorage : ^12.0.1\n        \n            ngx-socket-io : ^4.1.0\n        \n            node-codesign : ^0.3.3\n        \n            openpgp : ^5.0.0\n        \n            random-js : ^2.1.0\n        \n            rxjs : ~7.4.0\n        \n            stream-browserify : ^3.0.0\n        \n            strip-ansi : ^7.0.1\n        \n            tslib : ^2.3.1\n        \n            typescript : ^4.4.4\n        \n            unique-names-generator : ^4.6.0\n        \n            web-animations-js : ^2.3.2\n        \n            xterm-addon-web-links : ^0.4.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginMethods   (src/.../user.options.ts)\n                        \n                        \n                            PluginStatus   (src/.../state.ts)\n                        \n                        \n                            RxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/data/user/interfaces/user.options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginMethods\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SSH_PEM\n                            \n                        \n            \n        \n\n    src/app/data/plugins/state.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginStatus\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TIMED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 OUTDATED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/data/debug.rxjs.ts\n    \n        \n            \n                \n                    \n                        \n                        RxJsLoggingLevel\n                    \n                \n                    \n                        \n                            Observable logging levels\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            nameNotTakenValidator   (src/.../validators.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            setRxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/wallet/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nameNotTakenValidator\n                        \n                    \n                \n            \n            \n                \nnameNotTakenValidator(nameList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/plugins/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: ProfileState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/chain/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/plugins/lthn/wallet/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setRxJsLoggingLevel\n                        \n                    \n                \n            \n            \n                \nsetRxJsLoggingLevel(level: RxJsLoggingLevel)\n                \n            \n\n\n\n\n            \n                \n                    Adjust the logging level during runtime\nsetRxJsLoggingLevel(4) = off\nsetRxJsLoggingLevel(0) - tmi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                RxJsLoggingLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLethean Desktop Interface\n\n\nThis is the application that is run within the lethean desktop, the API refrence for the HTTPS endpoints is here:\nDevelopment Build\nnpm install\nnpm run dev:setup\nnpm run devProduction Build\nnpm install\nnpm run buildDocumentation\nnpm install\nnpm run doc\nnpm run doc:serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_BlockchainComponent_providers\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PluginsModule\n\n\n\ncluster_PluginsModule_declarations\n\n\n\ncluster_PluginsModule_exports\n\n\n\ncluster_PluginsModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\ncluster_WalletModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nConsoleModule->RootModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nPluginsModule\n\nPluginsModule\n\nAppModule -->\n\nPluginsModule->AppModule\n\n\n\n\n\nPluginsComponent \n\nPluginsComponent \n\nPluginsComponent  -->\n\nPluginsModule->PluginsComponent \n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nChartService\n\nChartService\n\nBlockchainComponent -->\n\nChartService->BlockchainComponent\n\n\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\nChartDirective\n\nChartDirective\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\nWalletModule -->\n\nModalModule->WalletModule\n\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nMarkdownPipe\n\nMarkdownPipe\n\nPipesModule -->\n\nMarkdownPipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nMarkdownPipe \n\nMarkdownPipe \n\nMarkdownPipe  -->\n\nPipesModule->MarkdownPipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\nPluginsComponent\n\nPluginsComponent\n\nPluginsModule -->\n\nPluginsComponent->PluginsModule\n\n\n\n\n\nPluginsService\n\nPluginsService\n\nPluginsModule -->\n\nPluginsService->PluginsModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\nAddComponent \n\nAddComponent \n\nAddComponent  -->\n\nWalletModule->AddComponent \n\n\n\n\n\nNewComponent \n\nNewComponent \n\nNewComponent  -->\n\nWalletModule->NewComponent \n\n\n\n\n\nOpenComponent \n\nOpenComponent \n\nOpenComponent  -->\n\nWalletModule->OpenComponent \n\n\n\n\n\nRestoreComponent \n\nRestoreComponent \n\nRestoreComponent  -->\n\nWalletModule->RestoreComponent \n\n\n\n\n\nTransactionsComponent \n\nTransactionsComponent \n\nTransactionsComponent  -->\n\nWalletModule->TransactionsComponent \n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\nAddComponent\n\nAddComponent\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nNewComponent\n\nNewComponent\n\nWalletModule -->\n\nNewComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        27 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    58 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
